time:
2014-07-03T12:42:08Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] only call TestCluster#afterTest() if cluster was successfully initialized

time:
2014-07-03T12:42:08Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
comments:
[TEST] disable BWC tests for version < 1.1.0

time:
2014-07-03T11:56:31Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Split up random bulks more often and also if the document set is smallish

time:
2014-07-03T11:42:53Z
class:
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
comments:
[Discovery] Fault detection should also check  cause exceptions for disconnects

The change introduced in #6686 checks for ConnectionTransportException during pinging. However, transport layer wraps it in  SendRequestTransportException

time:
2014-07-03T11:34:13Z
class:
comments:
Docs: unescape regexes in Pattern Tokenizer docs

Currently regexes in Pattern Tokenizer docs are escaped (it seems according to Java rules). I think it is better not to escape them because JSON escaping should be automatic in client libraries, and string escaping depends on a client language used. The default pattern is `\W+`, not `\\W+`.

Closes #6615

time:
2014-07-03T11:27:37Z
class:
comments:
Docs: Fix typo in timestamp-field.asciidoc

Closes #6661

time:
2014-07-03T11:16:19Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicAnalysisBackwardCompatibilityTests.java
comments:
[TEST] Exclude SORANI analyzer if compatibility version is < 1.3.0

time:
2014-07-03T11:08:33Z
class:
comments:
Fix doc formatting. Norwegian stemmers and Scandinavian normalizers
were missing commas between entries.

time:
2014-07-03T09:56:05Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
comments:
[TEST] Wait for cluster consistency before tests starts

time:
2014-07-03T09:47:49Z
class:
src/main/java/org/elasticsearch/index/analysis/Analysis.java
src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java
src/main/java/org/elasticsearch/index/analysis/ApostropheFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/ClassicFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/ClassicTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/GermanNormalizationFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/HindiNormalizationFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/IndicNormalizationFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/IrishAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/LowerCaseTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/ScandinavianFoldingFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/ScandinavianNormalizationFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/SoraniAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/SoraniNormalizationFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/ThaiTokenizerFactory.java
src/main/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzers.java
src/test/java/org/elasticsearch/index/analysis/AnalysisFactoryTests.java
comments:
Analysis: Add additional Analyzers, Tokenizers, and TokenFilters from Lucene

Add `irish` analyzer
Add `sorani` analyzer (Kurdish)

Add `classic` tokenizer: specific to english text and tries to recognize hostnames, companies, acronyms, etc.
Add `thai` tokenizer: segments thai text into words.

Add `classic` tokenfilter: cleans up acronyms and possessives from classic tokenizer
Add `apostrophe` tokenfilter: removes text after apostrophe and the apostrophe itself
Add `german_normalization` tokenfilter: umlaut/sharp S normalization
Add `hindi_normalization` tokenfilter: accounts for hindi spelling differences
Add `indic_normalization` tokenfilter: accounts for different unicode representations in Indian languages
Add `sorani_normalization` tokenfilter: normalizes kurdish text
Add `scandinavian_normalization` tokenfilter: normalizes Norwegian, Danish, Swedish text
Add `scandinavian_folding` tokenfilter: much more aggressive form of `scandinavian_normalization`
Add additional languages to stemmer tokenfilter: `galician`, `minimal_galician`, `irish`, `sorani`, `light_nynorsk`, `minimal_nynorsk`

Add support access to default Thai stopword set "_thai_"

Fix some bugs and broken links in documentation.

Closes #5935

time:
2014-07-03T09:40:49Z
class:
src/test/java/org/apache/lucene/search/postingshighlight/CustomPassageFormatterTests.java
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/common/lucene/LuceneTest.java
src/test/java/org/elasticsearch/common/util/ArrayUtilsTests.java
src/test/java/org/elasticsearch/index/analysis/PreBuiltCharFilterFactoryFactoryTests.java
src/test/java/org/elasticsearch/index/mapper/lucene/DoubleIndexingDocTest.java
src/test/java/org/elasticsearch/index/mapper/lucene/StoredNumericValuesTest.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
src/test/java/org/elasticsearch/search/aggregations/support/PathTests.java
src/test/java/org/elasticsearch/snapshots/SnapshotUtilsTests.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Expose `tests.filter` for elasticsearch tests.

`-Dtests.filter` allows to pass filter expressions to the elasticsearch
tests. This allows to filter test annotaged with TestGroup annotations
like @Slow, @Nightly, @Backwards, @Integration with a boolean expresssion like:

 * to run only backwards tests run:
     `mvn -Dtests.bwc.version=X.Y.Z -Dtests.filter="@backwards"`
 * to run all integration tests but skip slow tests run:
     `mvn -Dtests.filter="@integration and not @slow"
 * to take defaults into account ie run all test as well as backwards:
     `mvn -Dtests.filter="default and @backwards"

This feature is a more powerful alternative to flags like
`-Dtests.nighly=true|false` etc.

Closes #6703

time:
2014-07-03T09:39:57Z
class:
comments:
Docs: Add clarifying text about regexp and terms

For the casual reader, the reference to "term queries" may be glossed over, yielding an unexpected result when using `regexp` queries.
This attempts to make that distinction more prominent.

Closes #6698

time:
2014-07-03T09:12:43Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
[TEST] Stabelize BWC tests for version < 1.1.0

time:
2014-07-03T09:10:44Z
class:
src/test/java/org/elasticsearch/test/cache/recycler/MockBigArrays.java
comments:
[Tests] remove bigArrays which were not fully release from watch list (and still fail the test)

This is to prevent future tests from failing due to these arrays

time:
2014-07-03T06:17:09Z
class:
comments:
Docs: Fixed missing comma in multi match query example

time:
2014-07-02T22:38:52Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
comments:
clean shard bulk mapping update to only use type
today we track both the index name and type for mapping updates in the shard bulk action, but we only work against on index in this level, so no need to track the index name itself
closes #6695

time:
2014-07-02T21:17:56Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
[TEST] use pre 1.2.0 MATCH_ALL version if we test BWC for pre 1.2.0

time:
2014-07-02T20:36:02Z
class:
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
comments:
Percolator: improve logging and cleanup try-catch statement for percolator query loading.

time:
2014-07-02T20:30:51Z
class:
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
comments:
[TEST] Also do waitForConcreteMappingsOnAll() call for the .percolator type.

time:
2014-07-02T20:13:44Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
[TEST] Don't wait for relocations - the ensureYellow() call does that already

time:
2014-07-02T18:49:48Z
class:
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
comments:
[Discovery] Handle ConnectionTransportException during a Master/Node fault detection ping

Both the Master and Node fault detection register themselves to be notified when a node disconnects to be able to respond to it accordingly. As such, when a ConnectionTransportException was raised on a ping request, it was not handled as it is already handled somewhere else. However, this does introduce a racing condition, if the disconnect  happen during a period where there is no current master (minimum_master_node breach) at which time the fault detection is not active. In this case, we will only discover the disconnect error during the ping request, so we have to respond accordingly.

Closes #6686

time:
2014-07-02T18:06:03Z
class:
src/test/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzerIntegrationTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
comments:
[TEST] Take compatibility version into account for XContentType
randomization

We randomize the XContentType to test deriving the content type on all
APIs. Yet, BWC tests run against versions where CBOR wasn't around
this commit ensures we don't use CBOR when compatibility version is
less than `1.2.0`

Closes #6691

time:
2014-07-02T15:35:35Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Also wait for fields to have been applied in the mapping in cluster state during teh waitForConcreteMappingsOnAll call

The concrete DocMapper on the master will be updated before the mapping in the cluster state. The DocMapper is updated during the cluster update task. This can lead to occasional assertion failures on the mapping response, because that is based on the mapping the cluster state, which may not yet have been updated. (time window between the DocMapping is updated, but the mapping in the cluster state isn't)

time:
2014-07-02T15:30:56Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/mapper/ParsedDocument.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/test/java/org/elasticsearch/index/fielddata/DisabledFieldDataFormatTests.java
src/test/java/org/elasticsearch/index/mapper/source/DefaultSourceMappingTests.java
comments:
better logic on sending mapping update new type introduction
when an indexing request introduces a new mapping, today we rely on the parsing logic to mark it as modified on the "first" parsing phase. This can cause sending of mapping updates to master even when the mapping has been introduced in the create index/put mapping case, and can cause sending mapping updates without needing to.
 This bubbled up in the disabled field data format test, where we explicitly define mappings to not have the update mapping behavior happening, yet it still happens because of the current logic, and because in our test we delay the introduction of any mapping updates randomly, it can get in and override updated ones.
closes #6669

time:
2014-07-02T10:37:40Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
comments:
Refactoring: Replaced string values with static constants

in TransportShardBulkAction after fixing an issue.

time:
2014-07-02T10:37:39Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/test/java/org/elasticsearch/document/BulkTests.java
comments:
Bulk API: Fix return of wrong request type on failed updates

In case an update request failed (for example when updating with a
wrongly formatted date), the returned index operation type was index
instead of update.

Closes #6630

time:
2014-07-02T10:23:10Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/indices/memory/IndexingMemoryController.java
src/test/java/org/elasticsearch/indices/memory/IndexMemoryControllerTests.java
comments:
IndexingMemoryController should only update buffer settings of recovered shards

At the moment the IndexingMemoryController can try to update the index buffer memory of shards at any give moment. This update involves a flush, which may cause a FlushNotAllowedEngineException to be thrown in a concurrently finalizing recovery.

Closes #6642, closes #6667

time:
2014-07-02T10:12:04Z
class:
src/test/java/org/elasticsearch/indices/mapping/SimpleDeleteMappingTests.java
comments:
[TEST] Fix SimpleDeleteMappingTests.

The failure was hard to reproduce but it looked to me like dynamic mapping
updates were overriding the delete mappings request.

time:
2014-07-02T09:51:58Z
class:
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
[TEST] Fix PercolatorTests to wait for mappings on master.

time:
2014-07-02T09:48:05Z
class:
src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
src/test/java/org/elasticsearch/search/builder/SearchSourceBuilderTest.java
comments:
JAVA API: Fix source excludes setting if no includes were provided

Due to a bogus if-check in SearchSourceBuilder.fetchSource(String include, String exclude)
the excludes only got set when the includes were not null. Fixed this and added some
basic tests.

Closes #6632

time:
2014-07-02T09:45:58Z
class:
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
[TEST] Added IntegrationTest to reproduce #6614

time:
2014-07-02T09:38:52Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
[TEST] Wait for yellow after enable allocation on all nodes in BWC tests

time:
2014-07-02T08:09:29Z
class:
src/test/java/org/elasticsearch/script/IndexLookupTests.java
comments:
[TEST] Fix IndexLookupTests.testCallWithDifferentFlagsFails.

time:
2014-07-02T07:40:49Z
class:
src/test/java/org/elasticsearch/search/fields/SearchFieldsTests.java
comments:
[TEST] Fix failure in SearchFieldsTests.testUidBasedScriptFields.

Sorting fails on unmapped fields so the new propagation delay of the mappings
exposed this issue. I added explicit mappings as part of index creation to fix it.

time:
2014-07-02T06:42:31Z
class:
src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java
comments:
Templates: GET templates doesn't honor the `flat_settings` parameter.

Close #6671

time:
2014-07-01T19:55:53Z
class:
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
[TEST] Remove RANDOM_NO_DELETE_OPEN_FILE and RANDOM_PREVENT_DOUBLE_WRITE settings  from snapshot/restore tests

time:
2014-07-01T17:49:57Z
class:
comments:
Fix forbidden API syntax error

time:
2014-07-01T17:36:26Z
class:
src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/test/java/org/elasticsearch/gateway/local/LocalGatewayIndexStateTests.java
comments:
wait for mapping updates during local recovery
when the primary shard is recovering its translog, make sure to wait for new mapping introductions till the mappings have been updated on the master before finalizing the recovery itself
also, this change performs the mapping updates in a more optimized manner by batching the types to change into a single set and sending after the translog has been replayed

also, remove the wait for mapping on master in the local state tests since this new behavior covers it

closes #6666

remove waiting for mapping on master since we do it in recovery

time:
2014-07-01T17:11:36Z
class:
src/main/java/org/elasticsearch/common/bytes/ByteBufferBytesReference.java
src/main/java/org/elasticsearch/common/bytes/BytesArray.java
src/main/java/org/elasticsearch/common/bytes/ChannelBufferBytesReference.java
src/main/java/org/elasticsearch/common/bytes/HashedBytesArray.java
src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java
src/main/java/org/elasticsearch/common/io/Channels.java
src/main/java/org/elasticsearch/common/io/FileChannelInputStream.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java
src/main/java/org/elasticsearch/index/translog/fs/FsChannelSnapshot.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/index/translog/fs/SimpleFsTranslogFile.java
src/test/java/org/elasticsearch/common/ChannelsTests.java
src/test/java/org/elasticsearch/common/bytes/PagedBytesReferenceTest.java
src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsBufferedTranslogTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsSimpleTranslogTests.java
comments:
Better support for partial buffer reads/writes in translog infrastructure

Some IO api can return after writing & reading only a part of the requested data. On these rare occasions, we should call the methods again to read/write the rest of the data. This has cause rare translog corruption while writing huge documents on Windows.

Noteful parts of the commit:
- A new Channels class with utility methods for reading and writing to channels
- Writing or reading to channels is added to the forbidden API list
- Added locking to SimpleFsTranslogFile
- Removed FileChannelInputStream which was not used

Closes #6441 , #6576
This signature fails build, as it is wrongly formatted: "." -> "#"

Otherwise: I applied your patch to 1.2 branch, seems to work.

Thx uwe. Yeah, I found out the hard way. It is fixes in another commit.

On Tue, Jul 1, 2014 at 11:25 PM, Uwe Schindler notifications@github.com
wrote:

> This signature fails build, as it is wrongly formatted: "." -> "#"
> ## Otherwise: I applied your patch to 1.2 branch, seems to work.
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/elasticsearch/elasticsearch/commit/72d2ac13280cc8c9d52361aad9e2193cbf004708#commitcomment-6861381


time:
2014-07-01T16:16:41Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
Core: cancel entire recovery if shard closes on target node during the recovery operations.

Closes #6645

time:
2014-07-01T16:05:44Z
class:
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalNode.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/tribe/TribeTests.java
comments:
[TEST] Prevent usage of System Properties in the InternalTestCluster

All settings should be passes as settings and the enviroment should not
influence the test cluster settings. The settings we care about ie.
`es.node.mode` and `es.logger.level` should be passed via settings.
This allows tests to override these settings if they for instance need
`network` transport to operate at all.

Closes #6663

time:
2014-07-01T16:00:13Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java
src/main/java/org/elasticsearch/index/mapper/internal/FieldNamesFieldMapper.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzerIntegrationTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[INDEX] Ensure `index.version.created` is consistent

Today `index.version.created` depends on the version of the master
node in the cluster. This is potentially causing new features to be
expected on shards that didn't exist when the index was created.
There is no notion of `where was the shard allocated first` such that
`index.version.created` can't be reliably used as a feature flag.

With this change the `index.version.created` can be reliably used to
determin the smallest nodes version at the point in time when the index
was created. This means we can safely use certain features that would
for instance require reindeing and / or would not work if not the
entire index (all shards and segments) have been created with a certain
version or newer.

Closes #6660

time:
2014-07-01T13:51:42Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
comments:
[TEST] Fix possible race condition in checksum name generator

When three threads are trying to write checksums at the same time, it's possible for all three threads to obtain the same checksum file name A. Then the first thread enters the synchronized section, creates the file with name A and exits. The second thread enters the synchronized section, checks that A exists, creates file A+1 and exits the critical section. Then it proceeds to clean up  and deletes all checksum files including A. If it happens before the third thread enters the synchronized section, it's possible for the third thread to check for A and since it no longer exists create the checksum file A the second time, which triggers "file _checksums-XXXXXXXXXXXXX was already written to" exception in MockDirectoryWrapper and fails recovery.

time:
2014-07-01T13:05:31Z
class:
src/main/java/org/elasticsearch/index/cache/IndexCache.java
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataCache.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java
src/main/java/org/elasticsearch/index/mapper/FieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/NumberFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/ip/IpFieldMapper.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/query/GeoBoundingBoxFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoDistanceFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoDistanceRangeFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/main/java/org/elasticsearch/index/query/NumericRangeFilterParser.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/QueryStringQueryParser.java
src/main/java/org/elasticsearch/index/query/RangeFilterParser.java
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
src/main/java/org/elasticsearch/indices/fielddata/breaker/NoneCircuitBreakerService.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/test/java/org/elasticsearch/benchmark/fielddata/LongFieldDataBenchmark.java
src/test/java/org/elasticsearch/index/aliases/IndexAliasesServiceTests.java
src/test/java/org/elasticsearch/index/cache/filter/FilterCacheTests.java
src/test/java/org/elasticsearch/index/codec/CodecTests.java
src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/IndexFieldDataServiceTests.java
src/test/java/org/elasticsearch/index/mapper/MapperTestUtils.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/index/query/TemplateQueryParserTest.java
src/test/java/org/elasticsearch/index/query/guice/IndexQueryParserModuleTests.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPlugin2Tests.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPluginTests.java
src/test/java/org/elasticsearch/index/search/FieldDataTermsFilterTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQueryTests.java
src/test/java/org/elasticsearch/index/similarity/SimilarityTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
Core: Prevent non segment readers from entering the filter cache and the field data caches.
Percolator: Never cache filters and field data in percolator for the percolator query parsing part.

Closes #6553

time:
2014-07-01T12:01:49Z
class:
comments:
Fixed link to native Java client

Closes #6590

time:
2014-07-01T11:31:54Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Improve reproducibility of mappings propagation delays related issues.

time:
2014-07-01T11:09:24Z
class:
src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java
src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java
src/main/java/org/elasticsearch/action/search/MultiSearchRequestBuilder.java
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/support/IndicesOptions.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequest.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/indices/IndexClosedException.java
src/test/java/org/elasticsearch/action/percolate/MultiPercolatorRequestTests.java
src/test/java/org/elasticsearch/action/search/MultiSearchRequestTests.java
src/test/java/org/elasticsearch/action/support/IndicesOptionsTests.java
src/test/java/org/elasticsearch/indices/IndicesOptionsIntegrationTests.java
comments:
Core: The ignore_unavailable=true setting also ignores indices that are closed.

Closes #6471
Closes #6475

time:
2014-07-01T10:53:10Z
class:
comments:
Fixed JSON in fielddata docs

time:
2014-07-01T09:39:26Z
class:
src/main/java/org/elasticsearch/node/internal/InternalNode.java
comments:
start mapping service earlier to be available for recovery

time:
2014-07-01T09:25:37Z
class:
src/test/java/org/elasticsearch/search/query/ExistsMissingTests.java
comments:
[TEST] Fix ExistsMissingTests failures.

They were due to a combination of mappings propagation delays and the behavior
of MapperService.smartName(String) so mappings are now configured up-front.

time:
2014-07-01T08:49:43Z
class:
comments:
Update histogram-facet.asciidoc

Spotted a typo, which I've fixed.

time:
2014-07-01T06:30:34Z
class:
comments:
Docs: Removed Sense mention

time:
2014-07-01T03:12:29Z
class:
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
[TEST] Turn off double write check for restore
why do we need these settings? do we delete open files?

Indeed, we don't need these settings anymore. I noticed `RANDOM_NO_DELETE_OPEN_FILE` last night but decided to keep it until `restoreIndexWithMissingShards` stabilizes. Now that the problem with checksum name generator is fixed, I am going to remove both `RANDOM_PREVENT_DOUBLE_WRITE` and `RANDOM_NO_DELETE_OPEN_FILE`. I am testing it locally now, will push the change soon (assuming everything works fine locally that is).


time:
2014-07-01T01:03:46Z
class:
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Improve deletion of corrupted snapshots

Makes it possible to delete snapshots that are missing some of the metadata files. This can happen if snapshot creation failed because repository drive ran out of disk space.

Closes #6383

time:
2014-07-01T00:18:02Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/TransportRestoreSnapshotAction.java
src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java
src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java
src/main/java/org/elasticsearch/snapshots/RestoreService.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
Add ability to restore partial snapshots

Closes #5742

time:
2014-06-30T23:53:44Z
class:
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/test/java/org/elasticsearch/gateway/local/LocalGatewayIndexStateTests.java
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
comments:
Recovery from local gateway should re-introduce new mappings
The delayed mapping intro tests exposed a bug where if a new mapping is introduced, yet not updated on the master, and a full restart occurs, reply of the transaction log will not cause the new mapping to be re-introduced.
closes #6659

add comment on the method

time:
2014-06-30T21:11:23Z
class:
src/test/java/org/elasticsearch/indices/mapping/SimpleDeleteMappingTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] properly wait for mapping on master node
add helper method to do so, by not assuming that the mapping will exists right away by waiting for green or refreshing...

time:
2014-06-30T20:32:43Z
class:
src/test/java/org/elasticsearch/indices/mapping/SimpleGetFieldMappingsTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
[TEST] properly wait for mappings when needed

time:
2014-06-30T20:08:39Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/index/TransportIndexAction.java
src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/test/java/org/elasticsearch/indices/mapping/ConcurrentDynamicTemplateTests.java
src/test/java/org/elasticsearch/indices/mapping/UpdateMappingTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Update mapping on master in async manner
Today, when a new mapping is introduced, the mapping is rebuilt (refreshSource) on the thread that performs the indexing request. This can become heavier and heavier if new mappings keeps on being introduced, we can move this process to another thread that will be responsible to refresh the source and then send the update mapping to the master (note, this doesn't change the semantics of new mapping introduction, since they are async anyhow).
When doing so, the thread can also try and batch as much updates as possible, this is handy especially when multiple shards for the same index exists on the same node. An internal setting that can control the time to wait for batches is also added (defaults to 0).

Testing wise, a new support method on ElasticsearchIntegrationTest#waitForConcreteMappingsOnAll to allow to wait for the concrete manifestation of mappings on all relevant nodes is added. Some tests mistakenly rely on the fact that there are no more pending tasks to mean mappings have been updated, so if we see, timing related, failures down later (all tests pass), then those will need to be fixed to wither awaitBusy on the master for the new mapping, or in the rare case, wait for the concrete mapping on all the nodes using the new method.
closes #6648

allow to change the additional time window dynamically

better sorting on mappers when refreshing source
also, no need to call nodes info in test, we already have the node names

clean calls to mapping update to provide doc mapper and UUID always
also use the internal cluster support method to get the list of nodes an index is on

reverse the order to pick the latest change first

remove unused field

and fix constructor param

move to start/stop on mapping update action

randomize INDICES_MAPPING_ADDITIONAL_MAPPING_CHANGE_TIME

time:
2014-06-30T14:50:34Z
class:
src/main/java/org/elasticsearch/script/groovy/GroovyScriptCompilationException.java
src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
src/main/java/org/elasticsearch/script/groovy/GroovyScriptExecutionException.java
src/test/java/org/elasticsearch/script/GroovyScriptTests.java
comments:
Wrap groovy script exceptions in a serializable Exception object

Fixes #6598

time:
2014-06-30T12:57:36Z
class:
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Randomize netty worker and connection parameters
Try and push our system to a state where there is only a single worker, trying to expose potential deadlocks when we by mistake execute blocking operations on the worker thread
closes #6635

time:
2014-06-30T08:54:45Z
class:
src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryTests.java
comments:
[Test] make recovery slow down in rerouteRecoveryTest aware of index size

time:
2014-06-29T12:37:12Z
class:
src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryTests.java
comments:
[Test] improved recovery slow down in rerouteRecoveryTest

only change recovery throttling to slow down recoveries. The recovery file chunk size updates are not picked up by ongoing recoveries. That cause the recovery to take too long even after the default settings are restored.

Also - change document creation to reuse field names in order to speed up the test.

time:
2014-06-29T07:55:03Z
class:
src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryTests.java
comments:
[Test] add awaitFix to rerouteRecoveryTest

time:
2014-06-28T19:27:15Z
class:
src/main/java/org/elasticsearch/action/admin/indices/recovery/TransportRecoveryAction.java
src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryTests.java
comments:
Recovery API should also report ongoing relocation recoveries

We currently only report relocation related recoveries after they are done.

Closes #6585

time:
2014-06-28T08:41:06Z
class:
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
[Test] testRelocationWhileRefreshing should wait for the first shard to be started

time:
2014-06-28T07:12:25Z
class:
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
[TEST] Testcase for #6639

time:
2014-06-27T14:21:24Z
class:
src/main/java/org/elasticsearch/index/analysis/SmartChineseAnalysisBinderProcessor.java
src/main/java/org/elasticsearch/index/analysis/SmartChineseSentenceTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/SmartChineseWordTokenFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/smartcn/SmartChineseIndicesAnalysis.java
comments:
Remove deprecated smartcn_word and smartcn_sentence

were deprecated in 2.2.0 by #22.

Closes #24.

(cherry picked from commit 2bab6e0)

time:
2014-06-27T14:21:09Z
class:
comments:
Update to Lucene 4.9.0

Closes #23.

(cherry picked from commit 5662016)

time:
2014-06-27T14:12:47Z
class:
src/main/java/org/elasticsearch/index/analysis/SmartChineseAnalysisBinderProcessor.java
src/main/java/org/elasticsearch/index/analysis/SmartChineseSentenceTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/SmartChineseTokenizerTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/SmartChineseWordTokenFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/smartcn/SmartChineseIndicesAnalysis.java
src/test/java/org/elasticsearch/index/analysis/SimpleSmartChineseAnalysisTests.java
src/test/java/org/elasticsearch/index/analysis/SimpleSmartChineseIntegrationTests.java
comments:
Deprecate smartcn_word

Looks like `WordTokenFilter` has been [deprecated in Lucene 4.8](http://lucene.apache.org/core/4_8_0/analyzers-smartcn/org/apache/lucene/analysis/cn/smart/WordTokenFilter.html) and looking at the javadoc, it looks like that only the [HMMChineseTokenizer](http://lucene.apache.org/core/4_8_0/analyzers-smartcn/org/apache/lucene/analysis/cn/smart/HMMChineseTokenizer.html) will be supported.

We need to deprecate `smartcn_word` and `smartcn_sentence`.
We add `smartcn_tokenizer` which does the both things.

 Closes #22.

(cherry picked from commit 64dcb9b)

time:
2014-06-27T13:39:53Z
class:
comments:
Added minimal setup guide for BW Compat tests

time:
2014-06-27T12:09:44Z
class:
comments:
Disable explicit GC by default

We don't rely upon GC to cleanup mappedbytebuffers, we unmap them
explicitly on close in lucene. But the JDK has crazy loops with
explicit GCs in exceptional cases to try to force unmapping.

In general we don't want any of our code or library code calling
this method: so its banned in forbidden-apis as well.

time:
2014-06-27T09:58:26Z
class:
comments:
Update to Lucene 4.9.0

Closes #28.

(cherry picked from commit 829d78c)

time:
2014-06-27T09:57:34Z
class:
src/main/java/org/elasticsearch/common/Strings.java
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
comments:
[TEST] Change es.node.mode default for tests to `local`

In order to speed up test execution we should run in local mode by
default. CI builds will still use network builds all the time.

Closes #6624

time:
2014-06-27T09:54:58Z
class:
comments:
Update to Lucene 4.9.0

Closes #29.

(cherry picked from commit 7dc2231)

time:
2014-06-27T09:51:16Z
class:
comments:
Update to Lucene 4.9.0

Closes #33.

(cherry picked from commit bc45a89)

time:
2014-06-27T09:47:48Z
class:
comments:
Update to Lucene 4.9.0

Closes #37.

(cherry picked from commit 5243bdc)

time:
2014-06-27T09:35:13Z
class:
src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java
comments:
[STORE] Wrap RateLimiter rather than copy RateLimitedIndexOutput

We clone RateLimitedIndexOutput from lucene just to collect pausing
statistics we can do this in a more straight forward way in a delegating
RateLimiter.

Closes #6625

time:
2014-06-27T09:15:16Z
class:
src/main/java/org/elasticsearch/common/util/concurrent/EsRejectedExecutionException.java
src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java
src/main/java/org/elasticsearch/rest/RestStatus.java
comments:
Thread pool rejection status code should be 429
Thread rejection should return too many requests status code, and not 503, which is used to also show that the cluster is not available
 relates to #6627, but only for rejections for now
closes #6629

time:
2014-06-27T09:12:35Z
class:
src/main/java/org/elasticsearch/transport/netty/NettyTransportChannel.java
comments:
Make sure we don't reuse arrays when sending and error back
We want to make sure recycling will not fail for any reason while trying to send a response back that is caused by a failure, for example, if we have circuit breaker on it (at one point), sending an error back will not be affected by it.
closes #6631

time:
2014-06-27T07:16:51Z
class:
src/test/java/org/elasticsearch/script/IndexLookupTests.java
comments:
[TEST] when the test fail, have the exception message as the reason
the test failed but couldn't repro (yet), at the very least, make sure we have the exception message as the reason, can help to track down the failure itself when it happens again

time:
2014-06-26T17:10:20Z
class:
src/test/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighterTests.java
src/test/java/org/elasticsearch/index/codec/CodecTests.java
src/test/java/org/elasticsearch/test/ElasticsearchLuceneTestCase.java
comments:
[TEST] suppress sysout checks since CI runs with debug enabled

time:
2014-06-26T12:18:59Z
class:
src/main/java/org/apache/lucene/document/XStringField.java
src/main/java/org/apache/lucene/index/XOrdinalMap.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XSpecialOperations.java
src/main/java/org/apache/lucene/store/BufferedChecksumIndexOutput.java
src/main/java/org/apache/lucene/store/BufferedIndexOutput.java
src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java
src/main/java/org/apache/lucene/store/XNativeFSLockFactory.java
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressedIndexInput.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/lucene/SegmentReaderUtils.java
src/main/java/org/elasticsearch/common/lucene/all/AllField.java
src/main/java/org/elasticsearch/common/lucene/docset/AllDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/docset/AndDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/docset/DocIdSets.java
src/main/java/org/elasticsearch/common/lucene/docset/NotDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/docset/OrDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/search/ApplyAcceptedDocsFilter.java
src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java
src/main/java/org/elasticsearch/common/lucene/search/XMoreLikeThis.java
src/main/java/org/elasticsearch/common/util/AbstractArray.java
src/main/java/org/elasticsearch/common/util/AbstractBigArray.java
src/main/java/org/elasticsearch/common/util/BigArray.java
src/main/java/org/elasticsearch/common/util/BigArrays.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/index/analysis/NumericTokenizer.java
src/main/java/org/elasticsearch/index/analysis/WordDelimiterTokenFilterFactory.java
src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java
src/main/java/org/elasticsearch/index/codec/docvaluesformat/DiskDocValuesFormatProvider.java
src/main/java/org/elasticsearch/index/codec/docvaluesformat/DocValuesFormats.java
src/main/java/org/elasticsearch/index/codec/postingsformat/DefaultPostingsFormatProvider.java
src/main/java/org/elasticsearch/index/codec/postingsformat/PulsingPostingsFormatProvider.java
src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataCache.java
src/main/java/org/elasticsearch/index/fielddata/RamUsage.java
src/main/java/org/elasticsearch/index/fielddata/ShardFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalMapping.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/Ordinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SinglePackedOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractGeoPointIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVNumericAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVNumericIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointBinaryDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/IndexIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/NumericDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/NumberFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/FieldNamesFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/RoutingFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TypeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/index/merge/policy/ElasticsearchMergePolicy.java
src/main/java/org/elasticsearch/index/merge/policy/LogByteSizeMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/TieredMergePolicyProvider.java
src/main/java/org/elasticsearch/index/query/ScriptFilterParser.java
src/main/java/org/elasticsearch/index/search/NumericRangeFieldDataFilter.java
src/main/java/org/elasticsearch/index/search/geo/GeoDistanceFilter.java
src/main/java/org/elasticsearch/index/search/geo/GeoDistanceRangeFilter.java
src/main/java/org/elasticsearch/index/search/geo/GeoPolygonFilter.java
src/main/java/org/elasticsearch/index/search/geo/InMemoryGeoBoundingBoxFilter.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/fs/FsDirectoryService.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/indices/analysis/PreBuiltTokenFilters.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCacheListener.java
src/main/java/org/elasticsearch/percolator/MultiDocumentPercolatorIndex.java
src/main/java/org/elasticsearch/percolator/SingleDocumentPercolatorIndex.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceScoreOrderFragmentsBuilder.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceSimpleFragmentsBuilder.java
src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java
src/test/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighterTests.java
src/test/java/org/elasticsearch/benchmark/fielddata/LongFieldDataBenchmark.java
src/test/java/org/elasticsearch/common/lucene/LuceneTest.java
src/test/java/org/elasticsearch/common/lucene/index/FreqTermsEnumTests.java
src/test/java/org/elasticsearch/common/lucene/uid/VersionsTests.java
src/test/java/org/elasticsearch/common/util/BigArraysTests.java
src/test/java/org/elasticsearch/index/codec/CodecTests.java
src/test/java/org/elasticsearch/index/codec/postingformat/DefaultPostingsFormatTests.java
src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTests.java
src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/ParentChildFieldDataTests.java
src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java
src/test/java/org/elasticsearch/index/mapper/date/SimpleDateMappingTests.java
src/test/java/org/elasticsearch/index/mapper/numeric/SimpleNumericTests.java
src/test/java/org/elasticsearch/index/mapper/size/SizeMappingTests.java
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
src/test/java/org/elasticsearch/index/mapper/ttl/TTLMappingTests.java
src/test/java/org/elasticsearch/indices/warmer/SimpleIndicesWarmerTests.java
src/test/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProviderV1.java
src/test/java/org/elasticsearch/search/suggest/completion/CompletionPostingsFormatTest.java
src/test/java/org/elasticsearch/test/cache/recycler/MockBigArrays.java
comments:
Upgrade to Lucene 4.9 (closes #6623)

time:
2014-06-26T08:52:28Z
class:
src/main/java/org/elasticsearch/script/groovy/GroovySandboxExpressionChecker.java
src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
src/test/java/org/elasticsearch/script/GroovyScriptTests.java
comments:
Add a transformer to translate constant BigDecimal to double

time:
2014-06-26T08:33:28Z
class:
src/main/java/org/elasticsearch/script/ScriptModule.java
src/main/java/org/elasticsearch/script/mvel/MvelScriptEngineService.java
comments:
Remove MVEL as a built-in scripting language

time:
2014-06-26T08:29:41Z
class:
comments:
DOC:Added field data circuit breaker settings

time:
2014-06-26T08:01:22Z
class:
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/benchmark/transport/BenchmarkNettyLargeMessages.java
src/test/java/org/elasticsearch/benchmark/transport/TransportBenchmark.java
src/test/java/org/elasticsearch/common/util/BigArraysTests.java
src/test/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPingTests.java
src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingTests.java
src/test/java/org/elasticsearch/index/aliases/IndexAliasesServiceTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/index/query/TemplateQueryParserTest.java
src/test/java/org/elasticsearch/index/query/guice/IndexQueryParserModuleTests.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPlugin2Tests.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPluginTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQueryTests.java
src/test/java/org/elasticsearch/script/NativeScriptTests.java
src/test/java/org/elasticsearch/threadpool/UpdateThreadPoolSettingsTests.java
src/test/java/org/elasticsearch/transport/AbstractSimpleTransportTests.java
comments:
Be more diligent about ThreadPools having names

Add a name parameter to what was the empty ThreadPool constructor. Assert if the the ThreadPool's setting doesn't contain a name.

time:
2014-06-25T15:53:43Z
class:
src/main/java/org/elasticsearch/index/search/MatchQuery.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
Match query with operator and, cutoff_frequency and stacked tokens

If the match query with cutoff_frequency encounters stacked tokens,
like synonyms in the same position, it returns a boolean query instead
of a common terms query.  However, if the original operator was set
to "and", it was ignoring that and resetting the operator to "or".

In fact, if operator is "and" then there is little benefit in using
a common terms query as a must query is already
executed efficiently.

time:
2014-06-25T14:22:20Z
class:
src/test/java/org/elasticsearch/search/query/ExistsMissingTests.java
comments:
[TEST] Add assertion failure messages

time:
2014-06-25T10:15:12Z
class:
src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
src/main/java/org/elasticsearch/script/ScriptService.java
src/test/java/org/elasticsearch/script/IndexLookupTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
Switch to Groovy as the default scripting language

This is a breaking change to move from MVEL -> Groovy

time:
2014-06-25T10:09:32Z
class:
src/main/java/org/elasticsearch/script/groovy/GroovySandboxExpressionChecker.java
src/test/java/org/elasticsearch/script/GroovySandboxScriptTests.java
comments:
Add sandboxing for GString-based method invocation

time:
2014-06-25T09:01:20Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
comments:
[LOG] better log message

time:
2014-06-24T11:01:11Z
class:
src/main/java/org/elasticsearch/common/Base64.java
src/test/java/org/elasticsearch/common/Base64Test.java
comments:
Internal: Made base64 decode parsing to detect more errors

The base64 did not completely check, if there were other characters
after the equals `=` sign. This PR adds some small additional checks.

Closes #6334

time:
2014-06-23T07:28:41Z
class:
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
comments:
[TEST] Improved logging for replica operation failures

time:
2014-06-22T14:46:42Z
class:
comments:
Docs: Added IDs to the highlighters for linking

time:
2014-06-21T18:15:13Z
class:
src/test/java/org/elasticsearch/get/GetActionTests.java
comments:
[Test] testGetFields_complexField should wait for a green cluster

Waiting for ongoing recoveries was not good enough as it can run before the  master finishing processing the started events of primary shards, causing the recovery response to be erroneously empty

time:
2014-06-21T16:42:38Z
class:
comments:
Docs: Updated stop token filter docs

time:
2014-06-21T14:35:31Z
class:
src/main/java/org/elasticsearch/cloud/aws/AwsModule.java
src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/AbstractS3BlobContainer.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobStore.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3ImmutableBlobContainer.java
src/main/java/org/elasticsearch/plugin/cloud/aws/CloudAwsPlugin.java
src/test/java/org/elasticsearch/cloud/aws/AbstractAwsTest.java
src/test/java/org/elasticsearch/cloud/aws/AmazonS3Wrapper.java
src/test/java/org/elasticsearch/cloud/aws/TestAmazonS3.java
src/test/java/org/elasticsearch/cloud/aws/TestAwsS3Service.java
comments:
Added retry mechanism for S3 connection errors

Closes #95

time:
2014-06-21T14:32:29Z
class:
comments:
Docs: Updated the explanation about memory usage with parent/child

time:
2014-06-21T10:43:14Z
class:
src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java
comments:
[Test] Use no failures, shard might not have been initialize yet

time:
2014-06-21T08:31:45Z
class:
src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java
comments:
[TEST] fix a NPE in verifyThreadNames which may happen if thread finishes during sampling

time:
2014-06-20T22:27:15Z
class:
src/main/java/org/elasticsearch/script/ScriptModule.java
comments:
Fix optional default script loading
Groovy is optional as a dependency in the classpath, make sure we properly detect when its not at the right time to disable it
closes #6582

time:
2014-06-20T21:44:33Z
class:
src/test/java/org/elasticsearch/indices/mapping/UpdateMappingTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Move the waiting for pending tasks to helper methods and let the percolator and update mapping test use these helper methods.

time:
2014-06-20T21:12:52Z
class:
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
[TEST] Verify that all pending tasks are rely executed on *all* nodes.

time:
2014-06-20T20:09:46Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/indices/recovery/StartRecoveryRequest.java
src/test/java/org/elasticsearch/indices/recovery/StartRecoveryRequestTest.java
comments:
Fixed NPE in recovery api by serializing the recovery type in StartRecoveryRequest.

Closes #6190

time:
2014-06-20T18:14:40Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/TransportDeleteRepositoryAction.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/TransportPutRepositoryAction.java
src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/create/TransportCreateIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/open/TransportOpenIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/settings/put/TransportUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/TransportDeleteWarmerAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java
src/main/java/org/elasticsearch/action/support/master/AcknowledgedRequest.java
src/main/java/org/elasticsearch/cluster/AckedClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/ack/AckedRequest.java
src/main/java/org/elasticsearch/cluster/ack/ClusterStateUpdateRequest.java
src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexStateService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
src/main/java/org/elasticsearch/repositories/RepositoriesService.java
src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java
comments:
Refactored AckedClusterStateUpdateTask & co. to remove code repetitions in subclasses

Made AckedClusterStateUpdateTask an abstract class instead of an interface, which contains the common methods.
Also introduced the AckedRequest interface to mark both AcknowledgedRequest & ClusterStateUpdateRequest so that the different ways of updating the cluster state (with or without a MetaData*Service) can share the same code.
Removed ClusterStateUpdateListener as we can just use its base class ActionListener instead.

Closes #6559

time:
2014-06-20T16:05:46Z
class:
comments:
Docs: Updated cluster health docs

time:
2014-06-20T13:32:53Z
class:
comments:
Allow AWS compatible cloud services

Users can use their own endpoints for any ec2/s3 compatible API using: `cloud.aws.ec2.endpoint` or `cloud.aws.s3.endpoint`

Closes #91.
(cherry picked from commit f0fbea5)

time:
2014-06-20T13:23:12Z
class:
comments:
Update to AWS SDK 1.7.13

Closes #97.

(cherry picked from commit 4380b84)

time:
2014-06-20T09:28:50Z
class:
comments:
Re-shade MVEL as a dependency

time:
2014-06-20T08:20:16Z
class:
src/main/java/org/elasticsearch/script/ScriptModule.java
src/main/java/org/elasticsearch/script/ScriptService.java
src/main/java/org/elasticsearch/script/groovy/GroovySandboxExpressionChecker.java
src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/script/GroovySandboxScriptTests.java
src/test/java/org/elasticsearch/script/IndexLookupTests.java
src/test/java/org/elasticsearch/script/SandboxDisabledTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/AvgTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ExtendedStatsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/MaxTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/StatsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/SumTests.java
src/test/java/org/elasticsearch/search/scriptfilter/ScriptFilterSearchTests.java
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
src/test/java/org/elasticsearch/search/timeout/SearchTimeoutTests.java
comments:
Add Groovy as a scripting language, add sandboxing for Groovy

Sandboxes the groovy scripting language with multiple configurable
whitelists:

`script.groovy.sandbox.receiver_whitelist`: comma-separated list of string
classes for objects that may have methods invoked.
`script.groovy.sandbox.package_whitelist`: comma-separated list of
packages under which new objects may be constructed.
`script.groovy.sandbox.class_whitelist` comma-separated list of classes
that are allowed to be constructed.

As well as a method blacklist:

`script.groovy.sandbox.method_blacklist`: comma-separated list of
methods that are never allowed to be invoked, regardless of target
object.

The sandbox can be entirely disabled by setting:

`script.groovy.sandbox.enabled: false`

time:
2014-06-19T17:35:59Z
class:
comments:
Update README about SNAPSHOT vs released versions

Closes #77.

time:
2014-06-19T17:27:28Z
class:
comments:
Elaborate on how to specify AWS credentials

Closes #85.

time:
2014-06-19T17:23:51Z
class:
src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryITest.java
src/test/java/org/elasticsearch/repositories/s3/S3SnapshotRestoreTest.java
comments:
Update to elasticsearch 1.3.0

Related to #89.
(cherry picked from commit 11e1d8a)

time:
2014-06-19T17:05:16Z
class:
src/main/java/org/elasticsearch/discovery/azure/AzureUnicastHostsProvider.java
src/test/java/org/elasticsearch/azure/itest/AzureSimpleITest.java
src/test/java/org/elasticsearch/discovery/azure/AbstractAzureComputeServiceTest.java
src/test/java/org/elasticsearch/discovery/azure/AzureMinimumMasterNodesTest.java
src/test/java/org/elasticsearch/discovery/azure/AzureSimpleTest.java
src/test/java/org/elasticsearch/discovery/azure/AzureTwoStartedNodesTest.java
src/test/java/org/elasticsearch/repositories/azure/AbstractAzureRepositoryServiceTest.java
src/test/java/org/elasticsearch/repositories/azure/AzureSnapshotRestoreITest.java
src/test/java/org/elasticsearch/repositories/azure/AzureSnapshotRestoreTest.java
comments:
Update to elasticsearch 1.3.0

And refactor integration tests

Closes #17.

(cherry picked from commit f5b444e)
(cherry picked from commit 1e63f86)

time:
2014-06-19T16:45:21Z
class:
src/main/java/org/elasticsearch/rest/BaseRestHandler.java
src/main/java/org/elasticsearch/rest/RestHandler.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/hotthreads/RestNodesHotThreadsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/info/RestNodesInfoAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/restart/RestNodesRestartAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/shutdown/RestNodesShutdownAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/stats/RestNodesStatsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/delete/RestDeleteRepositoryAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/get/RestGetRepositoriesAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/put/RestPutRepositoryAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterGetSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/shards/RestClusterSearchShardsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/create/RestCreateSnapshotAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/delete/RestDeleteSnapshotAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/get/RestGetSnapshotsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/restore/RestRestoreSnapshotAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/status/RestSnapshotsStatusAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/stats/RestClusterStatsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/tasks/RestPendingClusterTasksAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestIndicesAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/delete/RestIndexDeleteAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetIndicesAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/head/RestAliasesExistAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/put/RestIndexPutAliasAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/analyze/RestAnalyzeAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/cache/clear/RestClearIndicesCacheAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/close/RestCloseIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/create/RestCreateIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/delete/RestDeleteIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/exists/indices/RestIndicesExistsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/exists/types/RestTypesExistsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/flush/RestFlushAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/delete/RestDeleteMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetFieldMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/put/RestPutMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/open/RestOpenIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/optimize/RestOptimizeAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/recovery/RestRecoveryAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/refresh/RestRefreshAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/segments/RestIndicesSegmentsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestGetSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestUpdateSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/delete/RestDeleteIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/get/RestGetIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/head/RestHeadIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/put/RestPutIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/validate/query/RestValidateQueryAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/delete/RestDeleteWarmerAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/get/RestGetWarmerAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/put/RestPutWarmerAction.java
src/main/java/org/elasticsearch/rest/action/bench/RestBenchAction.java
src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java
src/main/java/org/elasticsearch/rest/action/cat/AbstractCatAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestAliasAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestAllocationAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestCatAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestFielddataAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestHealthAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestMasterAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestPendingClusterTasksAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestPluginsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestRecoveryAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestSegmentsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestThreadPoolAction.java
src/main/java/org/elasticsearch/rest/action/count/RestCountAction.java
src/main/java/org/elasticsearch/rest/action/delete/RestDeleteAction.java
src/main/java/org/elasticsearch/rest/action/deletebyquery/RestDeleteByQueryAction.java
src/main/java/org/elasticsearch/rest/action/explain/RestExplainAction.java
src/main/java/org/elasticsearch/rest/action/get/RestGetAction.java
src/main/java/org/elasticsearch/rest/action/get/RestGetSourceAction.java
src/main/java/org/elasticsearch/rest/action/get/RestHeadAction.java
src/main/java/org/elasticsearch/rest/action/get/RestMultiGetAction.java
src/main/java/org/elasticsearch/rest/action/index/RestIndexAction.java
src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java
src/main/java/org/elasticsearch/rest/action/mlt/RestMoreLikeThisAction.java
src/main/java/org/elasticsearch/rest/action/percolate/RestMultiPercolateAction.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/main/java/org/elasticsearch/rest/action/search/RestClearScrollAction.java
src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java
src/main/java/org/elasticsearch/rest/action/suggest/RestSuggestAction.java
src/main/java/org/elasticsearch/rest/action/termvector/RestMultiTermVectorsAction.java
src/main/java/org/elasticsearch/rest/action/termvector/RestTermVectorAction.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/test/java/org/elasticsearch/plugin/responseheader/TestResponseHeaderRestAction.java
src/test/java/org/elasticsearch/rest/HeadersCopyClientTests.java
comments:
REST api: made it possible to copy the REST headers from REST requests to the corresponding TransportRequest(s)

Introduced the use of the FilterClient in all of the REST actions, which delegates all of the operations to the internal Client, but makes sure that the headers are properly copied if needed from REST requests to TransportRequest(s) when it comes to executing them.

Added new abstract handleRequest method to BaseRestHandler with additional Client argument and made private the client instance member (was protected before) to force the use of the client received as argument.

The list of headers to be copied over is by default empty but can be extended via plugins.

Closes #6513

time:
2014-06-19T15:55:25Z
class:
src/main/java/org/elasticsearch/action/Action.java
src/main/java/org/elasticsearch/action/ClientAction.java
src/main/java/org/elasticsearch/action/admin/cluster/ClusterAction.java
src/main/java/org/elasticsearch/action/admin/indices/IndicesAction.java
src/main/java/org/elasticsearch/action/bench/AbortBenchmarkAction.java
src/main/java/org/elasticsearch/action/bench/BenchmarkAction.java
src/main/java/org/elasticsearch/action/bulk/BulkAction.java
src/main/java/org/elasticsearch/action/count/CountAction.java
src/main/java/org/elasticsearch/action/delete/DeleteAction.java
src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryAction.java
src/main/java/org/elasticsearch/action/explain/ExplainAction.java
src/main/java/org/elasticsearch/action/get/GetAction.java
src/main/java/org/elasticsearch/action/get/MultiGetAction.java
src/main/java/org/elasticsearch/action/index/IndexAction.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisAction.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateAction.java
src/main/java/org/elasticsearch/action/percolate/PercolateAction.java
src/main/java/org/elasticsearch/action/search/ClearScrollAction.java
src/main/java/org/elasticsearch/action/search/MultiSearchAction.java
src/main/java/org/elasticsearch/action/search/SearchAction.java
src/main/java/org/elasticsearch/action/search/SearchScrollAction.java
src/main/java/org/elasticsearch/action/suggest/SuggestAction.java
src/main/java/org/elasticsearch/action/termvector/MultiTermVectorsAction.java
src/main/java/org/elasticsearch/action/update/UpdateAction.java
src/main/java/org/elasticsearch/client/node/NodeClient.java
src/main/java/org/elasticsearch/client/node/NodeClusterAdminClient.java
src/main/java/org/elasticsearch/client/node/NodeIndicesAdminClient.java
comments:
Client intermediate interface removal follow-up

After #6517 we ended up registering all of the actions (included admin ones) to the NodeClient.
Made sure that only the proper type of Action instances are registered to each client type.
Also fixed some compiler warnings: unused members, imports and non matching generic types.

Closes #6563

time:
2014-06-19T14:34:26Z
class:
comments:
Docs: Rewrote the filtered query docs to be clearer

Closes #1688

time:
2014-06-19T10:06:40Z
class:
src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/BytesValues.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalMapping.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SinglePackedOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/IndexIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/percolator/QueriesLoaderCollector.java
src/main/java/org/elasticsearch/index/search/child/ParentIdsFilter.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
src/main/java/org/elasticsearch/search/facet/terms/strings/TermsStringOrdinalsFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/termsstats/strings/TermsStatsStringFacetExecutor.java
src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTests.java
src/test/java/org/elasticsearch/search/aggregations/support/FieldDataSourceTests.java
comments:
Fielddata: Remove BytesValues.WithOrdinals.currentOrd and copyShared.

These methods don't exist in Lucene's sorted set doc values.

Relates to #6524

time:
2014-06-19T10:01:30Z
class:
src/main/java/org/elasticsearch/index/fielddata/plain/BytesValuesWithOrdinalsTermsEnum.java
comments:
Fielddata: Move `getTermsEnum` from `AtomicFieldData` to `BytesValues.WithOrdinals`.

Similarly to `SortedSetDocValues.termsEnum()`.

Relates to #6524

time:
2014-06-19T10:00:51Z
class:
src/main/java/org/elasticsearch/index/fielddata/AbstractAtomicNumericFieldData.java
src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/AtomicGeoPointFieldData.java
src/main/java/org/elasticsearch/index/fielddata/BytesValues.java
src/main/java/org/elasticsearch/index/fielddata/DoubleValues.java
src/main/java/org/elasticsearch/index/fielddata/LongValues.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalMapping.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/Ordinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SinglePackedOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractGeoPointIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AtomicFieldDataWithOrdinalsTermsEnum.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVNumericAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/EmptyByteValuesWithOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/IndexIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/NumericDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregator.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
src/main/java/org/elasticsearch/search/aggregations/support/values/ScriptBytesValues.java
src/main/java/org/elasticsearch/search/facet/terms/doubles/TermsDoubleFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/longs/TermsLongFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/TermsStringFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/TermsStringOrdinalsFacetExecutor.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/GlobalOrdinalsBenchmark.java
src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/FilterFieldDataTest.java
src/test/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinalsTests.java
src/test/java/org/elasticsearch/index/fielddata/ordinals/SingleOrdinalsTests.java
src/test/java/org/elasticsearch/search/aggregations/RandomTests.java
src/test/java/org/elasticsearch/search/aggregations/support/FieldDataSourceTests.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Fielddata: Merge ordinals APIs into BytesValues.WithOrdinals.

Mid-term we should switch from `BytesValues` to Lucene's doc values APIs, in
particular the `SortedSetDocValues` class. While `BytesValues.WithOrdinals` and
SortedSetDocValues expose the same functionality, `BytesValues.WithOrdinals`
exposes its ordinals via a different `Ordinals.Docs` object while
`SortedSetDocValues` exposes them on the same object as the one that holds the
values. This commit merges ordinals into `BytesValues.WithOrdinals` in order to
make both classes even closer.

Global ordinals were a bit tricky to migrate so I just changed them to use
Lucene's OrdinalMap that will soon (LUCENE-5767, scheduled for 4.9) have the
same optimizations as our global ordinals.

Close #6524

time:
2014-06-19T09:50:06Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
src/main/java/org/elasticsearch/index/mapper/MapperBuilders.java
src/main/java/org/elasticsearch/index/mapper/internal/FieldNamesFieldMapper.java
src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java
src/main/java/org/elasticsearch/index/query/MissingFilterParser.java
src/test/java/org/elasticsearch/VersionTests.java
src/test/java/org/elasticsearch/index/mapper/internal/FieldNamesFieldMapperTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
src/test/java/org/elasticsearch/search/query/ExistsMissingTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Index field names of documents.

The `exists` and `missing` filters need to merge postings lists of all existing
terms, which can be very costly, especially on high-cardinality fields. This
commit indexes the field names of a document under `_field_names` and reuses it
to speed up the `exists` and `missing` filters.

This is only enabled for indices that are created on or after Elasticsearch
1.3.0.

Close #5659

time:
2014-06-19T09:39:17Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/VersionFieldMapper.java
comments:
Mappings: Allow _version to use `disk` as a doc values format.

VersionFieldMapper.defaultDocValuesFormat claims that the default is `disk`.
This is not used to choose the DV format in the index but for mappings
serialization in order to know when the _version doc values format is
different from the default format. This made it impossible to use the `disk`
doc values format since mappings would never retain that information at
serialization time.

Close #6523

time:
2014-06-19T09:10:13Z
class:
src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/test/java/org/elasticsearch/get/GetActionTests.java
comments:
[TEST] Added (trace) logging to testGetFields_complexField

time:
2014-06-19T08:43:05Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
src/test/java/org/elasticsearch/action/bulk/BulkRequestTests.java
comments:
Java API: BulkRequest#add(Iterable) to support UpdateRequests

Closes #6551

time:
2014-06-19T06:39:26Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SizeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TTLFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/index/IndexTypeMapperIntegrationTests.java
src/test/java/org/elasticsearch/index/mapper/size/SizeMappingIntegrationTests.java
src/test/java/org/elasticsearch/timestamp/SimpleTimestampTests.java
src/test/java/org/elasticsearch/ttl/SimpleTTLTests.java
comments:
Mapping: Fix possibility of losing meta configuration on field mapping update

The TTL, size, timestamp and index meta properties could be lost on an
update of a single field mapping due to a wrong comparison in the
merge method (which was caused by a wrong initialization, which marked
an update as explicitely disabled instead of unset.

Closes #5053

time:
2014-06-19T06:34:38Z
class:
src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java
src/main/java/org/elasticsearch/rest/RestController.java
src/test/java/org/elasticsearch/options/jsonp/JsonpOptionDisabledTest.java
src/test/java/org/elasticsearch/options/jsonp/JsonpOptionEnabledTest.java
comments:
REST API: Allow to configure JSONP/callback support

Added the http.jsonp.enable option to configure disabling of JSONP responses, as those
might pose a security risk, and can be disabled if unused.

This also fixes bugs in NettyHttpChannel
* JSONP responses were never setting application/javascript as the content-type
* The content-type and content-length headers were being overwritten even if they were set before

Closes #6164

time:
2014-06-18T17:38:02Z
class:
comments:
[DOCS] Fixed json example in nested-aggregation.asciidoc

time:
2014-06-18T16:51:34Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsTests.java
comments:
significant terms: fix json response

Commit fbd7c9aa5d6c1c introduced a regression that caused
the min_doc_count to be equal to the number of documents in the
background set. As a result no buckets were built when the
response for significant terms was created.
This only affected the final XContent response.

closes #6535

time:
2014-06-18T15:59:40Z
class:
comments:
[TEST] Remove indentation on indices.stats test setups

The new indices.stats tests have the setup section indented, which
can cause problems for some yaml parsers.

time:
2014-06-18T15:37:45Z
class:
src/main/java/org/elasticsearch/action/support/TransportAction.java
comments:
Fixed typo in TransportAction log line

time:
2014-06-18T14:12:42Z
class:
src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java
src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java
src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java
src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
Also send Refresh and Flush actions to relocation targets

Currently we send relocation & flush actions based on all assigned ShardRoutings. During the final stage of relocation, we may miss to refresh/flush a shard if the coordinating node has not yet processed the cluster state update indicating that a relocation is completed *and* the relocation target node has already processed it (i.e., started the shard and has accepted new indexing requests).

Closes #6545

time:
2014-06-18T14:06:09Z
class:
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
comments:
[TEST] Only use the clients from the node.

time:
2014-06-18T14:06:09Z
class:
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
[TEST] Disable automatic refresh to prevent unintended field data warming of the the _parent field.

time:
2014-06-18T11:02:08Z
class:
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractInternalPercentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractPercentilesAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractPercentilesParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentile.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentileRanks.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/Percentile.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanks.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/Percentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesParser.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/PercentilesAggregationSearchBenchmark.java
src/test/java/org/elasticsearch/search/aggregations/metrics/PercentileRanksTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/PercentilesTests.java
comments:
Aggregations: Added percentile rank aggregation

Percentile Rank Aggregation is the reverse of the Percetiles aggregation.  It determines the percentile rank (the proportion of values less than a given value) of the provided array of values.

Closes #6386

time:
2014-06-18T10:24:47Z
class:
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
percolator: fix handling of nested documents

Nested documents were indexed as separate documents, but it was never checked
if the hits represent nested documents or not. Therefore, nested objects could
match not nested queries and nested queries could also match not nested documents.

Examples are in issue #6540 .

closes #6540
closes #6544

time:
2014-06-18T09:34:20Z
class:
comments:
Update stemmer-override-tokenfilter.asciidoc

time:
2014-06-17T15:37:07Z
class:
comments:
Docs: tidied configuration.asciidoc

time:
2014-06-17T14:55:34Z
class:
src/main/java/jsr166e/ConcurrentHashMapV8.java
src/main/java/jsr166e/CountedCompleter.java
src/main/java/jsr166e/ForkJoinPool.java
src/main/java/jsr166e/ForkJoinTask.java
src/main/java/jsr166e/ForkJoinWorkerThread.java
src/main/java/jsr166e/ThreadLocalRandom.java
src/main/java/org/apache/lucene/document/XStringField.java
src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java
src/main/java/org/apache/lucene/index/TrackingSerialMergeScheduler.java
src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XSpecialOperations.java
src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java
src/main/java/org/apache/lucene/store/XNativeFSLockFactory.java
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/action/Action.java
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/ActionRequestBuilder.java
src/main/java/org/elasticsearch/action/ActionResponse.java
src/main/java/org/elasticsearch/action/ClientAction.java
src/main/java/org/elasticsearch/action/admin/cluster/ClusterAction.java
src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java
src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/restart/NodesRestartRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/DeleteRepositoryRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/TransportClusterSearchShardsAction.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/DeleteSnapshotRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotIndexShardStatus.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotStatus.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java
src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/tasks/PendingClusterTasksRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/IndicesAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/TransportAliasesExistAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/BaseAliasesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java
src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/exists/indices/TransportIndicesExistsAction.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TransportTypesExistsAction.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/DeleteMappingRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestBuilder.java
comments:
Merge remote-tracking branch 'upstream/master'

time:
2014-06-17T12:25:04Z
class:
comments:
update docs to reflect how default write consistency with 1 replica behaves

time:
2014-06-17T11:35:05Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalOrder.java
comments:
Changed the type of field docCounts to IntArray instead of LongArray, because a shard can't hold more than Integer.MAX_VALUE a LongArray just takes unnecessary space.

Closes #6529

time:
2014-06-17T10:18:37Z
class:
src/main/java/org/elasticsearch/action/Action.java
src/main/java/org/elasticsearch/action/ActionRequestBuilder.java
src/main/java/org/elasticsearch/action/ClientAction.java
src/main/java/org/elasticsearch/action/admin/cluster/ClusterAction.java
src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/restart/NodesRestartRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/delete/DeleteRepositoryRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/delete/DeleteSnapshotRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotsStatusRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/tasks/PendingClusterTasksRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/IndicesAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/BaseAliasesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/DeleteMappingRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/recovery/RecoveryRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/segments/IndicesSegmentsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/settings/get/GetSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/settings/get/GetSettingsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/settings/put/UpdateSettingsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/template/delete/DeleteIndexTemplateRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/GetIndexTemplatesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerRequestBuilder.java
src/main/java/org/elasticsearch/action/bench/AbortBenchmarkAction.java
src/main/java/org/elasticsearch/action/bench/AbortBenchmarkRequestBuilder.java
src/main/java/org/elasticsearch/action/bench/BenchmarkAction.java
src/main/java/org/elasticsearch/action/bench/BenchmarkRequestBuilder.java
src/main/java/org/elasticsearch/action/bench/BenchmarkStatusAction.java
src/main/java/org/elasticsearch/action/bench/BenchmarkStatusRequestBuilder.java
src/main/java/org/elasticsearch/action/bulk/BulkAction.java
src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java
src/main/java/org/elasticsearch/action/bulk/BulkRequestBuilder.java
src/main/java/org/elasticsearch/action/count/CountAction.java
src/main/java/org/elasticsearch/action/count/CountRequestBuilder.java
src/main/java/org/elasticsearch/action/delete/DeleteAction.java
src/main/java/org/elasticsearch/action/delete/DeleteRequestBuilder.java
src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryAction.java
src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequestBuilder.java
src/main/java/org/elasticsearch/action/explain/ExplainAction.java
src/main/java/org/elasticsearch/action/explain/ExplainRequestBuilder.java
src/main/java/org/elasticsearch/action/get/GetAction.java
src/main/java/org/elasticsearch/action/get/GetRequestBuilder.java
src/main/java/org/elasticsearch/action/get/MultiGetAction.java
src/main/java/org/elasticsearch/action/get/MultiGetRequestBuilder.java
src/main/java/org/elasticsearch/action/index/IndexAction.java
src/main/java/org/elasticsearch/action/index/IndexRequestBuilder.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisAction.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateAction.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateAction.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/search/ClearScrollAction.java
src/main/java/org/elasticsearch/action/search/ClearScrollRequestBuilder.java
src/main/java/org/elasticsearch/action/search/MultiSearchAction.java
src/main/java/org/elasticsearch/action/search/MultiSearchRequestBuilder.java
src/main/java/org/elasticsearch/action/search/SearchAction.java
src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
src/main/java/org/elasticsearch/action/search/SearchScrollAction.java
src/main/java/org/elasticsearch/action/search/SearchScrollRequestBuilder.java
src/main/java/org/elasticsearch/action/suggest/SuggestAction.java
src/main/java/org/elasticsearch/action/suggest/SuggestRequestBuilder.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/support/master/AcknowledgedRequestBuilder.java
src/main/java/org/elasticsearch/action/support/master/MasterNodeOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/support/master/MasterNodeReadOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/support/master/info/ClusterInfoRequestBuilder.java
src/main/java/org/elasticsearch/action/support/nodes/NodesOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/support/replication/IndicesReplicationOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/support/single/custom/SingleCustomOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/support/single/instance/InstanceShardOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/support/single/shard/SingleShardOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/termvector/MultiTermVectorsAction.java
src/main/java/org/elasticsearch/action/termvector/MultiTermVectorsRequestBuilder.java
src/main/java/org/elasticsearch/action/termvector/TermVectorAction.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequestBuilder.java
src/main/java/org/elasticsearch/action/update/UpdateAction.java
src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
src/main/java/org/elasticsearch/client/Client.java
src/main/java/org/elasticsearch/client/ClusterAdminClient.java
src/main/java/org/elasticsearch/client/ElasticsearchClient.java
src/main/java/org/elasticsearch/client/FilterClient.java
src/main/java/org/elasticsearch/client/IndicesAdminClient.java
src/main/java/org/elasticsearch/client/internal/InternalClient.java
src/main/java/org/elasticsearch/client/internal/InternalClusterAdminClient.java
src/main/java/org/elasticsearch/client/internal/InternalGenericClient.java
src/main/java/org/elasticsearch/client/node/NodeClient.java
src/main/java/org/elasticsearch/client/node/NodeClusterAdminClient.java
src/main/java/org/elasticsearch/client/node/NodeIndicesAdminClient.java
src/main/java/org/elasticsearch/client/support/AbstractClient.java
src/main/java/org/elasticsearch/client/support/AbstractClusterAdminClient.java
src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java
src/main/java/org/elasticsearch/client/transport/TransportClient.java
src/main/java/org/elasticsearch/client/transport/support/InternalTransportClient.java
src/main/java/org/elasticsearch/client/transport/support/InternalTransportClusterAdminClient.java
src/main/java/org/elasticsearch/client/transport/support/InternalTransportIndicesAdminClient.java
src/main/java/org/elasticsearch/node/Node.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/test/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsTests.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
src/test/java/org/elasticsearch/cluster/SpecificMasterNodesTests.java
src/test/java/org/elasticsearch/cluster/allocation/ShardsAllocatorModuleTests.java
src/test/java/org/elasticsearch/indices/settings/UpdateNumberOfReplicasTests.java
src/test/java/org/elasticsearch/search/preference/SearchPreferenceTests.java
src/test/java/org/elasticsearch/snapshots/AbstractSnapshotTests.java
src/test/java/org/elasticsearch/stresstest/refresh/RefreshStressTest1.java
src/test/java/org/elasticsearch/stresstest/search1/ParentChildStressTest.java
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/test/client/FilterClient.java
src/test/java/org/elasticsearch/test/client/RandomizingClient.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
src/test/java/org/elasticsearch/tribe/TribeTests.java
comments:
[CLIENT] Remove unnecessary intermediate interfaces

Client, ClusterAdminClient and IndicesAdminClient had corresponding
intermediate `internal` interfaces that are unnecessary and cause
a lot of casting. This commit removes the intermediate interfaces
and uses the super interfaces directly.

This commit also adds Releaseable to `Node` and `Client` in order to
be used with utilities like try / with.

Closes #4355
Closes #6517
Nice cleanup!

;) needed too :)


time:
2014-06-17T10:16:10Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Use test.bwc.version if compatibility version is not present

time:
2014-06-17T10:07:13Z
class:
comments:
don't check .metadata folder for tabs and nocommits

time:
2014-06-16T23:46:02Z
class:
src/test/java/org/elasticsearch/benchmark/search/aggregations/TermsAggregationSearchBenchmark.java
comments:
[Benchmark] Fix TermsAggregationSearchBenchmark: The `ordinals` execution mode doesn't exist anymore.

time:
2014-06-16T22:25:28Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
comments:
Use ordinals for comparison in GlobalOrdinalsStringTermsAggregator.buildAggregation. Closes #6518

time:
2014-06-16T19:50:12Z
class:
src/main/java/org/elasticsearch/common/network/MulticastChannel.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java
comments:
[TEST] verify all threads created by node and client have the node name
closes #6516

time:
2014-06-16T15:01:38Z
class:
src/test/java/org/elasticsearch/get/GetActionTests.java
comments:
[TEST] wait for ongoing recoveries to finish. Flush fails on shards otherwise.

time:
2014-06-16T13:44:47Z
class:
comments:
[DOCS] Fixed is/if typo in Api Conventions doc

time:
2014-06-16T13:14:54Z
class:
src/test/java/org/elasticsearch/action/admin/HotThreadsTest.java
src/test/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsTests.java
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/action/bench/BenchmarkNegativeTest.java
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
src/test/java/org/elasticsearch/client/transport/TransportClientTests.java
src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
src/test/java/org/elasticsearch/cluster/SimpleClusterStateTests.java
src/test/java/org/elasticsearch/cluster/SimpleDataNodesTests.java
src/test/java/org/elasticsearch/cluster/SpecificMasterNodesTests.java
src/test/java/org/elasticsearch/cluster/UpdateSettingsValidationTests.java
src/test/java/org/elasticsearch/cluster/ack/AckClusterUpdateSettingsTests.java
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
src/test/java/org/elasticsearch/cluster/allocation/AwarenessAllocationTests.java
src/test/java/org/elasticsearch/cluster/allocation/ClusterRerouteTests.java
src/test/java/org/elasticsearch/cluster/allocation/FilteringAllocationTests.java
src/test/java/org/elasticsearch/cluster/allocation/ShardsAllocatorModuleTests.java
src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsTests.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/discovery/ZenUnicastDiscoveryTestsMinimumMasterNodes.java
src/test/java/org/elasticsearch/discovery/ZenUnicastDiscoveryTestsSpecificNodes.java
src/test/java/org/elasticsearch/document/BulkTests.java
src/test/java/org/elasticsearch/document/DocumentActionsTests.java
src/test/java/org/elasticsearch/gateway/local/LocalGatewayIndexStateTests.java
src/test/java/org/elasticsearch/gateway/local/QuorumLocalGatewayTests.java
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
src/test/java/org/elasticsearch/gateway/none/RecoverAfterNodesTests.java
src/test/java/org/elasticsearch/index/suggest/stats/SuggestStatsTests.java
src/test/java/org/elasticsearch/indexing/IndexActionTests.java
src/test/java/org/elasticsearch/indexlifecycle/IndexLifecycleActionTests.java
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerTests.java
src/test/java/org/elasticsearch/indices/analyze/HunspellServiceTests.java
src/test/java/org/elasticsearch/indices/cache/CacheTests.java
src/test/java/org/elasticsearch/indices/leaks/IndicesLeaksTests.java
src/test/java/org/elasticsearch/indices/mapping/ConcurrentDynamicTemplateTests.java
src/test/java/org/elasticsearch/indices/mapping/DedicatedMasterGetFieldMappingTests.java
src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryTests.java
src/test/java/org/elasticsearch/indices/settings/UpdateNumberOfReplicasTests.java
src/test/java/org/elasticsearch/indices/store/IndicesStoreTests.java
src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java
src/test/java/org/elasticsearch/indices/warmer/LocalGatewayIndicesWarmerTests.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
src/test/java/org/elasticsearch/percolator/TTLPercolatorTests.java
src/test/java/org/elasticsearch/plugin/PluginManagerTests.java
src/test/java/org/elasticsearch/plugin/ResponseHeaderPluginTests.java
src/test/java/org/elasticsearch/plugin/SitePluginTests.java
src/test/java/org/elasticsearch/recovery/FullRollingRestartTests.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
src/test/java/org/elasticsearch/search/aggregations/RandomTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramTests.java
src/test/java/org/elasticsearch/search/basic/SearchWhileCreatingIndexTests.java
src/test/java/org/elasticsearch/search/preference/SearchPreferenceTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/search/scriptfilter/ScriptFilterSearchTests.java
src/test/java/org/elasticsearch/search/scroll/SearchScrollTests.java
src/test/java/org/elasticsearch/search/scroll/SearchScrollWithFailingNodesTests.java
src/test/java/org/elasticsearch/search/scroll/SlowDuelScrollTests.java
src/test/java/org/elasticsearch/search/scroll/SlowSearchScrollTests.java
src/test/java/org/elasticsearch/search/stats/SearchStatsTests.java
src/test/java/org/elasticsearch/snapshots/AbstractSnapshotTests.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/ImmutableTestCluster.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/test/cache/recycler/MockPageCacheRecycler.java
src/test/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
src/test/java/org/elasticsearch/test/rest/support/Features.java
src/test/java/org/elasticsearch/test/store/MockDirectoryHelper.java
src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java
src/test/java/org/elasticsearch/tribe/TribeTests.java
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
src/test/java/org/elasticsearch/versioning/ConcurrentDocumentOperationTests.java
comments:
[TEST] Fix test cluster naming

This commit renames `TestCluster` -> `InternalTestCluster` and
`ImmutableTestCluster` to `TestCluster` for consistency. This also
makes `ExternalTestCluster` and `InternalTestCluster` consistent
with respect to their execution environment.

Closes #6510

time:
2014-06-16T12:12:21Z
class:
src/test/java/org/elasticsearch/search/functionscore/RandomScoreFunctionTests.java
comments:
[TEST] Add test for accessing _score in scripts

time:
2014-06-16T10:40:43Z
class:
src/main/java/org/elasticsearch/discovery/DiscoveryModule.java
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/bwcompat/BasicAnalysisBackwardCompatibilityTests.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/get/GetActionTests.java
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalNode.java
src/test/java/org/elasticsearch/test/ImmutableTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/test/client/FilterClient.java
src/test/java/org/elasticsearch/test/client/RandomizingClient.java
src/test/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java
comments:
[TEST] Add basic Backwards Compatibility Tests

This commit add a basic infrastructure as well as primitive tests
to ensure version backwards compatibility between the current
development trunk and an arbitrary previous version. The compatibility
tests are simple unit tests derived from a base class that starts
and manages nodes from a provided elasticsearch release package.

Use the following commandline executes all backwards compatiblity tests
in isolation:

```
mvn test -Dtests.bwc=true -Dtests.bwc.version=1.2.1 -Dtests.class=org.elasticsearch.bwcompat.*
```

These tests run basic checks like rolling upgrades and
routing/searching/get etc. against the specified version. The version
must be present in the `./backwards` folder as
`./backwards/elasticsearch-x.y.z`

time:
2014-06-16T09:00:34Z
class:
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequestBuilder.java
src/test/java/org/elasticsearch/get/GetActionTests.java
comments:
[TEST] Force flush even if not needed to ensure successful shards is greater than 0

time:
2014-06-16T08:54:12Z
class:
src/test/java/org/apache/lucene/queries/BlendedTermQueryTest.java
comments:
[TEST] consistently omit norms in test otherwise scoring will be dependent on merges etc.

time:
2014-06-16T08:42:34Z
class:
comments:
[DOCS] Fixd typo in http.asciidoc

time:
2014-06-15T22:52:33Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
comments:
Better default size for global index -> alias map
The alias -> (index -> alias) map, specifically the index -> alias one, typically just hold one entry, yet we eagerly initialize it to the number of indices. When there are many indices, each with many aliases, this is a very large overhead per alias...
closes #6504

time:
2014-06-15T21:32:04Z
class:
src/test/java/org/elasticsearch/discovery/gce/AbstractGceComputeServiceTest.java
src/test/java/org/elasticsearch/discovery/gce/GceDifferentTagsOneTagTest.java
src/test/java/org/elasticsearch/discovery/gce/GceDifferentTagsTwoTagsTest.java
comments:
Fix tests

When upgrading to elasticsearch 1.2.1 test framework, some tests are not working anymore because of
`ElasticsearchIntegrationTest#ensureClusterSizeConsistency()` method which check that the number of started nodes
is the number of available nodes in the cluster.

Disabling them temporary.

Also, a new clientNode could be added (depends on seed). It adds a node more than expected.

(cherry picked from commit bcc2cd5)

time:
2014-06-15T21:31:42Z
class:
src/test/java/org/elasticsearch/discovery/gce/AbstractGceComputeServiceTest.java
src/test/java/org/elasticsearch/gce/itest/GceSimpleITest.java
comments:
Update to elasticsearch 1.3.0

Closes #24.

(cherry picked from commit 9c62411)

time:
2014-06-15T09:00:16Z
class:
comments:
Update instructions for GCE

Some tools have changed on GCE platform.
We need to update the documentation.

Closes #23.

time:
2014-06-15T08:59:32Z
class:
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
comments:
NPE when no tags on instance

When no tags exists on other running instances and if we try to filter by tag, we get the following error:

```
[2014-05-19 16:17:37,377][DEBUG][discovery.gce            ] [Theresa Cassidy] start building nodes list using GCE API
[2014-05-19 16:17:37,378][INFO ][cloud.gce                ] [Theresa Cassidy] starting GCE discovery service
[2014-05-19 16:17:37,592][TRACE][discovery.gce            ] [Theresa Cassidy] gce instance hadoop1 with status RUNNING found.
[2014-05-19 16:17:37,597][TRACE][discovery.gce            ] [Theresa Cassidy] start filtering instance hadoop1 with tags [elasticsearch, dev].
[2014-05-19 16:17:37,597][TRACE][discovery.gce            ] [Theresa Cassidy] comparing instance tags null with tags filter [elasticsearch, dev].
[2014-05-19 16:17:37,597][WARN ][discovery.gce            ] [Theresa Cassidy] Exception caught during discovery java.lang.NullPointerException : null
[2014-05-19 16:17:37,597][TRACE][discovery.gce            ] [Theresa Cassidy] Exception caught during discovery
java.lang.NullPointerException
    at org.elasticsearch.discovery.gce.GceUnicastHostsProvider.buildDynamicNodes(GceUnicastHostsProvider.java:157)
    at org.elasticsearch.discovery.zen.ping.unicast.UnicastZenPing.sendPings(UnicastZenPing.java:245)
    at org.elasticsearch.discovery.zen.ping.unicast.UnicastZenPing$2.run(UnicastZenPing.java:176)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:744)
[2014-05-19 16:17:37,598][DEBUG][discovery.gce            ] [Theresa Cassidy] 0 node(s) added
[2014-05-19 16:17:37,598][DEBUG][discovery.gce            ] [Theresa Cassidy] using dynamic discovery nodes []
```

Closes #22.

time:
2014-06-14T19:52:15Z
class:
src/test/java/org/elasticsearch/search/aggregations/RandomTests.java
comments:
[TEST] Stabelize test - wait for yellow to ensure all primaries are allocated

time:
2014-06-14T16:56:14Z
class:
comments:
SL4FJ dependency version problem

This is due to `edu.ucar:netcdf` lib which comes from `tika-parsers` dependency.

```
[INFO] +- org.apache.tika:tika-parsers:jar:1.5:compile
[INFO] |  +- edu.ucar:netcdf:jar:4.2-min:compile
[INFO] |  |  \- org.slf4j:slf4j-api:jar:1.5.6:compile
```

We can exclude this library from the generated ZIP artifact.

Closes #41.

time:
2014-06-13T21:05:02Z
class:
src/main/java/org/elasticsearch/index/fielddata/AbstractAtomicNumericFieldData.java
src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/AtomicGeoPointFieldData.java
src/main/java/org/elasticsearch/index/fielddata/BytesValues.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefValComparator.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractGeoPointIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AtomicFieldDataWithOrdinalsTermsEnum.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVNumericAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVNumericIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/EmptyByteValuesWithOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/IndexIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/percolator/QueriesLoaderCollector.java
src/main/java/org/elasticsearch/index/percolator/stats/ShardPercolateService.java
src/main/java/org/elasticsearch/index/search/FieldDataTermsFilter.java
src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/support/AggregationContext.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java
src/main/java/org/elasticsearch/search/facet/terms/strings/FieldsTermsStringFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/HashedAggregator.java
src/main/java/org/elasticsearch/search/facet/terms/strings/TermsStringFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/TermsStringOrdinalsFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/termsstats/strings/TermsStatsStringFacetExecutor.java
src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTests.java
src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/BinaryDVFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/FilterFieldDataTest.java
src/test/java/org/elasticsearch/index/fielddata/ParentChildFieldDataTests.java
src/test/java/org/elasticsearch/search/aggregations/support/FieldDataSourceTests.java
comments:
Fielddata: Don't expose hashes anymore.

Our field data currently exposes hashes of the bytes values. That takes roughly
4 bytes per unique value, which is definitely not negligible on high-cardinality
fields.

These hashes have been used for 3 different purposes:
 - term-based aggregations,
 - parent/child queries,
 - the percolator _id -> Query cache.

Both aggregations and parent/child queries have been moved to ordinals which
provide a greater speedup and lower memory usage. In the case of the percolator
it is used in conjunction with HashedBytesRef to not recompute the hash value
when getting resolving a query given its ID. However, removing this has no
impact on PercolatorStressBenchmark.

Close #6500

time:
2014-06-13T21:02:20Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/test/java/org/elasticsearch/search/aggregations/RandomTests.java
comments:
Aggregations: Remove `ordinals` execution hint.

This was how terms aggregations managed to not be too slow initially by caching
reads into the terms dictionary using ordinals. However, this doesn't behave
nicely on high-cardinality fields since the reads into the terms dict are
random and this execution mode loads all unique terms into memory.

The `global_ordinals` execution mode (default since 1.2) is expected to be
better in all cases.

Close #6499

time:
2014-06-13T21:01:43Z
class:
src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java
src/main/java/org/elasticsearch/search/aggregations/bucket/InternalSingleBucketAggregation.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filter/InternalFilter.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGrid.java
src/main/java/org/elasticsearch/search/aggregations/bucket/global/InternalGlobal.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/missing/InternalMissing.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/InternalNested.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/InternalReverseNested.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/InternalDateRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/InternalGeoDistance.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/InternalIPv4Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/UnmappedSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/UnmappedTerms.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/InternalAvg.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/HyperLogLogPlusPlus.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/InternalCardinality.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/InternalGeoBounds.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/InternalMax.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/InternalMin.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/TDigestState.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/InternalStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/InternalExtendedStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/InternalSum.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHits.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCount.java
src/test/java/org/elasticsearch/search/aggregations/RandomTests.java
comments:
Aggregations: Fix reducing of range aggregations.

Under some rare circumstances:
 - local transport,
 - the range aggregation has both a parent and a child aggregation,
 - the range aggregation got no documents on one shard or more and several
   documents on one shard or more.
the range aggregation could return incorrect counts and sub aggregations.

The root cause is that since the reduce happens in-place and since the range
aggregation uses the same instance for all sub-aggregation in case of an
empty bucket, sometimes non-empty buckets would have been reduced into this
shared instance.

In order to avoid similar bugs in the future, aggregations have been updated
to return a new instance when reducing instead of doing it in-place.

Close #6435

time:
2014-06-13T16:03:25Z
class:
src/test/java/org/elasticsearch/get/GetActionTests.java
comments:
[TEST] Fix assert

time:
2014-06-13T15:40:06Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java
src/test/java/org/elasticsearch/action/bulk/BulkProcessorTests.java
src/test/java/org/elasticsearch/document/BulkTests.java
comments:
Java API: Make sure afterBulk is always called in BulkProcessor after beforeBulk

Moved BulkProcessor tests from BulkTests to newly added BulkProcessorTests class.
Strenghtened BulkProcessorTests by adding randomizations to existing tests and new tests for concurrent requests and expcetions.
Also made sure that afterBulk is called only once per request if concurrentRequests==0.

Closes #5038

time:
2014-06-13T14:11:13Z
class:
src/test/java/org/elasticsearch/search/geo/GeoFilterTests.java
comments:
[Test] set search request size testGeohashCellFilter

The default of 10 is not good enough as previously thought.

time:
2014-06-13T14:01:04Z
class:
comments:
Added missing comma in suggester example

time:
2014-06-13T11:48:22Z
class:
comments:
Packaging: Remove java-6 directories from debian init script

Closes #6350

time:
2014-06-13T11:24:53Z
class:
comments:
[DOCS] Clarify the trade-off of the `disk` doc values format.

time:
2014-06-13T11:13:44Z
class:
src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
src/main/java/org/elasticsearch/search/facet/FacetBuilders.java
comments:
Facets: deprecation.

Users are encouraged to move to the new aggregation framework that was
introduced in Elasticsearch 1.0.

Close #6485

time:
2014-06-13T10:58:03Z
class:
comments:
Docs: Linked to fielddata formats from core types

Closes #6489

time:
2014-06-13T10:49:48Z
class:
comments:
Added link to "native" ES client

time:
2014-06-13T10:25:43Z
class:
src/test/java/org/elasticsearch/get/GetActionTests.java
comments:
[TEST] Removed incorrect assertion (it is expected that the flush doesn't execute on all shard copies, because we don't wait for green status)

time:
2014-06-13T10:04:33Z
class:
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
comments:
[TEST] Add FailureMarker to test listeners so -Dtests.failfast works

time:
2014-06-13T09:40:05Z
class:
src/test/java/org/elasticsearch/get/GetActionTests.java
comments:
[TEST] Verify the flush reponse

time:
2014-06-12T20:19:34Z
class:
src/main/java/org/elasticsearch/index/query/GeohashCellFilter.java
src/test/java/org/elasticsearch/search/geo/GeoFilterTests.java
comments:
Added caching support to geohash_filter

Caching is turned off by default.

Closes #6478

time:
2014-06-12T16:25:20Z
class:
comments:
Rest-Spec: search was missing the track_scores param

time:
2014-06-12T16:15:51Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java
comments:
Wait till node is part of cluster state for join process
When a node sends a join request to the master, only send back the response after it has been added to the master cluster state and published.
This will fix the rare cases where today, a join request can return, and the master, since its under load, have not yet added the node to its cluster state, and the node that joined will start a fault detect against the master, failing since its not part of the cluster state.
Since now the join request is longer, also increase the join request timeout default.
closes #6480

time:
2014-06-12T14:35:29Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java
comments:
Enable DiskThresholdDecider by default, change default limits to 85/90%

Fixes #6200
Fixes #6201

time:
2014-06-12T12:19:33Z
class:
src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
comments:
More Like This Query: creates only one MLT query per field for all queried items.

Previously, one MLT query per field was created for each item. One issue with
this method is that the maximum number of selected terms was equal to the
number of items times 'max_query_terms'. Instead, users should have direct control
over the maximum number of selected terms allowed, regardless of the number of
queried items.

Another issue related to the previous method is that it could lead to the
selection of rather uninteresting terms, that because they were found in a
particular queried item. Instead, this new procedure enforces the selection of
interesting terms across ALL items, not within each item. This could lead to
search results where the best matching items share commonalities amongst the
best characteristics of all the items.

Closes #6404

time:
2014-06-12T11:56:06Z
class:
comments:
Docs: Updated index-modules/store and setup/configuration

Explain how to set different index storage types, and
added the vm settings required to stop mmapfs from running
out of memory

Closes #6327

time:
2014-06-12T11:07:04Z
class:
comments:
Docs: Updated CONTRIBUTING.md to provide more details about the PR process

Closes #6323

time:
2014-06-12T10:48:23Z
class:
comments:
Update nested-query.asciidoc

Added note that fields inside a nested query must be full qualified.

time:
2014-06-12T10:31:18Z
class:
comments:
[BUILD] exclude target dir from tab validation

time:
2014-06-12T10:09:19Z
class:
comments:
[DOCS] Fixed typo in post-filter.asciidoc

Remove 'be' where it is not needed

time:
2014-06-12T10:05:54Z
class:
comments:
[BUILD] Generate source jars for tests

Closes #6125

time:
2014-06-12T09:11:23Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocatorModule.java
src/main/java/org/elasticsearch/common/util/concurrent/ThreadBarrier.java
src/main/java/org/elasticsearch/index/analysis/ThaiAnalyzerProvider.java
src/main/java/org/elasticsearch/index/query/BoolFilterBuilder.java
src/main/java/org/elasticsearch/index/query/QueryBuilders.java
src/main/java/org/elasticsearch/index/query/SpanMultiTermQueryBuilder.java
src/main/java/org/elasticsearch/index/query/SpanMultiTermQueryParser.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/ExternalMapper.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[BUILD] Check for tabs and nocommits in the code on validate

This commit adds checks for nocommit and tabs in the source code.
The task is executed during the validate phase and can be disabled via
`-Dvalidate.skip`

time:
2014-06-12T00:52:45Z
class:
comments:
[DOCS] Snapshot/restore: add more information about snapshot and restore monitoring

time:
2014-06-11T23:03:36Z
class:
comments:
[TEST] remove accidental double escape in yaml tests

time:
2014-06-11T19:49:02Z
class:
comments:
Docs: Hunspell tidied

Tidied some formatting

time:
2014-06-11T15:23:43Z
class:
src/main/java/org/elasticsearch/search/highlight/HighlighterContext.java
comments:
Highlighting: make HighlightQuery class public
Can you push this commit to 1.2 branch also so that further updates to 1.2 (if any) will release this change.


time:
2014-06-11T11:47:07Z
class:
comments:
Docs: Use the "stemmer" token filter for the english analyzer, to be consistent

time:
2014-06-11T11:43:02Z
class:
comments:
Docs: Corrected the use of keyword_marker on the lang analyzers

time:
2014-06-11T10:30:16Z
class:
src/main/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactory.java
src/test/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactoryTests.java
comments:
The StemmerTokenFilter had a number of issues:

* `english` returned the slow snowball English stemmer
* `porter2` returned the snowball Porter stemmer (v1)
* `portuguese` was used twice, preventing the second version from working

Changes:

* `english` now returns the fast PorterStemmer (for indices created from v1.3.0 onwards)
* `porter2` now returns the snowball English stemmer (for indices created from v1.3.0 onwards)
* `light_english` now returns the `kstem` stemmer (`kstem` still works)
* `portuguese_rslp` returns the PortugueseStemmer
* `dutch_kp` is a synonym for `kp`

Tests and docs updated

Fixes #6345
Fixes #6213
Fixes #6330
@clintongormley @rmuir the link to the PDF on `minimal_english` is broken (authentication required)

@synhershko I've changed it to a publicly accessable URL

@clintongormley :+1: 


time:
2014-06-10T19:34:03Z
class:
src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java
comments:
Tests: Fixed CompletionSuggester test which relied on a bug

time:
2014-06-10T18:33:04Z
class:
comments:
Tests: Java test runner can't handle array responses
I'm not sure I get where the problem was here, array responses should work fine. I gave this a try (reverting this change) and it seemed to work for me...just making sure there isn't a bug in the Java runner which I'd prefer to fix.


time:
2014-06-10T17:10:18Z
class:
comments:
Tests: Fixed indices.stats types test when run with replicas

time:
2014-06-10T15:35:49Z
class:
src/main/java/org/elasticsearch/index/fielddata/ShardFieldData.java
src/main/java/org/elasticsearch/index/indexing/ShardIndexingService.java
src/main/java/org/elasticsearch/index/search/stats/ShardSearchService.java
src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java
src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java
src/test/java/org/elasticsearch/indices/stats/SimpleIndexStatsTests.java
comments:
Stats: Bugfixes and enhancements to indices stats API

Bugs:
* "groups" and "types" were being ignored
* "completion_fields" as wildcards were not being resolved to fieldnames

Enhancements:
* Made "groups" and "types" support wildcards
* Added missing tests

Closes #6390

time:
2014-06-10T11:15:59Z
class:
src/main/java/org/elasticsearch/client/transport/NoNodeAvailableException.java
src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java
comments:
TransportClient: Improve logging, fix minor issue

In order to return more information to the client, in case a TransportClient
can not connect to the cluster, this commit adds logging and also returns the
configured nodes in the NoNodeAvailableException

Also a minor bug has been fixed, which propagated exceptions wrong, so that an
invalid request was actually tried on every node, if a regular connection failure
on the first node had happened.

Closes #6376

time:
2014-06-10T07:14:06Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregator.java
src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityTests.java
comments:
Aggregations: if maxOrd is 0 then use noop collector

Before the OrdinalsCollector was used and this leads to a ArrayIndexOutOfBoundsException

Closes #6413

time:
2014-06-10T07:13:27Z
class:
src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java
comments:
Fielddata: EmptyOrdinals#getMaxOrd() should return 0 instead of 1, since ordinals are zero based since #5871.

time:
2014-06-10T07:09:50Z
class:
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHits.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHits.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsContext.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsParser.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
comments:
Change the top_hits to be a metric aggregation instead of a bucket aggregation (which can't have an sub aggs)

Closes #6395
Closes #6434

time:
2014-06-09T21:36:58Z
class:
comments:
Docs: Fixed bad ref on cjk_width/bigram pages

time:
2014-06-09T21:03:12Z
class:
comments:
Docs: Fixed a bad ref on lang analyzers page

time:
2014-06-09T20:51:28Z
class:
comments:
Docs: Fixed some errors on the language analyzers page

time:
2014-06-09T20:41:25Z
class:
comments:
Docs: Added custom-analyzer equivalents of all the language analyzers

time:
2014-06-09T20:40:58Z
class:
comments:
Docs: Documented the cjk_width and cjk_bigram token filters

time:
2014-06-07T13:39:56Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Added backwards compatibility check to control whether to enable client nodes or not within TestCluster

Our REST backwards compatibility tests need to be able to disable client nodes within the TestCluster when running older tests that assume client nodes are not around.

time:
2014-06-07T08:15:52Z
class:
src/test/java/org/elasticsearch/versioning/SimpleVersioningTests.java
comments:
make test less evil

time:
2014-06-07T07:47:15Z
class:
src/test/java/org/elasticsearch/indexing/IndexActionTests.java
comments:
[Test] Enabled trace logging to  testAutoGenerateIdNoDuplicates

also increased iterations some, to increase chance of identifying bad shards

time:
2014-06-07T07:36:48Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
comments:
fixing recovery debug logging param mismatch

time:
2014-06-06T23:19:06Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
comments:
Guard against improper auto_expand_replica values

Previously if the user provided a non-conforming string, it would blow up with
`java.lang.StringIndexOutOfBoundsException: String index out of range: -1`
which is not a *helpful* error message.

Also updated the documentation to make the possible setting values more clear.

Close #5752

time:
2014-06-06T21:10:42Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/test/java/org/elasticsearch/document/BulkTests.java
comments:
Bulk request which try and fail to create multiple indices may never return

This is caused by an NPE in the error handling code. All is well if only 1 index creation fails (or none).

Closes #6436

time:
2014-06-06T14:59:51Z
class:
src/main/java/org/elasticsearch/search/aggregations/Aggregator.java
src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
src/main/java/org/elasticsearch/search/aggregations/BucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/FilteringBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/RecordingBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/RecordingPerReaderBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/DeferringBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractTermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParser.java
src/main/java/org/elasticsearch/search/aggregations/support/OrderPath.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/SubAggregationSearchCollectModeBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/TermsAggregationSearchBenchmark.java
src/test/java/org/elasticsearch/index/fielddata/DisabledFieldDataFormatTests.java
src/test/java/org/elasticsearch/index/mapper/copyto/CopyToMapperIntegrationTests.java
src/test/java/org/elasticsearch/percolator/PercolatorFacetsAndAggregationsTests.java
src/test/java/org/elasticsearch/search/aggregations/CombiTests.java
src/test/java/org/elasticsearch/search/aggregations/RandomTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/HistogramTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/MinDocCountTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/NaNSortingTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/NestedTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/RangeTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ShardReduceTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ShardSizeTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityTests.java
src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java
comments:
Aggregations optimisation for memory usage. Added changes to core Aggregator class to support a new mode of deferred collection.
A new "breadth_first" results collection mode allows upper branches of aggregation tree to be calculated and then pruned
to a smaller selection before advancing into executing collection on child branches.

Closes #6128

time:
2014-06-06T13:45:05Z
class:
src/main/java/org/elasticsearch/rest/action/admin/indices/template/put/RestPutIndexTemplateAction.java
comments:
Put index template api: unified PUT/POST behaviour in relation to create parameter

The put index template api supports the create parameter (defaults to false), which tells whether the template can replace an existing one with same name or not. Unified its behaviour between PUT and POST method, whereas the POST would previously force create to true.

Added create parameter to the rest spec (was missing before) and a REST test for create true scenario.

time:
2014-06-06T09:51:47Z
class:
src/main/java/org/apache/lucene/store/XNativeFSLockFactory.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/index/store/fs/FsDirectoryService.java
comments:
FileSystem: Use XNativeFSLockFactory instead of the buggy Lucene 4.8.1 version

There is a pretty nasty bug in the lock factory we use that can cause
nodes to use the same data dir wiping each others data. Luckily this is
unlikely to happen if the nodes are running in different JVM which they
do unless they are embedded.

See LUCENE-5738

Closes #6424

time:
2014-06-06T09:46:06Z
class:
comments:
Compilation: don't warn about using Sun proprietary APIs

E.g. we use Unsafe in quite a few places and this generates lots of
warnings, which we now suppress using the undocumented
-XDignore.symbol.file command-line option to javac.

Closes #6423

time:
2014-06-06T08:21:01Z
class:
comments:
[DOCS] Reworded note about shorthand suggest syntax

The existing Note about the shorthand suggest syntax was poorly worded and confusing. Please check whether the way I've phrased it now is still correct as to what the shorthand form actually does and doesn't do: the original wording did not provide me enough information to be sure.
Thanks!

time:
2014-06-05T17:57:59Z
class:
src/test/java/org/elasticsearch/versioning/SimpleVersioningTests.java
comments:
make this new test a bit less stressful for nightly; catch FlushNotAllowedEngineException

time:
2014-06-05T17:55:11Z
class:
comments:
[DOCS] Fixed typo in put-mapping docs

split backwardscompatibility to backwards compatibility

time:
2014-06-05T17:52:12Z
class:
comments:
[DOCS] Fixed the fuzzy query docs with correct default value max_expansion option

time:
2014-06-05T17:49:20Z
class:
comments:
[DOCS] fixed typo in date-format.asciidoc

time:
2014-06-05T17:47:01Z
class:
comments:
[DOCS] Fixed typos in aggregations.asciidoc

Fix plural/singular forms.

time:
2014-06-05T17:39:23Z
class:
src/main/java/jsr166e/ConcurrentHashMapV8.java
src/main/java/jsr166e/CountedCompleter.java
src/main/java/jsr166e/ForkJoinPool.java
src/main/java/jsr166e/ForkJoinTask.java
src/main/java/jsr166e/ForkJoinWorkerThread.java
src/main/java/jsr166e/ThreadLocalRandom.java
src/main/java/org/elasticsearch/common/lucene/uid/Versions.java
src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentCollections.java
src/main/java/org/elasticsearch/common/util/concurrent/KeyedLock.java
comments:
Core: switch to the new ConcurrentHashMap implementation coming in Java 8

The new implementation has lower RAM overhead and better concurrency
in some cases.

Closes #6400

time:
2014-06-05T17:34:50Z
class:
comments:
[DOCS] Fixed typo in object-type.asciidoc

time:
2014-06-05T17:29:17Z
class:
comments:
[DOCS] Clean up Java-API docs

Fixed some wording and subject/verb agreement while reading through the Java API documentation.

time:
2014-06-05T17:22:16Z
class:
comments:
[DOCS] Replace facets example with aggregations in warmers docs

time:
2014-06-05T17:15:22Z
class:
src/main/java/org/elasticsearch/common/logging/ESLogger.java
src/main/java/org/elasticsearch/common/logging/ESLoggerFactory.java
comments:
[DOCS] Added Javadocs to ESLogger and ESLoggerFactory

time:
2014-06-05T16:13:06Z
class:
src/main/java/jsr166e/ConcurrentHashMapV8.java
src/main/java/jsr166e/CountedCompleter.java
src/main/java/jsr166e/ForkJoinPool.java
src/main/java/jsr166e/ForkJoinTask.java
src/main/java/jsr166e/ForkJoinWorkerThread.java
src/main/java/jsr166e/ThreadLocalRandom.java
src/main/java/org/elasticsearch/common/lucene/uid/Versions.java
src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentCollections.java
src/main/java/org/elasticsearch/common/util/concurrent/KeyedLock.java
comments:
revert CHMV8 for now (it doesn't compile under Java8)

time:
2014-06-05T15:16:55Z
class:
src/main/java/org/elasticsearch/index/fieldvisitor/FieldsVisitor.java
src/main/java/org/elasticsearch/index/fieldvisitor/SingleFieldsVisitor.java
src/test/java/org/elasticsearch/search/fields/SearchFieldsTests.java
comments:
Scripts: exposed _uid, _id and _type fields as stored fields (_fields notation)

The _uid field wasn't available in a script despite it's always stored. Made it available and made available also _id and _type fields that are deducted from it.

Closes #6406

time:
2014-06-05T14:49:23Z
class:
src/main/java/jsr166e/ConcurrentHashMapV8.java
src/main/java/jsr166e/CountedCompleter.java
src/main/java/jsr166e/ForkJoinPool.java
src/main/java/jsr166e/ForkJoinTask.java
src/main/java/jsr166e/ForkJoinWorkerThread.java
src/main/java/jsr166e/ThreadLocalRandom.java
src/main/java/org/elasticsearch/common/lucene/uid/Versions.java
src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentCollections.java
src/main/java/org/elasticsearch/common/util/concurrent/KeyedLock.java
comments:
Core: switch to the new ConcurrentHashMap implementation coming in Java 8

The new implementation has lower RAM overhead and better concurrency
in some cases.

Closes #6400

time:
2014-06-05T13:38:22Z
class:
src/test/java/org/elasticsearch/versioning/SimpleVersioningTests.java
comments:
add versioning test

time:
2014-06-05T13:38:10Z
class:
comments:
get -Dtests.verbose passing through Maven

time:
2014-06-05T08:38:07Z
class:
comments:
[DOCS] Add special attributes for indices allocation filtering

time:
2014-06-04T15:18:25Z
class:
src/main/java/org/elasticsearch/action/ActionResponse.java
comments:
Add Javadoc

time:
2014-06-04T09:37:51Z
class:
src/main/java/org/elasticsearch/index/engine/internal/DeleteVersionValue.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/engine/internal/LiveVersionMap.java
src/main/java/org/elasticsearch/index/engine/internal/VersionValue.java
comments:
Indexing: clear versionMap on refresh (not flush) to reduce heap usage

The versionMap holds all versions (keyed by _uid) for recently indexed
documents.  Previously we only cleared it during flush, which can be
infrequent if the translog flush thresholds are high, and can cause
excessive heap usage especially for small documents.

Now we clear it during refresh which is usually more frequent
(e.g. once per second by default).

Closes #6379

time:
2014-06-04T08:16:29Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/InternalGeoBounds.java
comments:
Aggregations: Fixed failures when geo points are all either positive or negative

time:
2014-06-04T08:10:38Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/package-info.java
src/test/java/org/elasticsearch/search/aggregations/metrics/package-info.java
src/test/java/org/elasticsearch/search/aggregations/package-info.java
comments:
[TEST] remove trace logging

time:
2014-06-04T06:56:15Z
class:
comments:
[DOCS] Fix grammar in dynamic mappings

time:
2014-06-03T19:55:10Z
class:
src/test/java/org/elasticsearch/indexing/IndexActionTests.java
comments:
[Test] Extended IndexActionTests.testAutoGenerateIdNoDuplicates to check both with and without a specific type

The test also captures the first error but continues to run searches in order to gather more information before failing.

time:
2014-06-03T15:25:57Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Add [1.2.1] Release

time:
2014-06-03T14:59:56Z
class:
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalOrder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/InternalMetricsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/metrics/InternalNumericMetricsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/metrics/MetricsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/NumericMetricsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/NumericValuesSourceMetricsAggregatorParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/AvgAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/InternalAvg.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/InternalCardinality.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBounds.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/InternalGeoBounds.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/InternalMax.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/MaxAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/InternalMin.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/MinAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/InternalStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/StatsAggegator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/InternalSum.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/SumAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCount.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregator.java
src/main/java/org/elasticsearch/search/aggregations/support/OrderPath.java
src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsTests.java
comments:
Aggregations: Adds GeoBounds Aggregation

The GeoBounds Aggregation is a new single bucket aggregation which outputs the coordinates of a bounding box containing all the points from all the documents passed to the aggregation as well as the doc count. Geobound Aggregation also use a wrap_logitude parameter which specifies whether the resulting bounding box is permitted to overlap the international date line.  This option defaults to true.

This aggregation introduces the idea of MetricsAggregation which do not return double values and cannot be used for sorting.  The existing MetricsAggregation has been renamed to NumericMetricsAggregation and is a subclass of MetricsAggregation.  MetricsAggregations do not store doc counts and do not support child aggregations.

Closes #5634

time:
2014-06-03T14:54:22Z
class:
src/main/java/org/elasticsearch/index/translog/TranslogService.java
comments:
Translog: Revert unlimited flush_treshold_ops for translog

This commit reverts the commit for issue #5900 introduced
in `1.2.0`. The unlimited translog size can cause memory pressure
on ES instances with low memory and high indexing load.

Closes #6377

time:
2014-06-03T14:37:54Z
class:
src/main/java/org/elasticsearch/cluster/routing/operation/plain/PlainOperationRouting.java
src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityTests.java
comments:
Routing: Restore shard routing.

Routing has been inadvertly changed in #5562 resulting in documents going to
different shards in 1.2. This is a terrible bug because an indexing request
would not necessarily go to the same shard anymore, potentially leading to
duplicates.

Close #6391

time:
2014-06-03T14:27:10Z
class:
comments:
Revert "[BUILD] Calculate the full path ahead of time"
Revert "[BUILD] Promote artifacts from strings to their own type"

This reverts commit dcd4ba0654eb6780235718092969c2f9e6b38775.
This reverts commit 00d7eb3c0a6eefdb5947d07b18cf071ba538d696.

time:
2014-06-03T14:11:31Z
class:
comments:
[BUILD] Calculate the full path ahead of time

time:
2014-06-03T12:23:34Z
class:
comments:
[DOCS] Improved readability of multi-match query docs

time:
2014-06-03T11:57:07Z
class:
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/stats/RestNodesStatsAction.java
comments:
Remove support for field names in node_stats url

Field names ended up making the urls too long, fields are still supported as query string parameters though (same as indices stats)

time:
2014-06-03T11:48:42Z
class:
comments:
[DOCS] fixed urls in nodes-stats docs

time:
2014-06-03T11:48:42Z
class:
comments:
[DOCS] Update index docs to match changes in IndexResponse class

IndexResponse.id() ->  IndexResponse.getId()

time:
2014-06-03T11:48:41Z
class:
src/main/java/org/elasticsearch/action/index/IndexRequestBuilder.java
comments:
[DOCS] Fixed typo in IndexRequestBuilder Javadocs

time:
2014-06-03T11:43:51Z
class:
src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java
src/main/java/org/elasticsearch/common/lucene/search/XMoreLikeThis.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/main/java/org/elasticsearch/index/search/morelikethis/MoreLikeThisFetchService.java
src/test/java/org/elasticsearch/index/query/ItemSerializationTests.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
comments:
More Like This Query: values of a multi-value fields are compared at the same level.

Previously, More Like This would create a new mlt query for each value of a
multi-value field. This could result in all the values of the field to be
selected, which defeats the purpose of More Like This. Instead, the correct
behavior is to generate only one mlt query for all the values of the field.
This commit provides the correct behavior for More Like This DSL. The fix for
More Like This API will be coming in another commit.

Closes #6310

time:
2014-06-03T11:38:37Z
class:
comments:
[DOCS] Fix minor error in cluster stats example

time:
2014-06-03T11:19:36Z
class:
comments:
[DOCS] fix typo in network module docs

time:
2014-06-03T10:30:51Z
class:
comments:
[DOCS] Update elasticsearch version in repositories.asciidoc

time:
2014-06-03T10:05:59Z
class:
comments:
[DOCS] fixed typo in fucntion-score query docs

time:
2014-06-03T09:50:41Z
class:
comments:
[DOCS] Improved grammar in multi-match query docs

time:
2014-06-03T09:47:13Z
class:
comments:
[DOCS] fixed curl requests in benchmark docs

time:
2014-06-03T09:47:13Z
class:
comments:
[DOCS] removed slowest on single query benchmark requests

Relates to #5904

time:
2014-06-03T09:34:25Z
class:
src/main/java/org/elasticsearch/common/util/BigArrays.java
comments:
BigArrays: Disable breaking.

The BigArrays limit is currently shared by the translog, netty, http and some
queries/aggregations. If any of these consumers starts taking a lot of memory,
then other ones might fail to allocate memory, which could have bad
consequences, eg. if ping requests can't be sent. The plan is to come up with
a better solution in 1.3.

Close #6332

time:
2014-06-03T09:06:35Z
class:
comments:
[DOCS] reordered cat apis menu

time:
2014-06-03T09:06:28Z
class:
comments:
[DOCS] Fielddata cat API added in 1.2.0

time:
2014-06-03T08:59:57Z
class:
comments:
[DOCS] Add community supported MSI installer to docs

time:
2014-06-03T08:59:50Z
class:
comments:
[DOCS] Add imap river and security plugin to docs

time:
2014-06-03T08:48:11Z
class:
comments:
[TEST] added wait for relocationg shards to cat.shards REST test

Adding the second index might cause relocation of existing shards depending on the number of nodes available, let's wait for relocation to be finished before going ahead and checking the cat shards outpu

time:
2014-06-03T08:13:12Z
class:
comments:
Fix doc typo

(cherry picked from commit f70eb1d)

time:
2014-06-03T08:11:13Z
class:
src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java
comments:
Remove deprecated `language` forced field

With #68 we replaced `language`field with `_language`.

We can now remove the old deprecated name.

Closes #69.
(cherry picked from commit e39f144)

time:
2014-06-03T08:10:49Z
class:
src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java
src/test/java/org/elasticsearch/index/mapper/xcontent/LanguageDetectionAttachmentMapperTests.java
comments:
Use` _language` field instead of `language`

 When we want to force a language instead of using Tika language detection, we set `language` field in documents.

 To be consistent with other forced fields, `_content_type` and `_name`, we should prefix `language` field by an underscore `_`.

 So `language` become `_language`.

 We first deprecate `language` in version 2.1.0 and we remove it in 2.3.0.

 Closes #68.

(cherry picked from commit 2f46343)

time:
2014-06-03T07:49:41Z
class:
comments:
Update to elasticsearch 1.3.0

Closes #67.
(cherry picked from commit d3eaac9)

time:
2014-06-03T07:49:13Z
class:
comments:
Update to elasticsearch 1.2.0

Closes #66.
(cherry picked from commit fb3b288)

time:
2014-06-03T07:36:10Z
class:
src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/MultipleAttachmentIntegrationTests.java
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/SimpleAttachmentIntegrationTests.java
comments:
Setting "_content_type" in indexing request has no effect

Example below. I set the type as text/plain but it is identified as text/html.

```sh
#!/bin/sh

echo "\n\n Delete testidx \n"
curl -XDELETE "http://localhost:9200/testidx"

echo "\n\n Create index and mapping \n"
curl -XPUT "http://localhost:9200/testidx" -d'
{
  "mappings": {
    "session": {
      "properties": {
        "Content": {
          "properties": {
            "content": {
              "type": "attachment",
              "path": "full",
              "store": "yes",
              "fields": {
                "content": {
                  "type": "string",
                  "store": "yes"
                },
                "author": {
                  "type": "string",
                  "store": "yes"
                },
                "title": {
                  "type": "string",
                  "store": "yes"
                },
                "name": {
                  "type": "string",
                  "store": "yes"
                },
                "date": {
                  "type": "date",
                  "format": "dateOptionalTime",
                  "store": "yes"
                },
                "keywords": {
                  "type": "string",
                  "store": "yes"
                },
                "content_type": {
                  "type": "string",
                  "store": "yes"
                },
                "content_length": {
                  "type": "integer",
                  "store": "yes"
                }
              }
            }
          }
        }
      }
    }
  }
}'

echo "\n\n Index document \n"
curl -XPOST "http://localhost:9200/_bulk" -d'
  {"index":{"_index":"testidx","_type":"session"}}
  {"Content":[{"_content_type":"text/plain","content":"BASE64ENCODED_CONTENT"}]}
'

echo "\n\n Refresh \n"
curl -XPOST "http://localhost:9200/testidx/_refresh"

echo "\n\n Get doc type \n"
curl -XPOST "http://localhost:9200/testidx/_search?pretty" -d'
{
  "fields": ["Content.content.content_type","Content.content.content_length","Content.content"]
}'
```

Closes #65.
(cherry picked from commit 38075dc)

time:
2014-06-03T07:35:05Z
class:
comments:
Add highlighting documentation

Closes #54.
(cherry picked from commit efdf8ef)

time:
2014-06-03T07:34:51Z
class:
comments:
Fix typo for JSON fields

(cherry picked from commit 63c60b8)

time:
2014-06-03T07:34:31Z
class:
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/MultipleAttachmentIntegrationTests.java
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/SimpleAttachmentIntegrationTests.java
comments:
Update to elasticsearch 2.0.0 / Lucene 4.8.1

time:
2014-06-03T07:23:37Z
class:
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[TEST] make sure that the -Dtests.rest.blacklist parameter works on windows too

Some reserved characters need to be replaced in the test section names, which gets parsed as a path although it isn't a filename

time:
2014-06-02T22:49:01Z
class:
comments:
[DOCS] Clarify that only_expunge_deletes doesn't override expunge_deletes_allowed

time:
2014-06-02T18:23:08Z
class:
comments:
[BUILD] Promote artifacts from strings to their own type

time:
2014-06-02T17:29:42Z
class:
comments:
[BUILD] Check for nocommit in source files before building release

time:
2014-06-02T15:48:19Z
class:
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java
comments:
Object and Type parsing: Fix include_in_all in type

include_in_all can also be set on type level (root object).
This fixes a regression introduced  in #6093

closes #6304

time:
2014-06-02T14:03:32Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
Geo: Issue with polygons near date line

If a polygon is constructed which overlaps the date line but has a hole which lies entirely one to one side of the date line, JTS error saying that the hole is not within the bounds of the polygon because the code which splits the polygon either side of the date line does not add the hole to the correct component of the final set of polygons.  The fix ensures this selection happens correctly.

Closes #6179

time:
2014-06-02T13:51:38Z
class:
comments:
[BUILD] Java version line was missleading

calling `java -version` might not print the java version that
is actually used to run maven. This commit prints a more accurate version

time:
2014-06-02T12:16:55Z
class:
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
[TEST] Added sort duel between a single shard index and a multi shard index.

time:
2014-06-02T11:35:21Z
class:
comments:
[TOOLS] Added simple S3 Download tool based on boto

time:
2014-06-02T11:21:13Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
comments:
[TEST] size should start from 1, top_hits aggregation doesn't support size <= 0

time:
2014-06-02T09:57:32Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/tribe/TribeTests.java
comments:
[TEST] Ensure cluster size reflected in the cluster state

We perform some management operations that require the cluster to be
consistent with respect to the number of nodes in the cluster state
/ visible to the master in order to rely on the ack mechanism. This
only applies to the test infrastructure when nodes are not explicitly
started / stopped as well as while tearing down the cluster and wiping
indices after the tests.

time:
2014-05-31T21:38:48Z
class:
src/main/java/org/elasticsearch/common/lucene/uid/PerThreadIDAndVersionLookup.java
src/main/java/org/elasticsearch/common/lucene/uid/Versions.java
src/main/java/org/elasticsearch/index/codec/postingsformat/PostingFormats.java
comments:
Core: reuse Lucene's TermsEnum for faster _uid/version lookup during

Reusing Lucene's TermsEnum for _uid/version lookups gives a small
indexing (updates) speedup and brings us a closer to not having
to spend RAM on bloom filters.

Closes #6212

time:
2014-05-31T18:30:11Z
class:
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
comments:
Core: Protects against: 'from + size > scoreDocs.length' in case only single shard response

time:
2014-05-31T14:29:53Z
class:
src/test/java/org/elasticsearch/search/highlight/HighlighterSearchTests.java
comments:
[TEST] speed up HighlightSearchTests a bit

Randomize rewrite methods instead of trying them all when highlighting multi term queries with postings highlighter
Rely on search type randomization and remove all the explicit setSearchType calls as they are not needed anymore
Remove explicit `.from`, `.size` and `.explain`, not needed and might slow tests down (especially explain)

time:
2014-05-31T11:35:11Z
class:
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
comments:
Core: apply 'from' if there is one shard result.

time:
2014-05-31T11:34:49Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java
comments:
Aggregations: apply 'from' if there is one shard result.

time:
2014-05-30T17:38:39Z
class:
src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/ScoreType.java
src/test/java/org/elasticsearch/index/search/child/ChildrenQueryTests.java
src/test/java/org/elasticsearch/index/search/child/MockScorer.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Parent/Child: Added min_children/max_children to has_child query/filter

Added support for min_children and max_children parameters to
the has_child query and filter. A parent document will only
be considered if a match if the number of matching children
fall between the min/max bounds.

Closes #6019

time:
2014-05-30T17:22:48Z
class:
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
comments:
remove stale nocommit

time:
2014-05-30T14:23:28Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
comments:
Aggregations: Take the 'from' into account when getting a fetched hit (InternalSearchHit). Hits before the 'from' are included in each shard result.

time:
2014-05-30T10:42:08Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
Have a dedicated join timeout that is higher than ping.timeout for node join
Using ping.timeout, which defaults to 3s, to use as a timeout value on the join request a node makes to the master once its discovered can be too small, specifically when there is a large cluster state involved (and by definition, all the buffers and such on the nio layer will be "cold"). Introduce a dedicated join.timeout setting, that by default is 10x the ping.timeout (so 30s by default).
closes #6342

time:
2014-05-30T10:24:11Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java
comments:
[BUILD] Fix compile error

time:
2014-05-30T09:56:06Z
class:
comments:
Docs: Tidied percolate.asciidoc

time:
2014-05-30T09:45:31Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHits.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsContext.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsParser.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
comments:
Aggregations: added pagination support to `top_hits` aggregation by adding `from` option.

Closes #6299

time:
2014-05-30T09:40:45Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsBuilder.java
src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java
src/main/java/org/elasticsearch/search/internal/InternalSearchResponse.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
comments:
Aggregations: Fixed bug in top_hits aggregation to not fail with NPE when shard results are empty.

The top_hits aggregation returned an empty InternalTopHits instance with no fields set when there were no result, causing reduce and serialization errors down the road. This is fixed by setting all required fields when a there are no results.

Closes #6346

time:
2014-05-30T08:45:22Z
class:
comments:
[DOCS] Java 7 is required since 1.2.0

time:
2014-05-29T23:07:04Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotStatus.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
[TESTS] Add get snapshot status test for partial snapshots

time:
2014-05-29T22:20:37Z
class:
comments:
Upgrade to netty 3.9.1
closes #6331

time:
2014-05-29T14:57:09Z
class:
comments:
Test: Python doesn't support atomic groups in regexes. Removing from cat.recovery

time:
2014-05-28T21:04:57Z
class:
comments:
Cleaning documentation

(cherry picked from commit 67c5e39)

time:
2014-05-28T20:49:04Z
class:
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobStore.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3ImmutableBlobContainer.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/repositories/s3/S3SnapshotRestoreTest.java
comments:
Add Server Side Encryption support for S3 repository

For legal reasons, we need to store our ES backups in S3 using server side encryption.

Closes #78.

(cherry picked from commit b3f9e12)

time:
2014-05-28T20:12:23Z
class:
src/test/java/org/elasticsearch/indexing/IndexActionTests.java
comments:
[Test] added search trace logging to IndexActionTests.testAutoGenerateIdNoDuplicates

time:
2014-05-28T20:06:38Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[Tests] assert indexRandom's deletion of injection dummy docs find them

time:
2014-05-28T19:42:57Z
class:
src/test/java/org/elasticsearch/cloud/aws/AbstractAwsTest.java
comments:
Update to elasticsearch 1.3.0

Closes #89.
(cherry picked from commit d65a970)

time:
2014-05-28T19:30:54Z
class:
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobStore.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/repositories/s3/S3SnapshotRestoreTest.java
comments:
Switch to shared thread pool for snapshot operations

Closes #87

(cherry picked from commit 36d4da6)

time:
2014-05-28T15:57:43Z
class:
comments:
[DOCS] Document filtered query strategies.

time:
2014-05-28T14:55:26Z
class:
src/test/java/org/elasticsearch/test/cache/recycler/MockBigArrays.java
comments:
[TESTS] There might be several live `BigArrays` instances at the same time.

time:
2014-05-28T14:54:10Z
class:
src/test/java/org/elasticsearch/index/analysis/ICUIntegrationTests.java
comments:
Update to elasticsearch 1.3.0

Closes #32.

(cherry picked from commit 4d17e47)

time:
2014-05-28T14:53:03Z
class:
src/test/java/org/elasticsearch/index/analysis/ICUIntegrationTests.java
comments:
Add integration tests

Closes #31.

(cherry picked from commit 39b83f0)

time:
2014-05-28T14:52:50Z
class:
src/main/java/org/elasticsearch/index/analysis/IcuAnalysisBinderProcessor.java
src/main/java/org/elasticsearch/index/analysis/IcuNormalizerCharFilterFactory.java
src/test/java/org/elasticsearch/index/analysis/SimpleIcuAnalysisTests.java
src/test/java/org/elasticsearch/index/analysis/SimpleIcuNormalizerCharFilterTests.java
comments:
add ICUNormalizer2CharFilter

Included ICUNormalizer2Charfilter in Lucene 4.8.0.
Add CharFilterFactory.

Now, char_filter name is "icu_normalizer", however token_filter name is same name.

Closes #27.

(cherry picked from commit 0cbf1b3)

time:
2014-05-28T14:52:36Z
class:
comments:
Use JS markdown formatter

(cherry picked from commit 3941016)

time:
2014-05-28T13:23:18Z
class:
src/main/java/org/elasticsearch/cache/recycler/PageCacheRecycler.java
comments:
Recycling: change the default type of the page recycler to CONCURRENT instead of SOFT_CONCURRENT.

This default type has been inherited from its ancestor, the (non-paged) recycler whose memory
usage was unbounded and required soft references to make sure it could release memory eventually.
On the contrary, the page cache recycler memory usage is bounded so we could remove soft
references in order to remove load on the garbage collector.

Note: the cache type is already randomized in integration tests.

Close #6320

time:
2014-05-28T13:09:27Z
class:
src/test/java/org/elasticsearch/index/analysis/KuromojiIntegrationTests.java
comments:
Add integration tests

Closes #36.

(cherry picked from commit f2c83df)

time:
2014-05-28T11:29:21Z
class:
src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngineService.java
src/test/java/org/elasticsearch/index/query/TemplateQueryTest.java
comments:
Mustache: Ensure internal scope extrators are always operating on a Map

Mustache extracts the key/value pairs for parameter substitution from
objects and maps but it's decided on the first execution. We need to
make sure if the params are null we pass an empty map to ensure we
bind the map based extractor

Closes #6318

time:
2014-05-28T11:11:37Z
class:
src/test/java/org/elasticsearch/index/analysis/SimplePhoneticIntegrationTests.java
comments:
Update to elasticsearch 1.3.0

Closes #26.

(cherry picked from commit 60b7c55)

time:
2014-05-28T11:10:39Z
class:
comments:
Beidermorse encoder does not support "replace" option

Beidermorse encoder does not support "replace" option: only new tokens will be returned.
One of the backfires is that highlighting will not work.
This is actually because Lucene's beidermorse filter does not support this option.
Please consider to update documentation by specifying which encore support `"replace : false"` option.

Closes #22.

(cherry picked from commit c307877)

time:
2014-05-28T11:10:24Z
class:
comments:
Update to Lucene 4.8.1 / Elasticsearch 1.2.0

Related to #24.

(cherry picked from commit ee289c9)

time:
2014-05-28T11:09:30Z
class:
src/test/java/org/elasticsearch/index/analysis/SimplePhoneticIntegrationTests.java
comments:
Add integration tests

Closes #27.
(cherry picked from commit d43d4df)

time:
2014-05-28T10:19:44Z
class:
src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/test/java/org/elasticsearch/common/xcontent/builder/XContentBuilderTests.java
comments:
Serialization: Add support for Byte to the XContentBuilder.

Close #6127

time:
2014-05-28T08:38:58Z
class:
comments:
Added plugins to .gitignore

Since plugins should never be committed to the core codebase and it is useful to be able to add plugins to the development environment adding plugins folder to the .gitignore file will stop it from appearing in the unstaged changes

time:
2014-05-28T08:18:22Z
class:
src/test/java/org/elasticsearch/index/analysis/SimpleSmartChineseIntegrationTests.java
comments:
Update to elasticsearch 1.3.0

Closes #21.
(cherry picked from commit a1b37f6)

time:
2014-05-28T08:15:17Z
class:
comments:
[DOCS] Fix analyzer name

Closes #20.

Thanks to @goncha!
(cherry picked from commit 333f850)

time:
2014-05-28T07:51:40Z
class:
src/test/java/org/elasticsearch/index/analysis/SimpleSmartChineseIntegrationTests.java
comments:
Update to Lucene 4.8 / Elasticsearch 1.2.0

Related to #18.

time:
2014-05-28T07:35:00Z
class:
src/main/java/org/elasticsearch/common/lucene/SegmentReaderUtils.java
comments:
[BUILD] Remember to use AtomicReader.addCoreClosedListener when upgrading to Lucene 4.9.

time:
2014-05-28T06:27:14Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/AnalyzerMapper.java
src/main/java/org/elasticsearch/search/highlight/HighlighterContext.java
src/main/java/org/elasticsearch/search/highlight/PlainHighlighter.java
src/test/java/org/elasticsearch/search/highlight/HighlighterSearchTests.java
comments:
Highlighting: Plain highlighter to use analyzer defined on a document level when available.

At the moment plain highligher only uses an analyzer defined for on the type
level. However, during the indexing stage it is possible to define analyzer on
per document level, for example mapping '_analyzer' to another field, containing
required name. This commit attempts to make sure that highlighting works
correctly in this scenario.

Closes #5497

time:
2014-05-27T15:31:09Z
class:
comments:
Startup: Reset locale to en_US.UTF-8 in bin/elasticsearch

Because the NetworkExceptionHelper class relies on the english language in
order to extract information and decide whether a certain exception is a
network problem, we need to set the english locale on startup in order
to prevent other locales to circumvent this check.

time:
2014-05-27T14:44:14Z
class:
comments:
S3 Repo documentation

Closes #83.

(cherry picked from commit 67ac149)

time:
2014-05-27T13:57:39Z
class:
comments:
[DOCS] fix typo

time:
2014-05-27T11:40:53Z
class:
comments:
Docs: Adding Hebrew analyzer

Closes #6306

time:
2014-05-27T09:08:29Z
class:
src/test/java/org/elasticsearch/common/bytes/PagedBytesReferenceTest.java
comments:
[Test] make sure to close the file at the end of the test

time:
2014-05-26T11:32:52Z
class:
src/test/java/org/elasticsearch/common/bytes/PagedBytesReferenceTest.java
comments:
[Test] make sure we test writeTo(Channel) in BytesReference
also introduce proper randomization of content in the bytes

time:
2014-05-24T07:48:51Z
class:
src/test/java/org/elasticsearch/index/analysis/SimplePolishIntegrationTests.java
comments:
Update to elasticsearch 1.3.0

Closes #27.
(cherry picked from commit 5effcce)

time:
2014-05-24T07:40:48Z
class:
src/test/java/org/elasticsearch/index/analysis/SimplePolishIntegrationTests.java
comments:
Update to elasticsearch 1.2.0

elasticsearch 1.2.0 has been released. We need to update from SNAPSHOT to released version.

Closes #26.

(cherry picked from commit ae3f3c23e3fde3b2327c1b5d759ff27675ecb40c)

time:
2014-05-23T20:02:21Z
class:
src/main/java/org/elasticsearch/index/query/MatchQueryParser.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
comments:
Fix MatchQueryParser not parsing fuzzy_transpositions

time:
2014-05-23T18:35:33Z
class:
src/test/java/org/elasticsearch/script/python/PythonScriptSearchTests.java
comments:
[TEST] fix tests

Tests fail because we now disable automatic plugin loading from the classpat when running tests

(cherry picked from commit c5554ad)

time:
2014-05-23T17:57:16Z
class:
src/test/java/org/elasticsearch/script/javascript/JavaScriptScriptSearchTests.java
comments:
Update to elasticsearch 1.3.0

Closes #21

time:
2014-05-23T17:55:15Z
class:
src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java
src/test/java/org/elasticsearch/script/javascript/JavaScriptScriptMultiThreadedTest.java
comments:
Update to elasticsearch 1.2.0

Closes #20
Fix #19

time:
2014-05-23T17:05:30Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java
comments:
Set the sortValues on SearchHit post aggregation instead of during the reduce.

time:
2014-05-23T16:26:17Z
class:
comments:
[SPEC] Added the `percolator_format` URL parameter to the "Percolate" API spec

time:
2014-05-23T15:48:12Z
class:
comments:
Update to elasticsearch 1.3.0

Closes #13.
(cherry picked from commit b9cff46)

time:
2014-05-23T15:33:09Z
class:
src/main/java/org/elasticsearch/script/python/PythonScriptEngineService.java
src/test/java/org/elasticsearch/script/python/PythonScriptMultiThreadedTest.java
comments:
Update to elasticsearch 1.2.0

Closes #11.
(cherry picked from commit 8a87054)

time:
2014-05-23T15:03:58Z
class:
src/test/java/org/elasticsearch/index/analysis/KuromojiIntegrationTests.java
comments:
Fix integration tests

Due to change in test infra, we disable by default automatic loading for classpath plugins (see https://github.com/elasticsearch/elasticsearch/commit/75efa47d5ad89da8d51bbdf82e0e4c3c67108139), we need to explicitly enable it again.

time:
2014-05-23T15:03:43Z
class:
comments:
Update to elasticsearch 1.3

Closes #35.

time:
2014-05-23T14:29:26Z
class:
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
comments:
Explicitly clean up fielddata cache when clearing entire cache

time:
2014-05-23T14:16:26Z
class:
src/main/java/org/elasticsearch/common/jna/Natives.java
comments:
Improve error when mlockall fails (closes #6288)

time:
2014-05-23T14:01:18Z
class:
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/InternalTopHits.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHits.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsContext.java
src/main/java/org/elasticsearch/search/aggregations/bucket/tophits/TopHitsParser.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
comments:
Added `top_hits` aggregation that keeps track of the most relevant document being aggregated per bucket.

Closes #6124

time:
2014-05-23T08:10:00Z
class:
src/test/java/org/elasticsearch/search/highlight/CustomHighlighter.java
comments:
[TESTS] Left-over from 14420d7c4e15df9b565b50ef5beab797f756c3ac.

time:
2014-05-22T23:20:41Z
class:
src/test/java/org/elasticsearch/search/highlight/CustomHighlighter.java
comments:
[TESTS] Fix test to use index-level doc IDs instead of segment-level doc IDs.

time:
2014-05-22T22:52:56Z
class:
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
comments:
[TESTS] Fix test bug in SimpleValidateQueryTests.

time:
2014-05-22T22:20:12Z
class:
src/main/java/org/elasticsearch/common/unit/ByteSizeValue.java
src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/test/java/org/elasticsearch/common/util/GuavaCacheOverflowTest.java
comments:
Limit guava caches to 31.9GB

Guava's caches have overflow issues around 32GB with our default segment
count of 16 and weight of 1 unit per byte.  We give them 100MB of headroom
so 31.9GB.

This limits the sizes of both the field data and filter caches, the two
large guava caches.

Closes #6268

time:
2014-05-22T21:13:29Z
class:
src/test/java/org/elasticsearch/indices/cache/CacheTests.java
src/test/java/org/elasticsearch/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/search/scriptfilter/ScriptFilterSearchTests.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/ImmutableTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
comments:
[TESTS] Randomly disable the filter cache.

Close #6280

time:
2014-05-22T21:13:13Z
class:
src/main/java/org/elasticsearch/index/query/NestedFilterParser.java
src/main/java/org/elasticsearch/index/query/NestedQueryParser.java
src/main/java/org/elasticsearch/index/search/nested/IncludeNestedDocsQuery.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
comments:
Nested: Make sure queries/filters/aggs get a FixedBitSet when they expect one.

Close #6279

time:
2014-05-22T21:13:13Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
comments:
Aggregations: Fix ReverseNestedAggregator to compute the parent document correctly.

Close #6278

time:
2014-05-22T19:13:52Z
class:
src/test/java/org/elasticsearch/search/scroll/SearchScrollWithFailingNodesTests.java
comments:
[TEST] Just start two nodes

time:
2014-05-22T17:17:54Z
class:
src/test/java/org/elasticsearch/search/scroll/SearchScrollWithFailingNodesTests.java
comments:
[TEST] Don't stop master node.

time:
2014-05-22T14:44:14Z
class:
src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java
src/main/java/org/elasticsearch/search/highlight/HighlighterParseElement.java
src/main/java/org/elasticsearch/search/highlight/SearchContextHighlight.java
src/test/java/org/elasticsearch/search/highlight/CustomHighlighter.java
src/test/java/org/elasticsearch/search/highlight/CustomHighlighterSearchTests.java
comments:
Highlight fields in request order

Because json objects are unordered this also adds an explicit order syntax
that looks like
    "highlight": {
        "fields": [
            {"title":{ /*params*/ }},
            {"text":{ /*params*/ }}
        ]
    }

This is not useful for any of the builtin highlighters but will be useful
in plugins.

Closes #4649

time:
2014-05-22T13:29:46Z
class:
comments:
[SPEC] Removed the URL parameter `indices_boost` from the "Search" API

Related: elasticsearch/elasticsearch-ruby#29
@HonzaKral @clintongormley @polyfractal @spenceralger @Mpdreamz You might want to remove this from your parameter list, if you generate it from the JSON specs.

heya @karmi I had a look at this, I cherry picked your commit to 1.x too. Going to merge #9244 now.


time:
2014-05-22T13:06:42Z
class:
comments:
Update Documentation Feature Flags [1.2.0]

time:
2014-05-22T11:50:17Z
class:
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
comments:
More Like This Query: allow for both 'like_text' and 'docs/ids' to be specified.

Closes #6246

time:
2014-05-22T10:10:03Z
class:
src/test/java/org/elasticsearch/search/query/MultiMatchQueryTests.java
comments:
[TEST] Use _uid sort field as tie, so that hits with the same score are sorted in the same way in both search responses.

time:
2014-05-22T09:44:27Z
class:
comments:
[BUILD] pass java exe to plugin install command

time:
2014-05-22T09:21:50Z
class:
src/main/java/org/elasticsearch/common/joda/Joda.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramTests.java
comments:
Aggregations: Fixed conversion of date field values when using multiple date formats

When multiple date formats are specified using the || syntax in the field mappings the date_histogram aggregation breaks.  This is because we are getting a parser rather than a printer from the date formatter for the object we use to convert the DateTime values back into Strings.  Simple fix to get the printer from the date format and test to back it up

Closes #6239

time:
2014-05-22T09:04:28Z
class:
comments:
[TEST] indices.open REST tests need 0 replicas

With replicas the search requests might go to shards that are not ready, since we have a wait for yellow. We can now switch to wait for green as well.

time:
2014-05-22T08:44:50Z
class:
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java
src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java
src/main/java/org/elasticsearch/action/admin/indices/recovery/TransportRecoveryAction.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java
src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java
src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java
src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java
src/main/java/org/elasticsearch/action/count/TransportCountAction.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/test/java/org/elasticsearch/percolator/PercolatorFacetsAndAggregationsTests.java
comments:
Add number of shards statistic to PercolateContext instead of throwing exception.
Certain features like significant_terms aggregation rely on this statistic for sizing heuristics.

Closes #6037
Closes #6123

time:
2014-05-22T08:40:56Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/search/controller/ScoreDocQueue.java
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/main/java/org/elasticsearch/search/controller/ShardFieldDocSortedHitQueue.java
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
comments:
Cut over to Lucene's TopDocs#merge for shard topdocs sorting.

Closes #6197

time:
2014-05-22T08:10:50Z
class:
comments:
[TEST] cat.allocation/One index: allow leading spaces in unassigned shards lines

time:
2014-05-21T20:08:59Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
comments:
[TEST] Use SuiteScopeTest annotation instead of ClusterScope(scope = ElasticsearchIntegrationTest.Scope.SUITE, numDataNodes = 1)

time:
2014-05-21T18:47:25Z
class:
comments:
[DOCS] Fixed title levels in context suggester

time:
2014-05-21T16:45:03Z
class:
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
More Like This Query: replaced 'exclude' with 'include' to avoid double negation when set.

Closes #6248

time:
2014-05-21T16:17:36Z
class:
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
Percolator: Fix assertion in percolation with nested docs

Assertion was triggered for percolating documents with nested object
in mapping if the document did not actually contain a nested object.
Reason:
MultiDocumentPercolatorIndex checks if the number of documents is
actualu >1. Instead we can just use the SingleDocumentPercolatorIndex
in this case.

closes #6263

time:
2014-05-21T15:50:45Z
class:
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataCache.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/test/java/org/elasticsearch/search/scroll/SlowSearchScrollTests.java
src/test/java/org/elasticsearch/test/TestCluster.java
comments:
Fix FieldDataWeighter generics to accept RamUsage instead of AtomicFieldData

The `FieldDataWeighter` allowed to use a concrete subclass of the caches
generic type to be used that causes ClassCastException and also trips the
CirciutBreaker to not be decremented appropriately.

This was tripped by settings randomization also part of this commit.

Closes #6260

time:
2014-05-21T15:37:54Z
class:
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
[TEST] prevent dummy documents from being indexed in testSimpleQueryString() since scores are compared

time:
2014-05-21T14:17:03Z
class:
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
[TEST] Added test for #6256

time:
2014-05-21T13:11:23Z
class:
src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
src/test/java/org/elasticsearch/search/aggregations/ParsingTests.java
comments:
Fail queries that have two aggregations with the same name.

Close #6255

time:
2014-05-21T11:04:41Z
class:
src/main/java/org/elasticsearch/common/lucene/search/ApplyAcceptedDocsFilter.java
src/main/java/org/elasticsearch/common/lucene/search/XFilteredQuery.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
XFilteredQuery default strategy prefers query first in the deleted docs case

Today we check if the DocIdSet we filter by is `fast` but the check fails
if the DocIdSet if wrapped in an `ApplyAcceptedDocsFilter` which is always
the case if the index has deleted documents. This commit unwraps
the original DocIdSet in the case of deleted documents.

Closes #6247

time:
2014-05-21T09:25:35Z
class:
src/main/java/org/elasticsearch/common/lucene/docset/DocIdSets.java
comments:
Remove `DocIdSets.isFastIterator(DocIdSetIterator iterator)`.

This method was unused and its implementation wasn't correct since FixedBitSet
has its own iterator since Lucene 4.7.

time:
2014-05-21T09:14:28Z
class:
comments:
[BUILD] Fixed release notes script to work with github API again

time:
2014-05-21T08:17:59Z
class:
comments:
Move Benchmark release to 1.3

time:
2014-05-20T20:21:37Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
comments:
[TEST] skip benchmark tests for now

time:
2014-05-20T16:29:06Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
comments:
Verify that the current node is still master before the reroute is executed and if that isn't the case skip reroute
Invoke listener when reroute fails.

Closes #6244

time:
2014-05-20T15:17:25Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
comments:
[TEST] Wait for all benchmarks to be started if more than one is used

time:
2014-05-20T14:31:32Z
class:
src/main/java/org/elasticsearch/plugins/PluginsService.java
src/test/java/org/elasticsearch/plugin/PluginLuceneCheckerTests.java
src/test/java/org/elasticsearch/test/TestCluster.java
comments:
[TEST] Allow to disable plugin loading from classpath

time:
2014-05-20T14:28:31Z
class:
src/main/java/org/elasticsearch/common/lucene/all/AllField.java
src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java
comments:
Don't use AllTokenStream when no fields were boosted

AllTokenStream, used to index the _all field, adds some overhead, but
it's not necessary when no fields were boosted or when positions are
not indexed the _all field.

Closes #6187 Closes #6219

time:
2014-05-20T14:00:11Z
class:
src/main/java/org/elasticsearch/action/bench/AbortBenchmarkNodeResponse.java
src/main/java/org/elasticsearch/action/bench/AbortBenchmarkRequest.java
src/main/java/org/elasticsearch/action/bench/AbortBenchmarkRequestBuilder.java
src/main/java/org/elasticsearch/action/bench/AbortBenchmarkResponse.java
src/main/java/org/elasticsearch/action/bench/BenchmarkExecutor.java
src/main/java/org/elasticsearch/action/bench/BenchmarkService.java
src/main/java/org/elasticsearch/action/bench/TransportAbortBenchmarkAction.java
src/main/java/org/elasticsearch/client/Client.java
src/main/java/org/elasticsearch/client/support/AbstractClient.java
src/main/java/org/elasticsearch/rest/action/bench/RestBenchAction.java
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/test/client/RandomizingClient.java
comments:
Benchmark abort accepts wildcard patterns

This adds support for sending a list of benchmark names and/or wildcard
patterns when submitting an abort request. Standard wildcards such as:
"*", "*xxx", and "xxx*" are supported. Multiple benchmark names and
wildcard patterns can be submitted together as a comma-separated list
from the REST API or as a string array from the Java API.

Closes #6185

time:
2014-05-20T13:52:00Z
class:
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Disable dummy documents for QueryRescorerTests#testEquivalence

time:
2014-05-20T12:57:21Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/SnapshotIndexShardStatus.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java
src/main/java/org/elasticsearch/cluster/metadata/SnapshotMetaData.java
src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java
src/main/java/org/elasticsearch/repositories/RepositoriesService.java
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/test/java/org/elasticsearch/indices/IndicesOptionsIntegrationTests.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Add ability to snapshot replicating primary shards

This change adds a new cluster state that waits for the replication of a shard to finish before starting snapshotting process. Because this change adds a new snapshot state, an pre-1.2.0 nodes will not be able to join the 1.2.0 cluster that is currently running snapshot/restore operation.

Closes #5531

time:
2014-05-20T09:16:13Z
class:
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
comments:
Before deleting a local unused shard copy, verify we're connected to the node it's supposed to be on

This is yet another safety guard to make sure we don't delete data if the local copy is the only one (even if it's not part of the cluster state any more)

Closes #6191

time:
2014-05-20T09:03:14Z
class:
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
comments:
Honor time delay when retrying recoveries

In some places we want to delay the start of a shard recovery because the source node is not ready to receive. At the moment the retry logic ignores the time delay parameter (`retryAfter`) causing a busy waiting like scenario. This is fixed in this commit.

Closes #6226

time:
2014-05-20T08:26:50Z
class:
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
src/test/java/org/elasticsearch/search/functionscore/DecayFunctionScoreTests.java
src/test/java/org/elasticsearch/search/query/MultiMatchQueryTests.java
comments:
[TEST] Opt out of dummy documents where scores are relevant.

time:
2014-05-20T08:20:31Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Provide overloaded indexRandom to opt out of dummy documents

time:
2014-05-19T19:27:04Z
class:
src/main/java/org/elasticsearch/index/analysis/Analysis.java
src/test/java/org/elasticsearch/index/analysis/AnalysisTests.java
comments:
CharArraySet doesn't know how to lookup the original string
in an ImmutableList.

Closes #6237

time:
2014-05-19T19:17:33Z
class:
comments:
Remove obsolet ASF repository Lucene 4.8.1 is on maven central

time:
2014-05-19T18:55:23Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Added Version [1.3.0]

time:
2014-05-19T18:47:55Z
class:
src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/merge/scheduler/MergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/RateLimitingInputStream.java
comments:
Upgrade to Lucene 4.8.1

This commit upgrades to the latest Lucene 4.8.1 release including the
following bugfixes:

 * An IndexThrottle now kicks in when merges start falling behind
   limiting index threads to 1 until merges caught up. Closes #6066
 * RateLimiter now kicks in at the configured rate where previously
   the limiter was limiting at ~8MB/sec almost all the time. Closes #6018

time:
2014-05-19T18:42:15Z
class:
src/main/java/org/elasticsearch/action/bench/BenchmarkService.java
src/test/java/org/elasticsearch/action/bench/BenchmarkNegativeTest.java
comments:
Do not throw execption on no available nodes when listing benchmarks.

Changed behavior to not throw an exception on a status request
when there are no available benchmark nodes.

Closes #6146

time:
2014-05-19T16:49:33Z
class:
src/test/java/org/elasticsearch/index/analysis/AnalysisFactoryTests.java
comments:
Register uppercase as an exposed ES token filter.

Just follow "lowercase" token filter example and register "uppercase" token filter as an exposed token filter. This will not, by itself, test whether ES is correctly handling "uppercase" TF; this is more of a "code as documentation" fix.

time:
2014-05-19T15:23:14Z
class:
src/test/java/org/elasticsearch/search/functionscore/DecayFunctionScoreTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Add dummy docs injection to indexRandom

This commit add `dummy docs` to `ElasticsearchIntegrationTest#indexRandom`.
It indexes document with an empty body into the indices specified by the docs
and deletes them after all docs have been indexed. This produces gaps in
the segments and enforces usage of accept docs on lower levels to ensure
the features work with delete documents as well.

time:
2014-05-19T15:17:55Z
class:
src/main/java/org/elasticsearch/common/lucene/docset/MatchDocIdSet.java
comments:
Check accepts docs before MatchDocIdSet#matchDoc(int)

We currently ask `MatchDocIdSet#matchDoc(int)` before consulting
the accept docs. This can also have a negative performance impact
since `matchDoc(int)` calls might be way more expensive than
acceptDocs calls.

Closes #6234

time:
2014-05-19T13:07:56Z
class:
comments:
Fixing invalid jsons

time:
2014-05-19T13:06:04Z
class:
src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java
comments:
[TEST] Drop obsolet test - the option is obsolet and won't be fixed

time:
2014-05-19T11:48:56Z
class:
src/main/java/org/elasticsearch/common/lucene/index/FilterableTermsEnum.java
src/main/java/org/elasticsearch/common/lucene/index/FreqTermsEnum.java
comments:
Don't report terms as live if all it's docs are filtered out

FilterableTermsEnum allows to filter stats by supplying per segment
bits. Today if all docs are filtered out the term is still reported as
live but shouldn't.

Relates to #6211

time:
2014-05-19T11:32:24Z
class:
src/test/java/org/elasticsearch/search/query/MultiMatchQueryTests.java
comments:
[TEST] Ensure multi_match & match query equivalence in the single field case

time:
2014-05-19T09:56:26Z
class:
src/test/java/org/elasticsearch/gateway/local/LocalGatewayIndexStateTests.java
comments:
[TEST] Added await for yellow status,
because the shard the get request for 'test' index, 'type1' type and id 1 is getting executed on may not be in a started state
and also added more logging.

time:
2014-05-19T00:43:13Z
class:
comments:
[DOCS] Cat recovery API update

This is an update for the _cat/recovery API documentation. The examples
have been updated. Removed the bottom paragraph explaining why there
could be values > 100%. This can no longer happen so that had to be
removed.

Closes #6159

time:
2014-05-18T21:02:08Z
class:
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
[TEST] Beef up MoreLikeThisActionTests#testCompareMoreLikeThisDSLWithAPI

time:
2014-05-18T20:57:46Z
class:
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
[TEST] Stabelize MoreLikeThisActionTests

The `testCompareMoreLikeThisDSLWithAPI` test compares results from query
and API which might query different shards. Those shares might use
different doc IDs internally to disambiguate. This commit resorts the
results and compares them after stable disambiguation.

time:
2014-05-18T20:45:37Z
class:
src/main/java/org/elasticsearch/search/suggest/phrase/CandidateScorer.java
src/main/java/org/elasticsearch/search/suggest/phrase/Correction.java
src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGenerator.java
src/main/java/org/elasticsearch/search/suggest/phrase/NoisyChannelSpellChecker.java
src/test/java/org/elasticsearch/search/suggest/SuggestSearchTests.java
src/test/java/org/elasticsearch/search/suggest/phrase/NoisyChannelSpellCheckerTests.java
comments:
Tie-break suggestions from phrase suggester by term

If the score for two suggestions is the same, we now tie break by term; earlier terms (aaa) sort before later terms (zzz).

Closes #5978

time:
2014-05-18T08:54:17Z
class:
comments:
Add missing coming tag

Relates to #6188
Relates to #5539

time:
2014-05-18T08:20:31Z
class:
src/main/java/org/elasticsearch/index/search/MultiMatchQuery.java
src/test/java/org/elasticsearch/search/query/MultiMatchQueryTests.java
comments:
Use default forceAnalyzeQueryString if no query builder is present

In the single field case no query builder is selected which causes NPE
when the query has only a numeric field.

Closes #6215

time:
2014-05-18T07:45:00Z
class:
src/main/java/org/elasticsearch/index/translog/Translog.java
comments:
Translog: remove unneeded Versions.readVersion & Versions.writeVersion

These calls were introduced in pr #6149 as a backward compatibility layer for the previous value of `Versions.MATCH_ANY`. This is not needed as the translog never contains these values. On top of that, the calls are not effective as the stream the translog used is effectively not versioned (versioining is done on an item by item basis)

time:
2014-05-18T07:45:00Z
class:
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
comments:
DeleteRequest.version was not initialized to `Versions.MATCH_ANY`

time:
2014-05-17T21:33:49Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
comments:
[TEST] Stabelize BenchmarkIntegrationTest#testAbortBenchmark

time:
2014-05-17T17:14:56Z
class:
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/index/mapper/Uid.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/main/java/org/elasticsearch/index/search/morelikethis/MoreLikeThisFetchService.java
src/main/java/org/elasticsearch/search/SearchModule.java
src/main/java/org/elasticsearch/search/fetch/source/FetchSourceContext.java
src/test/java/org/elasticsearch/index/query/ItemSerializationTests.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
More Like This Query: Added searching for multiple items.

The syntax to specify one or more items is the same as for the Multi GET API.
If only one document is specified, the results returned are the same as when
using the More Like This API.

Relates #4075 Closes #5857

time:
2014-05-17T15:18:11Z
class:
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
[TESTS] Ignore SnapshotMissingException in snapshotWithStuckNodeTest

The retry mechanism in the transport layer might cause the delete snapshot request to be executed twice if the cluster master is closed while the request is executed. First time delete snapshot request is getting successfully executed on the old master and then it is retried on the newly elected master. When the new master tries to delete the snapshot - the snapshot no longer exists (since it was successfully deleted by the old master) and SnapshotMissingException is returned.

time:
2014-05-16T23:03:15Z
class:
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java
src/main/java/org/elasticsearch/common/blobstore/url/URLBlobStore.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/repositories/fs/FsRepository.java
src/main/java/org/elasticsearch/repositories/uri/URLRepository.java
src/main/java/org/elasticsearch/rest/action/cat/RestThreadPoolAction.java
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java
src/test/java/org/elasticsearch/test/TestCluster.java
comments:
Switch to shared thread pool for all snapshot repositories

 Closes #6181

time:
2014-05-16T22:26:56Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreSnapshot.java
src/main/java/org/elasticsearch/snapshots/RestoreService.java
src/main/java/org/elasticsearch/snapshots/SnapshotState.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Add Partial snapshot state

Currently even if some shards of the snapshot are not snapshotted successfully, the snapshot is still marked as "SUCCESS". Users may miss the fact the there are shard failures present in the snapshot and think that snapshot was completed. This change adds a new snapshot state "PARTIAL" that provides a quick indication that the snapshot was only partially successful.

Closes #5792

time:
2014-05-16T20:10:16Z
class:
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java
src/main/java/org/elasticsearch/action/delete/index/IndexDeleteRequest.java
src/main/java/org/elasticsearch/action/delete/index/ShardDeleteRequest.java
src/main/java/org/elasticsearch/action/get/GetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/common/lucene/uid/Versions.java
src/main/java/org/elasticsearch/index/VersionType.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/rest/action/support/RestActions.java
src/test/java/org/elasticsearch/index/VersionTypeTests.java
comments:
Allow 0 as a valid external version

Until now all version types have officially required the version to be a positive long number. Despite of this has being documented, ES versions <=1.0 did not enforce it when using the `external` version type. As a result people have succesfully indexed documents with 0 as a version. In 1.1. we introduced validation checks on incoming version values and causing indexing request to fail if the version was set to 0. While this is strictly speaking OK, we effectively have a situation where data already indexed does not match the version invariant.

To be lenient and adhere to spirit of our data backward compatibility policy, we have decided to allow 0 as a valid external version type. This is somewhat complicated as 0 is also the internal value of `MATCH_ANY`, which indicates requests should succeed regardles off the current doc version. To keep things simple, this commit changes the internal value of `MATCH_ANY` to `-3` for all version types.

Since we're doing this in a minor release (and because versions are stored in the transaction log), the default `internal` version type still accepts 0 as a `MATCH_ANY` value. This is not a problem for other version types as `MATCH_ANY` doesn't make sense in that context.

Closes #5662

time:
2014-05-16T19:43:35Z
class:
comments:
[DOCS] Renamed the "cat" chapters to be more searchable

time:
2014-05-16T18:58:42Z
class:
src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
comments:
Remove SoftReferences from StreamInput/StreamOutput

We try to reuse character arrays and UTF8 writers with softreferences.
SoftReferences have negative impact on GC and should be avoided in
general. Yet in this case it can simply replaced with a per-stream
Bytes/CharsRef that is thread local and has the same lifetime as the
stream.

time:
2014-05-16T18:54:01Z
class:
src/main/java/org/elasticsearch/cluster/block/ClusterBlock.java
src/main/java/org/elasticsearch/cluster/block/ClusterBlockLevel.java
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/tribe/TribeService.java
comments:
Use EnumSet rather than static mutable arrays

ClusterBlockLevel uses arrays but should use EnumSets instead

time:
2014-05-16T18:54:01Z
class:
src/main/java/org/elasticsearch/cluster/ClusterState.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldData.java
src/main/java/org/elasticsearch/search/aggregations/BucketCollector.java
comments:
Add some finals where appropriate

time:
2014-05-16T18:54:01Z
class:
src/main/java/org/elasticsearch/bootstrap/Bootstrap.java
comments:
Use UTF-8 as string encoding

time:
2014-05-16T17:07:05Z
class:
comments:
added install instruction with apt

Closes #6206

time:
2014-05-16T13:23:09Z
class:
src/test/java/org/elasticsearch/search/geo/GeoFilterTests.java
comments:
[TEST] Do not filter gz files

time:
2014-05-16T13:08:56Z
class:
src/main/java/org/elasticsearch/cluster/metadata/BenchmarkMetaData.java
comments:
Remove dead code

time:
2014-05-16T12:59:32Z
class:
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/main/java/org/elasticsearch/indices/recovery/StartRecoveryRequest.java
comments:
RecoveryID should not be a per JVM but per Node

Today the RecovyerID is taken from a static atomic long which
is essentially a per JVM ID. We run the tests within the same
JVM and that means we don't really simulate what happens in
production environments. Instead we should use a per node generated
ID.

time:
2014-05-16T12:55:22Z
class:
src/main/java/org/elasticsearch/common/xcontent/XContentParser.java
comments:
Add simple example to XContentParser how to obtain an instance of it

time:
2014-05-16T11:41:20Z
class:
src/main/java/org/elasticsearch/plugins/PluginsService.java
src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoTests.java
src/test/java/org/elasticsearch/plugin/PluginLuceneCheckerTests.java
src/test/java/org/elasticsearch/plugin/PluginManagerTests.java
src/test/java/org/elasticsearch/plugin/lucene/current/CurrentLucenePlugin.java
src/test/java/org/elasticsearch/plugin/lucene/newer/NewerLucenePlugin.java
src/test/java/org/elasticsearch/plugin/lucene/old/OldLucenePlugin.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Check that a plugin is Lucene compatible with the current running node using `lucene` property in `es-plugin.properties` file.

* If plugin does not provide `lucene` property, we consider that the plugin is compatible.
* If plugin provides `lucene` property, we try to load related Enum org.apache.lucene.util.Version. If this fails, it means that the node is too "old" comparing to the Lucene version the plugin was built for.
* We compare then two first digits of current node lucene version against two first digits of plugin Lucene version. If not equal, it means that the plugin is too "old" for the current node.

Plugin developers who wants to launch plugin check only have to add a `lucene` property in `es-plugin.properties` file. If you are using maven to build your plugin, you can do it like this:

In `pom.xml`:

```xml
    <properties>
        <lucene.version>4.6.0</lucene.version>
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
```

In `es-plugin.properties`, add:

```properties
lucene=${lucene.version}
```

BTW, if you don't already have it, you can add the plugin version as well:

```properties
version=${project.version}
```

You can disable that check using `plugins.check_lucene: false`.

time:
2014-05-15T21:16:45Z
class:
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Randomize CMS settings in index template

This commit adds randomization for:
 * `index.merge.scheduler.max_thread_count`
 * `index.merge.scheduler.max_merge_count`

This commit also moves to use
EsExecutors#boundedNumberOfProcessors(Settings) to default
configure the default `max_thread_count` for better reproducibility

Closes #6194

time:
2014-05-15T19:21:36Z
class:
comments:
Shade mustache into org.elasticsearch.common package

Previously we shared the jar but never rewrote the packages such
that the shading had no effect.

Closes #6192

time:
2014-05-15T18:53:05Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/TransportClusterSearchShardsAction.java
src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/TransportAliasesExistAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/exists/indices/TransportIndicesExistsAction.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TransportTypesExistsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/open/TransportOpenIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/settings/get/TransportGetSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/settings/put/TransportUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/TransportDeleteWarmerAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java
src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java
src/main/java/org/elasticsearch/action/get/TransportGetAction.java
src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java
src/main/java/org/elasticsearch/action/index/TransportIndexAction.java
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/action/percolate/TransportMultiPercolateAction.java
src/main/java/org/elasticsearch/action/search/TransportSearchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/action/support/IndicesOptions.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportIndexReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportIndicesReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java
src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java
src/main/java/org/elasticsearch/action/termvector/TransportMultiTermVectorsAction.java
src/main/java/org/elasticsearch/action/termvector/TransportSingleShardTermVectorAction.java
src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
src/main/java/org/elasticsearch/index/query/IndicesFilterParser.java
src/main/java/org/elasticsearch/index/query/IndicesQueryParser.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/test/java/org/elasticsearch/action/support/IndicesOptionsTests.java
src/test/java/org/elasticsearch/cluster/ClusterHealthResponsesTests.java
src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java
src/test/java/org/elasticsearch/indices/IndicesOptionsIntegrationTests.java
comments:
Unified MetaData#concreteIndices methods into a single method that accepts indices (or aliases) and indices options

Added new internal flag to IndicesOptions that tells whether aliases can be resolved to multiple indices or not.

Cut over to new metaData#concreteIndices(IndicesOptions, String...) for all the api previously using MetaData#concreteIndices(String[], IndicesOptions) and removed old method, deprecation is not needed as it doesn't break client code.

Introduced constants for flags in IndicesOptions for more readability

Renamed MetaData#concreteIndex to concreteSingleIndex, left method as a shortcut although it calls the common concreteIndices that accepts IndicesOptions and multipleIndices

time:
2014-05-15T16:42:26Z
class:
src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
comments:
When sending shard start/failed message due to a cluster state change, use the master indicated in the new state rather than current

This commit also adds extra protection in other cases against a master node being de-elected and thus being null.

Closes #6189

time:
2014-05-15T13:55:11Z
class:
src/main/java/org/elasticsearch/cluster/ClusterState.java
src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
comments:
Added meta data and routing version to cluster state's pretty print

time:
2014-05-15T13:37:30Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
comments:
Added some debug logs to the recovery process

time:
2014-05-15T10:24:53Z
class:
src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java
comments:
[TEST] Randomize number of available processors

We configure the threadpools according to the number of processors which is
different on every machine. Yet, we had some test failures related to this
and #6174 that only happened reproducibly on a node with 1 available processor.
This commit does:
  * sometimes randomize the number of available processors
  * if we don't randomize we should set the actual number of available processors
    in the settings on the test node
  * always print out the num of processors when a test fails to make sure we can
    reproduce the thread pool settings with the reproduce info line

Closes #6176

time:
2014-05-15T09:13:30Z
class:
src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java
comments:
Fix debug logging message for put template action

time:
2014-05-14T17:40:39Z
class:
src/main/java/org/elasticsearch/action/bench/BenchmarkService.java
comments:
Fix bug for BENCH thread pool size == 1

On small hardware, the BENCH thread pool can be set to size 1. This is
problematic as it means that while a benchmark is active, there are no
threads available to service administrative tasks such as listing and
aborting. This change fixes that by executing list and abort operations
on the GENERIC thread pool.

Closes #6174

time:
2014-05-14T14:40:34Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/test/ImmutableTestCluster.java
comments:
[TEST] Ensure all benchmarks are aborted on failure and latches are counted down

time:
2014-05-14T14:02:59Z
class:
comments:
[DOCS] Rewrote the memory settings section on the configuration page

time:
2014-05-14T12:40:27Z
class:
src/main/java/org/elasticsearch/action/bench/BenchmarkExecutor.java
src/main/java/org/elasticsearch/action/bench/BenchmarkService.java
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/action/bench/BenchmarkTestUtil.java
comments:
[TEST] Remove busy waiting from BenchmarkIntegrationTest

I think Chuck Norris is required to fix this at this point until we have an API
that can for instance pause a Benchmark. We basically wait for a query to be executed
and that query syncs on a latch with the test in a script :)

This commit also adds some more testing for benchmarks that run into errors.

time:
2014-05-14T12:13:44Z
class:
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
Allow sorting on nested sub generated field

When you have a nested document and want to sort on its fields, it's perfectly doable on regular fields but not on "generated" sub fields.

Here is a SENSE recreation:

```
DELETE /tmp

PUT /tmp

PUT /tmp/doc/_mapping
{
  "properties": {
    "flat": {
      "type": "string",
      "index": "analyzed",
      "fields": {
        "sub": {
          "type": "string",
          "index": "not_analyzed"
        }
      }
    },
    "nested": {
      "type": "nested",
      "properties": {
        "foo": {
          "type": "string",
          "index": "analyzed",
          "fields": {
            "sub": {
              "type": "string",
              "index": "not_analyzed"
            }
          }
        }
      }
    }
  }
}

PUT /tmp/doc/1
{
  "flat":"bar",
  "nested":{
    "foo":"bar"
  }
}
```

When sorting on `flat.sub` sub field, everything is fine:

```
GET /tmp/doc/_search
{
  "sort": [
    {
      "flat.sub": {
        "order": "desc"
      }
    }
  ]
}

```

When sorting on `nested` field, everything is fine:

```
GET /tmp/doc/_search
{
  "sort": [
    {
      "nested.foo": {
        "order": "desc"
      }
    }
  ]
}

```

But when sorting on `nested.sub` field, sorting is incorrect:

```
GET /tmp/doc/_search
{
  "sort": [
    {
      "nested.foo.sub": {
        "order": "desc"
      }
    }
  ]
}

Closes #6150.

time:
2014-05-14T12:10:04Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TermsShardMinDocCountTests.java
comments:
use shard_min_doc_count also in TermsAggregation

This was discussed in issue #6041 and #5998 .

closes #6143

time:
2014-05-14T12:10:02Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractTermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParser.java
comments:
refactor: make requiredSize, shardSize, minDocCount and shardMinDocCount a single parameter

Every class using these parameters has their own member where these four
are stored. This clutters the code. Because they mostly needed together
it might make sense to group them.

time:
2014-05-14T12:09:59Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractTermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParser.java
comments:
refactor: unify terms and significant_terms parsing

Both need the requiredSize, shardSize, minDocCount and shardMinDocCount.
Parsing should not be duplicated.

time:
2014-05-14T10:36:35Z
class:
comments:
Fix typo in docs

time:
2014-05-14T10:19:45Z
class:
comments:
Renamed "tire" to "retire" in community clients

Closes #5673

time:
2014-05-14T10:15:48Z
class:
comments:
Improved wording in search-type.asciidoc

Closes #5951

time:
2014-05-14T10:08:02Z
class:
comments:
Updated groovy docs to point to the new groovy repo

time:
2014-05-14T10:03:12Z
class:
comments:
Fixed typo in getting-started.asciidoc

Closes #6064

time:
2014-05-14T09:59:12Z
class:
comments:
Update match-query.asciidoc

time:
2014-05-14T09:50:08Z
class:
comments:
Type is the 'doc-type', not the word 'type'

time:
2014-05-14T08:09:11Z
class:
src/test/java/org/elasticsearch/common/bytes/PagedBytesReferenceTest.java
comments:
[TESTS] Fix test bug in PagedBytesReferenceTest.

time:
2014-05-14T07:35:45Z
class:
src/test/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentConstantScoreQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentQueryTests.java
comments:
[TESTS] Fix test bugs for parent/child queries.

If you got a bad seed and tests.nightly=true, these tests would either call
Random#nextInt on `0` or trigger infinite loops.

time:
2014-05-14T07:28:44Z
class:
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
comments:
[Test] increase ping timeout to 400ms in MinimumMasterNodesTests.dynamicUpdateMinimumMasterNodes

time:
2014-05-14T06:59:48Z
class:
src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoTests.java
comments:
[Test] SimpleNodesInfoTests.testNodesInfos didn't wait for cluster to form properly

time:
2014-05-13T22:42:48Z
class:
comments:
[BUILD] Shade t-digest.

time:
2014-05-13T19:08:48Z
class:
src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java
src/main/java/org/elasticsearch/indices/fielddata/breaker/FieldDataBreakerStats.java
src/main/java/org/elasticsearch/indices/fielddata/breaker/InternalCircuitBreakerService.java
src/test/java/org/elasticsearch/common/breaker/MemoryCircuitBreakerTests.java
src/test/java/org/elasticsearch/indices/fielddata/breaker/CircuitBreakerServiceTests.java
src/test/java/org/elasticsearch/indices/fielddata/breaker/DummyCircuitBreakerService.java
comments:
Track the number of times the CircuitBreaker has been tripped

Fixes #6130

time:
2014-05-13T18:17:46Z
class:
src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java
comments:
[TEST] improved MetaDataTests coverage for different index options

Relates to #6068

time:
2014-05-13T18:04:45Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/TDigestState.java
comments:
[Javadoc] Add full link to TDigest class

(cherry picked from commit ed72484)

time:
2014-05-13T18:00:42Z
class:
comments:
[DOCS] reverse-nested aggs are added in 1.2.0

time:
2014-05-13T16:38:02Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveryState.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryTests.java
comments:
Fix recovery percentage > 100%

The recovery API was sometimes misreporting the recovered byte
percentages of index files. This was caused by summing up total file
lengths on each file chunk transfer. It should have been summing the
lengths of each transfer request.

Closes #6113

time:
2014-05-13T16:05:34Z
class:
src/test/java/org/elasticsearch/transport/AbstractSimpleTransportTests.java
comments:
[TEST] Raise request timeout windows is sometimes extraordinary slow

time:
2014-05-13T16:02:30Z
class:
comments:
Add comment about snapshot/restore if bucket does not exist

closes #84

time:
2014-05-13T13:55:46Z
class:
comments:
Update repositories.asciidoc
Improved instructions for using YUM

time:
2014-05-13T13:49:46Z
class:
comments:
Clarify `missing` behavior.

time:
2014-05-13T12:32:03Z
class:
src/main/java/org/elasticsearch/action/search/ClearScrollResponse.java
comments:
Removed useless and illegal json object in the response.

Relates to #5865

time:
2014-05-13T11:39:56Z
class:
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
comments:
Fix NPE when initializing an accepted socket in NettyTransport.

NettyTransport's ChannelPipelineFactory uses the instance variable
serverOpenChannels in order to create sockets. However, this instance variable
is set to null when stoping the netty transport, so if the transport tries to
stop and to initialize a socket at the same time you might hit the following
NullPointerException:

[2014-05-13 07:33:47,616][WARN ][netty.channel.socket.nio.AbstractNioSelector] Failed to initialize an accepted socket.
java.lang.NullPointerException: handler
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.<init>(DefaultChannelPipeline.java:725)
	at org.jboss.netty.channel.DefaultChannelPipeline.init(DefaultChannelPipeline.java:667)
	at org.jboss.netty.channel.DefaultChannelPipeline.addLast(DefaultChannelPipeline.java:96)
	at org.elasticsearch.transport.netty.NettyTransport$2.getPipeline(NettyTransport.java:327)
	at org.jboss.netty.channel.socket.nio.NioServerBoss.registerAcceptedChannel(NioServerBoss.java:134)
	at org.jboss.netty.channel.socket.nio.NioServerBoss.process(NioServerBoss.java:104)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)
	at org.jboss.netty.channel.socket.nio.NioServerBoss.run(NioServerBoss.java:42)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

This fix ensures that the ChannelPipelineFactory always uses the channels that
have been used upon start, even if a stop request is issued concurrently.

Close #6144

time:
2014-05-13T10:36:13Z
class:
src/main/java/org/elasticsearch/search/action/SearchServiceTransportAction.java
comments:
Read full message on free context

Since #5730 we write a boolean in the FreeContextResponse which should be deserialized

Closes #6147

time:
2014-05-13T10:26:31Z
class:
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java
comments:
Log cache recycler clear call as debug

time:
2014-05-13T10:26:31Z
class:
src/main/java/org/elasticsearch/action/bench/BenchmarkExecutor.java
src/main/java/org/elasticsearch/action/bench/BenchmarkResponse.java
comments:
Report all errors if benchmark fails and mark as failed

time:
2014-05-13T10:26:30Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/action/bench/BenchmarkTestUtil.java
src/test/java/org/elasticsearch/test/ImmutableTestCluster.java
comments:
[TEST] Ensure no bechmarks are running after test

time:
2014-05-13T09:57:11Z
class:
src/main/java/org/elasticsearch/common/collect/IdentityHashSet.java
comments:
[JAVADOCS] Fix wrong javadoc in IdentityHashSet.

Close #6121

time:
2014-05-13T09:19:28Z
class:
comments:
[DOCS] Changed coming[1.1.0] to added in snapshot status

time:
2014-05-13T09:02:36Z
class:
comments:
[TEST] Changed the possessive matching syntax in cat.recovery
regex to use an independent subexpression. Possessive
modifiers not supported on older Perl

time:
2014-05-13T08:38:08Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/GroupRedBlackTree.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/RedBlackTree.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/TDigestState.java
src/test/java/org/elasticsearch/index/mapper/string/SimpleStringMappingTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/GroupTree.java
src/test/java/org/elasticsearch/search/aggregations/metrics/GroupTreeTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/RedBlackTreeTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/TDigestStateTests.java
comments:
Use t-digest as a dependency.

Our improvements to t-digest have been pushed upstream and t-digest also got
some additional nice improvements around memory usage and speedups of quantile
estimation. So it makes sense to use it as a dependency now.

This also allows to remove the test dependency on Apache Mahout.

Close #6142
As we don't import explicitly `TDigest`, my IDE is complaining about this JavaDoc.

Should we use `{@link com.tdunning.math.stats.TDigest}` instead?

Yes, please!


time:
2014-05-13T08:34:16Z
class:
comments:
[DOCS] Fix typos in context suggest

time:
2014-05-13T08:10:30Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsParser.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsTests.java
comments:
Significant_terms agg: added option for a background_filter to define background context for analysis of term frequencies

Closes #5944

time:
2014-05-13T07:33:22Z
class:
src/main/java/org/elasticsearch/script/ScriptService.java
comments:
Log script change/add and removal at INFO level

Closes #6104

time:
2014-05-12T23:35:58Z
class:
comments:
[DOCS] Added "Aggregation" to all aggs titles

time:
2014-05-12T22:02:07Z
class:
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
Fix for hanging aborted snapshot during node shutdown

If a node is shutdown while a snapshot that runs on this node is aborted, it might cause the snapshot process to hang.

Closes #5958

time:
2014-05-12T21:45:43Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/action/bench/BenchmarkTestUtil.java
comments:
Fix for benchmark test timeout

Lower number of random requests generated for each test so as not to
timeout on heavy tests.

Addresses #6094

time:
2014-05-12T21:26:29Z
class:
src/main/java/org/elasticsearch/action/support/IndicesOptions.java
comments:
improved IndicesOptions javadocs

time:
2014-05-12T21:26:29Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java
comments:
fixed MetaData#concreteIndices to throw exception with a single index argument in case allowNoIndices == false and ignoreUnavailable == true

Closes #6137

time:
2014-05-12T20:15:07Z
class:
comments:
Change key to keyed

time:
2014-05-12T18:42:26Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoverySettings.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java
comments:
#6081: set IO throttling back to 20 MB/sec now that #6018 is fixed

time:
2014-05-12T18:16:27Z
class:
comments:
#5882: fix docs

time:
2014-05-12T18:06:20Z
class:
src/main/java/org/apache/lucene/index/TrackingSerialMergeScheduler.java
src/main/java/org/elasticsearch/index/merge/scheduler/SerialMergeSchedulerProvider.java
src/test/java/org/apache/lucene/TrackingSerialMergeSchedulerTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
#6120 Remove SerialMergeScheduler (master only)

It's dangerous to expose SerialMergeScheduler as an option: since it only allows one merge at a time, it can easily cause merging to fall behind.

Closes #6120

time:
2014-05-12T17:22:33Z
class:
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
comments:
5882: put back Elasticsearch's 1.1 defaults for ConcurrentMergeScheduler

time:
2014-05-12T16:36:14Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/index/mapper/object/RootObjectMapper.java
src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
src/test/java/org/elasticsearch/routing/SimpleRoutingTests.java
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
Check if root mapping is actually valid

When a mapping is declared and the type is known from the uri
then the type can be skipped in the body (see #4483). However,
there was no check if the given keys actually make a valid mapping.

closes #5864
closes #6093

time:
2014-05-12T15:21:11Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
comments:
[TESTS] Improve BenchmarkIntegrationTest's check that percentiles are increasing.

Percentiles are supposed to be monotonically increasing but floating-point
rounding issues can come into play and make the test fail if checks are too
strict.

time:
2014-05-12T14:33:31Z
class:
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/merge/scheduler/MergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/merge/scheduler/SerialMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
Allow to change concurrent merge scheduling setting dynamically
Allow to change the concurrent merge scheduler settings dynamically using the update settings API
closes #6098

time:
2014-05-12T13:47:51Z
class:
comments:
[TEST] cat.recovery regex still causing occasional JVM regex stackoverflows.
Try making the capture possessive to prevent recursion

time:
2014-05-12T13:45:29Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
[TESTS] Fix MinDocCountTests.

The new include/exclude support for global ordinals didn't exclude terms in
`buildAggregation` (which is required if minDocCount is 0).

time:
2014-05-12T12:29:56Z
class:
src/test/java/org/elasticsearch/test/rest/section/DoSection.java
comments:
[TEST] made catch request more accurate in REST tests runner

Excluded 404, 403 and 409 status codes from the catch request as they have their own specific catch codes

time:
2014-05-12T11:14:13Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
Made the include and exclude support for terms and significant terms aggregations based on global ordinals.

Closes #6000

time:
2014-05-12T10:52:48Z
class:
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
comments:
restored @Test annotation in SimpleValidateQueryTests

time:
2014-05-12T10:49:25Z
class:
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
comments:
Detect unsupported fields after query in validate query api

The validate API was failing to reject JSON input that had unsupported
fields placed after a supported field. This was causing invalid requests
to be reported as valid.

Fixes #5685

time:
2014-05-12T10:49:25Z
class:
src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
comments:
Fixed validate query parsing issues

Made sure that a match_all query is used when no query is specified and ensure no NPE is thrown either.
Also used the same code path as the search api to ensure that alias filters are taken into account, same for type filters.

Closes #6111 Closes #6112 Closes #6116

time:
2014-05-12T10:30:04Z
class:
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
More Like This: Fix correct use of size and from parameters

More Like This API would not take into account 'size' and 'from' in request body parameters.
Instead these values would always be overriden by the default values of REST parameters
'search_size' and 'search_from'.

Closes #5981

time:
2014-05-12T09:59:09Z
class:
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
[TEST] Make sure all shards are allocated before the delete type is being executed.

time:
2014-05-12T09:30:01Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
comments:
[TESTS] Disable BenchmarkIntegrationTest#testSubmitBenchmark until it is fixed.

time:
2014-05-12T08:23:49Z
class:
comments:
Update shade-plugin to 2.3

Shade-plugin 2.2 does not work with JDK8 (see http://jira.codehaus.org/browse/MSHADE/fixforversion/19828)

time:
2014-05-12T07:43:56Z
class:
src/main/java/org/elasticsearch/action/search/ClearScrollResponse.java
src/main/java/org/elasticsearch/action/search/TransportClearScrollAction.java
src/main/java/org/elasticsearch/rest/action/search/RestClearScrollAction.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/action/SearchServiceTransportAction.java
src/test/java/org/elasticsearch/search/scroll/SearchScrollTests.java
comments:
Return missing (404) is a scroll_id is cleared that no longer exists.

Closes #5730

time:
2014-05-12T07:25:49Z
class:
src/test/java/org/elasticsearch/test/cache/recycler/MockBigArrays.java
comments:
[TESTS] Tentative fix of BigArrays byte-accounting checks.

time:
2014-05-10T11:09:30Z
class:
comments:
[TEST] Aborting a non-existent benchmark throws a missing request

time:
2014-05-10T09:16:25Z
class:
comments:
enable dynamic scripts in release node, otherwise REST tests will fail

Relates to #5853

time:
2014-05-10T00:57:51Z
class:
src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java
comments:
Fixed typos in FieldSortBuilder

time:
2014-05-09T23:01:57Z
class:
src/main/java/org/elasticsearch/action/bench/BenchmarkExecutor.java
src/main/java/org/elasticsearch/action/bench/BenchmarkModule.java
src/main/java/org/elasticsearch/action/bench/BenchmarkService.java
src/main/java/org/elasticsearch/action/bench/BenchmarkStatusNodeResponse.java
src/main/java/org/elasticsearch/action/bench/BenchmarkStatusResponse.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/action/bench/BenchmarkTestUtil.java
comments:
[TEST] Fix for benchmark tests

- Fix bug where repeatedly calling computeSummaryStatistics() could
  accumulate some values incorrectly
- Fix check for number of responsive nodes on list is <= number of
  candidate benchmark nodes
- Add public getters for summary statistics
- Add javadoc for new getters
- Add javadoc comments about API use
- Improve abort and status tests by calling awaitBusy() to wait for jobs
  to be completely submitted before testing them

time:
2014-05-09T22:24:13Z
class:
src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java
src/test/java/org/elasticsearch/search/suggest/completion/CompletionPostingsFormatTest.java
comments:
don't call isFinite from XAnalyzingSuggester; re-enable test on Java 8

time:
2014-05-09T21:57:23Z
class:
comments:
[TEST] Add test specifying fields field /_cat/fielddata REST test

time:
2014-05-09T21:36:00Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkNegativeTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/ImmutableTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/test/rest/support/Features.java
src/test/java/org/elasticsearch/tribe/TribeTests.java
comments:
[TEST] randomly added node.bench=true to client node in test cluster and re-enabled REST benchmark tests based on number of bench nodes available

In our REST tests we already have support for features and skip sections that allow to skip tests if a feature is not supported.
We can then add a skip section based on the benchmark feature to the benchmark tests and execute them only when they are supported, knowing that they need at least a node with node.bench settings within the cluster. We can check that this requirement is met by calling the nodes info api.

This way we can dynamically decide whether to execute those tests or not and we don't need to have a node.bench around all the time. In fact, given that the REST tests use the GLOBAL cluster, we want to be able to randomize settings as much as possible and run tests against default settings as well. Also, this mechanism can be easily supported by the external cluster implementation that is used during the release process.

Introduced ability to disable benchmark nodes which is needed by BenchmarkNegativeTest.

time:
2014-05-09T17:14:32Z
class:
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
[TEST] Removed the restriction on the number of bool clauses that must match.

The test failed because 'percent_terms_to_match' defaults to 0.3, which results
in requiring that some terms only found in the queried document must match, when
all the documents are on the same shard.

time:
2014-05-09T13:03:51Z
class:
comments:
Fix typo in path specification for /_cat/fielddata
This would have been caught by an additional rest test, like the one you have on fields, by passing in the fields as `fields` param instead of the header one. Can you add that (and make sure you reproduce the failure?) ;)

Yea, you're right. Added a test for this.


time:
2014-05-09T11:18:02Z
class:
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/cat/RestFielddataAction.java
comments:
Add /_cat/fielddata to display fielddata usage

Closes #4593
This is something more like “A comma-separated list of fields to include in the returned size”?

CORRECTION & UPDATE: More something like “A comma-separated list of fields to include in the output”?

shouldn't this be `"true"` since it's an `enum`? It gets parsed as `bool` otherwise
not sure, all the existing runners are fine with this. Strings are unquoted anyways.

time:
2014-05-09T10:59:39Z
class:
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequestBuilder.java
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/rest/action/mlt/RestMoreLikeThisAction.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
Added the ability to include the queried document for More Like This API.

By default More Like This API excludes the queried document from the response.
However, when debugging or when comparing scores across different queries, it
could be useful to have the best possible matched hit. So this option lets users
explicitly specify the desired behavior.

Closes #6067

time:
2014-05-09T10:13:29Z
class:
comments:
Provided some insights as to how More Like This works internally.

In the Google Groups forum there appears to be some confusion as to what mlt
does. This documentation update should hopefully help demystifying this
feature, and provide some understanding as to how to use its parameters.

Closes #6092

time:
2014-05-09T10:04:34Z
class:
comments:
[TEST] Temporarily added a wait-for-yellow to delete_mapping tests

Should be removed once #5997 is fixed

time:
2014-05-09T09:24:22Z
class:
src/test/java/org/elasticsearch/search/suggest/completion/CompletionPostingsFormatTest.java
comments:
mute this test until we fix isFinite

time:
2014-05-09T08:43:08Z
class:
src/test/java/org/elasticsearch/search/scroll/SearchScrollWithFailingNodesTests.java
comments:
[TEST] Enforce that only one shard per node is allocated. The prevents during node shutdown, that a second shard is assigned the another node.

time:
2014-05-08T14:01:13Z
class:
comments:
[DOCS] fixed broken json in multi term vectors docs

time:
2014-05-08T13:50:24Z
class:
comments:
[DOCS] fixed typo in multi term vectors docs

time:
2014-05-08T13:40:28Z
class:
comments:
[TEST] cat.recovery with replicas can have 100.0%

time:
2014-05-08T12:15:47Z
class:
comments:
[TEST] Fixed pathological regex in cat.recovery

Fixes #6070

time:
2014-05-08T11:18:12Z
class:
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
comments:
Temporarily disabling benchmark tests.

Relates #6094

time:
2014-05-08T08:59:24Z
class:
comments:
Update fielddata.asciidoc

Spelling correction

time:
2014-05-08T08:58:10Z
class:
comments:
Update fielddata.asciidoc

Fixed default value for circuit breaker

time:
2014-05-08T08:17:00Z
class:
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/test/java/org/elasticsearch/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/search/scroll/SearchScrollWithFailingNodesTests.java
comments:
A number of changes to fix reduce failures if shard failures have occurred:
* The shardTopDocs array should get created with the size equal to the total number of shard level requests and not the total number of requests that have a shard level result.
* Make sure no null TopDocs entires are passed down to TopDocs#merge
* Added dedicated scroll tests that tests scrolling on an index that has missing shards due to node failure.
* Made sure that the sort fields in SimpleNestedTests exists by adding the fields in the mapping during index creation.

Closes #6022

time:
2014-05-08T07:54:10Z
class:
comments:
Added FilteredQuery to the list of forbidden apis

time:
2014-05-08T07:52:27Z
class:
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
The percolator needs to deleted percolator documents into account when running in near realtime mode.

This bug only occurs in non-realtime mode when query, filter, facet or aggs is used.

Closes #5843
Closes #5840

time:
2014-05-08T01:42:39Z
class:
src/main/java/org/elasticsearch/action/bench/CompetitionDetails.java
src/main/java/org/elasticsearch/action/bench/CompetitionIteration.java
src/main/java/org/elasticsearch/action/bench/CompetitionSummary.java
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
comments:
Fix for benchmark test

- Fix bug where repeatedly calling computeSummaryStatistics() could
  accumulate some values incorrectly.
- Fix check for number of responsive nodes on list is <= number of
  candidate benchmark nodes.
- Add public getters for summary statistics
- Add javadoc for new getters
- Add javadoc comments about API use

time:
2014-05-07T21:25:06Z
class:
src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java
src/main/java/org/apache/lucene/index/TrackingSerialMergeScheduler.java
comments:
it's safe to use OneMerge.getTotalBytesSize (fixed in LUCENE-4775)

time:
2014-05-07T21:14:54Z
class:
src/main/java/org/elasticsearch/action/bench/AbortBenchmarkNodeResponse.java
src/main/java/org/elasticsearch/action/bench/AbortBenchmarkResponse.java
src/main/java/org/elasticsearch/action/bench/BenchmarkExecutionException.java
src/main/java/org/elasticsearch/action/bench/BenchmarkExecutor.java
src/main/java/org/elasticsearch/action/bench/BenchmarkMissingException.java
src/main/java/org/elasticsearch/action/bench/BenchmarkNodeMissingException.java
src/main/java/org/elasticsearch/action/bench/BenchmarkRequest.java
src/main/java/org/elasticsearch/action/bench/BenchmarkResponse.java
src/main/java/org/elasticsearch/action/bench/BenchmarkService.java
src/main/java/org/elasticsearch/action/bench/BenchmarkSettings.java
src/main/java/org/elasticsearch/action/bench/BenchmarkStatusResponse.java
src/main/java/org/elasticsearch/action/bench/CompetitionNodeResult.java
src/main/java/org/elasticsearch/action/bench/CompetitionResult.java
src/main/java/org/elasticsearch/action/bench/CompetitionSummary.java
src/main/java/org/elasticsearch/client/Client.java
src/main/java/org/elasticsearch/client/support/AbstractClient.java
src/main/java/org/elasticsearch/rest/action/bench/RestBenchAction.java
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/action/bench/BenchmarkNegativeTest.java
src/test/java/org/elasticsearch/action/bench/BenchmarkTestUtil.java
src/test/java/org/elasticsearch/test/client/RandomizingClient.java
comments:
Integration tests for benchmark API.

- Randomized integration tests for the benchmark API.
- Negative tests for cases where the cluster cannot run benchmarks.
- Return 404 on missing benchmark name.
- Allow to specify 'types' as an array in the JSON syntax when describing a benchmark competition.
- Don't record slowest for single-request competitions.

Closes #6003, #5906, #5903, #5904

time:
2014-05-07T20:58:00Z
class:
comments:
Fix stack overflow in _cat/recovery test.

This fixes a stack overflow in the test for the _cat/recovery API.
The regular expression that tests the response body was modified to
handle large responses properly.

time:
2014-05-07T20:10:31Z
class:
comments:
Fix _cat/allocation rest test

The rest test for _cat/allocation was failing due to a regular
expression not accounting for space-padded right-justified text.

Also added Improvements to regular expressions to be smarter about optional values
and to use '+' instead of '*' where applicable.

time:
2014-05-07T17:49:54Z
class:
comments:
clarify that CMS defaults change is coming in 1.2

time:
2014-05-07T17:15:46Z
class:
comments:
Adding example S3 bucket permissions, with js syntax

time:
2014-05-07T16:35:24Z
class:
src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentiles.java
comments:
Changed the respnose structure of the percentiles aggregation where now all the percentiles are placed under a `values` object (or `values` array in case the `keyed` flag is set to `false`

Closes #5870

time:
2014-05-07T16:18:22Z
class:
comments:
[DOCS] Update nodes documentation with all headers

Adds a table with the exhaustive list of all available headers with a brief description (mostly from `org.elasticsearch.rest.action.cat.RestNodesAction`) so that people do not need to go searching for them in the code like I did, or search through `nodes?help`.

time:
2014-05-07T16:08:11Z
class:
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
comments:
Node version sometimes empty in _cat/nodes
closes #5480

time:
2014-05-07T16:02:56Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsParser.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsMinDocCountTests.java
comments:
Add `shard_min_doc_count` parameter for significant terms similar to `shard_size`

Significant terms internally maintain a priority queue per shard with a size potentially
lower than the number of terms. This queue uses the score as criterion to determine if
a bucket is kept or not. If many terms with low subsetDF score very high
but the `min_doc_count` is set high, this might result in no terms being
returned because the pq is filled with low frequent terms which are all sorted
out in the end.

This can be avoided by increasing the `shard_size` parameter to a higher value.
However, it is not immediately clear to which value this parameter must be set
because we can not know how many terms with low frequency are scored higher that
the high frequent terms that we are actually interested in.

On the other hand, if there is no routing of docs to shards involved, we can maybe
assume that the documents of classes and also the terms therein are distributed evenly
across shards. In that case it might be easier to not add documents to the pq that have
subsetDF <= `shard_min_doc_count` which can be set to something like
`min_doc_count`/number of shards  because we would assume that even when summing up
the subsetDF across shards `min_doc_count` will not be reached.

closes #5998
closes #6041

time:
2014-05-07T15:40:57Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsRequest.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java
src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java
src/main/java/org/elasticsearch/action/search/MultiSearchRequestBuilder.java
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/support/IndicesOptions.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequest.java
src/main/java/org/elasticsearch/action/support/master/info/ClusterInfoRequest.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
src/main/java/org/elasticsearch/index/query/IndicesFilterParser.java
src/main/java/org/elasticsearch/index/query/IndicesQueryParser.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestGetSettingsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/main/java/org/elasticsearch/snapshots/RestoreService.java
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/test/java/org/elasticsearch/action/percolate/MultiPercolatorRequestTests.java
src/test/java/org/elasticsearch/cluster/ClusterHealthResponsesTests.java
src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java
src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java
src/test/java/org/elasticsearch/indices/IndicesOptionsTests.java
src/test/java/org/elasticsearch/indices/state/OpenCloseIndexTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
src/test/java/org/elasticsearch/search/aggregations/RandomTests.java
src/test/java/org/elasticsearch/snapshots/SnapshotUtilsTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Renamed IndicesOptions#strict and IndicesOptions#lenient to make it clearer what they actually return, reused methods and introduced new one

Relates to #6059, where two new constants were introduced in IndicesOptions. There were already two constants there though, one of which we could have reused. This commit tries to unify them.

time:
2014-05-07T14:57:19Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/admin/indices/status/DocsStatus.java
src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java
src/main/java/org/elasticsearch/action/admin/indices/status/GatewaySnapshotStatus.java
src/main/java/org/elasticsearch/action/admin/indices/status/IndexShardStatus.java
src/main/java/org/elasticsearch/action/admin/indices/status/IndexStatus.java
src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusAction.java
src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusRequest.java
src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusResponse.java
src/main/java/org/elasticsearch/action/admin/indices/status/PeerRecoveryStatus.java
src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java
src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java
src/main/java/org/elasticsearch/client/IndicesAdminClient.java
src/main/java/org/elasticsearch/client/Requests.java
src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/admin/indices/status/RestIndicesStatusAction.java
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
src/test/java/org/elasticsearch/indices/IndicesOptionsTests.java
src/test/java/org/elasticsearch/indices/state/SimpleIndexStateTests.java
src/test/java/org/elasticsearch/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/stresstest/rollingrestart/RollingRestartStressTest.java
comments:
Removed Index Status API

The functionality of the index status API has been replaced by the recovery API.

Relates #4854

time:
2014-05-07T13:04:07Z
class:
comments:
Update keyword-tokenizer.asciidoc

time:
2014-05-07T12:06:13Z
class:
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java
src/main/java/org/elasticsearch/index/fielddata/plain/IndexIndexFieldData.java
src/main/java/org/elasticsearch/index/mapper/FieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java
src/main/java/org/elasticsearch/search/facet/terms/TermsFacetParser.java
src/main/java/org/elasticsearch/search/facet/terms/index/IndexNameFacetExecutor.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
Add a dedicated field data type for the _index field mapper.

This makes aggregations work on the _index field, and also allows to remove the
special facet aggregator for the _index field.

Close #5848

time:
2014-05-07T10:55:48Z
class:
src/main/java/org/elasticsearch/common/util/AbstractArray.java
src/main/java/org/elasticsearch/common/util/AbstractBigArray.java
src/main/java/org/elasticsearch/common/util/BigArray.java
src/main/java/org/elasticsearch/common/util/BigArrays.java
src/main/java/org/elasticsearch/common/util/BigByteArray.java
src/main/java/org/elasticsearch/common/util/BigDoubleArray.java
src/main/java/org/elasticsearch/common/util/BigDoubleArrayList.java
src/main/java/org/elasticsearch/common/util/BigFloatArray.java
src/main/java/org/elasticsearch/common/util/BigFloatArrayList.java
src/main/java/org/elasticsearch/common/util/BigIntArray.java
src/main/java/org/elasticsearch/common/util/BigLongArray.java
src/main/java/org/elasticsearch/common/util/BigObjectArray.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/test/java/org/elasticsearch/common/util/BigArraysTests.java
src/test/java/org/elasticsearch/test/cache/recycler/MockBigArrays.java
comments:
Limit the number of bytes that can be allocated to process requests.

This should prevent costly requests from killing the whole cluster.

Close #6050

time:
2014-05-06T16:00:19Z
class:
comments:
Correcting gramma

time:
2014-05-06T15:57:35Z
class:
comments:
[DOCS] Added vertx elasticsearch integration

time:
2014-05-06T15:23:34Z
class:
src/main/java/org/elasticsearch/search/aggregations/Aggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
comments:
Lower initial sizing of sub aggregations.

We currently compute initial sizings based on the cardinality of our fields.
This can be highly exagerated for sub aggregations, for example if there is a
parent terms aggregation that is executed over a field that has a very long
tail: most buckets will only collect a couple of documents.

Close #5994

time:
2014-05-06T15:21:09Z
class:
comments:
[DOCS] Updated the mapping and field mapping docs to use the new format

Closes #6057

time:
2014-05-06T14:32:33Z
class:
comments:
Update getting-started.asciidoc

Fixed "Jone Done" to "Jone Doe"

time:
2014-05-06T14:30:09Z
class:
comments:
Update asciifolding-tokenfilter.asciidoc

Typo

time:
2014-05-06T14:20:31Z
class:
src/main/java/org/elasticsearch/common/geo/GeoDistance.java
src/main/java/org/elasticsearch/index/search/geo/GeoDistanceFilter.java
src/test/java/org/elasticsearch/search/geo/GeoDistanceTests.java
comments:
Don't assume fixed earth diameter in the geo-distance bounding box optimization.

We switched to Lucene's SloppyMath way of computing an approximate value of
the eath diameter given a latitude in order to compute distances, yet the
bounding box optimization of the geo distance filter still assumed a constant
earth diameter, equal to the average.

Close #6008

time:
2014-05-06T14:15:36Z
class:
comments:
s/boost_factor/boost in custom_filters_score doc

I may be wrong but I think custom_filters_score used boost rather than boost factor?

time:
2014-05-06T14:10:23Z
class:
comments:
Update create-index.asciidoc

Document defaults for `number_of_shards` and `number_of_replicas`

Closes #5899

time:
2014-05-06T14:05:51Z
class:
comments:
Update "Character classes" part

time:
2014-05-06T13:57:00Z
class:
comments:
fix field data stats doc

time:
2014-05-06T13:55:42Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/test/java/org/elasticsearch/search/scroll/SearchScrollTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Improve 404 on missing scroll id
This relates to #6040, the fix is twofold, first, not handling missing context specifically in the search code, but behave the same as we do in non scroll search, where if all the shards failed, raise an exception. The second is to apply this logic in both scroll cases.

time:
2014-05-06T13:54:36Z
class:
comments:
fix typo

time:
2014-05-06T12:49:48Z
class:
comments:
Removed mention of Spatial4J and JTS requirement

AFAIK, on 1.0 at least (and later), those libraries are included.

time:
2014-05-06T12:41:00Z
class:
comments:
Update geo-shape-type documentation

Update `geo-shape-type.asciidoc` to include all `GeoShapeType`s supported by the `org.elasticsearch.common.geo.builders.ShapeBuilder`.

Changes include:

1. A tabular mapping of GeoJSON types to Elasticsearch types
2. Listing all types, with brief examples, for all support Elasticsearch types
3. Putting non-standard types to the bottom (really just moving Envelope to the bottom)
4. Linking to all GeoJSON types.
5. Adding whitespace around tightly nested arrays (particularly `multipolygon`) for readability

time:
2014-05-06T12:27:35Z
class:
comments:
[DOCS] add compass and compress_threshold to binary field mapping doc

time:
2014-05-06T12:02:24Z
class:
src/main/java/org/elasticsearch/env/Environment.java
src/main/java/org/elasticsearch/monitor/MonitorModule.java
src/main/java/org/elasticsearch/monitor/dump/AbstractDump.java
src/main/java/org/elasticsearch/monitor/dump/Dump.java
src/main/java/org/elasticsearch/monitor/dump/DumpContributionFailedException.java
src/main/java/org/elasticsearch/monitor/dump/DumpContributor.java
src/main/java/org/elasticsearch/monitor/dump/DumpContributorFactory.java
src/main/java/org/elasticsearch/monitor/dump/DumpException.java
src/main/java/org/elasticsearch/monitor/dump/DumpGenerationFailedException.java
src/main/java/org/elasticsearch/monitor/dump/DumpGenerator.java
src/main/java/org/elasticsearch/monitor/dump/DumpMonitorService.java
src/main/java/org/elasticsearch/monitor/dump/SimpleDump.java
src/main/java/org/elasticsearch/monitor/dump/SimpleDumpGenerator.java
src/main/java/org/elasticsearch/monitor/dump/cluster/ClusterDumpContributor.java
src/main/java/org/elasticsearch/monitor/dump/heap/HeapDumpContributor.java
src/main/java/org/elasticsearch/monitor/dump/summary/SummaryDumpContributor.java
src/main/java/org/elasticsearch/monitor/dump/thread/ThreadDumpContributor.java
src/main/java/org/elasticsearch/monitor/jvm/JvmMonitorService.java
comments:
Remove unused dump infra
Way back when, when ES started, there was an idea for a dump infrastructure, but it ended up supporting its serviceability aspects through APIs, remove the unused code

time:
2014-05-06T10:45:16Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java
src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java
src/main/java/org/elasticsearch/action/support/IndicesOptions.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
src/main/java/org/elasticsearch/index/query/IndicesFilterParser.java
src/main/java/org/elasticsearch/index/query/IndicesQueryParser.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/test/java/org/elasticsearch/cluster/ClusterHealthResponsesTests.java
comments:
Made it mandatory to specify IndicesOptions when calling MetaData#concreteIndices

Removed MetaData#concreteIndices variations that didn't require an IndicesOptions argument. Every caller should specify how indices should be resolved to concrete indices based on the indices options argument.

Closes #6059

time:
2014-05-06T09:55:31Z
class:
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/RootMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/AnalyzerMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/RoutingFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SizeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SourceFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TTLFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TypeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/VersionFieldMapper.java
src/test/java/org/elasticsearch/cluster/metadata/MappingMetaDataParserTests.java
src/test/java/org/elasticsearch/routing/SimpleRoutingTests.java
comments:
Remove RootMapper.validate and validate the routing key up-front.

RootMapper.validate was only used by the routing field mapper, which makes
buggy assumptions about how fields are indexed. For example, it assumes that
the index representation of a field is the same as its external representation.

Close #5844

time:
2014-05-06T09:46:31Z
class:
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
comments:
[TESTS] Don't randomize mappings in SimpleValidateQueryTests.

This test relies on the fact that the _id field is not indexed.

time:
2014-05-06T09:07:43Z
class:
src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java
src/test/java/org/elasticsearch/index/fielddata/DisabledFieldDataFormatTests.java
src/test/java/org/elasticsearch/indices/cache/CacheTests.java
src/test/java/org/elasticsearch/indices/fielddata/breaker/CircuitBreakerServiceTests.java
src/test/java/org/elasticsearch/indices/mapping/SimpleGetMappingsTests.java
src/test/java/org/elasticsearch/indices/mapping/UpdateMappingTests.java
src/test/java/org/elasticsearch/routing/SimpleRoutingTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[TEST] Random dynamic templates.

This change randomly indexes the _id field and randomizes field data formats
and loading.

Close #5834

time:
2014-05-06T08:28:32Z
class:
comments:
[DOCS] Update service.bat

corrected typo, Exiting instead of Existing

Close #5885

time:
2014-05-06T08:28:13Z
class:
comments:
[DOCS] Fixed a typo

Close #5963

time:
2014-05-06T08:28:13Z
class:
comments:
[DOCS] Update client.asciidoc

Should be classpath rather than classloader.

Close #5965

time:
2014-05-06T08:28:13Z
class:
comments:
[DOCS] Update phrase-suggest.asciidoc

Grammatical error

Close #5993

time:
2014-05-06T08:13:05Z
class:
comments:
[DOC] Fix default values for filter cache size and field data circuit breaker.

Relates to #5990

time:
2014-05-05T20:22:00Z
class:
comments:
fix docs for merging and throttling

time:
2014-05-05T16:30:12Z
class:
comments:
[DOCS] Changed score_type to score_mode for has_child/parent queries

time:
2014-05-05T16:07:50Z
class:
comments:
Added char_filters param to indices.analyze spec

time:
2014-05-05T15:37:26Z
class:
src/main/java/org/elasticsearch/action/search/SearchResponse.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/main/java/org/elasticsearch/common/xcontent/StatusToXContent.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java
src/main/java/org/elasticsearch/rest/action/support/RestStatusToXContentListener.java
src/main/java/org/elasticsearch/search/SearchContextMissingException.java
src/test/java/org/elasticsearch/search/scroll/SearchScrollTests.java
comments:
[REST] Missing scroll id now returns 404

A bad/non-existing scroll ID used to return a 200, however a 404 might be more useful.
Also, this PR returns the right Exception (SearchContextMissingException) in the Java API.

Additionally: Added StatusToXContent interface and RestStatusToXContentListener listener, so
the appropriate RestStatus can be returned

Closes #5729

time:
2014-05-05T15:09:36Z
class:
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequest.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequestBuilder.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationThreading.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/cluster/routing/PlainShardsIterator.java
src/main/java/org/elasticsearch/cluster/routing/ShardsIterator.java
src/main/java/org/elasticsearch/rest/action/admin/indices/cache/clear/RestClearIndicesCacheAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/flush/RestFlushAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/optimize/RestOptimizeAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/refresh/RestRefreshAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/segments/RestIndicesSegmentsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/status/RestIndicesStatusAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/validate/query/RestValidateQueryAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java
src/main/java/org/elasticsearch/rest/action/count/RestCountAction.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/main/java/org/elasticsearch/rest/action/suggest/RestSuggestAction.java
src/test/java/org/elasticsearch/broadcast/BroadcastActionsTests.java
src/test/java/org/elasticsearch/cluster/structure/RoutingIteratorTests.java
src/test/java/org/elasticsearch/document/DocumentActionsTests.java
comments:
Remove operation threading from broadcast actions
Similar to search removal, the operation threading options are not really ued, and the default should always be used. This also considerably simplifies the code.
A side affect is that we can now remove the ShardIterator#firstOrNull method, which can cause for sneaky bugs to occur.
closes #6044

time:
2014-05-05T13:55:33Z
class:
src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionTests.java
comments:
Analyze API: Default analyzer accidentally removed stopwords

The analyze API used the standard analyzer from lucene and therefore removed
stopwords instead of using the elasticsearch default analyzer.

Closes #5974

time:
2014-05-05T12:54:14Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java
src/test/java/org/elasticsearch/cluster/SimpleClusterStateTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Cluster State API: Remove index template filtering

The possibility of filtering for index templates in the cluster state API
had been introduced before there was a dedicated index templates API. This
commit removes this support from the cluster state API, as it was not really
clean, requiring you to specify the metadata and the index templates.

Closes #4954

time:
2014-05-05T11:38:33Z
class:
comments:
only test on openjdk 7 on travis, no need to tax it

time:
2014-05-05T11:26:51Z
class:
comments:
remove jdk6 from travis options for our java 7 supported branches

time:
2014-05-05T09:39:16Z
class:
src/main/java/org/elasticsearch/action/search/SearchOperationThreading.java
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
src/main/java/org/elasticsearch/action/search/SearchScrollRequest.java
src/main/java/org/elasticsearch/action/search/SearchScrollRequestBuilder.java
src/main/java/org/elasticsearch/action/search/TransportSearchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java
src/main/java/org/elasticsearch/search/action/SearchServiceTransportAction.java
comments:
Remove search operation threading option
Search operation threading is an option that is not really used, and current non default implementations are flawed. Handling it also creates quite the complexity in the search handling codebase...
This is a breaking change, but one that is actually a good one, since I haven't seen/heard anybody use it, and if its used, its problematic...
closes #6042

time:
2014-05-05T08:21:18Z
class:
src/main/java/org/elasticsearch/common/property/PropertyPlaceholder.java
src/test/java/org/elasticsearch/common/property/PropertyPlaceholderTest.java
comments:
Fix bug in PropertyPlaceholder and add unit tests.

Close #6034

time:
2014-05-05T08:05:44Z
class:
src/main/java/org/elasticsearch/cluster/routing/PlainShardsIterator.java
comments:
Restore read/write visibility is PlainShardsIterator.

Change #5561 introduced a potential bug in that iterations that are performed
on a thread are might not be visible to other threads due to the removal of the
`volatile` keyword.

Close #6039

time:
2014-05-05T07:24:53Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/test/java/org/elasticsearch/action/RejectionActionTests.java
comments:
Search might not return on thread pool rejection
When a thread pool rejects the execution on the local node, the search might not return.
This happens due to the fact that we move to the next shard only *within* the execution on the thread pool in the start method. If it fails to submit the task to the thread pool, it will go through the fail shard logic, but without "counting" the current shard itself. When this happens, the relevant shard will then execute more times than intended, causing the total opes counter to skew, and for example, if on another shard the search is successful, the total ops will be incremented *beyond* the expectedTotalOps, causing the check on == as the exit condition to never happen.
The fix here makes sure that the shard iterator properly progresses even in the case of rejections, and also includes improvement to when cleaning a context is sent in case of failures (which were exposed by the test).
Though the change fixes the problem, we should work on simplifying the code path considerably, the first suggestion as a followup is to remove the support for operation threading (also in broadcast), and move the local optimization execution to SearchService, this will simplify the code in different search action considerably, and will allow to remove the problematic #firstOrNull method on the shard iterator.
The second suggestion is to move the optimization of local execution to the TransportService, so all actions will not have to explicitly do the mentioned optimization.
fixes #4887

time:
2014-05-04T20:10:03Z
class:
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[TEST] fixed _cat/thread_pool REST tests with local transport, in case the transport port is not available and gets returned as '-'

Re-enabled REST tests suite

Closes #6033

time:
2014-05-04T17:35:05Z
class:
src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XSpecialOperations.java
src/test/java/org/elasticsearch/search/suggest/completion/CompletionPostingsFormatTest.java
comments:
Fix StackOverflowException for long suggestion strings

Changed getFiniteStrings to use an iterative implementation instead of
recursive, so we don't use a Java stack-frame per character for each
suggestion at build & query time.

time:
2014-05-04T13:38:16Z
class:
src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java
src/main/java/org/elasticsearch/indices/fielddata/breaker/InternalCircuitBreakerService.java
comments:
Change default filter cache to 10% and circuit breaker to 60%
The defaults we have today in our data intensive memory structures don't properly add up to properly protected from potential OOM.
The circuit breaker, today at 80%, aims at protecting from extensive field data loading. The default threshold today is too permissive and can still cause OOMs.
 The filter cache today is at 20%, and its too high when adding it to other limits we have, reduce it to 10%, which is still a big enough portion of the heap, yet provides improved safety measure.
 closes #5990

time:
2014-05-04T09:58:30Z
class:
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[TEST] Disable REST tests until #6033 is fixed.

time:
2014-05-02T22:30:48Z
class:
comments:
[TEST] Replace folded blocks with literal blocks

The regex tests are formatted with blocks for readability.  Previously,
they were formatted using folded style blocks (e.g. using `>`). Folded
blocks convert newlines into spaces.  This is problematic for our regex,
since comments can only be terminated with a newline.

Effectively, anything after a comment will be commented out, making many
of the regex "silently pass".

This commit replaces them with scalar-style blocks (e.g. using `|`), which
treats newlines as significant, and thus correctly terminates comments
inside the regex.

Also fixes a regex test (`cat.thread_pool/10_basic.yaml`) that started
to fail after the block was fixed.  The test was missing a `\s+` before
the closing newline.

time:
2014-05-02T21:44:56Z
class:
comments:
[DOC] Fix typo in function score query documentation.

time:
2014-05-02T21:30:24Z
class:
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
comments:
Do not start a recovery process if the primary shard is currently allocated on a node which is not part of the cluster state

If a source node disconnect during recover, the target node will respond by canceling the recovery. Typically the master will respond by removing the disconnected node from the cluster state, promoting another shard to become primary. This is sent it to all nodes and the target node will start recovering from the new primary. However, if the drop of a node caused the node count to go bellow min_master_node, the master will step down and will not promote shard immediately. When a new master is elected we may publish a new cluster state (who's point is to notify of a new master) which is not yet updated. This caused the node to start a recovery to a non existent node. Before we aborted the recovery without cleaning up the shard, causing subsequent correct cluster states to be ignored. We should not start the recovery process but wait for another cluster state to come in.

Closes #6024

time:
2014-05-02T14:59:09Z
class:
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryParser.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
comments:
Fix behavior on default boost factor for More Like This.

A boost terms factor of 1.0 is not the same as no boosting of terms.
The desired behavior is to deactivate boosting by default. If the user
specifies any value other than 0, then boosting is activated.

Closes #6021

time:
2014-05-02T10:08:05Z
class:
comments:
[DOCS] Added Twitter Storehaus client

Added Twitter Storehaus client

time:
2014-05-02T09:52:57Z
class:
src/main/java/org/elasticsearch/common/jna/CLibrary.java
comments:
Update JNA to latest version

Updating to this version allows to configure a special JNA directory,
in case the /tmp directory is mounted with the noexec option, as JNA
extracts some data and tries to execute parts of it.

Also updated documentation to clarify mlockall and memory settings as well
as pointing to the new jna.tmpdir system property.

Closes #5493

time:
2014-05-02T08:53:33Z
class:
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryParser.java
src/test/java/org/elasticsearch/search/functionscore/DecayFunctionScoreTests.java
comments:
function_score parser throws exception if both functions:[] and single function given

In addition, add a special warning if the misplaced function is a "boost_factor"
function to avoid confusion of "boost" and "boost_function".

closes #5995

time:
2014-05-01T16:18:39Z
class:
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/test/java/org/elasticsearch/index/mapper/object/SimpleObjectMappingTests.java
comments:
Support empty properties array in mappings
closes #5887

time:
2014-05-01T11:15:08Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
comments:
debug log of receiving a cluster state from another master could be erroneously logged

Added trace logging to MinimumMasterNodesTests.multipleNodesShutdownNonMasterNodes

time:
2014-05-01T07:06:34Z
class:
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
comments:
[TEST] (RecoveryPercolatorTests) Don't stop the master node and always use the client of the master node

time:
2014-05-01T07:06:34Z
class:
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
comments:
[TEST] Replace execute().actionGet() with get()

time:
2014-04-30T21:18:15Z
class:
src/main/java/org/apache/lucene/document/XStringField.java
src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/RoutingFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TypeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceScoreOrderFragmentsBuilder.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceSimpleFragmentsBuilder.java
comments:
Use non analyzed token stream optimization everywhere
In the string type, we have an optimization to reuse the StringTokenStream on a thread local when a non analyzed field is used (instead of creating it each time). We should use this across the board on all places where we create a field with a String.
Also, move to a specific XStringField, that we can reuse StringTokenStream instead of copying it.
closes #6001

time:
2014-04-30T17:33:17Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/InternalReverseNested.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedParser.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
comments:
Fixed license headers.

time:
2014-04-30T17:23:05Z
class:
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java
src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/InternalReverseNested.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNested.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedParser.java
src/main/java/org/elasticsearch/search/aggregations/support/AggregationContext.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
comments:
Added `reverse_nested` aggregation.

The `reverse_nested` aggregation allows to aggregate on properties outside of the nested scope of a `nested` aggregation.

Closes #5507

time:
2014-04-30T16:24:33Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
comments:
Use collectExistingBucket in GlobalOrdinalsSignificantTermsAggregator.WithHash.

Relates to #5955.

time:
2014-04-30T15:48:33Z
class:
src/test/java/org/elasticsearch/plugin/PluginManagerTests.java
comments:
Run tests through forbidden-apis.

time:
2014-04-30T13:34:01Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
comments:
Use collectExistingBucket in GlobalOrdinalsStringTermsAggregator.WithHash.

Relates to #5955.

time:
2014-04-30T09:47:47Z
class:
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
comments:
ThreadPool.EstimatedTimeThread should be set on initialization

Some tests run before the thread is started and thus use 0 as a the current time, which later on leads to big time jumps and thus failures.
Ex. InternalEngineTests.testVersioningReplicaConflict2

time:
2014-04-30T06:47:25Z
class:
src/main/java/org/elasticsearch/common/lucene/MultiCollector.java
src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java
src/main/java/org/elasticsearch/common/lucene/search/XCollector.java
src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java
src/main/java/org/elasticsearch/search/aggregations/Aggregator.java
src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
src/main/java/org/elasticsearch/search/aggregations/BucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java
src/main/java/org/elasticsearch/search/facet/FacetExecutor.java
src/main/java/org/elasticsearch/search/facet/FacetPhase.java
src/main/java/org/elasticsearch/search/facet/nested/NestedFacetExecutor.java
src/main/java/org/elasticsearch/search/internal/DocIdSetCollector.java
comments:
Improve the way sub-aggregations are collected.

Sub-aggregations are currently collected directly, by just forwarding the
doc ID and bucket ordinal to them. This change adds the new BucketCollector
abstract class that Aggregator extends, so that we have more flexibility to
add implicit filters or buffering between an aggregator and its sub
aggregators.

Close #5975

time:
2014-04-30T06:21:26Z
class:
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java
src/test/java/org/elasticsearch/index/fielddata/NoOrdinalsStringFieldDataTests.java
src/test/java/org/elasticsearch/index/search/nested/NestedSortingTests.java
comments:
Fix setting of readerGen in BytesRefOrdValComparator on nested documents.

Sorting was broken on nested documents because the `missing(slot)` method
didn't correctly set the segment ordinal (readerGen), causing term ordinals to
be compared across segments.

Close #5986

time:
2014-04-30T00:13:43Z
class:
src/test/java/org/elasticsearch/common/xcontent/cbor/JsonVsCborTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
comments:
Upgrade to Jackson 2.3.3
fixes the long value bug as well...

time:
2014-04-29T23:11:12Z
class:
src/test/java/org/elasticsearch/common/xcontent/cbor/JsonVsCborTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
comments:
disable using CBOR in randomized test infra
due to a bug in CBOR handling long values (test case to verify it is included), disalbe using CBOR in our tests till it gets fixed

time:
2014-04-29T21:18:20Z
class:
comments:
[REST-SPEC] update to update test, to check for es-js error messages

time:
2014-04-29T20:05:41Z
class:
src/test/java/org/elasticsearch/discovery/gce/AbstractGceComputeServiceTest.java
src/test/java/org/elasticsearch/gce/itest/GceSimpleITest.java
comments:
Update to Lucene 4.8.0/ elasticsearch 2.0.0

Latest changes break tests

Closes #21.
(cherry picked from commit 04c77e8)

time:
2014-04-29T19:59:10Z
class:
comments:
Create branch es-1.2

time:
2014-04-29T19:54:16Z
class:
src/test/java/org/elasticsearch/azure/itest/AzureSimpleITest.java
src/test/java/org/elasticsearch/discovery/azure/AzureSimpleTest.java
src/test/java/org/elasticsearch/discovery/azure/AzureTwoStartedNodesTest.java
src/test/java/org/elasticsearch/repositories/azure/AzureSnapshotRestoreITest.java
src/test/java/org/elasticsearch/repositories/azure/AzureSnapshotRestoreTest.java
comments:
Update to Lucene 4.8

Closes #14.
(cherry picked from commit 3cf0368)

time:
2014-04-29T19:46:33Z
class:
comments:
Create branch es-1.2

time:
2014-04-29T19:45:20Z
class:
src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryITest.java
src/test/java/org/elasticsearch/repositories/s3/S3SnapshotRestoreTest.java
comments:
Update to elasticsearch 2.0.0 / Lucene 4.8

Breaking changes in tests

time:
2014-04-29T19:16:25Z
class:
comments:
create branch es-1.2

time:
2014-04-29T18:36:02Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsTests.java
comments:
Added global ordinals based implementations for significant terms aggregator.

Closes #5970

time:
2014-04-29T18:25:05Z
class:
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
Range/Term query/filter on dates fail to handle numbers properly
When providing a number (milliseconds since epoch, UTC), range and term query/filter don't handle it correctly and convert it to a string, that is then first tried to parse as a date
closes #5969

time:
2014-04-29T14:50:36Z
class:
src/main/java/org/elasticsearch/common/lucene/LoggerInfoStream.java
comments:
add thread name to logger message from IndexWriter's infoStream

time:
2014-04-29T14:29:01Z
class:
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java
comments:
Fix computation of the missing ord (leftover of the ordinals change).

time:
2014-04-29T14:24:52Z
class:
comments:
[DOC] Fixed filtered_query typo

time:
2014-04-29T13:19:01Z
class:
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java
src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java
comments:
Provide meaningful error message if field has no fielddata type

closes #5930

time:
2014-04-29T09:50:13Z
class:
src/main/java/org/elasticsearch/common/lucene/LoggerInfoStream.java
comments:
include thread name when logging IndexWriter's infoStream messages

time:
2014-04-29T09:35:15Z
class:
src/main/java/org/elasticsearch/index/analysis/KuromojiPartOfSpeechFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/KuromojiIndicesAnalysis.java
src/test/java/org/elasticsearch/index/analysis/KuromojiIntegrationTests.java
comments:
Not registered as a global analyzer

The `kuromoji` analyzer is not registered as a global analyzer, so this fails:

    POST /_analyze?analyzer=kuromoji&text=J R 新宿駅の近くにビールを飲みに行こうか

    {
       "error": "ElasticsearchIllegalArgumentException[failed to find analyzer [kuromoji]]",
       "status": 400
    }

But this succeeds:

    PUT /t
    POST /t/_analyze?analyzer=kuromoji&text=J R 新宿駅の近くにビールを飲みに行こうか

Closes #31.
