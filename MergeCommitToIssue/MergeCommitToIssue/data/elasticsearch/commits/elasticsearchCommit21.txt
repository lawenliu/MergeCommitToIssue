time:
2015-02-09T15:01:46Z
class:
comments:
Update span-multi-term-query.asciidoc

added wildcard to the list of possible nested queries

Closes #9586

time:
2015-02-09T13:03:28Z
class:
src/main/java/org/elasticsearch/common/rounding/Rounding.java
src/main/java/org/elasticsearch/common/rounding/TimeZoneRounding.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramParser.java
src/test/java/org/elasticsearch/common/rounding/RoundingTests.java
src/test/java/org/elasticsearch/common/rounding/TimeZoneRoundingTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramOffsetTests.java
comments:
Aggregations: Add 'offset' option to date_histogram, replacing 'pre_offset' and 'post_offset'

Add offset option to 'date_histogram' replacing and simplifying the previous 'pre_offset' and 'post_offset' options.
This change is part of a larger clean up task for `date_histogram` from issue #9062.

time:
2015-02-09T10:45:56Z
class:
src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java
comments:
Remove unneeded bwc code

time:
2015-02-09T10:18:00Z
class:
src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortTests.java
src/test/java/org/elasticsearch/transport/netty/RepeatOnBindExceptionRule.java
comments:
Testing: Add test rule to repeat tests on binding exceptions

Due to the possibility of ports being already used when choosing a
random port, it makes sense to simply repeat a unit test upon a bind
exception.

This commit adds a junit rule, which does exactly this and does not
require you to change the test code and add loops.

Closes #9010

time:
2015-02-09T08:21:55Z
class:
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
comments:
Mapping update task back references already closed index shard

In the ShardRecoveryHandler we issue cluster update tasks to update the
mapping. The annonymous inner class backreferences the ShardRecoveryHandler
which holds a potentially large IndexShard object (which references buffers & caches etc)
If the queue of update tasks piles up and recoveries get cancled and/or shards are closed
the ShardRecoveryHandler can't be GCed. This commit moves the update task into a static
inner class to allos the GC to do its job.

time:
2015-02-09T07:13:21Z
class:
comments:
Fix typo: MecCab -> MeCab

time:
2015-02-07T09:54:21Z
class:
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
Test: testRelocationWithBusyClusterUpdateThread - listener should wait for replicas to be created

time:
2015-02-06T21:26:16Z
class:
src/main/java/org/elasticsearch/gateway/TransportNodesListGatewayStartedShards.java
src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
comments:
Logging: improve logging messages added in #9562 & #9562

Closes #9603

time:
2015-02-06T14:07:08Z
class:
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceAggregatorFactory.java
comments:
fix typo

time:
2015-02-06T13:53:20Z
class:
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/lucene/MinimumScoreCollector.java
src/main/java/org/elasticsearch/common/lucene/all/AllTermQuery.java
src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java
src/main/java/org/elasticsearch/common/lucene/search/MatchNoDocsQuery.java
src/main/java/org/elasticsearch/common/lucene/search/NoopCollector.java
src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/FunctionScoreQuery.java
src/main/java/org/elasticsearch/index/percolator/QueriesLoaderCollector.java
src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java
src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/CustomQueryWrappingFilter.java
src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
src/main/java/org/elasticsearch/index/search/nested/IncludeNestedDocsQuery.java
src/main/java/org/elasticsearch/indices/ttl/IndicesTTLService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java
src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/support/AggregationContext.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceAggregatorFactory.java
src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java
src/main/java/org/elasticsearch/search/scan/ScanContext.java
src/test/java/org/elasticsearch/search/aggregations/AggregationCollectorTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregatorTest.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Upgrade to Lucene r1657571.

Closes #9587

Squashed commit of the following:

commit 23ac91dca4b949638ca1d3842fd6db2e00ee1d36
Author: Adrien Grand <jpountz@gmail.com>
Date:   Thu Feb 5 18:42:28 2015 +0100

    Do not compute scores if aggregations do not need it (like top_hits) or use a script (which might compute scores).

commit 51262fe2681c067337ca41ab88096ef80a2e8ebb
Author: Adrien Grand <jpountz@gmail.com>
Date:   Thu Feb 5 15:58:38 2015 +0100

    Fix more compile errors.

commit a074895d55b8b3c898d23f7f5334e564d5271a56
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Feb 5 09:31:22 2015 -0500

    fix a few more obvious ones

commit 399c41186cb3c9be70107f6c25b51fc4844f8fde
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Feb 5 09:28:32 2015 -0500

    fix some collectors and queries

commit 5f46c2f846c5020d5749233b71cbe66ae534ba51
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Feb 5 09:24:24 2015 -0500

    upgrade to lucene r1657571

time:
2015-02-06T13:31:19Z
class:
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
Test: testRelocationWithBusyClusterUpdateThread - CountDownLatch.countDown should be await

time:
2015-02-06T13:27:27Z
class:
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
Test: testRelocationWithBusyClusterUpdateThread - use cluster state listener instead of assertBusy

time:
2015-02-06T11:54:30Z
class:
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
Test: add document indexing back to testCancellationCleansTempFiles

 It was lost during a merge conflict in 796aa5c3fe2424390a8edee604cd292b8afdf514

time:
2015-02-06T11:09:24Z
class:
comments:
Add warning to settings documentation about setting number_of_replicas on a closed index

Issue #9566 raises the point that setting the number of shards on a closed index can lead to this index not beeing able to open again. This change in documentation is ment to warn the user about this issue.

time:
2015-02-06T09:06:47Z
class:
src/main/java/org/elasticsearch/cluster/ClusterStateUpdateTask.java
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
Recovery: add a timeout to local mapping change check

After phase1 of recovery is completed, we check that all pending mapping changes have been sent to the master and processed by the other nodes. This is needed in order to make sure that the target node has the latest mapping (we just copied over the corresponding lucene files). To make sure we do not miss updates, we do so under a local cluster state update task. At the moment we don't have a timeout when waiting on the task to be completed. If the local node update thread is very busy, this may stall the recovery for too long. This commit adds a timeout (equal to `indices.recovery.internal_action_timeout`) and upgrade the task urgency to `IMMEDIATE`. If we fail to perform the check, we fail the recovery.

Closes #9575

time:
2015-02-05T20:44:43Z
class:
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/TypeParsers.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/test/java/org/elasticsearch/index/mapper/path/PathMapperTests.java
src/test/java/org/elasticsearch/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java
src/test/java/org/elasticsearch/search/suggest/SuggestSearchTests.java
comments:
Mappings: Remove support for new indexes using path setting in
object/nested fields or index_name in any field

Backcompat is still here for indexes created before 2.0.

closes #6677

time:
2015-02-05T17:06:33Z
class:
src/main/java/org/elasticsearch/gateway/GatewayAllocator.java
src/main/java/org/elasticsearch/gateway/ShardStateInfo.java
src/main/java/org/elasticsearch/gateway/TransportNodesListGatewayStartedShards.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
comments:
Gateway: add logging around gateway shard allocation

This commit adds more logs around the gateway shard allocation. Any errors while reaching out to nodes to list the local shards are logged in `WARN`. Shard info loading time is logged under DEBUG. Also, we log a `WARN` message if an exception forces a full checksum check during reading the store metadata

Closes #9562

time:
2015-02-05T14:29:45Z
class:
comments:
Docs: Use the new experimental annotation.

We now have a very useful annotation to mark features or parameters as
experimental. Let's use it! This commit replaces some custom text warnings with
this annotation and adds this annotation to some existing features/parameters:
 - inner_hits (unreleased yet)
 - terminate_after (released in 1.4)
 - per-bucket doc count errors in the terms agg (released in 1.4)

I also tagged with this annotation settings which should either be not needed
(like the ability to evict entries from the filter cache based on time) or that
are too deep into the way that Elasticsearch works like the Directory
implementation or merge settings.

Close #9563

time:
2015-02-05T14:18:40Z
class:
comments:
Docs: Remove the experimental status of the cardinality and percentiles(-ranks) aggregations

These aggregations are not experimental anymore but some of their parameters
still are:
 - `precision_threshold` and `rehash` on `cardinality`
 - `compression` on percentiles(-ranks)

Close #9560

time:
2015-02-05T12:00:03Z
class:
src/test/java/org/elasticsearch/recovery/FullRollingRestartTests.java
comments:
Test: add awaitFix to testFullRollingRestart

time:
2015-02-05T11:12:25Z
class:
src/test/java/org/elasticsearch/bwcompat/StaticIndexBackwardCompatibilityTest.java
comments:
Test: StaticIndexBackwardCompatibilityTest.unloadIndex should call assertAllFilesClosed

That method checks that files were release properly, but also clears a static map holding references to mock directories. Since we iterate on many indexes this created memory pressure.
nice one!


time:
2015-02-05T10:41:02Z
class:
src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java
comments:
Test: add awaitFix to SearchWithRandomExceptionsTests

disabling this until further discussion. Recent failures probably relate to #9211 & #8720 (+ friends)

time:
2015-02-05T04:27:42Z
class:
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractIndexOrdinalsFieldData.java
src/test/java/org/elasticsearch/index/fielddata/FilterFieldDataTest.java
comments:
Fielddata: Change threshold value of fielddata.filter.frequency.max/min

Make it consider 1.0 as 100% instead of aboslute count 1.

Closes: #9327

time:
2015-02-04T22:34:33Z
class:
comments:
release tool: Improve output for open github issues

time:
2015-02-04T21:17:09Z
class:
src/main/java/org/elasticsearch/index/query/functionscore/fieldvaluefactor/FieldValueFactorFunctionParser.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreFieldValueTests.java
comments:
Raise an exception on an array of values being sent as the factor for a field_value_factor query
closes #7408

time:
2015-02-04T17:42:58Z
class:
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineSettingsTest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
[ENGINE] Remove FlushType and make resources final in InternalEngine

This commit removes the FlushType entirely and replaces it in the most places with
a simple `Engine#flush()` call. Flushing without committing the translog is now
entirely private to the engine and is only called in one place.

time:
2015-02-04T16:55:15Z
class:
comments:
Docs: Updated documentation for query-string-syntax to include '>' '<' and '=' as reserved characters

Closes #9518

time:
2015-02-04T16:38:05Z
class:
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequestBuilder.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/EngineConfig.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/main/java/org/elasticsearch/rest/action/admin/indices/flush/RestFlushAction.java
src/test/java/org/elasticsearch/benchmark/scripts/expression/ScriptComparisonBenchmark.java
src/test/java/org/elasticsearch/benchmark/scripts/score/BasicScriptBenchmark.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/ttl/SimpleTTLTests.java
comments:
[ENGINE] Remove full flush / FlushType.NEW_WRITER

The `full` option and `FlushType.NEW_WRITER` only exists to allow
realtime changes to two settings (`index.codec` and `index.concurrency`).
Those settings are very expert and don't really need to be updateable
in realtime.

time:
2015-02-04T15:39:01Z
class:
src/main/java/org/elasticsearch/discovery/AckClusterStatePublishResponseHandler.java
src/main/java/org/elasticsearch/discovery/BlockingClusterStatePublishResponseHandler.java
src/main/java/org/elasticsearch/discovery/ClusterStatePublishResponseHandler.java
src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java
src/test/java/org/elasticsearch/discovery/BlockingClusterStatePublishResponseHandlerTests.java
comments:
Discovery: publishing timeout to log at WARN and indicate pending nodes

When the master publishes a new cluster state it waits (by default) for up to 30s for all nodes to respond. If not it continues to process other pending tasks. At the moment, this timeout is logged under DEBUG but it typically represent a serious issue with one or more of the nodes. We should log it in WARN and give the nodes that failed to respond in a timefly fashion

Closes #9551

time:
2015-02-04T14:38:41Z
class:
comments:
[package] stax-api is added twice

Library stax-api is added twice in final ZIP file.
It's due to the dependency tree.

```
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ elasticsearch-cloud-azure ---
[INFO] org.elasticsearch:elasticsearch-cloud-azure:jar:2.5.2-SNAPSHOT
[INFO] +- org.hamcrest:hamcrest-core:jar:1.3.RC2:test
[INFO] +- org.hamcrest:hamcrest-library:jar:1.3.RC2:test
[INFO] +- com.carrotsearch.randomizedtesting:randomizedtesting-runner:jar:2.1.10:test
[INFO] |  \- junit:junit:jar:4.10:test
[INFO] +- org.apache.lucene:lucene-test-framework:jar:4.10.2:test
[INFO] |  +- org.apache.lucene:lucene-codecs:jar:4.10.2:test
[INFO] |  +- org.apache.lucene:lucene-core:jar:4.10.2:compile
[INFO] |  +- com.carrotsearch.randomizedtesting:junit4-ant:jar:2.1.6:test
[INFO] |  \- org.apache.ant:ant:jar:1.8.2:test
[INFO] +- org.elasticsearch:elasticsearch:jar:1.4.2:compile
[INFO] |  +- org.apache.lucene:lucene-analyzers-common:jar:4.10.2:compile
[INFO] |  +- org.apache.lucene:lucene-queries:jar:4.10.2:compile
[INFO] |  +- org.apache.lucene:lucene-memory:jar:4.10.2:compile
[INFO] |  +- org.apache.lucene:lucene-highlighter:jar:4.10.2:compile
[INFO] |  +- org.apache.lucene:lucene-queryparser:jar:4.10.2:compile
[INFO] |  +- org.apache.lucene:lucene-sandbox:jar:4.10.2:compile
[INFO] |  +- org.apache.lucene:lucene-suggest:jar:4.10.2:compile
[INFO] |  +- org.apache.lucene:lucene-misc:jar:4.10.2:compile
[INFO] |  +- org.apache.lucene:lucene-join:jar:4.10.2:compile
[INFO] |  +- org.apache.lucene:lucene-grouping:jar:4.10.2:compile
[INFO] |  \- org.apache.lucene:lucene-spatial:jar:4.10.2:compile
[INFO] |     \- com.spatial4j:spatial4j:jar:0.4.1:compile
[INFO] +- com.microsoft.windowsazure:microsoft-windowsazure-api:jar:0.4.6:compile
[INFO] |  +- com.sun.jersey:jersey-client:jar:1.13:compile
[INFO] |  |  \- com.sun.jersey:jersey-core:jar:1.13:compile
[INFO] |  +- javax.inject:javax.inject:jar:1:compile
[INFO] |  +- com.sun.jersey:jersey-json:jar:1.13:compile
[INFO] |  |  +- org.codehaus.jettison:jettison:jar:1.1:compile
[INFO] |  |  |  \- stax:stax-api:jar:1.0.1:compile
[INFO] |  |  +- com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile
[INFO] |  |  |  \- javax.xml.bind:jaxb-api:jar:2.2.2:compile
[INFO] |  |  |     \- javax.xml.stream:stax-api:jar:1.0-2:compile
[INFO] |  |  +- org.codehaus.jackson:jackson-core-asl:jar:1.9.2:compile
[INFO] |  |  +- org.codehaus.jackson:jackson-mapper-asl:jar:1.9.2:compile
[INFO] |  |  +- org.codehaus.jackson:jackson-jaxrs:jar:1.9.2:compile
[INFO] |  |  \- org.codehaus.jackson:jackson-xc:jar:1.9.2:compile
[INFO] |  +- commons-logging:commons-logging:jar:1.1.1:compile
[INFO] |  +- javax.mail:mail:jar:1.4.5:compile
[INFO] |  |  \- javax.activation:activation:jar:1.1:compile
[INFO] |  \- org.apache.commons:commons-lang3:jar:3.1:compile
[INFO] +- log4j:log4j:jar:1.2.17:compile
[INFO] \- org.elasticsearch:elasticsearch:test-jar:tests:1.4.2:test
```

We should exclude `javax.xml.stream:stax-api:jar:1.0-2:compile` from `com.microsoft.windowsazure:microsoft-windowsazure-api:jar:0.4.6:compile`

Closes #56.

(cherry picked from commit 68efe93)
(cherry picked from commit 68f25d1)

time:
2015-02-04T13:55:16Z
class:
src/main/java/org/elasticsearch/cloud/azure/AzureComputeServiceImpl.java
src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java
src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobStore.java
comments:
[cleanup] collapse identical catch blocks

With Java7, you don't need multiple identical catch blocks anymore

Related to #52.

(cherry picked from commit 322e1e5)
(cherry picked from commit 9d3b0ad)

time:
2015-02-04T13:54:08Z
class:
src/main/java/org/elasticsearch/cloud/azure/AzureComputeServiceImpl.java
src/main/java/org/elasticsearch/cloud/azure/AzureStorageServiceImpl.java
src/test/java/org/elasticsearch/discovery/azure/AzureComputeServiceSimpleMock.java
src/test/java/org/elasticsearch/discovery/azure/AzureComputeServiceTwoNodesMock.java
src/test/java/org/elasticsearch/discovery/azure/AzureInstanceXmlParserTest.java
src/test/java/org/elasticsearch/repositories/azure/AzureStorageServiceMock.java
comments:
[cleanup] use diamond operator

With Java 7, we can change `Set<Instance> = new HashSet<Instance>()` to `Set<Instance> = new HashSet<>()`

Related to #52.

(cherry picked from commit 0c709de)
(cherry picked from commit 4f474f5)

time:
2015-02-04T13:53:52Z
class:
src/main/java/org/elasticsearch/cloud/azure/Instance.java
comments:
[cleanup] remove useless `;`

Related to #52.

(cherry picked from commit 0899438)
(cherry picked from commit d1a9b0b)

time:
2015-02-04T13:53:41Z
class:
src/main/java/org/elasticsearch/cloud/azure/AzureComputeServiceImpl.java
src/main/java/org/elasticsearch/cloud/azure/AzureStorageServiceImpl.java
src/main/java/org/elasticsearch/discovery/azure/AzureUnicastHostsProvider.java
comments:
[cleanup] simplify logging debug/trace code

[logging] don't use anymore `if (logger.isTraceEnabled())` or `if (logger.isDebugEnabled())`

Related to #52.

(cherry picked from commit 95381d4)
(cherry picked from commit 6d5ce44)

time:
2015-02-04T13:53:27Z
class:
src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java
src/main/java/org/elasticsearch/plugin/cloud/azure/CloudAzurePlugin.java
comments:
[cleanup] Change Logger factory

Related to #52

(cherry picked from commit a6435ab)
(cherry picked from commit f82ee58)

time:
2015-02-04T08:53:34Z
class:
src/main/java/org/elasticsearch/index/fielddata/FieldData.java
comments:
Internal: Avoid unnecessary utf8 conversion when creating ScriptDocValues for a string field.

This regression was introduced in #6908: the conversion from RandomAccessOrds
to SortedBinaryDocValues goes through Strings while both impls actually work
on BytesRef, so the SortedBinaryDocValues instance could directly return the
BytesRefs returned by the RandomAccessOrds.

Close #9306

time:
2015-02-04T06:59:33Z
class:
src/main/java/org/elasticsearch/action/AliasesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/put/RestIndexPutAliasAction.java
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
comments:
Internal: add AliasesRequest interface to mark requests that manage aliases

We currently have the IndicesRequest interface to mark indices related requests and be able to retrieve the indices they relate to in a generic way. This commit introduces a similar abstraction for requests that manage aliases, to be able to retrieve/replace the aliases they relate to.

Also, IndicesAliasesRequest becomes a CompositeIndicesRequest, as it allows to perform multiple operations (e.g. add/remote multiple aliases). Each single operation (AliasActions) implements now the newly introduced AliasesRequest.

AliasesRequest is also implemented by GetAliasesRequest, which allows to retrieve aliases information.

Closes #9460

time:
2015-02-03T20:36:05Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/indices/state/RareClusterStateTests.java
src/test/java/org/elasticsearch/test/disruption/BlockClusterStateProcessing.java
comments:
Discovery: check index uuid when merging incoming cluster state into local

In big deployment ClusterState can be large. To make sure we keep reusing objects that were promoted to the Old Gen, ZenDiscovery has an optimization where it tries to reuse existing IndexMetaData object (containing among other things the mappings) from the current cluster state if they didn't change. The comparison currently uses the index name and the metadata version. This is however not enough and we should also check the index uuid. In extreme cases, where cluster state processing is slow and the index in question is deleted and recreated and these operations are batch processed together, we can use the wrong meta data if the version is also identical. This can happen if people create the index with all meta data predefined and no settings were changed.

Closes #9489
Closes #9541

time:
2015-02-03T17:12:15Z
class:
src/main/java/org/elasticsearch/common/lucene/MultiCollector.java
src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java
comments:
Search: Reuse Lucene's MultiCollector.

We could reuse Lucene's MultiCollector instead of implementing our own.

Close #9549

time:
2015-02-03T15:51:36Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
comments:
Aggs: Make the nested aggregation call sub aggregators with doc IDs in order.

Close #9547

time:
2015-02-03T15:46:54Z
class:
src/test/java/org/elasticsearch/test/rest/client/RestClient.java
comments:
[TEST] RestClient to use a non static pooling connection manager

When closing an instance of RestClient, the connection manager gets shutdown, which makes it not usable anymore. If that is static, like it is now, no RestClient will work anymore from that moment on. Each instance of RestClient should have its own instance of connection manager

time:
2015-02-03T15:16:19Z
class:
src/main/java/org/elasticsearch/common/lucene/docset/DocIdSets.java
src/main/java/org/elasticsearch/common/lucene/index/FilterableTermsEnum.java
src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java
src/test/java/org/elasticsearch/common/lucene/docset/DocIdSetsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
comments:
Search: Avoid calling DocIdSets.toSafeBits.

This method is heavy as it builds a bitset out of a DocIdSet in order to be
able to provide random-access. Now that Lucene has removed out-of-order scoring
true random-access is very rarely needed and we could instead return an Bits
instance that wraps the iterator. Ideally, we would use the DISI API directly
but I have to admit that the Bits API is more friendly.

Close #9546

time:
2015-02-03T14:51:51Z
class:
src/test/java/org/elasticsearch/transport/netty/SimpleNettyTransportTests.java
comments:
[TEST] Move SimpleNettyTransportTests to expected exception

 Replaced try catch with expected exception, since no additional check was done on the exception thrown.

time:
2015-02-03T14:51:44Z
class:
src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortTests.java
comments:
[TEST] Remove needless ClusterScope annotation from NettyTransportMultiPortTests

NettyTransportMultiPortTests is not an integration test, it doesn't rely on the test cluster thus the ClusterScope annotation doesn't have any effect.

time:
2015-02-03T09:18:18Z
class:
src/test/java/org/elasticsearch/test/rest/section/MatchAssertion.java
comments:
[TEST] Make sure that match assertion throws error if run against an object

We had a REST test that relied on matching a json response against a regex. It worked but the match wasn't done against the actual json object, but its java map representation converted into a string by calling `toString`. Since all other clients test runners don't work in this case, as they try to match a json object against a regex, we should do the same and prevent it from working.

time:
2015-02-03T09:17:50Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
src/test/java/org/elasticsearch/test/rest/RestTestExecutionContext.java
src/test/java/org/elasticsearch/test/rest/Stash.java
src/test/java/org/elasticsearch/test/rest/client/RestResponse.java
src/test/java/org/elasticsearch/test/rest/json/JsonPath.java
src/test/java/org/elasticsearch/test/rest/support/Features.java
src/test/java/org/elasticsearch/test/rest/test/JsonPathTests.java
comments:
[TEST] support stashed values within property names in our REST tests

Closes #9533

time:
2015-02-03T08:32:42Z
class:
src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java
comments:
Test: reduce load in RecoveryWhileUnderLoadTests

time:
2015-02-03T05:10:08Z
class:
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
core: add 'checksum' option for index.shard.check_on_startup

The current "checkindex" on startup is very very expensive. This is
like running one of the old school hard drive diagnostic checkers and
usually not a good idea.

But we can do a CRC32 verification of files. We don't even need to
open an indexreader to do this, its much more lightweight.

This option (as well as the existing true/false) are randomized in
tests to find problems.

Also fix bug where use of the current option would always leak
an indexwriter lock.

Closes #9183

time:
2015-02-02T21:10:56Z
class:
src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/query/CommonTermsQueryParser.java
src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java
src/main/java/org/elasticsearch/index/query/FuzzyLikeThisFieldQueryParser.java
src/main/java/org/elasticsearch/index/query/FuzzyQueryParser.java
src/main/java/org/elasticsearch/index/query/GeoBoundingBoxFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoDistanceFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoDistanceRangeFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoShapeFilterParser.java
src/main/java/org/elasticsearch/index/query/MissingFilterParser.java
src/main/java/org/elasticsearch/index/query/PrefixFilterParser.java
src/main/java/org/elasticsearch/index/query/PrefixQueryParser.java
src/main/java/org/elasticsearch/index/query/RangeFilterParser.java
src/main/java/org/elasticsearch/index/query/RangeQueryParser.java
src/main/java/org/elasticsearch/index/query/RegexpFilterParser.java
src/main/java/org/elasticsearch/index/query/RegexpQueryParser.java
src/main/java/org/elasticsearch/index/query/TermFilterParser.java
src/main/java/org/elasticsearch/index/query/TermQueryParser.java
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/index/query/TermsQueryParser.java
src/main/java/org/elasticsearch/index/query/WildcardQueryParser.java
src/main/java/org/elasticsearch/index/query/support/QueryParsers.java
src/main/java/org/elasticsearch/index/search/MatchQuery.java
src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java
src/test/java/org/elasticsearch/count/query/CountQueryTests.java
src/test/java/org/elasticsearch/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/search/query/SearchQueryTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryStringTests.java
comments:
Mappings: Remove type prefix support from field names in queries

This is the first part of #8872.

time:
2015-02-02T18:49:45Z
class:
src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java
src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java
src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java
src/main/java/org/elasticsearch/common/breaker/NoopCircuitBreaker.java
src/main/java/org/elasticsearch/common/util/BigArrays.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
src/main/java/org/elasticsearch/indices/breaker/AllCircuitBreakerStats.java
src/main/java/org/elasticsearch/indices/breaker/BreakerSettings.java
src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerService.java
src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerStats.java
src/main/java/org/elasticsearch/indices/breaker/HierarchyCircuitBreakerService.java
src/main/java/org/elasticsearch/indices/breaker/NoneCircuitBreakerService.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCacheListener.java
src/test/java/org/elasticsearch/common/breaker/MemoryCircuitBreakerTests.java
src/test/java/org/elasticsearch/common/util/BigArraysTests.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerUnitTests.java
src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerTests.java
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Merge branch 'pr/8795'

time:
2015-02-02T18:37:45Z
class:
src/main/java/org/elasticsearch/index/analysis/FieldNameAnalyzer.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/mapper/MapperAnalyzer.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/mapper/lucene/DoubleIndexingDocTest.java
src/test/java/org/elasticsearch/index/mapper/lucene/StoredNumericValuesTest.java
comments:
Core: upgrade to Lucene snapshot r1656366

  * IndexWriter deadlock and DV update concurrency fix
  * BytesRef reuse bug with SortedSetDVTermsEnum
  * Int overflow skip data corruption bug
  * Compound file API cleanups
  * IndexWriter doesn't accept per-doc Analyzer anymore

Closes #9524

time:
2015-02-02T17:25:37Z
class:
comments:
service.bat file will explicitly use the Windows find command.

If `find` maps to something other than the Windows find command, the
installation will succeed, but use the incorrect Java version.

time:
2015-02-02T17:23:01Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramParser.java
src/test/java/org/elasticsearch/common/rounding/RoundingTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/HistogramTests.java
comments:
Aggregations: Add 'offset' option to histogram aggregation

Histogram aggregation supports an 'offset' option to move bucket boundaries.
In a histogram with buckets of size X these can be moved from 0, X, 2X, 3X,...
by an offset value of Y to Y, X+Y, 2X+Y, 3X+Y... by using the 'offset' option.
The previous 'pre_offset' and 'post_offset' options are removed in favour of
the simplified 'offset' option.

Closes #9417
Closes #9505

time:
2015-02-02T16:27:41Z
class:
comments:
Update Groovy dependency to 2.4.0

time:
2015-02-02T16:11:04Z
class:
comments:
REST: Add skip "stash_in_path" feature to nodes.info/20_transport test

Required for clients that don't yet do stash lookups when resolving
fieldnames like "nodes.$master.transport"

time:
2015-02-02T15:12:41Z
class:
comments:
REST-spec: Allow stashed values to be used in property names as well

Fix the nodes.info/20_transport test to use the master node, rather
than to rely on applying a regex to the whole $body

time:
2015-02-02T08:45:42Z
class:
src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortIntegrationTests.java
comments:
Tests: Ensure no use of potentially resolving internal ips

time:
2015-02-02T08:32:53Z
class:
src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryTests.java
comments:
Test: add trace logging to testNodeFailuresAreProcessedOnce

time:
2015-02-02T07:17:55Z
class:
src/main/java/org/elasticsearch/transport/Transport.java
src/main/java/org/elasticsearch/transport/TransportInfo.java
src/main/java/org/elasticsearch/transport/TransportService.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
src/main/java/org/elasticsearch/transport/netty/NettyTransportChannel.java
src/test/java/org/elasticsearch/client/transport/FailAndRetryMockTransport.java
src/test/java/org/elasticsearch/test/transport/MockTransportService.java
src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortIntegrationTests.java
src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortTests.java
src/test/java/org/elasticsearch/transport/netty/NettyTransportTests.java
comments:
Netty Transport: Add profiles to transport infos

Until now, there was no possibility to expose infos about configured
transport profiles. This commit adds the ability to expose those
information in the TransportInfo class.

The channel was well as the netty pipeline handler now also contain
the profile they were configured for, as this information cannot be
extracted elsewhere.

In addition, each profile now can set its own publish host and port,
which might be needed in case of portforwarding or using docker.

Closes #9134

time:
2015-02-01T21:29:21Z
class:
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsContext.java
src/test/java/org/elasticsearch/search/innerhits/InnerHitsTests.java
comments:
inner hits: Fix bug that resolves parent docs properly as inner hit when inner hit is defined on has_parent query.

time:
2015-02-01T21:27:00Z
class:
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsContext.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsFetchSubPhase.java
comments:
cleanup: Move catching of IOException higher op the stack to reduce the number of try-catch clauses.

time:
2015-02-01T19:13:57Z
class:
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
comments:
Remove unneeded null checks from IndicesClusterStateService

time:
2015-01-31T22:48:34Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
Revert "[ENGINE] Fail engine if Lucene commit fails"

This reverts commit dda72428484b4a5d79b6d9c97d56365851a79543.

time:
2015-01-31T15:45:38Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
[ENGINE] Fail engine if Lucene commit fails

This is similar to refresh, if we fail to commit the data we have to fail the
engine since in-ram data is likely discarded. Yet, it's still in translog and might
be recoverable when the node is restarted but we have to treat the engine as failed.

time:
2015-01-30T22:55:19Z
class:
src/main/java/org/elasticsearch/script/groovy/GroovySandboxExpressionChecker.java
src/test/java/org/elasticsearch/script/GroovySandboxScriptTests.java
comments:
Disallow method pointer expressions in Groovy scripting

time:
2015-01-30T22:25:58Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/indices/IndicesLifecycle.java
src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerTests.java
comments:
Add `beforeIndexAddedToCluster` callback

This callback is executed only once, on the master node during an
index's creation. An exception thrown during this listener will cancel
the index creation.

This also adds checks in `IndicesClusterStateService` for the
indexService being null as well as if the `indicesService.createIndex`
throws an exception on data nodes after an index has already been
created.

time:
2015-01-30T22:22:27Z
class:
src/test/java/org/elasticsearch/indices/cache/query/IndicesQueryCacheTests.java
comments:
[TESTS] IndicesQueryCacheTests: Ensure that shards are searchable before starting to query them.

time:
2015-01-30T20:06:28Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java
src/test/java/org/elasticsearch/recovery/RecoveriesCollectionTests.java
comments:
Recovery: update access time of ongoing recoveries

#8720 introduced a timeout mechanism for ongoing recoveries, based on a last access time variable. In the many iterations on that PR the update of the access time was lost. This adds it back, including a test that should have been there in the first place.

Closes #9506

time:
2015-01-30T19:02:18Z
class:
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
src/main/java/org/elasticsearch/search/SearchService.java
src/test/java/org/elasticsearch/indices/cache/query/IndicesQueryCacheTests.java
comments:
Search: Remove query-cache serialization optimization.

The query-cache has an optimization to not deserialize the bytes at the shard
level. However this is a bit fragile since it assumes that serialized streams
can be concatenanted (which is not the case with shared strings) and also does
not update the QueryResult object that is held by the SearchContext. So you
need to make sure to use the right one.

With this change, the query cache just deserializes bytes into the QueryResult
object from the context.

Close #9500

time:
2015-01-30T12:52:26Z
class:
src/main/java/org/elasticsearch/index/engine/Engine.java
comments:
Remove dead code

time:
2015-01-30T12:24:08Z
class:
src/main/java/org/elasticsearch/index/merge/policy/LogByteSizeMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/LogDocMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/TieredMergePolicyProvider.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
comments:
Reset MergePolicProvider settings only if the value actually changed

Due to some unreleased refactorings we lost the persitence of
a perviously set values in MergePolicyProvider. This commit adds this
back and adds a simple unittest.

Closes #8890

time:
2015-01-30T10:14:40Z
class:
src/main/java/org/elasticsearch/discovery/ec2/AwsEc2UnicastHostsProvider.java
src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java
src/main/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryModule.java
comments:
Move AwsEc2UnicastHostsProvider to Ec2DiscoveryModule

Related to https://github.com/elasticsearch/elasticsearch/pull/9099

time:
2015-01-29T21:42:07Z
class:
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Tests: Add type-unrestricted version of field mapper getter to SearchContext.

This fixes an NPE when using TestSearchContext in SignificanceHeuristicTests.

time:
2015-01-29T21:18:21Z
class:
src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java
comments:
also remove force option from logger.trace

time:
2015-01-29T19:57:12Z
class:
comments:
Docs: Fixed asciidoc error in snapshots.asciidoc

time:
2015-01-29T19:27:20Z
class:
comments:
Docs: minor syntax

Closes #9481

time:
2015-01-29T19:24:08Z
class:
comments:
Docs: Update pattern-replace-charfilter.asciidoc

Remove invalid trailing comma from json

Closes #9477

time:
2015-01-29T18:49:38Z
class:
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
comments:
Aggs: Remove limitation on field access within aggs to the types
provided in the search

Currently, doing a field lookup within a terms agg will restrict the
fields available to those within the types passed into the search
request.  However, when doing sub aggs within a children agg, the
fields available should not be restricted to those of the search.

This change makes the field lookup use the index level mapper service.

time:
2015-01-29T18:17:41Z
class:
comments:
[Docs] fix missing space

time:
2015-01-29T16:43:32Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
src/main/java/org/elasticsearch/action/delete/DeleteResponse.java
src/main/java/org/elasticsearch/action/get/GetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/index/IndexResponse.java
src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/action/update/UpdateResponse.java
src/main/java/org/elasticsearch/client/transport/TransportClient.java
src/main/java/org/elasticsearch/common/io/CachedStreams.java
src/main/java/org/elasticsearch/common/io/stream/AdapterStreamInput.java
src/main/java/org/elasticsearch/common/io/stream/AdapterStreamOutput.java
src/main/java/org/elasticsearch/common/io/stream/CachedStreamInput.java
src/main/java/org/elasticsearch/common/io/stream/HandlesStreamInput.java
src/main/java/org/elasticsearch/common/io/stream/HandlesStreamOutput.java
src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
src/main/java/org/elasticsearch/common/rounding/TimeZoneRounding.java
src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java
src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java
src/main/java/org/elasticsearch/index/get/GetResult.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/search/SearchShardTarget.java
src/main/java/org/elasticsearch/search/highlight/HighlightField.java
src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
src/main/java/org/elasticsearch/search/internal/InternalSearchHitField.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/local/LocalTransportChannel.java
src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
src/main/java/org/elasticsearch/transport/netty/NettyTransportChannel.java
src/test/java/org/elasticsearch/common/io/streams/HandlesStreamsTests.java
comments:
Remove HandlesStreamInput/Output

The optimization we do in the HandlesStreamInput / Output
adds a lot of complexity with a rather unknown benefit. It tries
to compress commonly used strings and write ids instead. This
should rather be done on a lower level if at all necessary for
the small message we send over the network.

time:
2015-01-29T16:41:53Z
class:
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
Fix compilation

time:
2015-01-29T16:30:00Z
class:
src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/ShardRefreshRequest.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java
src/main/java/org/elasticsearch/action/delete/TransportShardDeleteAction.java
src/main/java/org/elasticsearch/action/get/TransportGetAction.java
src/main/java/org/elasticsearch/action/get/TransportShardMultiGetAction.java
src/main/java/org/elasticsearch/action/index/TransportIndexAction.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/main/java/org/elasticsearch/rest/action/admin/indices/refresh/RestRefreshAction.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
[ENGINE] Remove dirty flag and force boolean for refresh

Today we have a dirty flag indicating that a refresh must
be executed. We also allow users to bypass this by setting
a force=true boolean on the refresh request / command. All
these flags are unneeded since the SearcherManager has all
the information to do the right thing if it's dirty or not.

time:
2015-01-29T16:27:08Z
class:
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
comments:
[CACHE] Use a smaller expected size when serializing query results

BytesStreamOutput allows to pass the expected size but by default uses
BigArrays.PAGE_SIZE_IN_BYTES which is 16k. A common cached result ie.
a date histogram with 3 buckets is ~100byte so 16k might be very wasteful
since we don't shrink to the actual size once we are done serializing.
By passing 512 as the expected size we will resize the byte array in the stream
slowly until we hit the page size and don't waste too much memory for small query
results.

time:
2015-01-29T15:26:04Z
class:
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/store/ExceptionRetryTests.java
comments:
core: disable auto gen id optimization

This pr removes the optimization for auto generated ids.
Previously, when ids were auto generated by elasticsearch then there was no
check to see if a document with same id already existed and instead the new
document was only appended. However, due to lucene improvements this
optimization does not add much value. In addition, under rare circumstances it might
cause duplicate documents:

When an indexing request is retried (due to connect lost, node closed etc),
then a flag 'canHaveDuplicates' is set to true for the indexing request
that is send a second time. This was to make sure that even
when an indexing request for a document with autogenerated id comes in
we do not have to update unless this flag is set and instead only append.

However, it might happen that for a retry or for the replication the
indexing request that has the canHaveDuplicates set to true (the retried request) arrives
at the destination before the original request that does have it set false.
In this case both request add a document and we have a duplicated a document.
This commit adds a workaround: remove the optimization for auto
generated ids and always update the document.
The asumtion is that this will not slow down indexing more than 10 percent,
see: http://benchmarks.elasticsearch.org/

closes #8788
closes #9468

time:
2015-01-29T14:56:24Z
class:
comments:
Docs: Fix sample query

Closes #9472

time:
2015-01-29T09:59:36Z
class:
src/main/java/org/elasticsearch/common/io/stream/BytesStreamOutput.java
src/main/java/org/elasticsearch/index/cache/query/ShardQueryCache.java
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
comments:
[CACHE] Use correct number of bytes in query cache accounting

today we use the length of the BytesReference which is misleading since
the reference is paged such that the length != ramBytesUsed. This can lead
to a way higher memory consuption than expected if query results are tiny
since each query result requires at least 16kb. Yet, we should rethink this
strategy for query results that are very small ie. less than 20% of the ramBytesUsed
but this commit first tries to make the acocunting correct.

time:
2015-01-29T08:51:14Z
class:
src/main/java/org/elasticsearch/common/bytes/HashedBytesArray.java
src/main/java/org/elasticsearch/common/bytes/ReleasableBytesReference.java
src/main/java/org/elasticsearch/common/bytes/ReleasablePagedBytesReference.java
src/main/java/org/elasticsearch/common/io/ReleasableBytesStream.java
src/main/java/org/elasticsearch/common/io/stream/ReleasableBytesStreamOutput.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
src/main/java/org/elasticsearch/transport/netty/NettyTransportChannel.java
comments:
Remove Unused code and remove unnecessary abstraction

HashedBytesArray is not used anymore and Releable makes only sense on
Paged implementation such that the marker interface is unneeded.

time:
2015-01-29T00:09:27Z
class:
src/main/java/org/elasticsearch/script/ScriptService.java
src/main/java/org/elasticsearch/script/groovy/GroovySandboxExpressionChecker.java
src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
src/test/java/org/elasticsearch/script/GroovySandboxScriptTests.java
comments:
Make `script.groovy.sandbox.method_blacklist_patch` truly append-only

Additionally, this setting can be specified in elasticsearch.yml if
desired, to pre-populate the list of methods to be added to the default
blacklist.

When making a change to this setting dynamically, the entire blacklist
is logged as well.

time:
2015-01-28T21:43:15Z
class:
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/TypeParsers.java
src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/completion/CompletionFieldMapperTests.java
src/test/java/org/elasticsearch/index/mapper/merge/TestMergeMapperTests.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingOnClusterTests.java
src/test/java/org/elasticsearch/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/search/query/SearchQueryTests.java
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java
src/test/java/org/elasticsearch/search/suggest/ContextSuggestSearchTests.java
src/test/java/org/elasticsearch/search/suggest/SuggestSearchTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Mappings: Remove `index_analyzer` setting to simplify analyzer logic

The `analyzer` setting is now the base setting, and `search_analyzer`
is simply an override of the search time analyzer.  When setting
`search_analyzer`, `analyzer` must be set.

closes #9371

time:
2015-01-28T20:49:50Z
class:
src/main/java/org/elasticsearch/script/ScriptService.java
comments:
Avoid NullPointerException if optional Groovy jar is removed

time:
2015-01-28T19:26:09Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/script/ScriptModule.java
src/main/java/org/elasticsearch/script/ScriptService.java
src/main/java/org/elasticsearch/script/groovy/GroovySandboxExpressionChecker.java
src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
src/main/java/org/elasticsearch/watcher/FileWatcher.java
src/test/java/org/elasticsearch/script/GroovySandboxScriptTests.java
src/test/java/org/elasticsearch/script/ScriptServiceTests.java
comments:
Make groovy sandbox method blacklist dynamically additive

Using the `script.groovy.sandbox.method_blacklist_patch` setting, the
blacklist can be dynamically *added* to by specifying a comma-separated
list of methods (for example, "toString,size" would add .toString and
.size to the blacklist).

When the `script.groovy.sandbox.method_blacklist_patch` setting is
changed, the script cache is cleared to force new scripts to be
recompiled. Additionally the on-disk cache is cleared so that scripts in
the `config/scripts` directory are re-compiled as well.

This also fixes an issue where script engines were injected more than
once, which can cause multiple instances of the script engine per node.

time:
2015-01-28T16:47:20Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/InternalExtendedStats.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ExtendedStatsTests.java
comments:
Aggregations: Add standard deviation bounds to extended_stats

Extended_stats now displays the upper and lower bounds on standard deviations (e.g. avg +/- std).
Default is to show 2 std above/below, but can be changed using the `sigma` parameter.
Accepts non-negative doubles

Closes #9356

time:
2015-01-28T15:30:02Z
class:
src/main/java/org/elasticsearch/monitor/process/SigarProcessProbe.java
comments:
Nodes Stats: Fix open file descriptors count on Windows

Closes #1563

time:
2015-01-28T14:54:13Z
class:
comments:
Docs: Update snapshots.asciidoc

minor syntax

Closes #9457

time:
2015-01-28T14:03:26Z
class:
src/main/java/org/elasticsearch/common/geo/GeoPoint.java
src/main/java/org/elasticsearch/common/geo/GeoUtils.java
src/main/java/org/elasticsearch/common/geo/builders/BaseLineStringBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiLineStringBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiPointBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiPolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/PointBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/PointCollection.java
src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java
src/main/java/org/elasticsearch/index/search/geo/GeoPolygonFilter.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
Revert "[GEO] Update GeoPolygonFilter to handle ambiguous polygons"

This reverts commit 06667c6aa898895acd624b8a71a6e00ff7ae32b8 which introduces an undesireable dependency on JTS.

time:
2015-01-28T13:19:59Z
class:
comments:
Docs: Improved the template query docs

Added the `file` and `id` parameters.

Closes #9458

time:
2015-01-28T10:45:28Z
class:
src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
comments:
Aggregations: Unify histogram implementations

This change makes InternalHistogram the only InternalAggregation used by the Histogram Aggregator. There is still a separate Bucket implementation and Factory implementation. All buckets are created through the factory passed into the InternalHistogram meaning and the correct factory implementation is serialised as part of the aggregation to make sure the correct bucket types are always generate.

This is needed by the Transformers (namely the derivative transformer) to allow it to generate buckets of the right type without having to know what the underlying bucket implementation is.

time:
2015-01-28T10:34:58Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
Test: testOldIndexes should disable merging

It verifies some segments need to be upgraded, but if they are merged away, there are upgraded implicitly

time:
2015-01-28T08:14:23Z
class:
src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/test/java/org/elasticsearch/benchmark/recovery/ReplicaRecoveryBenchmark.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/test/BackgroundIndexer.java
comments:
Recovery: flush immediately after a remote recovery finishes (unless there are ongoing ones)

To properly replicate, we currently stop flushing during recovery so we can repay the translog once copying files are done. Once recovery is done, the translog will be flushed by a background thread that, by default, kicks in every 5s. In case of a recovery failure and a quick re-assignment of a new shard copy, we may fail to flush before starting a new recovery, causing it to deal with potentially even longer translog. This commit makes sure we flush immediately when the ongoing recovery count goes to 0.

I also added a simple recovery benchmark.

Closes #9439

time:
2015-01-28T02:06:29Z
class:
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java
comments:
Snapshot/Restore: better handling of index deletion during snapshot

If an index is deleted during initial state of the snapshot operation, the entire snapshot can fail with NPE. This commit improves handling of this situation and allows snapshot to continue if partial snapshots are allowed.

Closes #9024

time:
2015-01-27T23:23:03Z
class:
src/test/java/org/elasticsearch/cluster/ClusterInfoServiceTests.java
comments:
Test: always use replicas in testClusterInfoServiceInformationClearOnError

It assume the local node always has a shard

time:
2015-01-27T21:45:05Z
class:
src/main/java/org/elasticsearch/common/geo/GeoPoint.java
src/main/java/org/elasticsearch/common/geo/GeoUtils.java
src/main/java/org/elasticsearch/common/geo/builders/BaseLineStringBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiLineStringBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiPointBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiPolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/PointBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/PointCollection.java
src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java
src/main/java/org/elasticsearch/index/search/geo/GeoPolygonFilter.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
[GEO] Update GeoPolygonFilter to handle ambiguous polygons

PR #8672 addresses ambiguous polygons - those that either cross the dateline or span the map - by complying with the OGC standard right-hand rule. Since ```GeoPolygonFilter``` is self contained logic, the fix in #8672 did not address the issue for the ```GeoPolygonFilter```. This was identified in issue #5968

This fixes the ambiguous polygon issue in ```GeoPolygonFilter``` by moving the dateline crossing code from ```ShapeBuilder``` to ```GeoUtils``` and reusing the logic inside the ```pointInPolygon``` method.  Unit tests are added to ensure support for coordinates specified in either standard lat/lon or great-circle coordinate systems.

closes #5968
closes #9304
hey @nknize I am afraid this import might cause problems here. The jts dependency is optional in our pom, but this import here makes it mandatory I'm afraid?

Looks like it's breaking many plugins http://build.elasticsearch.org/


time:
2015-01-27T21:38:08Z
class:
src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/test/java/org/elasticsearch/cluster/ClusterInfoServiceTests.java
src/test/java/org/elasticsearch/cluster/routing/ClusterInfoServiceTests.java
comments:
Internal: ClusterInfoService should wipe local cache upon unknown exceptions

 The InternalClusterInfoService reaches out to the nodes to get information about their disk usage and shard store size. Upon a node level error we currently remove the node info from the local cache. We should also clear the cache when we run into an error on the action level (excluding any info from all nodes).

 This also adds settings for the timeout used when waiting for nodes.

Closes #9449

time:
2015-01-27T20:52:14Z
class:
comments:
[DOCS] Update documentation for `max_token_length`

In 1.4 the behavior is different due to
https://issues.apache.org/jira/browse/LUCENE-5897

time:
2015-01-27T18:14:56Z
class:
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
comments:
#9444 join lines

Fixes #9445

time:
2015-01-27T18:14:56Z
class:
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/test/java/org/elasticsearch/index/mapper/dynamic/DynamicMappingTests.java
comments:
#9444 throw StrictDynamicMappingException exception if dynamic is 'strict' and undeclared field value is NULL, test for this

Fixes #9445

time:
2015-01-27T17:15:44Z
class:
src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java
comments:
[TEST] remove AwaitsFix from DeleteByQuery test

time:
2015-01-27T16:30:51Z
class:
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/mapper/all/SimpleAllMapperTests.java
src/test/java/org/elasticsearch/index/mapper/date/SimpleDateMappingTests.java
src/test/java/org/elasticsearch/index/mapper/lucene/DoubleIndexingDocTest.java
src/test/java/org/elasticsearch/index/mapper/lucene/StoredNumericValuesTest.java
src/test/java/org/elasticsearch/index/mapper/size/SizeMappingTests.java
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
src/test/java/org/elasticsearch/index/mapper/ttl/TTLMappingTests.java
comments:
Mappings: Remove type level default analyzers

closes #8874

time:
2015-01-27T12:10:38Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/HistogramTests.java
comments:
[TEST] Fix HistogramTests

Fixed histogram tests for value scripts as it was picking the wrong buckets form the bucket list following the removal of the getBucketByKey method

time:
2015-01-27T11:53:47Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregatorTest.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Aggs: nested agg needs to reset root doc between segments.

Closes #9437
Closes #9436

time:
2015-01-27T11:38:16Z
class:
src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java
comments:
Internal: fix shard state tranport action names

When we renamed all of the transport actions in #7105, shard started and failed were flipped around by mistake. This commit fixes their naming.

Closes #9440

time:
2015-01-27T10:53:44Z
class:
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
src/main/java/org/elasticsearch/search/aggregations/bucket/MultiBucketsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/Filters.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFilters.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGrid.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGrid.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramInterval.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/Histogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/DateRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/InternalDateRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistance.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/InternalGeoDistance.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/IPv4Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/InternalIPv4Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/Terms.java
src/test/java/org/elasticsearch/index/fielddata/FieldDataFilterIntegrationTests.java
src/test/java/org/elasticsearch/percolator/PercolatorFacetsAndAggregationsTests.java
src/test/java/org/elasticsearch/search/aggregations/CombiTests.java
src/test/java/org/elasticsearch/search/aggregations/RandomTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramOffsetTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/FilterTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/GeoHashGridTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/HistogramTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/IPv4RangeTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/MinDocCountTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/MissingTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/NestedTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/RangeTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ShardReduceTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ShardSizeTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsBackwardCompatibilityTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TermsDocCountErrorTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/AvgTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ExtendedStatsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/MaxTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/MinTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/PercentileRanksTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/PercentilesTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/StatsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/SumTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
Aggregations: Clean up response API for Aggregations

This change makes the response API object for Histogram Aggregations the same for all types of Histogram, and does the same for all types of Ranges.
The change removes getBucketByKey() from all aggregations except filters and terms. It also reduces the methods on the Bucket class to just getKey() and getKeyAsString().
The getKey() method returns Object and the actual Type is returns will be appropriate for the type of aggregation being run. e.g. date_histogram will return a DateTime for this method and Histogram will return a Number.

time:
2015-01-27T10:02:43Z
class:
src/main/java/org/elasticsearch/index/merge/scheduler/MergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
Minor hygiene, Removed Redundant inheritance

Close #9427

time:
2015-01-27T09:48:40Z
class:
comments:
Docs: Update cluster.asciidoc

Clarify the preferencing.

Closes #9434

time:
2015-01-27T01:45:04Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
comments:
[TEST] Add `ensureGreen` to indices created in TopHitsTests

time:
2015-01-27T01:26:04Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/NestedTests.java
comments:
[TEST] Add `ensureGreen` where needed in NestedTests

time:
2015-01-27T01:01:08Z
class:
src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java
comments:
[TEST] Mute DeleteByQueryTests.testDeleteAllOneIndex

See:
https://github.com/elasticsearch/elasticsearch/issues/9421

time:
2015-01-26T20:58:36Z
class:
comments:
Docs: added searchkick

Closes #9416

time:
2015-01-26T17:36:35Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
comments:
Aggs: fix handling of the same child doc id being processed multiple times in the `reverse_nested` aggregation.

Closes #9263
Closes #9345

time:
2015-01-26T17:14:17Z
class:
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
src/main/java/org/elasticsearch/index/mapper/MapperBuilders.java
src/main/java/org/elasticsearch/index/mapper/ParseContext.java
src/main/java/org/elasticsearch/index/mapper/ParsedDocument.java
src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/AnalyzerMapper.java
src/main/java/org/elasticsearch/percolator/MultiDocumentPercolatorIndex.java
src/main/java/org/elasticsearch/percolator/SingleDocumentPercolatorIndex.java
src/main/java/org/elasticsearch/search/highlight/HighlighterContext.java
src/main/java/org/elasticsearch/search/highlight/PlainHighlighter.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/mapper/analyzer/AnalyzerMapperTests.java
src/test/java/org/elasticsearch/index/mapper/lucene/DoubleIndexingDocTest.java
src/test/java/org/elasticsearch/index/mapper/lucene/StoredNumericValuesTest.java
src/test/java/org/elasticsearch/search/highlight/HighlighterSearchTests.java
comments:
Mappings: Remove _analyzer

closes #9279

time:
2015-01-26T16:46:21Z
class:
src/main/java/org/elasticsearch/cluster/DiskUsage.java
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java
src/test/java/org/elasticsearch/cluster/DiskUsageTests.java
comments:
Relax restrictions on filesystem size reporting

Apparently some filesystems such as ZFS and occasionally NTFS can report
filesystem usages that are negative, or above the maximum total size of
the filesystem. This relaxes the constraints on `DiskUsage` so that an
exception is not thrown.

If 0 is passed as the totalBytes, `.getFreeDiskAsPercentage()` will
always return 100.0% free (to ensure the disk threshold decider fails
open)

Fixes #9249
Relates to #9260

time:
2015-01-26T16:41:25Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/NestedTests.java
comments:
Nested aggregator: Fix handling of multiple buckets being emitted for the same parent doc id.

This bug was introduced by #8454 which allowed the childFilter to only be consumed once. By adding the child docid buffering multiple buckets can now be emitted by the same doc id. This child docid buffering only happens in the scope of the current root document, so the amount of child doc ids buffered is small.

Closes #9317
Closes #9346

time:
2015-01-26T16:30:43Z
class:
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
[TEST] mute test for now becasue we have an issue for it

time:
2015-01-26T11:17:52Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/NestedTests.java
comments:
aggs: The `nested` aggregator's parent filter is n't resolved properly in the case the nested agg gets created on the fly for buckets that are constructed during query execution.

The fix is the move the parent filter resolving from the nextReader(...) method to the collect(...) method, because only then any parent nested filter's parent filter is then properly instantiated.

Closes #9280
Closes #9335

time:
2015-01-26T10:14:38Z
class:
src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java
comments:
[TEST] check that primaries succeeded

We want to check if at least the primaries succeeded if we do not
wait for green and not if all succeeded if we wait for green.
That was a misconception in c617af37e830b77da73d3e36327f5590ba226468

time:
2015-01-26T09:33:57Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportNodesSnapshotsStatus.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java
src/main/java/org/elasticsearch/action/support/nodes/NodesOperationRequest.java
comments:
Snapshot status api: make sure headers and request context are handed over to inner nodes request

Closes #9409

time:
2015-01-26T08:59:01Z
class:
src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java
comments:
Test: add logging to SearchWithRandomExceptionsTests

time:
2015-01-25T20:01:45Z
class:
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
comments:
Upgrade to lucene r1654549 snapshot.

Closes #9402.

Squashed commit of the following:

commit 85c71b6478441a73738c81f02257193f9837f3ba
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Jan 24 11:24:36 2015 -0500

    upgrade to lucene r1654549 snapshot

time:
2015-01-23T22:41:37Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
Core: do not throttle recovery indexing operations when replaying transaction log

Closes #9396

Closes #9394

time:
2015-01-23T21:59:42Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
Tests: Tweaking static bwc tests to improve stability

time:
2015-01-23T21:20:23Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Tests: Add memory info to static bwc index tests.

time:
2015-01-23T17:06:12Z
class:
comments:
Closes #9398

time:
2015-01-23T16:12:33Z
class:
src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java
comments:
[TESTS] ensureGreen, else reported successful shards will be lower than expected

time:
2015-01-23T15:41:56Z
class:
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
comments:
[TESTS] Mute test until issue is resolved

time:
2015-01-23T15:05:59Z
class:
comments:
Changed all rest-spec definitions of expand_wildcards to be an enum
with values: open, closed, none, all

Relates to #9295

time:
2015-01-23T14:40:30Z
class:
src/main/java/org/elasticsearch/action/ActionWriteResponse.java
src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java
src/test/java/org/elasticsearch/document/DocumentActionsTests.java
src/test/java/org/elasticsearch/document/ShardInfoTests.java
comments:
[TEST] Check for total shards >= number of shards instead of ==

Requests are sent to two shard copies in case a shard is relocating.
This will show up in the the _shards header. Therefore we must check
with greaterThanOrEqualTo(..).

time:
2015-01-22T15:47:14Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestBuilder.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java
src/test/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestTest.java
src/test/java/org/elasticsearch/bwcompat/ClusterStateBackwardsCompat.java
src/test/java/org/elasticsearch/cluster/SimpleClusterStateTests.java
comments:
Rest: Adding support of multi-index query parameters for _cluster/state

Adding missing support for the multi-index query parameters 'ignore_unavailable',
'allow_no_indices' and 'expand_wildcards' to '_cluster/state' API. These
parameters are supposed to be supported for APIs that work across multiple indices.
So far overwriting the default settings per REST call was not possible which is
fixed here.

Closes #5229
Closes #9295

time:
2015-01-21T13:40:49Z
class:
comments:
Docs: Add R client to docs

Closes #9376

time:
2015-01-21T09:33:33Z
class:
comments:
Docs: Change "There are few concepts" to "There are a few concepts"

Closes #8888

time:
2015-01-20T23:41:53Z
class:
src/test/java/org/elasticsearch/count/query/CountQueryTests.java
src/test/java/org/elasticsearch/search/query/SearchQueryTests.java
comments:
Tests: Rename tests with the same name

These two tests are confusing because they have the same class name in
different packages.  This results in accidentally looking at the wrong
file when trying to open the test by class name. They are also
not "simple"..

time:
2015-01-20T20:49:47Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/TransportRestoreSnapshotAction.java
src/main/java/org/elasticsearch/snapshots/RestoreService.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Snapshot/Restore: add support for changing index settings during restore process

Closes #7887

time:
2015-01-20T19:08:42Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
Tests: Block replica check for static index bwc tests until all pending
tasks are complete

Blocking once replicas are set to 0 here should remove the chance of a
race condition while the replicas are being removed.

time:
2015-01-20T17:54:03Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
Tests: Increase timeout for waiting on replicas for static index tests

time:
2015-01-20T15:42:39Z
class:
comments:
Docs: clearer MLT documentation

Closes #9351

time:
2015-01-20T14:01:05Z
class:
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
[TEST] mute test, we have issue #9270 for it

time:
2015-01-20T12:20:05Z
class:
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/test/java/org/elasticsearch/cluster/metadata/MappingMetaDataParserTests.java
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
comments:
[Mapper] Add `ignore_missing` option to `timestamp`

Related to #9049.

By default, the default value for `timestamp` is `now` which means the date the document was processed by the indexing chain.

You can now reject documents which not provide a `timestamp` value by setting `ignore_missing` to false (default to `true`):

```js
{
    "tweet" : {
        "_timestamp" : {
            "enabled" : true,
            "ignore_missing" : false
        }
    }
}
```

When you update the cluster to 1.5 or master, this index created with 1.4 we automatically migrate an index created with 1.4 to the 1.5 syntax.

Let say you have defined this in elasticsearch 1.4.x:

```js
DELETE test
PUT test
{
  "settings": {
    "number_of_shards": 1,
    "number_of_replicas": 0
  }
}
PUT test/type/_mapping
{
  "type" : {
      "_timestamp" : {
          "enabled" : true,
          "default" : null
      }
  }
}
```

After migration, the mapping become:

```js
{
   "test": {
      "mappings": {
         "type": {
            "_timestamp": {
               "enabled": true,
               "store": false,
               "ignore_missing": false
            },
            "properties": {}
         }
      }
   }
}
```

Closes #8882.

time:
2015-01-20T01:28:33Z
class:
src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatTests.java
comments:
Tests: Make sure snapshots created with old version of elasticsearch can be restored

Closes #8968

time:
2015-01-19T20:52:29Z
class:
src/main/java/org/elasticsearch/index/translog/TranslogService.java
comments:
Core: change default xlog size from 200 MB to 512 MB

Closes #9341

time:
2015-01-19T20:31:29Z
class:
comments:
Docs: Fix missing comma and boolean true

Closes #9350

time:
2015-01-19T19:00:39Z
class:
src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptTests.java
comments:
[TEST] fix scores in ExplainableScriptTests

time:
2015-01-19T17:56:45Z
class:
comments:
docs: fix inner hits snippet

time:
2015-01-19T15:27:52Z
class:
src/main/java/org/elasticsearch/tribe/TribeService.java
src/test/java/org/elasticsearch/tribe/TribeTests.java
comments:
Tribe node: remove closed indices from cluster state

At startup the tribe node ignores closed indices, but if you closed an index that was part of the tribe node cluster state, its state change was not currently handled. A NullPointerException could be seen in the logs instead as the routing table for the closed index was null. As a result, the index stayed in the tribe node cluster state in open state, although that didn't reflect reality. Also, subsequent cluster state updates happening in the tribe node kept failing, affecting updates related to any other index. The only way to recover from this was to restart the tribe node every time an index is closed on any tribe.

This commit properly handles index state changes, making sure that when an index gets closed it gets removed from the tribe node cluster state. Note that it makes little sense to keep the closed index around in the tribe node, as from the tribe node you can't do anything with it. The tribe node simply doesn't see any closed index, it's the same as if they didn't exist.

Closes #6411
Closes #9334

time:
2015-01-19T14:47:09Z
class:
comments:
Dependencies: Upgrade netty to 3.10.0.Final

Changelog is available at
http://netty.io/news/2014/12/17/3-9-6-Final-and-3-10-0-Final.html

Closes #9132

time:
2015-01-19T14:10:54Z
class:
src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerTests.java
comments:
Pass through all exceptions in IndicesLifecycleListeners

This allows a plugin or user that registers a listener to be able to
stop actions like creating an index or starting a shard by throwing an
exception. Previously all exceptions were logged without being rethrown.

time:
2015-01-19T12:44:47Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/ScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/WeightFactorFunction.java
src/main/java/org/elasticsearch/script/ExplainableSearchScript.java
src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptPlugin.java
src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptTests.java
comments:
scripts: add explainable script again

explainable scripts were removed in #7245 but they were used.
This commit adds them again.

closes #8561

time:
2015-01-19T11:12:38Z
class:
src/main/java/org/elasticsearch/index/query/QueryBuilders.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryParser.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
function_score: use query and filter together

Before, if filter and query was defined for function_score, then the
filter was silently ignored. Now, if both is defined then function score
query wraps this in a filtered_query.

closes #8638
closes #8675

time:
2015-01-19T10:53:27Z
class:
src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java
src/test/java/org/elasticsearch/benchmark/mapping/ManyMappingsBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/GlobalOrdinalsBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/HistogramAggregationSearchBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/QueryFilterAggregationSearchBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/SubAggregationSearchCollectModeBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/TermsAggregationSearchBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/TimeDataHistogramAggregationBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/child/ChildSearchAndIndexingBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/child/ChildSearchBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/child/ChildSearchShortCircuitBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/nested/NestedSearchBenchMark.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
src/test/java/org/elasticsearch/cluster/allocation/ClusterRerouteTests.java
src/test/java/org/elasticsearch/gateway/GatewayIndexStateTests.java
src/test/java/org/elasticsearch/gateway/QuorumGatewayTests.java
src/test/java/org/elasticsearch/gateway/RecoveryFromGatewayTests.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/index/store/CorruptedTranslogTests.java
src/test/java/org/elasticsearch/index/store/ExceptionRetryTests.java
src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryTests.java
src/test/java/org/elasticsearch/indices/state/RareClusterStateTests.java
src/test/java/org/elasticsearch/indices/store/IndicesStoreIntegrationTests.java
src/test/java/org/elasticsearch/indices/warmer/GatewayIndicesWarmerTests.java
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/stresstest/fullrestart/FullRestartStressTest.java
src/test/java/org/elasticsearch/stresstest/manyindices/ManyIndicesStressTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalNode.java
comments:
cleanup: Remove `gateway.type: local`

This property was removed in 45408844e786fe9c3eb3a8faa6c65ad4fa638a61 and 1247774ff1e91e762fe102d6e167f3da8c4a27ff

closes #9128

time:
2015-01-19T10:42:52Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
comments:
Children aggregation: The children aggs' post collection translates the buckets on the parent level to the child level and because of that it needs to invoke the post collection of its nested aggs.

Closes #9271

time:
2015-01-19T10:42:40Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
comments:
Fix identation

time:
2015-01-19T08:51:10Z
class:
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
Introduce index option named 'index.percolator.map_unmapped_fields_as_string', that handles unmapped fields in percolator queries as type string.

Closes #9053
Closes #9054

time:
2015-01-18T00:39:35Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/cluster/settings/DynamicSettings.java
src/main/java/org/elasticsearch/snapshots/RestoreService.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
Snapshot/Restore: add validation of restored persistent settings

Closes #8830

time:
2015-01-16T19:08:29Z
class:
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
comments:
[GEO] NPE parsing GeoJSON polygon with single LinearRing

ShapeBuilder threw a NPE when a polygon coordinate array consisted of a single LinearRing. This PR fixes the error handling to throw a more useful ElasticsearchParseException to provide the user with better insight into the problem.

time:
2015-01-16T18:50:17Z
class:
src/test/java/org/elasticsearch/indices/settings/UpdateSettingsTests.java
comments:
test must start with auto_throttle enabled

time:
2015-01-16T18:41:02Z
class:
src/main/java/org/elasticsearch/rest/action/admin/indices/upgrade/RestUpgradeAction.java
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
Upgrade: Fix version check in bytes to upgrade that spans major versions

The previous check did not account for major version, so upgrading to
5.1 caused 4.1 (from 0.90.0.Beta1) to look the same as current master.

time:
2015-01-16T18:00:08Z
class:
src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java
src/main/java/org/apache/lucene/store/StoreUtils.java
src/main/java/org/elasticsearch/index/merge/MergeStats.java
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/store/distributor/AbstractDistributor.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/test/java/org/elasticsearch/indices/settings/UpdateSettingsTests.java
src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Core: switch to auto IO throttle for merges

This adds a new boolean (index.merge.scheduler.auto_throttle) dynamic
setting, default true (matching Lucene), to adaptively set the IO rate
limit for merges over time.

This is more flexible than the previous fixed rate throttling because
it responds depending on the incoming merge rate, so search-heavy
applications that are not doing much indexing will see merges heavily
throttled while indexing-heavy cases will lighten the throttle so
merges can keep up within incoming indexing.

The fixed rate throttling is still available as a fallback if things
go horribly wrong.

Closes #9243

Closes #9133

time:
2015-01-16T14:43:16Z
class:
comments:
Add chewy ruby client to docs

Closes #9322

time:
2015-01-16T13:26:50Z
class:
comments:
Update api-conventions.asciidoc

Corrected explanation of fuzzy AUTO

Related to #9278

time:
2015-01-16T13:24:54Z
class:
comments:
Add #8720 to the resiliency page

Closes #9277

time:
2015-01-16T12:55:22Z
class:
comments:
Update upgrade.asciidoc

Upgrade request needs pretty and human for the demonstrated output.

Closes #9313

time:
2015-01-16T11:15:59Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
[TESTS] Mute OldIndexBackwardsCompatibilityTests.

time:
2015-01-16T08:37:29Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/lucene/MinimumScoreCollector.java
src/main/java/org/elasticsearch/common/lucene/MultiCollector.java
src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java
src/main/java/org/elasticsearch/common/lucene/search/NoopCollector.java
src/main/java/org/elasticsearch/index/percolator/QueriesLoaderCollector.java
src/main/java/org/elasticsearch/index/search/nested/IncludeNestedDocsQuery.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java
src/main/java/org/elasticsearch/search/aggregations/RecordingPerReaderBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/DeferringBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/support/AggregationContext.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsContext.java
src/main/java/org/elasticsearch/search/scan/ScanContext.java
src/test/java/org/elasticsearch/index/search/child/ChildrenQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentQueryTests.java
comments:
Upgrade to lucene-5.1.0-snapshot-1652032.

This new Lucene snapshot does not have out-of-order scoring anymore.

Close #9318

time:
2015-01-16T07:57:46Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Fix snapshot flag accidentally switched for 1.0 beta2

time:
2015-01-16T07:12:41Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
Tests: Add final missing static bwc index for 1.2.0

See #9297

time:
2015-01-16T07:02:02Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
Remove irrelevant bwc comment

time:
2015-01-16T06:54:26Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterPostingsFormat.java
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/index/codec/postingformat/Elasticsearch090RWPostingsFormat.java
comments:
Backcompat: Fix backcompat for 0.90.0.Beta1 indexes

time:
2015-01-16T06:52:41Z
class:
src/main/java/org/elasticsearch/Version.java
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
Tests: Add tests for missing static indexes, and ensure newly added
versions will force indexes to be added.

time:
2015-01-16T00:57:47Z
class:
src/test/java/org/elasticsearch/indices/leaks/IndicesLeaksTests.java
src/test/java/org/elasticsearch/test/store/MockDirectoryHelper.java
comments:
[TEST] Mmm, still wrap wrappers still its needed post closing dir
previous push was partial by mistake, we still need the wrapped dirs around after being closed for the test infra, for now, explicitly clear it in the leak test (which is still bad apple)

time:
2015-01-16T00:38:10Z
class:
src/test/java/org/elasticsearch/indices/leaks/IndicesLeaksTests.java
src/test/java/org/elasticsearch/test/store/MockDirectoryHelper.java
comments:
[TEST] Mock Directory didn't clean wrapped dirs
I ran the bad apple test for index memory leaks and still saw leaks, it seems like we don't properly clean the dirs from the static mock test dir wrapper

time:
2015-01-15T20:33:29Z
class:
comments:
Docs: Updated standard token filter docs to indicate true behavior: doing nothing

Closes #9300

time:
2015-01-15T18:11:30Z
class:
comments:
A getHits() was forgotten!

(cherry picked from commit 11b3053)
(cherry picked from commit 89294e9)

time:
2015-01-15T10:11:16Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
comments:
Add validator for `cluster.routing.allocation.disk` boolean settings

`cluster.routing.allocation.disk.include_relocations` and
`cluster.routing.allocation.disk.reroute_interval` are both boolean
settings, so they should have the `Validator.BOOLEAN` applied.

Fixes #9309

time:
2015-01-14T16:04:51Z
class:
src/main/java/org/elasticsearch/discovery/azure/AzureDiscovery.java
src/main/java/org/elasticsearch/discovery/azure/AzureDiscoveryModule.java
comments:
Move AzureUnicastHostsProvider to AzureDiscoveryModule

Related to elasticsearch/elasticsearch#9099

Closes #48

time:
2015-01-14T15:13:10Z
class:
comments:
don't mention fixed throttling in the docs

time:
2015-01-14T10:35:09Z
class:
src/main/java/org/apache/lucene/store/StoreUtils.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/merge/MergeStats.java
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/merge/scheduler/MergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/store/DirectoryService.java
src/main/java/org/elasticsearch/index/store/IndexStore.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/StoreStats.java
src/main/java/org/elasticsearch/index/store/distributor/AbstractDistributor.java
src/main/java/org/elasticsearch/index/store/fs/FsDirectoryService.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/index/store/distributor/DistributorTests.java
src/test/java/org/elasticsearch/indices/settings/UpdateSettingsTests.java
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
put back fixed throttling, but off by default

time:
2015-01-14T10:26:37Z
class:
src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java
src/main/java/org/apache/lucene/store/StoreRateLimiting.java
src/main/java/org/apache/lucene/store/StoreUtils.java
comments:
put back fixed throttling, but off by default

time:
2015-01-13T20:42:48Z
class:
src/main/java/org/elasticsearch/Version.java
src/test/java/org/elasticsearch/VersionTests.java
comments:
Internal: Change snapshot state for unreleased versions and add
validation tests for constants

Currently the snapshot flag for Version constants is only set to true
for CURRENT.  However, this means that the snapshot state changes from
branch to branch.  Instead, snapshot should be "is this version
released?".  This change also adds a validation test checking that
ID -> constant and vice versa are correct, and fixes one bug found there
(for an unreleased version).

time:
2015-01-13T19:21:21Z
class:
src/main/java/org/elasticsearch/index/merge/MergeStats.java
src/main/java/org/elasticsearch/index/store/StoreStats.java
comments:
remove version checks

time:
2015-01-13T17:08:12Z
class:
src/main/java/org/elasticsearch/cache/recycler/PageCacheRecycler.java
src/main/java/org/elasticsearch/common/recycler/Recyclers.java
src/main/java/org/elasticsearch/common/util/AbstractBigArray.java
src/main/java/org/elasticsearch/common/util/BigArrays.java
src/main/java/org/elasticsearch/common/util/BigDoubleArray.java
src/main/java/org/elasticsearch/common/util/BigFloatArray.java
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/search/dfs/DfsPhase.java
src/test/java/org/elasticsearch/benchmark/common/recycler/RecyclerBenchmark.java
src/test/java/org/elasticsearch/common/recycler/SoftConcurrentRecyclerTests.java
src/test/java/org/elasticsearch/test/cache/recycler/MockPageCacheRecycler.java
comments:
Internal: clean up memory reuse a bit.

 - don't allow for soft references anymore in the recycler
 - remove some abusive thread locals
 - don't recycle independently float/double and int/long pages, they are the
   same and just interpret bits differently.

Close #9272

time:
2015-01-13T17:05:09Z
class:
src/main/java/org/elasticsearch/common/lucene/ReaderContextAware.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/WeightFactorFunction.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefFieldComparatorSource.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleValuesComparatorSource.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java
src/main/java/org/elasticsearch/search/aggregations/Aggregator.java
src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/BucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/FilteringBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/NonCollectingAggregator.java
src/main/java/org/elasticsearch/search/aggregations/RecordingPerReaderBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/DeferringBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/SingleBucketAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/global/GlobalAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/missing/MissingAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistanceParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/metrics/MetricsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/NumericMetricsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/AvgAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/MaxAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/MinAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractPercentilesAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/StatsAggegator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/SumAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregator.java
src/main/java/org/elasticsearch/search/aggregations/support/AggregationContext.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceAggregatorFactory.java
src/main/java/org/elasticsearch/search/fetch/script/ScriptFieldsFetchSubPhase.java
src/main/java/org/elasticsearch/search/sort/ScriptSortParser.java
comments:
Aggregations: simplifications.

BucketAggregationMode used to be part of the framework, now it's only an
implementation detail of the terms, histogram, geohash grid and scripted
aggregators.

Aggregator.estimatedBucketCount() was a complicated way to do the initial sizing
of the data structures, but it did not work very well in practice and was rather
likely to lead to over-sized data-structures causing OOMEs. It's removed now and
all data-structures start with a size of 1 and grow exponentially.

Aggregator.preCollection() is now symetric with postCollection(): it exists on
all aggregation objects where postCollection() also is and recursively calls its
children.

Fixed other minor issues related to generics and exceptions.

Close #9097

time:
2015-01-13T16:23:59Z
class:
src/main/java/org/elasticsearch/common/joda/DateMathParser.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/search/aggregations/support/format/ValueParser.java
src/test/java/org/elasticsearch/common/joda/DateMathParserTests.java
comments:
Query cache: Make the query cache usable on time-based data.

The query cache has a mechanism that disables it automatically when
SearchContext.nowInMillis() is used. One issue with that is that the date math
parser always evaluates the current timestamp when parsing a date, even if it
is not needed. As a consequence, whenever you use a date expression in your
queries, the query cache would not be used.

Close #9225

time:
2015-01-13T14:22:01Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java
src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequest.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerRequest.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerRequest.java
src/main/java/org/elasticsearch/action/count/CountRequest.java
src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java
src/main/java/org/elasticsearch/action/exists/ExistsRequest.java
src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java
comments:
Java API: package private getters to become public if there have corresponding public setters

Some of our Java API requests have public setters but their corresponding getters are package private only. This commit makes those getters public as well.

Closes #9273

time:
2015-01-13T09:49:32Z
class:
src/main/java/org/elasticsearch/common/util/DoubleObjectPagedHashMap.java
src/test/java/org/elasticsearch/common/util/DoubleObjectHashMapTests.java
comments:
Remove unused DoubleObjectPagedHashMap.

time:
2015-01-13T08:49:26Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
comments:
[Mapper] Using default=null for _timestamp field creates a index loss on restart

Step to reproduce:

* Create new index and type.

```
DELETE new_index
PUT new_index
 {
    "mappings": {
    	"power": {
	        "_timestamp" : {
	            "enabled" : true,
	            "default": null
	        }
	    }
    }
}
```

* Add a document

```
PUT new_index/power/1
{
    "foo": "bar"
}
```

* Restart cluster ... and **index is missing**...

```
GET new_index
```

Gives IndexMissingException

Closes #9223.

(cherry picked from commit e654a2c)
(cherry picked from commit aef3bc2)

time:
2015-01-12T22:53:18Z
class:
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestParser.java
comments:
Mappings: Remove fieldSearchAnalyzer and fieldSearchQuoteAnalyzer from
MapperService.

Instead, get the FieldMapper for the field and check the analyzer there.

time:
2015-01-12T22:40:04Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
Internal: Log when upgrade starts and stops

closes #9227

time:
2015-01-12T21:18:00Z
class:
comments:
Updates the command to add the repo to not use add-apt-repository, which automatically adds a non-working deb-src line to sources.list. Command now uses echo to write the correct line to sources.list instead.

Fixes #9261

time:
2015-01-12T17:27:27Z
class:
comments:
Tests: Fix failure introduced in #8967

time:
2015-01-12T16:42:59Z
class:
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
comments:
Tests: Fix test failure introduced in #8967

time:
2015-01-12T16:26:59Z
class:
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
comments:
Mapping: serialize doc values settings for _timestamp

This change fixes _timestamp's serialization method to write out
`doc_values` and `doc_values_format`, which could already be set,
but would not be written out.

closes #8893
closes #8967

time:
2015-01-12T15:58:16Z
class:
comments:
Fix typo in sample json

Fixes #9253

time:
2015-01-12T14:04:37Z
class:
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/indices/IndicesLifecycle.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/main/java/org/elasticsearch/search/SearchService.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerSingleNodeTests.java
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerTests.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
Pass index settings where appropriate in IndicesLifecycle

This allows plugins to be able to perform some needed setup before and
after an index/shard is in use.

time:
2015-01-12T13:21:31Z
class:
src/test/java/org/elasticsearch/gateway/RecoveryFromGatewayTests.java
comments:
[TEST] Re-add rebalance disable setting in RecoveryFromGatewayTests

time:
2015-01-12T11:37:46Z
class:
src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java
comments:
Rest: remove status code from main action

Today we give the HTTP status back within the HTTP response itself and within the JSON response as well:

```sh
curl localhost:9200/
```

```js
{
  "status" : 200,
  "name" : "Red Wolf",
  "version" : {
    "number" : "2.0.0",
    "build_hash" : "6837a61d8a646a2ac7dc8da1ab3c4ab85d60882d",
    "build_timestamp" : "2014-08-19T13:55:56Z",
    "build_snapshot" : true,
    "lucene_version" : "4.9"
  },
  "tagline" : "You Know, for Search"
}
```

time:
2015-01-12T11:24:40Z
class:
comments:
Windows: makes elasticsearch.bat more friendly to automated processes

On Windows platforms when JAVA_HOME is not defined, a message is printed on standard output and the bat script is paused until the user press a key. This behavior is not compliant to automated processes where elasticsearch.bat can be executed by another script. This commit adds a new parameter --silent / -s that allow to skip the pause. Also, the error message is directed to standard and error outputs.

 Closes #8913

time:
2015-01-12T11:13:23Z
class:
comments:
[Docs] fix three to four

time:
2015-01-12T09:32:14Z
class:
src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java
src/main/java/org/elasticsearch/indices/breaker/HierarchyCircuitBreakerService.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
comments:
fixup! fixup! add support for registering custom circuit breaker

time:
2015-01-12T09:29:23Z
class:
src/test/java/org/elasticsearch/test/rest/support/Features.java
comments:
Test: Only run the test that verifies the `pending` field in the `_shards` header if the test cluster has two are more data nodes.

time:
2015-01-11T10:52:43Z
class:
src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java
src/main/java/org/elasticsearch/index/merge/MergeStats.java
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/test/java/org/elasticsearch/indices/settings/UpdateSettingsTests.java
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
expose current CMS throttle in merge stats; fix tests, docs; also log per-merge  stop/throttle/rate

time:
2015-01-10T21:38:56Z
class:
src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java
src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java
src/main/java/org/apache/lucene/store/StoreRateLimiting.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/merge/MergeStats.java
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/merge/scheduler/MergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/store/DirectoryService.java
src/main/java/org/elasticsearch/index/store/IndexStore.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/StoreStats.java
src/main/java/org/elasticsearch/index/store/StoreUtils.java
src/main/java/org/elasticsearch/index/store/distributor/AbstractDistributor.java
src/main/java/org/elasticsearch/index/store/fs/FsDirectoryService.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/index/store/distributor/DistributorTests.java
src/test/java/org/elasticsearch/indices/settings/UpdateSettingsTests.java
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
first cut

time:
2015-01-10T14:19:30Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java
src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java
src/main/java/org/elasticsearch/cluster/routing/RoutingService.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySettings.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
src/test/java/org/elasticsearch/VersionTests.java
src/test/java/org/elasticsearch/cluster/node/DiscoveryNodeTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryTests.java
src/test/java/org/elasticsearch/recovery/RecoverySettingsTest.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Recovery: be more resilient to partial network partitions

This commits adds a test that simulate disconnecting nodes and dropping requests during the various stages of recovery and solves all the issues that were raised by it. In short:

1) On going recoveries will be scheduled for retry upon network disconnect. The default retry period is 5s (cross node connections are checked every 10s by default).
2) Sometimes the disconnect happens after the target engine has started (but the shard is still in recovery). For simplicity, I opted to restart the recovery from scratch (where little to no files will be copied again, because there were just synced).
3) To protected against dropped requests, a Recovery Monitor was added that fails a recovery if no progress has been made in the last 30m (by default), which is equivalent to the long time outs we use in recovery requests.
4) When a shard fails on a node, we try to assign it to another node. If no such node is available, the shard will remain unassigned, causing the target node to clean any in memory state for it (files on disk remain). At the moment the shard will remain unassigned until another cluster state change happens, which will re-assigned it to the node in question but if no such change happens the shard will remain stuck at unassigned. The commits adds an extra delayed reroute in such cases to make sure the shard will be reassinged
5) Moved all recovery related settings to the RecoverySettings.

Closes #8720

time:
2015-01-10T11:25:39Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
use Lucene's 4.10.3 version constant

time:
2015-01-09T22:45:27Z
class:
src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
Don't pass indexing buffer side to the translog

time:
2015-01-09T20:40:44Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
Tests: Add logic to handle static index upgrade case where index is
already on latest version.

See #9207

time:
2015-01-09T17:12:31Z
class:
src/main/java/org/apache/lucene/index/memory/ExtendedMemoryIndex.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/merge/policy/ElasticsearchMergePolicy.java
src/main/java/org/elasticsearch/index/merge/policy/FilterDocValuesProducer.java
src/main/java/org/elasticsearch/index/merge/policy/VersionFieldUpgrader.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/test/java/org/elasticsearch/index/merge/policy/VersionFieldUpgraderTest.java
src/test/java/org/elasticsearch/index/search/child/ChildrenQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentQueryTests.java
src/test/java/org/elasticsearch/test/ElasticsearchLuceneTestCase.java
comments:
core: upgrade to lucene 5 r1650327.

refactor _version docvalues migration to be more efficient.

closes #9206

time:
2015-01-09T16:10:58Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/InternalNumericMetricsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/metrics/NumericMetricsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/metrics/NumericValuesSourceMetricsAggregatorParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/ValuesSourceMetricsAggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/Avg.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/AvgAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/InternalAvg.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/Cardinality.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/InternalCardinality.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/InternalMax.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/Max.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/MaxAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/InternalMin.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/Min.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/MinAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractInternalPercentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractPercentilesAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractPercentilesParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentileRanks.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanks.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/Percentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/InternalStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/Stats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/StatsAggegator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/InternalExtendedStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/InternalSum.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/Sum.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/SumAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCount.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCount.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregator.java
src/test/java/org/elasticsearch/search/aggregations/metrics/AvgTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ExtendedStatsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/MaxTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/MinTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/PercentilesTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/StatsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/SumTests.java
comments:
Aggregations: Numeric metric aggregations are now formattable

You can now specify `format` in the request definition for most numeric metric aggregations. The exceptions are Percentile_Ranks, Cardinality and Value_Count as the response type of these can be different from the field type so the formatter won't work.

Closes #6812

time:
2015-01-09T11:29:11Z
class:
comments:
[TEST] Add missing docs and tests for '_cat/segments'

The '_cat/segments' api was missing docs and a rest test which are added here.

Closes #5856

time:
2015-01-09T01:04:16Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
[ENGINE] Simplify Engine construction and ref counting

Today the internal engine closes itself it the engine hits an exception
it can not recover from. This complicates a lot of refcounting issues
if such an exception happens during engine creation. This commit
only markes the engine as failed and let the user close it once the exception
bubbles up. Additionally it rolls back the indexwriter to prevent any changes after
the engine is failed.

time:
2015-01-08T22:58:46Z
class:
src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java
comments:
Serialize the rest status code, not the rest status enum.

time:
2015-01-08T20:33:17Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
comments:
Mapping With a `null` Default Timestamp Causes NullPointerException on Merge

I have a field with a `null` [default `_timestamp` value](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/mapping-timestamp-field.html#mapping-timestamp-field-default) and when I try to update the mapping I get a server error caused by a `NullPointerException`

```
[2015-01-08 17:28:56,040][DEBUG][action.admin.indices.mapping.put] [...] failed to put mappings on indices [[feed_170_v1, feed_204_v1, feed_229_v1, feed_232_v1, feed_239_v1, feed_248_v1, feed_268_v1, feed_256_v1, feed_272_v1, feed_159_v1, feed_255_v1, feed_164_v1, feed_259_v1, feed_266_v1, feed_188_v1, feed_240_v1, feed_233_v1, feed_13_v1, feed_184_v1, feed_261_v1, feed_267_v1, feed_271_v1, feed_257_v1, feed_172_v1, feed_238_v1, feed_254_v1, feed_223_v1, feed_274_v1, feed_203_v1, feed_269_v1, feed_262_v1, feed_205_v1, feed_168_v1, feed_219_v1, feed_253_v1, feed_251_v1, feed_173_v1, feed_252_v1, feed_210_v1, feed_216_v1, feed_218_v1, feed_118_v1, feed_273_v1, feed_227_v1, feed_166_v1, feed_213_v1, feed_226_v1]], type [history]
java.lang.NullPointerException
        at org.elasticsearch.index.mapper.internal.TimestampFieldMapper.merge(TimestampFieldMapper.java:287)
        at org.elasticsearch.index.mapper.object.ObjectMapper.merge(ObjectMapper.java:936)
        at org.elasticsearch.index.mapper.DocumentMapper.merge(DocumentMapper.java:693)
        at org.elasticsearch.cluster.metadata.MetaDataMappingService$4.execute(MetaDataMappingService.java:508)
        at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:329)
        at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:153)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
```

https://github.com/elasticsearch/elasticsearch/blob/v1.4.2/src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java#L286

Looks like the existence of default timestamp is not checked before use. The next line also has the same issue -- uses of default timestamp without checked to see if it's not null.

To reproduce:

```
$ curl -XPUT localhost:9200/twitter2

$ curl -XPUT localhost:9200/twitter2/tweet/_mapping -d '{
     "tweet" : {
         "_timestamp" : {
             "enabled" : true,
             "default" : null
         }
     }
}'

$ curl -XPUT localhost:9200/twitter2/tweet/_mapping -d '{
     "tweet" : {
         "_timestamp" : {
             "enabled" : true,
             "default" : null
         },
         "properties": {
             "user": {"type": "string"}
         }
     }
}'
```

Closes #9204.

(cherry picked from commit 62c6d63)

time:
2015-01-08T19:53:48Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/bwcompat/StaticIndexBackwardCompatibilityTest.java
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
Tests: Add upgrade step to static bwc tests

time:
2015-01-08T17:13:40Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/test/java/org/elasticsearch/index/mapper/simple/SimpleMapperTests.java
comments:
Mappings: Remove allow_type_wrapper setting

Before Elasticsearch 1.0, the type was allowed to be passed as the root
element when uploading a document.  However, this was ambiguous if the
mappings also contained a field with the same name as the type.  The
behavior was changed in 1.0 to not allow this, but a setting was added
for backwards compatibility.  This change removes the setting for 2.0.

time:
2015-01-08T17:10:08Z
class:
src/main/java/org/elasticsearch/action/ActionWriteResponse.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java
src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java
src/main/java/org/elasticsearch/action/bulk/BulkShardResponse.java
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/delete/DeleteResponse.java
src/main/java/org/elasticsearch/action/delete/IndexDeleteResponse.java
src/main/java/org/elasticsearch/action/delete/ShardDeleteResponse.java
src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java
src/main/java/org/elasticsearch/action/delete/TransportIndexDeleteAction.java
src/main/java/org/elasticsearch/action/delete/TransportShardDeleteAction.java
src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryResponse.java
src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryResponse.java
src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryResponse.java
src/main/java/org/elasticsearch/action/deletebyquery/TransportDeleteByQueryAction.java
src/main/java/org/elasticsearch/action/deletebyquery/TransportIndexDeleteByQueryAction.java
src/main/java/org/elasticsearch/action/deletebyquery/TransportShardDeleteByQueryAction.java
src/main/java/org/elasticsearch/action/index/IndexResponse.java
src/main/java/org/elasticsearch/action/index/TransportIndexAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportIndexReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportIndicesReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java
src/main/java/org/elasticsearch/action/update/UpdateResponse.java
src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java
src/main/java/org/elasticsearch/rest/action/delete/RestDeleteAction.java
src/main/java/org/elasticsearch/rest/action/deletebyquery/RestDeleteByQueryAction.java
src/main/java/org/elasticsearch/rest/action/index/RestIndexAction.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java
src/test/java/org/elasticsearch/document/DocumentActionsTests.java
src/test/java/org/elasticsearch/document/ShardInfoTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Core: Added `_shards` header to all write responses.

The header indicates to how many shard copies (primary and replicas shards) a write was supposed to go to, to how many
shard copies to write succeeded and potentially captures shard failures if writing into a replica shard fails.

For async writes it also includes the number of shards a write is still pending.

Closes #7994

time:
2015-01-08T17:08:54Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
comments:
Mappings: Remove includeExisting flag from adding ObjectMapper and
FieldMapper listeners

This flag is unused by the 2 places that add these listeners.

time:
2015-01-08T16:48:27Z
class:
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/EngineConfig.java
src/main/java/org/elasticsearch/index/engine/EngineFactory.java
src/main/java/org/elasticsearch/index/engine/EngineModule.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngineFactory.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngineHolder.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/main/java/org/elasticsearch/index/shard/IndexShardModule.java
src/main/java/org/elasticsearch/indices/IndicesModule.java
src/main/java/org/elasticsearch/indices/IndicesWarmer.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/main/java/org/elasticsearch/indices/memory/IndexingMemoryController.java
src/main/java/org/elasticsearch/indices/warmer/IndicesWarmer.java
src/main/java/org/elasticsearch/search/SearchService.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineIntegrationTest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineSettingsTest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/indices/memory/IndexingMemoryControllerTests.java
src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerTests.java
src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/engine/MockEngineFactory.java
src/test/java/org/elasticsearch/test/engine/MockInternalEngine.java
src/test/java/org/elasticsearch/test/engine/MockInternalEngineHolder.java
comments:
[CORE] Fold engine into IndexShard

This commit removes most of the Engine abstractions and removes
Engine exposure via dependency injection. It also removes the Holder
abstraction and makes the engine itself start at constrcution time.
It removes the start method from the engine entire which means no engine
instances exists until it's started. There is also no way to stop the
engine to restart, it needs to be an entire new Engine

time:
2015-01-08T15:45:34Z
class:
src/main/java/org/elasticsearch/action/support/IndicesOptions.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java
comments:
Core: Also check if indices resolved via aliases resolution aren't closed and deal with this according to IndicesOptions.

Closes #9057

time:
2015-01-08T15:43:56Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
comments:
Renamed allowNoIndices to failNoIndices and changed parameter order.

time:
2015-01-08T14:37:31Z
class:
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
comments:
[TEST] Ensure shard lock is acquired before we try the timeout version

time:
2015-01-08T08:48:44Z
class:
src/main/java/org/elasticsearch/rest/action/admin/indices/get/RestGetIndicesAction.java
comments:
Indices API: Fix to make GET Index API consistent with docs

This fix ensures that calls to the GET alias/mappings/settings/warmers APIs return the aliases/mappings/settings/warmers object even if there is no content within them.. This make them consistent with the GET Index API docs and the breaking changes in 1.4 docs

Closes #9148

time:
2015-01-07T22:16:19Z
class:
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
comments:
Test: trace logging for testDeleteSafe

time:
2015-01-07T21:13:12Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Fix 1.5.0 Lucene version constant

time:
2015-01-07T15:38:21Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Add back MockIndexEngine

This test class was lost accidentially in a8fa650

time:
2015-01-07T13:08:40Z
class:
src/main/java/org/elasticsearch/common/util/concurrent/BaseFuture.java
src/main/java/org/elasticsearch/transport/Transports.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
comments:
Internal: assert that we do not call blocking code from transport threads.

This currently only adds checks to BaseFuture, but this should already cover
lots of client code. We could add more in the future, like interactions with
the filesystem and so on.

Close #9164

time:
2015-01-07T09:26:20Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/test/java/org/elasticsearch/document/BulkTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
comments:
Removed parent parameter from update request, because it is just sets the routing.

The routing option should be used instead. The parent a child document points to can't be updated.

Closes #4538

time:
2015-01-07T08:10:16Z
class:
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/WrapperFilterParser.java
src/main/java/org/elasticsearch/index/query/WrapperQueryParser.java
src/test/java/org/elasticsearch/search/matchedqueries/MatchedQueriesTests.java
comments:
Made sure that named filters and queries defined in a wrapped query and filter are not lost.

Closes #6871

time:
2015-01-07T07:49:25Z
class:
src/main/java/org/elasticsearch/action/percolate/TransportMultiPercolateAction.java
src/test/java/org/elasticsearch/percolator/MultiPercolatorTests.java
comments:
Fixed a bug that was caused by specifying routing on a multi percolate request causing an ArrayIndexOutOfBoundsException.

The multi percolate shard responses are collected in an atomic array which uses the shard id is used as index, but the number of shards the multi percolate request was meant to go to was used as size of this array instead the total number of shards an index has. This caused the exception when routing was used.

Closes #6214

time:
2015-01-06T20:53:28Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java
src/main/java/org/elasticsearch/action/admin/indices/recovery/TransportRecoveryAction.java
src/main/java/org/elasticsearch/common/component/CloseableComponent.java
src/main/java/org/elasticsearch/common/component/LifecycleComponent.java
src/main/java/org/elasticsearch/common/inject/Injectors.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/gateway/GatewayMetaState.java
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/index/analysis/AnalysisService.java
src/main/java/org/elasticsearch/index/cache/IndexCache.java
src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java
src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java
src/main/java/org/elasticsearch/index/cache/query/parser/QueryParserCache.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/merge/scheduler/MergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/shard/ShardId.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/StoreModule.java
src/main/java/org/elasticsearch/index/translog/TranslogService.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/main/java/org/elasticsearch/node/Node.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/repositories/RepositoriesService.java
src/main/java/org/elasticsearch/rest/RestFilter.java
src/main/java/org/elasticsearch/river/RiversService.java
src/main/java/org/elasticsearch/transport/TransportService.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/indices/leaks/IndicesLeaksTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[CORE] Delete shard content under lock

Once we delete the the index on a node we are closing all resources
and subsequently need to delete all shards contents from disk. Yet
this happens today under a lock (the shard lock) that needs to be
acquried in order to execute any operation on the shards data
path. We try to delete all the index meta-data once we acquired
all the shard lock but this operation can run into a timeout which causes
the index to remain on disk. Further, all shard data will be left on
disk if the timeout is reached.

This commit removes all the shards data just before the shard lock
is release as the last operation on a shard that belongs to a deleted
index.

time:
2015-01-06T18:04:52Z
class:
src/main/java/org/elasticsearch/action/admin/indices/segments/IndicesSegmentResponse.java
src/main/java/org/elasticsearch/action/admin/indices/segments/IndicesSegmentsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/segments/IndicesSegmentsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/Segment.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngineHolder.java
src/main/java/org/elasticsearch/rest/action/admin/indices/segments/RestIndicesSegmentsAction.java
src/test/java/org/elasticsearch/action/admin/indices/segments/IndicesSegmentsRequestTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
Stats: Added verbose option to segments api, with full ram tree as first
additional element per segment.

This commit adds a verbose flag to the _segments api.  Currently the
only additional information returned when set to true is the full
ram tree from lucene for each segment.

time:
2015-01-06T16:35:45Z
class:
comments:
[EXEC] Remove reduced stack size

We used to reduces the stack size to 256kb. This commit removes
this optimization and relies on the JVMs default.

Closes #9135

time:
2015-01-06T16:21:20Z
class:
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/indices/IndicesModule.java
src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java
comments:
Core: Remove terms filter cache.

This is our only cache which is not 'exact' and might allow for stalled results.
Additionally, a similar cache that we have and needs to perform lookups in other
indices in order to run queries is the script index, and for this index we rely
on the filesystem cache, so we should probably do the same with terms filters
lookups.

Close #9056

time:
2015-01-06T15:43:39Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java
comments:
[ALLOCATION] Remove primary balance factor

The `cluster.routing.allocation.balance.primary` setting has caused
a lot of confusion in the past while it has very little benefit form a
shard allocatioon point of view. Users tend to modify this value to
evently distribute primaries across the nodes which is dangerous since
a prmiary flag on it's own can trigger relocations. The primary flag for a shard
is should not have any impact on cluster performance unless the high level feature
suffereing from primary hotspots is buggy. Yet, this setting was intended to be a
tie-breaker which is not necessary anymore since the algorithm is deterministic.

This commit removes this setting entriely.
Since 1.4.2, I noticed that all (or many) primaries often get allocated to a single node which makes snapshots slow since all shards are uploaded from a single machine.
Is there any alternative method to spreading primary shards more evenly?


time:
2015-01-06T14:54:39Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/StoreFileMetaData.java
comments:
core: Populate metadata.writtenBy for pre 1.3 index files.

    Today this not populated (null) in these cases. But it would be useful to have
    this available, even just for improved error messages.

    The trickiest part today is the handling of 1.2.x files written with
    lucene 4.8+ which have both ES checksums and lucene ones. This is now simplified:
    when the lucene checksum is there, we always use it.

Closes #9152

time:
2015-01-06T14:48:44Z
class:
src/main/java/org/elasticsearch/cluster/routing/IndexRoutingTable.java
src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java
src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java
src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceUnbalancedClusterTest.java
src/test/java/org/elasticsearch/cluster/routing/allocation/CatAllocationTestBase.java
comments:
[ALLOCATION] Weight deltas must be absolute deltas

In some situations the shard balanceing weight delta becomes negative. Yet,
a negative delta is always treated as `well balanced` which is wrong. I wasn't
able to reproduce the issue in any way other than useing the real world data
from issue #9023. This commit adds a fix for absolute deltas as well as a base
test class that allows to build tests or simulations from the cat API output.

Closes #9023

time:
2015-01-06T11:14:15Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/NestedTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
comments:
Made the `nested`, `reverse_nested` and `children` aggs ignore unmapped nested fields or unmapped child / parent types.

Closes #8760

time:
2015-01-06T10:48:05Z
class:
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefFieldComparatorSource.java
src/test/java/org/elasticsearch/search/scroll/SearchScrollTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Search: Fix paging on strings sorted in ascending order.

For the comparator to work correctly, we need to give it the same value in
`setTopValue` as the value that it gave back in `value`.

Close #9136

time:
2015-01-06T10:15:42Z
class:
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/test/java/org/elasticsearch/index/store/DistributorDirectoryTest.java
comments:
Make DistributorDirectory not call fsync on sub directories and missing files.

Related to #9145

time:
2015-01-06T10:03:27Z
class:
src/main/java/org/elasticsearch/action/ActionFuture.java
src/main/java/org/elasticsearch/action/support/AdapterActionFuture.java
comments:
Internal: AdapterActionFuture should not set currentThread().interrupt()

If someone blocks on it and it is interrupted, we throw an ElasticsearchIllegalStateException. We should not set Thread.currentThread().interrupt(); in this case because we already communicate the interrupt through an exception.

Similar to #9001

Closes #9141

time:
2015-01-06T08:24:18Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
comments:
Recovery: RecoveryTarget does not fsync the right file name.

Close #9144

time:
2015-01-06T08:24:18Z
class:
src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java
src/main/java/org/apache/lucene/store/RateLimitedFSDirectory.java
src/main/java/org/apache/lucene/store/StoreRateLimiting.java
src/main/java/org/elasticsearch/common/util/AbstractArray.java
src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterPostingsFormat.java
src/main/java/org/elasticsearch/index/engine/internal/LiveVersionMap.java
src/main/java/org/elasticsearch/index/engine/internal/VersionValue.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SinglePackedOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicGeoPointFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicOrdinalsFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicParentChildFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AtomicDoubleFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AtomicLongFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVNumericIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/IndexIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/NumericDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/query/SimpleQueryParser.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/RateLimitingInputStream.java
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySettings.java
src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java
src/main/java/org/elasticsearch/search/suggest/completion/Completion090PostingsFormat.java
src/test/java/org/elasticsearch/indices/settings/UpdateSettingsTests.java
src/test/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProviderV1.java
src/test/java/org/elasticsearch/test/cache/recycler/MockBigArrays.java
comments:
Upgrade to Lucene 5.0.0-snapshot-1649544.

A couple of changes that triggerred a refactoring in Elasticsearch:

 - LUCENE-6148: Accountable.getChildResources returns a collection instead of
   a list.

 - LUCENE-6121: CachingTokenFilter now propagates reset(), as a result
   SimpleQueryParser.newPossiblyAnalyzedQuery has been fixed to not reset both
   the underlying stream and the wrapper (otherwise lucene would barf because of
   a doubl reset).

 - LUCENE-6119: The auto-throttle issue changed a couple of method
   names/parameters. It also made
   `UpdateSettingsTests.testUpdateMergeMaxThreadCount` dead slow so I muted this
   test until we clea up merge throttling to use LUCENE-6119.

Close #9145

time:
2015-01-06T08:13:10Z
class:
src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java
src/test/java/org/elasticsearch/common/settings/ImmutableSettingsTests.java
comments:
Settings: Ensure fields are overriden and not merged when using arrays

In the case you try to merge two settings, one being an array and one being
a field, together, the settings were merged instead of being overridden.

First config
my.value: 1

Second config
my.value: [ 2, 3 ]

If you execute

settingsBuilder().put(settings1).put(settings2).build()

now only values 2,3 will be in the final settings

Closes #8381

time:
2015-01-06T07:45:59Z
class:
src/main/java/org/elasticsearch/common/io/FileSystemUtils.java
src/main/java/org/elasticsearch/plugins/PluginManager.java
comments:
Plugins: Installation failed when bin/ and plugins/ directories are on different filesystems

Plugin installation failed when bin/, conf/ and plugins/ directories are on different file systems. The method File.move() can't be used to move a non-empty directory between different filesystems.

I didn't find a simple way to unittest that, even with in-memory filesystems like jimfs or the Lucene test framework.

Closes #8999

time:
2015-01-05T20:31:49Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
fix TODO for master, we don't need to support this version here

time:
2015-01-05T20:30:18Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
comments:
Tests: add 0.20 index and fix test bugs in assertNewReplicasWork()

time:
2015-01-05T12:27:54Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
comments:
Fixed typo in geoshape exception

Invaild -> Invalid

time:
2015-01-05T11:53:37Z
class:
comments:
Update plugins.asciidoc

Added entity resolution plugin for duplication detection

Related to #9131

time:
2015-01-03T17:40:19Z
class:
src/test/java/org/elasticsearch/index/store/ExceptionRetryTests.java
comments:
[TEST] mute ExceptionRetryTests

time:
2015-01-02T22:09:36Z
class:
src/test/java/org/elasticsearch/repositories/s3/AbstractS3SnapshotRestoreTest.java
comments:
Fix typo (azure -> s3)

time:
2015-01-02T21:28:50Z
class:
src/main/java/org/elasticsearch/cloud/aws/AwsEc2Service.java
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
comments:
Add China region for s3 and ec2

China region name is `cn-north-1`.

Closes #156.

time:
2015-01-02T21:16:59Z
class:
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java
comments:
Implement BlobContainer.move()

In elasticsearch master (2.0) a new method `move(String sourceBlobName, String targetBlobName)` has been added to `BlobContainer`.

Closes #152.

time:
2015-01-02T20:46:55Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project. This commit is the first step for this plugin to depend on this new `pom` maven project.

time:
2015-01-02T20:33:52Z
class:
comments:
Remove old maven profiles (unused)

time:
2015-01-02T20:30:46Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project. This commit is the first step for this plugin to depend on this new `pom` maven project.

time:
2015-01-02T20:10:01Z
class:
comments:
Add sonatype snapshot repository

time:
2015-01-02T19:58:21Z
class:
comments:
Add sonatype snapshot repository

time:
2015-01-02T19:52:53Z
class:
comments:
Add sonatype snapshot repository

time:
2015-01-02T19:43:51Z
class:
comments:
Add sonatype snapshot repository

time:
2015-01-02T19:40:18Z
class:
comments:
Add sonatype snapshot repository

time:
2015-01-02T19:35:26Z
class:
comments:
Add sonatype snapshot repository

time:
2015-01-02T18:05:18Z
class:
comments:
Add sonatype snapshot repository

time:
2015-01-02T17:42:56Z
class:
comments:
Add sonatype snapshot repository

time:
2015-01-02T17:39:08Z
class:
comments:
Add sonatype snapshot repository

time:
2015-01-02T15:20:32Z
class:
comments:
[Doc] Use byte[] as example instead of String

Closes #8973.

time:
2015-01-02T14:44:47Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/test/java/org/elasticsearch/index/store/ExceptionRetryTests.java
comments:
[index] Prevent duplication of documents when retry indexing after fail

If bulk index request fails due to a disconnect, unavailable shard etc, the request is
retried once before actually failing. However, even in case of failure the documents
might already be indexed. For autogenerated ids the request must not add the
documents again and therfore canHaveDuplicates must be set to true.

closes #8788

time:
2015-01-02T14:14:07Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
comments:
[GEO] Throw helpful exception for Polygons with holes outside the shell

A recent situation occured where a MultiPolygon coordinate array was accidentally defined as a single polygon with multiple holes. Since the intent was a MultiPolygon, the holes of the unintended Polygon fell outside the outer shell.  This exposed a bug in the contains logic inside BasePolygonBuilder. An ArrayIndexOutOfBoundsException was being thrown instead of a more useful ElasticsearchParseException( "hole is not within polygon" ).  This pull request fixes the bug and adds additional unit tests for verifying proper MultiPolygon type parsing.

closes #9071

time:
2015-01-02T13:58:18Z
class:
src/test/java/org/elasticsearch/indices/IndicesOptionsIntegrationTests.java
comments:
[TEST] Wait for green if index is closed and reopened

if we reopen an index and the majority of the replicas where
not created the reopen will fail sicne on master this runs with
local gatway all the time.

time:
2015-01-02T11:17:35Z
class:
src/main/java/org/elasticsearch/cluster/ClusterModule.java
src/main/java/org/elasticsearch/cluster/ClusterService.java
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java
src/main/java/org/elasticsearch/cluster/routing/DjbHashFunction.java
src/main/java/org/elasticsearch/cluster/routing/HashFunction.java
src/main/java/org/elasticsearch/cluster/routing/Murmur3HashFunction.java
src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java
src/main/java/org/elasticsearch/cluster/routing/Preference.java
src/main/java/org/elasticsearch/cluster/routing/SimpleHashFunction.java
src/main/java/org/elasticsearch/cluster/routing/operation/OperationRouting.java
src/main/java/org/elasticsearch/cluster/routing/operation/OperationRoutingModule.java
src/main/java/org/elasticsearch/cluster/routing/operation/plain/PlainOperationRoutingModule.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/gateway/GatewayMetaState.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionContext.java
src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityTests.java
src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java
src/test/java/org/elasticsearch/cluster/routing/operation/hash/murmur3/Murmur3HashFunctionTests.java
src/test/java/org/elasticsearch/cluster/structure/RoutingIteratorTests.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/client/RandomizingClient.java
src/test/java/org/elasticsearch/test/cluster/NoopClusterService.java
comments:
[INTERNAL] Remove OperationRouting abstraction

This commit removes the unneeded OperationRouting interface and flattens
the package structure inside cluster.routing

time:
2015-01-02T10:02:45Z
class:
src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java
comments:
[RECOVERY] Allow cancel waiting for mapping changes

This commit interrupts the wait for mapping change if the index
shard gateway is waiting for the master on a mapping update.

time:
2015-01-02T10:02:19Z
class:
src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java
comments:
[RECOVERY] Release store lock before blocking on mapping updates

This can lead to sporadic shard creating timeouts if the same shard is
created, closed and created again on the same node. The reason for this is
that we holding on to the store reference while blocking on the mapping update
that will prevent the shard lock from being released. Holding the lock is unnecessary
in this case and can simply be removed.

time:
2014-12-31T13:01:37Z
class:
comments:
[Docs] fix curl examples in Nodes Stats docs

Closes #9118

time:
2014-12-31T09:02:45Z
class:
src/test/java/org/elasticsearch/script/GroovyScriptTests.java
comments:
[TEST] Fix GroovyScriptTests failures.

time:
2014-12-31T00:38:44Z
class:
src/main/java/org/elasticsearch/script/ScoreAccessor.java
src/test/java/org/elasticsearch/script/GroovyScriptTests.java
comments:
Scripting: Make _score in groovy scripts comparable

closes #8828
closes #9094

time:
2014-12-30T18:53:31Z
class:
comments:
Docs: The regexp query defaults to the `ALL` flag, and removed
the `AUTOMATON` flag which is not used in Elasticsearch.

Closes #6180

time:
2014-12-30T17:54:07Z
class:
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
comments:
[GEO] GIS envelope validation

ShapeBuilder expected coordinates for Envelope types in strict Top-Left, Bottom-Right order. Given that GeoJSON does not enforce coordinate order (as seen in #8672) clients could specify envelope bounds in any order and be compliant with the GeoJSON spec but not the ES ShapeBuilder logic. This change loosens the ShapeBuilder requirements on envelope coordinate order, reordering where necessary.

closes #2544
closes #9067
closes #9079
closes #9080

time:
2014-12-30T16:50:38Z
class:
src/main/java/org/elasticsearch/gateway/GatewayAllocator.java
src/main/java/org/elasticsearch/gateway/MetaDataStateFormat.java
src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
src/test/java/org/elasticsearch/gateway/RecoveryFromGatewayTests.java
comments:
Fix TransportNodesListShardStoreMetaData for custom data paths

Cleans up the testReusePeerRecovery test as well

The actual fix is in TransportNodesListShardStoreMetaData.java, which
needs to use `nodeEnv.shardDataPaths` instead of `nodeEnv.shardPaths`.

Due to the difficulty in tracking this down, I've added a lot of
additional logging. This also fixes a logging issue in GatewayAllocator

time:
2014-12-30T16:40:51Z
class:
comments:
Update setup.asciidoc

Add a note about using the same JVM version on all nodes and clients

time:
2014-12-30T14:45:28Z
class:
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
comments:
[TEST] Wait for threads to finish / start before asserting

time:
2014-12-30T13:30:40Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/NumericValuesSourceMetricsAggregatorParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/MinParser.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java
comments:
Remove some dead code.

time:
2014-12-29T13:40:50Z
class:
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/gateway/Gateway.java
src/main/java/org/elasticsearch/gateway/GatewayMetaState.java
src/main/java/org/elasticsearch/gateway/GatewayShardsState.java
src/main/java/org/elasticsearch/gateway/MetaDataStateFormat.java
src/main/java/org/elasticsearch/index/store/IndexStore.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/test/java/org/elasticsearch/cluster/allocation/ClusterRerouteTests.java
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
src/test/java/org/elasticsearch/gateway/GatewayShardStateTests.java
src/test/java/org/elasticsearch/indices/IndicesCustomDataPathTests.java
src/test/java/org/elasticsearch/indices/store/IndicesStoreIntegrationTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Add index.data_path setting

This allows specifying the path an index will be at.

`index.data_path` is specified in the settings when creating an index,
and can not be dynamically changed.

An example request would look like:

POST /myindex
{
  "settings": {
    "number_of_shards": 2,
    "data_path": "/tmp/myindex"
  }
}

And would put data in /tmp/myindex/0/index/0 and /tmp/myindex/0/index/1

Since this can be used to write data to arbitrary locations on disk, it
requires enabling the `node.enable_custom_paths` setting in
elasticsearch.yml on all nodes.

Relates to #8976

time:
2014-12-29T10:59:22Z
class:
comments:
Doc has store "false" not store "true"

Came from 3465e69e83a4f9f375fb9486741db51efb800837 due to changing "yes" to "false".

Closes #9075

time:
2014-12-28T20:05:02Z
class:
src/main/java/org/elasticsearch/common/jna/Natives.java
comments:
Native: Kernel32Library throws NoClassDefFound if JNA is missing

Introduced by #8993

time:
2014-12-24T16:41:35Z
class:
src/main/java/org/elasticsearch/action/deletebyquery/TransportShardDeleteByQueryAction.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
src/main/java/org/elasticsearch/index/query/HasParentFilterBuilder.java
src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryBuilder.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserModule.java
src/main/java/org/elasticsearch/index/query/NestedFilterBuilder.java
src/main/java/org/elasticsearch/index/query/NestedFilterParser.java
src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java
src/main/java/org/elasticsearch/index/query/NestedQueryParser.java
src/main/java/org/elasticsearch/index/query/ParsedQuery.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/support/BaseInnerHitBuilder.java
src/main/java/org/elasticsearch/index/query/support/InnerHitsQueryParserHelper.java
src/main/java/org/elasticsearch/index/query/support/QueryInnerHitBuilder.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsBuilder.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsContext.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsFetchSubPhase.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsParseElement.java
src/test/java/org/elasticsearch/search/innerhits/InnerHitsTests.java
comments:
inner_hits: Added another more compact syntax for inner hits.

Closes #8770

time:
2014-12-24T10:18:40Z
class:
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
[TESTS] Make sure to wait for all shards to be allocated before running the test.

time:
2014-12-24T09:46:03Z
class:
src/main/java/org/elasticsearch/action/search/TransportSearchAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/test/java/org/elasticsearch/indices/IndicesOptionsIntegrationTests.java
comments:
Core: `ignore_unavailable` shouldn't ignore closed indices if a single index is specified in a search or broadcast request.

Closes #9047
Closes #7153

time:
2014-12-24T08:34:40Z
class:
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
src/test/java/org/elasticsearch/index/fielddata/ParentChildFieldDataTests.java
comments:
Parent/child: Fix concurrency issues of the _parent field data.

`_parent` field data mistakenly shared some stateful data-structures across
threads.

Close #8396

time:
2014-12-24T08:33:21Z
class:
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java
src/main/java/org/elasticsearch/indices/cache/filter/terms/TermsLookup.java
comments:
Core: Terms filter lookup caching should cache values, not filters.

The terms filter lookup mechanism today caches filters. Because of this, the
cache values depend on two things: the values that can be found in the lookup
index AND the mapping of the local index, since changing the mapping can change
the way that the filter is parsed. We should make the cache depend solely on
the content of the lookup index.

For instance the issue I was seeing was due to the following scenario:
 - create index1 with _id indexed
 - run terms filter with lookup, the parsed filter looks like `_id: 1 OR _id: 2`
 - remove index1
 - create index1 with _id not indexed
 - run terms filter without lookup, the parsed filter is `_uid: type#1 OR _uid: type#2` (the _id field mapper knows how to use the _uid field when _id is not indexed)
 - run terms filter with lookup, the filter is fetched from the cache: `_id: 1 OR _id: 2` but does not match anything since `_id` is not indexed.

Close #9027

time:
2014-12-24T08:33:21Z
class:
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/string/SimpleStringMappingTests.java
comments:
Search: parse terms filters on a single term as a term filter.

Running a terms filter on a single term is equivalent to loading a postings
list into a bit set and then returning the bit set instead of reading the
postings list on the fly.

Close #9014

time:
2014-12-23T20:00:11Z
class:
comments:
ignore intellij project/workspace files

closes #9044

time:
2014-12-23T18:19:55Z
class:
comments:
Fix date histogram docs grammar.

time:
2014-12-23T04:00:40Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
comments:
[GEO] Removing unnecessary orientation enumerators

PR #8978 included 4 unnecessary enumeration values ('cw', 'clockwise', 'ccw', 'counterclockwise'). Since the ShapeBuilder.parse method handles these as strings and maps them to LEFT and RIGHT enumerators, respectively, their enumeration counterpart is unnecessary. This minor change adds 4 static convenience variables (COUNTER_CLOCKWISE, CLOCKWISE, CCW, CW) for purposes of the API and removes the unnecessary values from the Orientation Enum.

closes #9035

time:
2014-12-22T18:09:45Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/GeometryCollectionBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiPolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
comments:
[GEO] Add optional left/right parameter to GeoJSON

This feature adds an optional orientation parameter to the GeoJSON document and geo_shape mapping enabling users to explicitly define how they want Elasticsearch to interpret vertex ordering.  The default uses the right-hand rule (counterclockwise for outer ring, clockwise for inner ring) complying with OGC Simple Feature Access standards. The parameter can be explicitly specified for an entire index using the geo_shape mapping by adding "orientation":{"left"|"right"|"cw"|"ccw"|"clockwise"|"counterclockwise"} and/or overridden on each insert by adding the same parameter to the GeoJSON document.

closes #8764

time:
2014-12-22T16:14:47Z
class:
comments:
[Docs] Improve documentation of the new caching policy for filters.

time:
2014-12-22T09:56:25Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/IPv4Range.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/RangeTests.java
comments:
Aggregations: Adds methods to get to/from as Strings for Range Aggs

Adds getToAsString and getFromAsString to Range interface and implements them for all range aggregations

Closes #9003

time:
2014-12-22T09:11:25Z
class:
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
comments:
Mappings: Include currentFieldName into ObjectMapper errors

Without currentFieldName error is very generic and non informative

Close #9020

time:
2014-12-22T09:11:25Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/test/java/org/elasticsearch/index/mapper/TransformOnIndexMapperIntegrationTest.java
comments:
Mappings: Reencode transformed result with same xcontent

When I originally wrote the transform feature I didn't think that the
XContentType of the reencoded source mattered.  It actually matters because
payloads for the completion suggester are stored and returned exactly
as encoded by this XContentType.

This revision changes the transform feature from always reencoding with smile
to always reencoding with the provided XContentType to support the completion
suggester.

Closes #8959

time:
2014-12-22T08:36:29Z
class:
src/main/java/org/elasticsearch/bootstrap/Bootstrap.java
src/main/java/org/elasticsearch/common/jna/Kernel32Library.java
src/main/java/org/elasticsearch/common/jna/Natives.java
src/test/java/org/elasticsearch/common/jna/Kernel32LibraryTests.java
comments:
Shutdown: Add support for Ctrl-Close event on Windows platforms to gracefully shutdown node

This commit adds the support for the Ctrl-Close event on Windows using native system calls. This way, it is possible to catch the Ctrl-Close event sent by a 'taskill /pid' command (or when the user closes the console window where elasticsearch.bat was started) and gracefully close the node. Before this commit, the node was simply killed on taskkill/window closing.

time:
2014-12-22T05:10:44Z
class:
comments:
Docs: revise examples
(cherry picked from commit 14ac3b0)

time:
2014-12-21T10:59:54Z
class:
src/main/java/org/elasticsearch/plugins/PluginsService.java
comments:
Plugins: NPE when plugins dir is inaccessible

Steps to reproduce:

1. Download fresh es.
2. `sudo mkdir plugins && sudo chmod 0700 plugins`
3. Start elasticsearch

```
elasticsearch-1.4.1 λ ./bin/elasticsearch
[2014-12-09 12:18:59,025][INFO ][node                     ] [Piotr Rasputin] version[1.4.1], pid[16338], build[89d3241/2014-11-26T15:49:29Z]
[2014-12-09 12:18:59,025][INFO ][node                     ] [Piotr Rasputin] initializing ...
{1.4.1}: Initialization Failed ...
- NullPointerException[null]
```

Closes #8837.

time:
2014-12-19T23:27:37Z
class:
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
comments:
Test: added some logging to NodeEnvironmentTests.testDeleteSafe

time:
2014-12-19T20:11:46Z
class:
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/gateway/GatewayMetaState.java
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
Internal: remove IndexCloseListener & Store.OnCloseListener

Closes #9009

time:
2014-12-19T12:12:39Z
class:
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
comments:
Test: ZenFaultDetectionTests.testNodesFaultDetectionConnectOnDisconnect should account for initial ping

There was a race condition in the test in the case where the nodes fault detection would manage to send and initial ping, followed by 2 attempts before the target service was disconnected.

time:
2014-12-19T10:25:12Z
class:
src/test/java/org/elasticsearch/action/IndicesRequestTests.java
comments:
Test: fix racing condition in IndicesRequestTests

a request could be captured after action array was cleared.

time:
2014-12-19T09:39:21Z
class:
src/main/java/org/elasticsearch/common/util/CancellableThreads.java
src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
src/test/java/org/elasticsearch/common/util/CancellableThreadsTest.java
comments:
Recovery: cleaner interrupt handling during cancellation

RecoveryTarget initiates the recovery by sending a start recovery request to the source node and then waits for the recovery to complete. During recovery cancellation, we interrupt the thread so it will wake up and clean the recovery. Depending on timing, this can leave an unneeded interrupted thread status causing future IO commands to fail unneeded.

RecoverySource already had a handy utility called CancellableThreads. This extracts it to a top level class, and uses it in RecoveryTarget as well.

Closes #9000

time:
2014-12-19T00:36:39Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
FunctionScore: Fix 'avg' score mode to correctly implement weighted mean.

closes #8992
closes #9004

time:
2014-12-18T20:00:47Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Test: AutoFilterCachingPolicy.HISTORY_SIZE should be large enough to accommodate other param

time:
2014-12-18T18:33:05Z
class:
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
[TEST] Fix IndexStatsTests failures.

time:
2014-12-18T14:51:36Z
class:
src/main/java/org/elasticsearch/index/cache/filter/AutoFilterCachingPolicy.java
src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java
src/main/java/org/elasticsearch/index/cache/filter/FilterCacheModule.java
src/main/java/org/elasticsearch/index/cache/filter/none/NoneFilterCache.java
src/main/java/org/elasticsearch/index/cache/filter/support/CacheKeyFilter.java
src/main/java/org/elasticsearch/index/cache/filter/support/FilterCacheValue.java
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TypeFieldMapper.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/query/AndFilterParser.java
src/main/java/org/elasticsearch/index/query/BoolFilterParser.java
src/main/java/org/elasticsearch/index/query/ConstantScoreQueryParser.java
src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java
src/main/java/org/elasticsearch/index/query/FQueryFilterParser.java
src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java
src/main/java/org/elasticsearch/index/query/GeoBoundingBoxFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoDistanceFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoDistanceRangeFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoShapeFilterParser.java
src/main/java/org/elasticsearch/index/query/GeohashCellFilter.java
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/main/java/org/elasticsearch/index/query/MissingFilterParser.java
src/main/java/org/elasticsearch/index/query/NestedFilterParser.java
src/main/java/org/elasticsearch/index/query/NotFilterParser.java
src/main/java/org/elasticsearch/index/query/OrFilterParser.java
src/main/java/org/elasticsearch/index/query/PrefixFilterParser.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/RangeFilterParser.java
src/main/java/org/elasticsearch/index/query/RegexpFilterParser.java
src/main/java/org/elasticsearch/index/query/ScriptFilterParser.java
src/main/java/org/elasticsearch/index/query/TermFilterParser.java
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java
src/main/java/org/elasticsearch/index/query/TypeFilterParser.java
src/main/java/org/elasticsearch/index/query/support/QueryParsers.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedParser.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsContext.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/index/search/child/AbstractChildTests.java
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/search/scriptfilter/ScriptFilterSearchTests.java
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
comments:
Filter cache: add a `_cache: auto` option and make it the default.

Up to now, all filters could be cached using the `_cache` flag that could be
set to `true` or `false` and the default was set depending on the type of the
`filter`. For instance, `script` filters are not cached by default while
`terms` are. For some filters, the default is more complicated and eg. date
range filters are cached unless they use `now` in a non-rounded fashion.

This commit adds a 3rd option called `auto`, which becomes the default for
all filters. So for all filters a cache wrapper will be returned, and the
decision will be made at caching time, per-segment. Here is the default logic:
 - if there is already a cache entry for this filter in the current segment,
   then return the cache entry.
 - else if the doc id set cannot iterate (eg. script filter) then do not cache.
 - else if the doc id set is already cacheable and it has been used twice or
   more in the last 1000 filters then cache it.
 - else if the filter is costly (eg. multi-term) and has been used twice or more
   in the last 1000 filters then cache it.
 - else if the doc id set is not cacheable and it has been used 5 times or more
   in the last 1000 filters, then load it into a cacheable set and cache it.
 - else return the uncached set.

So for instance geo-distance filters and script filters are going to use this
new default and are not going to be cached because of their iterators.

Similarly, date range filters are going to use this default all the time, but
it is very unlikely that those that use `now` in a not rounded fashion will get
reused so in practice they won't be cached.

`terms`, `range`, ... filters produce cacheable doc id sets with good iterators
so they will be cached as soon as they have been used twice.

Filters that don't produce cacheable doc id sets such as the `term` filter will
need to be used 5 times before being cached. This ensures that we don't spend
CPU iterating over all documents matching such filters unless we have good
evidence of reuse.

One last interesting point about this change is that it also applies to compound
filters. So if you keep on repeating the same `bool` filter with the same
underlying clauses, it will be cached on its own while up to now it used to
never be cached by default.

`_cache: true` has been changed to only cache on large segments, in order to not
pollute the cache since small segments should not be the bottleneck anyway.
However `_cache: false` still has the same semantics.

Close #8449

time:
2014-12-18T10:57:12Z
class:
src/main/java/org/elasticsearch/transport/PlainTransportFuture.java
comments:
Internal: PlainTransportFuture should not set currentThread().interrupt()

We use PlainTransportFuture as a future for our transport calls. If someone blocks on it and it is interrupted, we throw an ElasticsearchIllegalStateException. We should not set  Thread.currentThread().interrupt(); in this case because we already communicate the interrupt through an exception.

Closes #9001

time:
2014-12-18T09:40:05Z
class:
comments:
[TEST] upgrade randomized runner to 2.1.11

2.1.11 contains the fix for this issue: https://github.com/carrotsearch/randomizedtesting/issues/179

Closes #8930

time:
2014-12-18T08:51:20Z
class:
src/main/java/org/elasticsearch/common/util/AbstractArray.java
src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterPostingsFormat.java
src/main/java/org/elasticsearch/index/engine/internal/LiveVersionMap.java
src/main/java/org/elasticsearch/index/engine/internal/VersionValue.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SinglePackedOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicGeoPointFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicOrdinalsFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicParentChildFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AtomicDoubleFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AtomicLongFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVNumericIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/IndexIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/NumericDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java
src/main/java/org/elasticsearch/search/suggest/completion/Completion090PostingsFormat.java
src/test/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProviderV1.java
src/test/java/org/elasticsearch/test/cache/recycler/MockBigArrays.java
comments:
Upgrade to lucene-5.0.0-snapshot-1646179.

time:
2014-12-18T08:02:51Z
class:
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
Test: use less shards in SimpleQueryTests

time:
2014-12-17T16:59:31Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java
src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/hotthreads/RestNodesHotThreadsAction.java
src/test/java/org/elasticsearch/action/admin/HotThreadsTest.java
comments:
Core: ignore known idle threads by default in /_nodes/hot_threads

Add a new ignore_idle_threads boolean option (default true) to
/_nodes/hot_threads, to filter out threads in known idle places like
waiting on a socket select or on pulling the next task from an empty
queue.

Closes #8985

Closes #8908

time:
2014-12-17T15:46:16Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
comments:
Aggregations: reduce histogram buckets on the fly using a priority queue.

This commit makes histogram reduction a bit cleaner by expecting buckets
returned from shards to be sorted by key and merging them on-the-fly on the
coordinating node using a priority queue.

Close #8797

time:
2014-12-17T14:54:27Z
class:
src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java
src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java
src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java
src/main/java/org/elasticsearch/common/breaker/NoopCircuitBreaker.java
src/main/java/org/elasticsearch/common/util/BigArrays.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
src/main/java/org/elasticsearch/indices/breaker/AllCircuitBreakerStats.java
src/main/java/org/elasticsearch/indices/breaker/BreakerSettings.java
src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerService.java
src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerStats.java
src/main/java/org/elasticsearch/indices/breaker/HierarchyCircuitBreakerService.java
src/main/java/org/elasticsearch/indices/breaker/NoneCircuitBreakerService.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCacheListener.java
src/test/java/org/elasticsearch/common/breaker/MemoryCircuitBreakerTests.java
src/test/java/org/elasticsearch/common/util/BigArraysTests.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerUnitTests.java
src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerTests.java
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
fixup! add support for registering custom circuit breaker

time:
2014-12-17T14:53:24Z
class:
src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java
src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java
src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerService.java
src/main/java/org/elasticsearch/indices/breaker/HierarchyCircuitBreakerService.java
src/main/java/org/elasticsearch/indices/breaker/NoneCircuitBreakerService.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerUnitTests.java
comments:
add support for registering custom circuit breaker

time:
2014-12-17T14:43:15Z
class:
src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java
src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequestBuilder.java
src/main/java/org/elasticsearch/action/termvectors/TermVectorsResponse.java
src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorsService.java
src/main/java/org/elasticsearch/rest/action/support/RestActions.java
src/main/java/org/elasticsearch/rest/action/termvectors/RestTermVectorsAction.java
src/test/java/org/elasticsearch/action/termvectors/GetTermVectorsTests.java
src/test/java/org/elasticsearch/action/termvectors/MultiTermVectorsTests.java
comments:
Term Vectors: support for version and version_type

This commit adds support for version and version_type to the Term Vectors API.
This could be useful in the following case whereby the user gets a document
and later wants to generate its TVs. With version, this would ensure that only
the TVs of that particular document are generated, and error out if the
document has been updated in between.

Closes #7480

time:
2014-12-17T14:41:23Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
comments:
Revert "Aggregations: reduce histogram buckets on the fly using a priority queue."

This reverts commit 5694626f79555af65b1109125afef49657186f0a.

time:
2014-12-17T13:49:05Z
class:
comments:
Documented the new terminate_after querystring option on search as implemented in #6885

time:
2014-12-17T13:21:00Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
comments:
Aggregations: reduce histogram buckets on the fly using a priority queue.

This commit makes histogram reduction a bit cleaner by expecting buckets
returned from shards to be sorted by key and merging them on-the-fly on the
coordinating node using a priority queue.

Close #8797

time:
2014-12-17T13:05:27Z
class:
comments:
Update percolate.asciidoc

wrong type used in the -GET request

Closes #8942

time:
2014-12-17T13:03:38Z
class:
comments:
Update getting-started.asciidoc

Missing -X flag at the curl template

Closes #8977

time:
2014-12-17T12:46:39Z
class:
comments:
[docs] pedantry

Closes #8982

time:
2014-12-17T11:29:01Z
class:
comments:
doc: transport sniff only adds data nodes

time:
2014-12-17T09:55:13Z
class:
src/test/java/org/elasticsearch/test/store/MockFSIndexStore.java
comments:
[TEST] Inject IndexSettings, not node Settings objects

Guice was injecting the wrong Settings object

time:
2014-12-17T09:18:59Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project.
This commit is the first step for this plugin to depend on this new `pom` maven project.

time:
2014-12-17T08:50:30Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project.
This commit is the first step for this plugin to depend on this new `pom` maven project.

time:
2014-12-17T08:39:19Z
class:
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/gateway/GatewayMetaState.java
src/main/java/org/elasticsearch/gateway/GatewayShardsState.java
src/main/java/org/elasticsearch/gateway/MetaDataStateFormat.java
src/main/java/org/elasticsearch/gateway/TransportNodesListGatewayStartedShards.java
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/index/store/IndexStore.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
src/test/java/org/elasticsearch/cluster/allocation/ClusterRerouteTests.java
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
src/test/java/org/elasticsearch/gateway/GatewayShardStateTests.java
src/test/java/org/elasticsearch/indices/IndicesCustomDataPathTests.java
src/test/java/org/elasticsearch/indices/store/IndicesStoreIntegrationTests.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Revert "Add index.data_path setting"

This reverts commit b2ec19ab360cc5f23d3cde391c8fc6e700dcb41f.

time:
2014-12-16T22:12:46Z
class:
src/main/java/org/elasticsearch/discovery/zen/NotMasterException.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingException.java
comments:
Discovery: only retry join when other node is not (yet) a master

When a node tries to join a master, the master may not yet be ready to accept the join request. In such cases we retry sending the join request up to 3 times before going back to ping. To detect this the current logic uses ExceptionsHelper.unwrapCause(t) to unwrap the incoming RemoteTransportException and inspect it's source, looking for ElasticsearchIllegalStateException. However, local ElasticsearchIllegalStateException can also be thrown when the join process should be cancelled (i.e., node shut down). In this case we shouldn't retry.

This commit adds an explicit NotMasterException to indicate the remote node is not a master. A similarly named exception (but meaning something else) in the master fault detection code was given a better name. Also clean up some other exceptions while at it.

Closes #8972

time:
2014-12-16T22:02:36Z
class:
src/test/java/org/elasticsearch/indices/IndicesCustomDataPathTests.java
comments:
[TEST] Mute IndicesCustomDataPathTests

time:
2014-12-16T17:50:37Z
class:
src/main/java/org/elasticsearch/search/aggregations/NonCollectingAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
Terms aggs: Validate the aggregation order on unmapped terms too.

Close #8946

time:
2014-12-16T17:25:21Z
class:
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/gateway/GatewayMetaState.java
src/main/java/org/elasticsearch/gateway/GatewayShardsState.java
src/main/java/org/elasticsearch/gateway/MetaDataStateFormat.java
src/main/java/org/elasticsearch/gateway/TransportNodesListGatewayStartedShards.java
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/index/store/IndexStore.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
src/test/java/org/elasticsearch/cluster/allocation/ClusterRerouteTests.java
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
src/test/java/org/elasticsearch/gateway/GatewayShardStateTests.java
src/test/java/org/elasticsearch/indices/IndicesCustomDataPathTests.java
src/test/java/org/elasticsearch/indices/store/IndicesStoreIntegrationTests.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Add index.data_path setting

This allows specifying the path an index will be at.

`index.data_path` is specified in the settings when creating an index,
and can not be dynamically changed.

An example request would look like:

POST /myindex
{
  "settings": {
    "number_of_shards": 2,
    "data_path": "/tmp/myindex"
  }
}

And would put data in /tmp/myindex/0/index/0 and /tmp/myindex/0/index/1

Since this can be used to write data to arbitrary locations on disk, it
requires enabling the `node.enable_custom_paths` setting in
elasticsearch.yml on all nodes.

time:
2014-12-16T16:54:51Z
class:
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
Adding unit tests for clockwise non-OGC ordering

Adding unit tests to validate cw defined polys not-crossing and crossing the dateline, respectively

time:
2014-12-16T16:54:39Z
class:
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java
comments:
Adding unit test for self intersecting polygons. Relevant to #7751 even/odd discussion

Updating documentation to describe polygon ambiguity and vertex ordering.

time:
2014-12-16T16:54:28Z
class:
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
Adding dateline test with valid lat/lon pairs

Cleanup: Removing unnecessary logic checks

time:
2014-12-16T16:54:13Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
Updating translation gate check to disregard order of hole vertices for non dateline crossing polys.

Updating comments and code readability

Correcting code formatting

time:
2014-12-16T16:54:02Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/PointCollection.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
Computational geometry logic changes to support OGC standards

This commit adds the logic necessary for supporting polygon vertex ordering per OGC standards. Exterior rings will be treated in ccw (right-handed rule) and interior rings will be treated in cw (left-handed rule).  This feature change supports polygons that cross the dateline, and those that span the globe/map.  The unit tests have been updated and corrected to test various situations.  Greater test coverage will be provided in future commits.

Addresses #8672

time:
2014-12-16T16:53:46Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
comments:
Updating connect method to prevent duplicate edges

time:
2014-12-16T16:53:34Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
[GEO] OGC compliant polygons fail with ambiguity

This feature branch implements OGC compliance for Polygon/Multi-polygon.  That is, vertex order for the exterior ring follows the right-hand rule (ccw) and all holes follow the left-hand rule (cw).  While GeoJSON imposes no restrictions, a user that wants to specify a complex poly across the dateline must do so in compliance with the OGC spec, otherwise a polygon that spans the globe will be assumed.

Reference issue #8672

Fix orientation of outer and inner ring for polygon with holes.  Updated unit tests.  Bug exists in boundary condition on negative side of dateline.

time:
2014-12-16T14:54:56Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Add 1.4.3

time:
2014-12-16T14:40:54Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Add 1.3.8 version

time:
2014-12-16T13:31:41Z
class:
src/main/java/org/elasticsearch/index/search/stats/SearchStats.java
src/test/java/org/elasticsearch/search/stats/SearchStatsUnitTests.java
comments:
Indices API: Fix wrong search stats groups

This provides a fix to issue #7644. A new Stats object must be created, and
not a reference to the retrieved stats, before we can add stats to it.
Otherwise, we would keep on adding to the same object on subsequent calls to
IndicesStatsResponse#getPrimaries() or IndicesStatsResponse#getTotal().

Closes #7644 and #8950

time:
2014-12-16T11:38:59Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Remove "compressed" field data from numeric formats

The "compressed" format was removed, so this caused warnings in the log
like:

```
[WARN ][index.fielddata          ] [node_0] [test] failed to find format
[compressed] for field [test-num], will use default
```

time:
2014-12-16T11:38:47Z
class:
src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerTests.java
comments:
[TEST] Call .cleanUp() on field data cache

Now that we do not automatically call .cleanUp() when clearing the field
data cache, we need to call it after the cache clear in
RandomExceptionCircuitBreakerTests

time:
2014-12-15T21:53:58Z
class:
src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java
comments:
Add toString() to IndexShardGateway

time:
2014-12-15T21:43:37Z
class:
src/main/java/org/elasticsearch/node/internal/InternalNode.java
comments:
Shutdown indices service last

We do wait for shards to be closed in IndicesService for 30 second.
Yet, if somebody holds on to a store reference ie. an open scroll request
the 30 seconds time-out and node shutdown takes very long. We should
release all other resources first before we shutdown IndicesService.

Closes #8940

time:
2014-12-15T21:13:45Z
class:
src/main/java/org/elasticsearch/common/joda/DateMathParser.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/main/java/org/elasticsearch/index/query/QueryStringQueryParser.java
src/main/java/org/elasticsearch/index/query/RangeFilterParser.java
src/main/java/org/elasticsearch/index/query/RangeQueryParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramParser.java
src/test/java/org/elasticsearch/common/joda/DateMathParserTests.java
src/test/java/org/elasticsearch/count/simple/SimpleCountTests.java
src/test/java/org/elasticsearch/exists/SimpleExistsTests.java
src/test/java/org/elasticsearch/index/mapper/date/SimpleDateMappingTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/search/simple/SimpleSearchTests.java
comments:
Settings: Remove `mapping.date.round_ceil` setting for date math parsing

The setting `mapping.date.round_ceil` (and the undocumented setting
`index.mapping.date.parse_upper_inclusive`) affect how date ranges using
`lte` are parsed.  In #8556 the semantics of date rounding were
solidified, eliminating the need to have different parsing functions
whether the date is inclusive or exclusive.

This change removes these legacy settings and improves the tests
for the date math parser (now at 100% coverage!). It also removes the
unnecessary function `DateMathParser.parseTimeZone` for which
the existing `DateTimeZone.forID` handles all use cases.

Any user previously using these settings can refer to the changed
semantics and change their query accordingly. This is a breaking change
because even dates without datemath previously used the different
parsing functions depending on context.

closes #8598
closes #8889

time:
2014-12-15T18:59:50Z
class:
comments:
Docs: typo on "frequent"

I replaced "high frequent terms" with "high frequency terms" and "low frequent terms" with "low frequency terms".

Alternatively, we could write, "highly frequent terms" and "minimally frequent terms" (or just "rare terms").

Closes #8962

time:
2014-12-15T17:04:17Z
class:
comments:
Update repositories.asciidoc

Update formatting of PGP key

time:
2014-12-15T16:06:21Z
class:
src/test/java/org/elasticsearch/common/breaker/MemoryCircuitBreakerTests.java
comments:
[TEST] Make parent breaker check less strict

In cases of heavy contention, it's possible for more than 2 threads
to race to a circuit breaking exception.

Essentially this means that if we have 3 threads all trying to add 3 and
simultaneously cause a circuit breaking exception (due to retry), when
adjusting after circuit breaking we can "rewind" past what this test
expects the child breaker to be at.

This adds leeway into the check, where it's okay to be within
NUM_THREADS from the parentLimit, because each thread should only add 1
to the breaker at a time.

time:
2014-12-15T15:36:43Z
class:
comments:
Wire utf-8 encoding, so unicode filenames work

Sets -Dfile.encoding=UTF-8 by default.

Closes #8847

time:
2014-12-15T15:26:48Z
class:
src/main/java/org/elasticsearch/common/network/NetworkUtils.java
src/main/java/org/elasticsearch/common/os/OsUtils.java
comments:
Remove unused code

time:
2014-12-15T14:53:02Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/GatewayAllocator.java
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocatorModule.java
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocators.java
src/main/java/org/elasticsearch/gateway/CorruptStateException.java
src/main/java/org/elasticsearch/gateway/Gateway.java
src/main/java/org/elasticsearch/gateway/GatewayAllocator.java
src/main/java/org/elasticsearch/gateway/GatewayMetaState.java
src/main/java/org/elasticsearch/gateway/GatewayModule.java
src/main/java/org/elasticsearch/gateway/GatewayService.java
src/main/java/org/elasticsearch/gateway/GatewayShardsState.java
src/main/java/org/elasticsearch/gateway/LocalAllocateDangledIndices.java
src/main/java/org/elasticsearch/gateway/MetaDataStateFormat.java
src/main/java/org/elasticsearch/gateway/ShardStateInfo.java
src/main/java/org/elasticsearch/gateway/TransportNodesListGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/TransportNodesListGatewayStartedShards.java
src/main/java/org/elasticsearch/gateway/local/LocalGateway.java
src/main/java/org/elasticsearch/gateway/local/LocalGatewayModule.java
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/index/gateway/IndexGateway.java
src/main/java/org/elasticsearch/index/gateway/IndexGatewayModule.java
src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java
src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayModule.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexGateway.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexGatewayModule.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/test/java/org/elasticsearch/gateway/GatewayIndexStateTests.java
src/test/java/org/elasticsearch/gateway/GatewayShardStateTests.java
src/test/java/org/elasticsearch/gateway/MetaDataStateFormatTest.java
src/test/java/org/elasticsearch/gateway/QuorumGatewayTests.java
src/test/java/org/elasticsearch/gateway/RecoverAfterNodesTests.java
src/test/java/org/elasticsearch/gateway/RecoveryBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/gateway/RecoveryFromGatewayTests.java
src/test/java/org/elasticsearch/indices/state/RareClusterStateTests.java
src/test/java/org/elasticsearch/indices/warmer/GatewayIndicesWarmerTests.java
src/test/java/org/elasticsearch/test/gateway/NoopGatewayAllocator.java
comments:
Remove Gateway abstraction

We only have a single gatweway since es 1.3. There is no need to keep all
these abstractsion and nested packages. We can fold most of it into simpler
structures.

time:
2014-12-15T13:30:44Z
class:
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/index/engine/EngineModule.java
src/main/java/org/elasticsearch/index/engine/IndexEngine.java
src/main/java/org/elasticsearch/index/engine/IndexEngineModule.java
src/main/java/org/elasticsearch/index/engine/internal/InternalIndexEngine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalIndexEngineModule.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/test/java/org/elasticsearch/index/query/TemplateQueryParserTest.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPlugin2Tests.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPluginTests.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[CORE] Remove IndexEngine

IndexEngine was an abstraction where we had index-level engines (instead
of shard-level) that could store meta information about the index. It
was never actually used by Elasticsearch, and only there for plugins.

This removes it, because it is a confusing abstraction and not needed,
no plugins should be implementing their own IndexEngines.

time:
2014-12-15T13:14:38Z
class:
comments:
Docs: fix a typo in cluster stats documentation example

Closes #8898

time:
2014-12-15T13:12:03Z
class:
comments:
Update percolate.asciidoc

Updating the `associated` spelling

Closes #8907

time:
2014-12-15T13:09:22Z
class:
comments:
Docs: Adding REST ACL plugin

Closes #8925

time:
2014-12-15T13:01:25Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryTests.java
comments:
Discovery: concurrent node failures can cause unneeded cluster state publishing

When a node fails (or closes), the master processes the network disconnect event and removes the node from the cluster state. If multiple nodes fail (or shut down) in rapid succession, we process the events and remove the nodes one by one. During this process, the intermediate cluster states may cause the node fault detection to signal the failure of nodes that are not yet removed from the cluster state. While this is fine, it currently causes unneeded reroutes and cluster state publishing, which can be cumbersome in big clusters.

Closes #8804
Closes #8933

time:
2014-12-15T12:51:59Z
class:
src/main/java/org/elasticsearch/rest/action/support/RestTable.java
comments:
Default _cat APIs to verbose

`?v=false` can be used if the headers are not desired.

Resolves #8922

Fixes #8927

time:
2014-12-15T10:08:29Z
class:
src/test/java/org/elasticsearch/index/analysis/KuromojiAnalysisTests.java
comments:
romanji -> romaji

time:
2014-12-15T08:41:31Z
class:
src/main/java/org/elasticsearch/search/SearchService.java
src/test/java/org/elasticsearch/search/SearchServiceTests.java
comments:
[SEARCH] close active contexts on SearchService#close()

When we close a node all pending / active search requests need to be
cleared otherwise a node will wait up to 30 sec for shutdown sicne there
could be open scroll requests. This behavior was introduces in 1.5 such that
versions <= 1.4.x are not affected.

Closes #8940

time:
2014-12-14T18:59:15Z
class:
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/StandaloneRunner.java
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project.
This commit is the first step for this plugin to depend on this new `pom` maven project.

time:
2014-12-14T18:43:51Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project.
This commit is the first step for this plugin to depend on this new `pom` maven project.

time:
2014-12-13T16:24:46Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Test: missing {} from log command in indexRandom

time:
2014-12-13T12:05:04Z
class:
src/test/java/org/elasticsearch/recovery/FullRollingRestartTests.java
comments:
Test: reduce join timeout in testFullRollingRestart

 Occasionally a the join thread successfully connected to a just closed node and which causes the subsequent join request to time out. It's default timeout 60s throws the test off when it waits for a cluster to form.

time:
2014-12-12T20:51:37Z
class:
src/main/java/org/elasticsearch/index/merge/policy/AbstractMergePolicyProvider.java
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
comments:
Core: use compound file by default for merged segments < 10% of index size

Change Elasticsearch to use Lucene's defaults, to reduce file descriptor count.

Closes #8934

Closes #8919

time:
2014-12-12T17:50:52Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project.
This commit is the first step for this plugin to depend on this new `pom` maven project.

time:
2014-12-12T17:49:53Z
class:
comments:
[Maven] best practice: add always groupId

time:
2014-12-12T17:44:46Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project.
This commit is the first step for this plugin to depend on this new `pom` maven project.

time:
2014-12-12T17:34:32Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project.
This commit is the first step for this plugin to depend on this new `pom` maven project.

time:
2014-12-12T17:11:43Z
class:
comments:
add /.local-*-execution-hints.log

time:
2014-12-12T17:11:11Z
class:
comments:
Add /.local-*-execution-hints.log

time:
2014-12-12T17:07:14Z
class:
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
comments:
[TEST] use ensureYellow()

time:
2014-12-12T16:56:29Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project.
This PR is the first step for this plugin to depend on this new `pom` maven project.

time:
2014-12-12T16:34:07Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
[TEST] wait for yellow before searching

time:
2014-12-12T16:06:16Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
[TEST] get trace logs for search packages

time:
2014-12-12T15:23:28Z
class:
comments:
Depend on elasticsearch-parent

To simplify plugins maintenance and provide more value in the future, we are starting to build an `elasticsearch-parent` project.
This PR is the first step for this plugin to depend on this new `pom` maven project.

time:
2014-12-12T12:24:45Z
class:
src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java
src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[CORE] Remove explicit .cleanUp() on cache clear

Calling cache.cleanUp() is kind of like calling System.gc(), meaning
that we should never have (non-test) things that rely on this
functionality.

For the field data and filter cache, we already have a periodic process
that runs this .cleanUp(), so there is no need to block index
closing/clearing on it. Instead, we can clean the field data cache in
InternalTestCluster before we check the circuit breaker.

This can help tests that time out because cleaning the cache is taking
too long

time:
2014-12-12T11:40:34Z
class:
src/test/java/org/elasticsearch/search/basic/SearchWhileRelocatingTests.java
comments:
[TEST] Wait for yellow before verifying - sometimes the shard is not even started

time:
2014-12-12T11:25:25Z
class:
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/analysis/IndicesAnalysisService.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySettings.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
comments:
Remove circular dependency between IndicesService and IndicesStore

time:
2014-12-12T11:18:58Z
class:
src/test/java/org/elasticsearch/indices/mapping/ConcurrentDynamicTemplateTests.java
comments:
[TEST] Remove random templates for ConcurrentDynamicTemplateTests

time:
2014-12-12T10:18:25Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngineHolder.java
comments:
Core: don't block shard stats when phase 3 of recovery is running

Today, shard stats are blocked while phase 3 of recovery (replay xlog)
is running; this change removes the engine readLock from shard stats
so it's not blocked.

Closes #8910

time:
2014-12-12T10:04:21Z
class:
comments:
updated (m)termvectors api specs to reflect #7530 which made it into 1.4

time:
2014-12-12T09:59:11Z
class:
src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java
comments:
[TEST] Add test to ensure master is not prone to #8917

time:
2014-12-12T08:29:33Z
class:
src/test/java/org/elasticsearch/test/test/TestScopeClusterTests.java
comments:
[TEST] Remove debug leftover

time:
2014-12-11T20:24:15Z
class:
src/test/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardStateTests.java
comments:
[TEST] Close the node env after test is done

time:
2014-12-11T16:31:01Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java
src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java
src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java
src/main/java/org/elasticsearch/action/admin/indices/recovery/TransportRecoveryAction.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java
src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java
src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java
src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java
src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java
src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/count/TransportCountAction.java
src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java
src/main/java/org/elasticsearch/action/delete/TransportShardDeleteAction.java
src/main/java/org/elasticsearch/action/deletebyquery/TransportShardDeleteByQueryAction.java
src/main/java/org/elasticsearch/action/exists/TransportExistsAction.java
src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java
src/main/java/org/elasticsearch/action/get/TransportGetAction.java
src/main/java/org/elasticsearch/action/get/TransportShardMultiGetAction.java
src/main/java/org/elasticsearch/action/index/TransportIndexAction.java
src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/action/termvectors/TransportShardMultiTermsVectorAction.java
src/main/java/org/elasticsearch/action/termvectors/TransportTermVectorsAction.java
src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java
src/main/java/org/elasticsearch/action/update/UpdateHelper.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/index/IndexModule.java
src/main/java/org/elasticsearch/index/IndexService.java
src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java
src/main/java/org/elasticsearch/index/cache/filter/FilterCache.java
src/main/java/org/elasticsearch/index/cache/filter/none/NoneFilterCache.java
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java
src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/get/ShardGetService.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/service/IndexService.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/shard/IndexShard.java
src/main/java/org/elasticsearch/index/shard/IndexShardModule.java
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/index/snapshots/IndexShardSnapshotAndRestoreService.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/fs/DefaultFsIndexStore.java
src/main/java/org/elasticsearch/index/store/fs/MmapFsIndexStore.java
src/main/java/org/elasticsearch/index/store/fs/NioFsIndexStore.java
src/main/java/org/elasticsearch/index/store/fs/SimpleFsIndexStore.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorsService.java
src/main/java/org/elasticsearch/index/translog/TranslogService.java
src/main/java/org/elasticsearch/indices/IndicesLifecycle.java
src/main/java/org/elasticsearch/indices/IndicesModule.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
src/main/java/org/elasticsearch/indices/NodeIndicesStats.java
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/main/java/org/elasticsearch/indices/memory/IndexingMemoryController.java
src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
src/main/java/org/elasticsearch/indices/ttl/IndicesTTLService.java
src/main/java/org/elasticsearch/indices/warmer/IndicesWarmer.java
src/main/java/org/elasticsearch/indices/warmer/InternalIndicesWarmer.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/test/java/org/elasticsearch/common/lucene/docset/DocIdSetsTests.java
src/test/java/org/elasticsearch/index/aliases/IndexAliasesServiceTests.java
src/test/java/org/elasticsearch/index/codec/CodecTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineSettingsTest.java
src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/IndexFieldDataServiceTests.java
src/test/java/org/elasticsearch/index/mapper/boost/BoostMappingIntegrationTests.java
src/test/java/org/elasticsearch/index/mapper/boost/BoostMappingTests.java
src/test/java/org/elasticsearch/index/mapper/copyto/CopyToMapperTests.java
src/test/java/org/elasticsearch/index/mapper/dynamic/DynamicMappingTests.java
src/test/java/org/elasticsearch/index/mapper/multifield/MultiFieldTests.java
src/test/java/org/elasticsearch/index/mapper/null_value/NullValueTests.java
src/test/java/org/elasticsearch/index/mapper/simple/SimpleMapperTests.java
src/test/java/org/elasticsearch/index/mapper/source/DefaultSourceMappingTests.java
src/test/java/org/elasticsearch/index/mapper/string/SimpleStringMappingTests.java
src/test/java/org/elasticsearch/index/mapper/ttl/TTLMappingTests.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingTests.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterDateRangeFormatTests.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterDateRangeTimezoneTests.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/index/search/FieldDataTermsFilterTests.java
src/test/java/org/elasticsearch/index/search/child/AbstractChildTests.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerSingleNodeTests.java
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerTests.java
src/test/java/org/elasticsearch/indices/leaks/IndicesLeaksTests.java
src/test/java/org/elasticsearch/indices/memory/IndexingMemoryControllerTests.java
src/test/java/org/elasticsearch/indices/recovery/RecoveryStatusTests.java
src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
src/test/java/org/elasticsearch/search/child/ParentFieldLoadingTest.java
src/test/java/org/elasticsearch/search/sort/SortParserTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeLuceneTestCase.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
src/test/java/org/elasticsearch/test/store/MockFSIndexStore.java
comments:
Remove some Internal* abstractions

We have lots of boilerplate code that is unnecessarily abstracting
services ie InternalIndexShard and IndexShard or InternalIndexService and
IndexService. It's enough to have concrete classes for these core classes.

Closes #8904

time:
2014-12-11T16:29:14Z
class:
comments:
[API] indices.upgrade's wait_for_completion param defaults to false

time:
2014-12-11T16:17:50Z
class:
src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java
src/main/java/org/elasticsearch/cluster/routing/MutableShardRouting.java
src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java
src/main/java/org/elasticsearch/gateway/local/state/shards/ShardStateInfo.java
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
src/test/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardStateTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
comments:
[GATEWAY] Cleanup LocalGatewayShardsState

This commit tries to cleanup LocalGatewayShardsState to be more efficient
and easier to understand.

time:
2014-12-11T15:15:00Z
class:
comments:
Packaging: Add java7/8 java-package paths to debian init script

If you use the java-package tool to create java packages, those
paths also should be added to the debian init script.

Also updated the docs, that it is ok to install java8.

Closes #7383

time:
2014-12-11T15:10:07Z
class:
src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java
src/test/java/org/elasticsearch/http/netty/HttpPublishPortTests.java
comments:
HTTP: Add 'http.publish_port' setting to the HTTP module

This change adds a 'http.publish_port' setting to the HTTP module to configure
the port which HTTP clients should use when communicating with the node. This
is useful when running on a bridged network interface or when running behind
a proxy or firewall.

Closes #8807
Closes #8137

time:
2014-12-11T15:04:25Z
class:
src/main/java/org/elasticsearch/action/indexedscripts/get/TransportGetIndexedScriptAction.java
src/main/java/org/elasticsearch/script/ScriptService.java
comments:
[SCRIPT] ScriptService can deadlock entire nodes if script index is recovering

we currently have operationThreaded set to false when indexing a script. This setting
means that if we are executing the operation locally that we don't spawn a new thread for
it althought incoming thread in this case is the network thread. Now sicne we are indexing here
the engine is currently recovering which sometimes locks the engine for finalization blocks on
a network call waiting for the recovery target to come back the internal lock in engine will never be
released since we are waiting with our network thread for it to be released.

time:
2014-12-11T14:47:24Z
class:
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/ShardOptimizeRequest.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java
src/main/java/org/elasticsearch/action/delete/TransportShardDeleteAction.java
src/main/java/org/elasticsearch/action/get/TransportGetAction.java
src/main/java/org/elasticsearch/action/get/TransportShardMultiGetAction.java
src/main/java/org/elasticsearch/action/index/TransportIndexAction.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngineHolder.java
src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/index/translog/TranslogService.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
[ENGINE] Remove engine related command classes

Todaqy we pass structs to the engine to call optimize / refresh and flush.
This commit cleans up this logic to reduce complexity in the engine.

time:
2014-12-11T13:56:54Z
class:
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsResponse.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetFieldMappingAction.java
src/test/java/org/elasticsearch/indices/mapping/SimpleGetFieldMappingsTests.java
comments:
Mappings: Fix Get field mapping api with pretty flag

Closes #6552

time:
2014-12-11T10:25:44Z
class:
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
Test: create private store for these test cases

time:
2014-12-11T03:13:09Z
class:
src/main/java/org/elasticsearch/index/codec/CodecService.java
src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/test/java/org/elasticsearch/index/codec/CodecTests.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[core] add best_compression option for Lucene 5.0

Upgrades lucene to latest, and supports the BEST_COMPRESSION parameter
now supported (with backwards compatibility, etc) in Lucene.
This option uses deflate, tuned for highly compressible data.

index.codec::
The default value compresses stored data with LZ4 compression, but
this can be set to best_compression for a higher compression ratio,
at the expense of slower stored fields performance.

IMO its safest to implement as a named codec here, because ES already
has logic to handle this correctly, and because its unrealistic to have
a plethora of options to Lucene's default codec... we are practically
limited in Lucene to what we can support with back compat, so I don't
think we should overengineer this and add additional unnecessary plumbing.

See also:
https://issues.apache.org/jira/browse/LUCENE-5914
https://issues.apache.org/jira/browse/LUCENE-6089
https://issues.apache.org/jira/browse/LUCENE-6090
https://issues.apache.org/jira/browse/LUCENE-6100

Closes #8863

time:
2014-12-10T22:42:36Z
class:
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
comments:
[GEO] Fix for NPE enclosed in SearchParseException for a "geo_shape" filter or query

This fix adds better error handling for parsing multipoint, linestring, and polygon GeoJSONs.  Current logic throws a NPE when parsing a multipoint, linestring, or polygon that does not comply with the GeoJSON specification. That is, if a user provides a single coordinate instead of an array of coordinates, or array of linestrings, the ShapeParser throws a NPE wrapped in a SearchParseException instead of a more useful error message.

Closes #8432

time:
2014-12-10T22:07:13Z
class:
src/main/java/org/elasticsearch/index/codec/CodecService.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngineHolder.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
[ENGINE] Fix updates dynamic settings in InternalEngineHolder

After the refactoring in #8784 some settings didn't get passed to the
actual engine and there exists a race if the settings are updated while
the engine is started such that the actual starting engine doesn't see
the latest settings. This commit fixes the concurrency issue as well as
adds tests to ensure the settings are reflected.

time:
2014-12-10T21:47:03Z
class:
src/test/java/org/elasticsearch/common/logging/log4j/LoggingConfigurationTests.java
comments:
[TEST] Reset test logger to default level

time:
2014-12-10T17:14:07Z
class:
comments:
Docs: use https to download the gpg public key

Closes #8818

time:
2014-12-10T16:46:32Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/search/basic/SearchWhileRelocatingTests.java
comments:
[TEST] wait for yellow to avoid searching while relocating

After upgrading shard might start relocating again. If there are no
replicas the cluster state of a node might not be up to data for
a few miliseconds and direct a search request to a node that does not
have the shard anymore. This result in the following test failures:

1> java.lang.AssertionError: Count is 99 but 101 was expected.  Total shards: 13 Successful shards: 12 & 0 shard failures:
1>     __randomizedtesting.SeedInfo.seed([1932F73B458703CA:6F4FAD3DAC55591C]:0)
1>     [...org.junit.*]
1>     org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertHitCount(ElasticsearchAssertions.java:184)
1>     org.elasticsearch.bwcompat.BasicBackwardsCompatibilityTest.testIndexRollingUpgrade(BasicBackwardsCompatibilityTest.java:358)

Waiting for relocation finished should fix this.

time:
2014-12-10T15:59:07Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java
comments:
[CORE] Drop support for state written pre 0.90

Today we have several upgrade methods that can read state written
pre 0.90 or even pre 0.19. Version 2.0 should not support these state
formats. Users of these version should upgrade to a 1.x or 0.90.x version
first.

Closes #8850

time:
2014-12-10T15:56:52Z
class:
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
[TEST] Use private store for a test private engine

The test was using the same store as the suite level engine which caused
problems with write locks in some cases.

Closes #8880

time:
2014-12-10T14:22:28Z
class:
src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java
comments:
Core: put []'s around the values in the slow-merge log message

time:
2014-12-10T10:10:32Z
class:
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
comments:
Add more trace logging to gateway translog recovery

time:
2014-12-10T09:40:58Z
class:
src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java
comments:
Use Lucene version string in main rest action

This commit removes the deprecated constant for the main
version and uses the real lucene version we are running instead.
Behind the scenes the same value was used and is now obsolet.

time:
2014-12-09T23:16:07Z
class:
src/main/java/org/apache/lucene/index/TrackingConcurrentMergeScheduler.java
comments:
Core: also log byte size and doc count when we log slow merges

Closes #8855

Closes #8853

time:
2014-12-09T22:31:24Z
class:
src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java
comments:
[TEST] Restore test logging level after test is done

time:
2014-12-09T20:39:42Z
class:
comments:
Reduce cloud-aws logging when rootLogger is DEBUG

time:
2014-12-09T13:26:13Z
class:
src/test/java/org/elasticsearch/test/junit/listeners/LoggingListener.java
src/test/java/org/elasticsearch/test/test/LoggingListenerTests.java
comments:
[TEST] LoggingListener to restore the initial logger levels after any modification

Modifications to LoggingListener pushed with #8820 caused the original logger levels not to be reset after modifications, as the new state was saved for restore instead of the previous one.

 Added unit tests for LoggingListener as well.

Closes #8845

time:
2014-12-09T13:22:15Z
class:
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
comments:
[TEST] compare strings and strings - leftover from Path API refactoring

time:
2014-12-09T12:36:26Z
class:
comments:
Docs: Fix the wording for inner hits a bit

Closes #8747

time:
2014-12-09T12:23:16Z
class:
comments:
Docs: Update repositories.asciidoc

1. Enable the repository using "add-apt-repository" to avoid this error "No command 'deb' found".
2. Adding "sudo" to update and install command.

Closes #8691

time:
2014-12-09T10:57:48Z
class:
src/test/java/org/elasticsearch/benchmark/common/lucene/uidscan/LuceneUidScanBenchmark.java
src/test/java/org/elasticsearch/benchmark/fs/FsAppendBenchmark.java
src/test/java/org/elasticsearch/benchmark/scripts/score/BasicScriptBenchmark.java
src/test/java/org/elasticsearch/bwcompat/StaticIndexBackwardCompatibilityTest.java
src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java
src/test/java/org/elasticsearch/common/ChannelsTests.java
src/test/java/org/elasticsearch/common/PidFileTests.java
src/test/java/org/elasticsearch/common/blobstore/BlobStoreTest.java
src/test/java/org/elasticsearch/common/bytes/PagedBytesReferenceTest.java
src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java
src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java
src/test/java/org/elasticsearch/common/logging/log4j/LoggingConfigurationTests.java
src/test/java/org/elasticsearch/env/EnvironmentTests.java
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
src/test/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormatTest.java
src/test/java/org/elasticsearch/index/analysis/AnalysisModuleTests.java
src/test/java/org/elasticsearch/index/analysis/HunspellTokenFilterFactoryTests.java
src/test/java/org/elasticsearch/index/mapper/FileBasedMappingsTests.java
src/test/java/org/elasticsearch/index/query/TemplateQueryParserTest.java
src/test/java/org/elasticsearch/index/query/TemplateQueryTest.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/index/store/CorruptedTranslogTests.java
src/test/java/org/elasticsearch/index/store/DirectoryUtilsTest.java
src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsBufferedTranslogTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsSimpleTranslogTests.java
src/test/java/org/elasticsearch/indices/analyze/HunspellServiceTests.java
src/test/java/org/elasticsearch/indices/template/IndexTemplateFileLoadingTests.java
src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoTests.java
src/test/java/org/elasticsearch/plugins/PluginManagerTests.java
src/test/java/org/elasticsearch/plugins/PluginManagerUnitTests.java
src/test/java/org/elasticsearch/plugins/SitePluginTests.java
src/test/java/org/elasticsearch/script/OnDiskScriptTests.java
src/test/java/org/elasticsearch/script/ScriptServiceTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java
src/test/java/org/elasticsearch/snapshots/AbstractSnapshotTests.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/RepositoriesTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SnapshotBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/ExternalNode.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
src/test/java/org/elasticsearch/test/rest/parser/RestTestSuiteParser.java
src/test/java/org/elasticsearch/test/rest/spec/RestSpec.java
src/test/java/org/elasticsearch/test/rest/support/FileUtils.java
src/test/java/org/elasticsearch/test/rest/test/FileUtilsTests.java
src/test/java/org/elasticsearch/watcher/FileWatcherTest.java
comments:
Ban java.io.File in tests.

Restrict use of java.io.File to 5 methods (excluded), but otherwise ban.
This is a prerequisite to do any mocking here.

I don't try to do any heavy cleanup on these tests, I am not familiar with them.
So this is mostly a rote straightforward conversion.

Closes #8836

time:
2014-12-09T08:31:33Z
class:
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/recovery/SimpleRecoveryTests.java
comments:
[TEST] Beef up InternalEngineTest and remove bogus timeouts

time:
2014-12-08T23:43:31Z
class:
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
Tests: Additional test for memory stats api.

time:
2014-12-08T23:29:43Z
class:
src/main/java/org/elasticsearch/index/engine/SegmentsStats.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/test/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsTests.java
comments:
Stats: Add more fine grained memory stats from Lucene segment reader.

This is a start to exposing memory stats improvements from Lucene 5.0.
This adds the following categories of Lucene index pieces to index stats:
* Terms
* Stored fields
* Term Vectors
* Norms
* Doc values

time:
2014-12-08T22:58:27Z
class:
src/test/java/org/elasticsearch/common/lucene/index/ElasticsearchDirectoryReaderTests.java
comments:
Add test that ES filterreader getCoreCacheKey() behaves correctly.

Closes #8831.

time:
2014-12-08T20:28:53Z
class:
src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchLeafReader.java
comments:
fix cache key methods on leaf reader

time:
2014-12-08T20:11:06Z
class:
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
Test: fix this test to work in IntelliJ

time:
2014-12-08T20:07:12Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngineHolder.java
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/test/ElasticsearchLuceneTestCase.java
src/test/java/org/elasticsearch/test/engine/MockInternalEngineHolder.java
comments:
[ENGINE] Add engine lifecycle store reference to EngineHolder

This commit add the engines reference to the store out of the actual
implementation into the hodler since the holder manages the actual lifcycle.
Engine internal references like per searcher or per recovery are kept inside
the actual implemenation since the have a different lifecycle.

time:
2014-12-08T16:15:06Z
class:
src/main/java/org/elasticsearch/plugins/PluginsService.java
src/test/java/org/elasticsearch/plugins/PluginServiceTests.java
src/test/java/org/elasticsearch/plugins/loading/classpath/InClassPathPlugin.java
comments:
Merge branch 'fix/plugins-loading'

time:
2014-12-08T16:13:39Z
class:
src/main/java/org/elasticsearch/plugins/PluginsService.java
src/test/java/org/elasticsearch/plugins/PluginServiceTests.java
src/test/java/org/elasticsearch/plugins/loading/classpath/InClassPathPlugin.java
comments:
Plugins: Plugin failed to load since #8666

The method Path.endsWith(String s) doesn't work exactly the same way as String.endsWith() (see http://docs.oracle.com/javase/7/docs/api/java/nio/file/Path.html#endsWith(java.nio.file.Path)). This blocks the loading of plugins.

time:
2014-12-08T14:41:09Z
class:
comments:
docs: add pgp key to repositories page

time:
2014-12-08T12:25:03Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/junit/listeners/LoggingListener.java
comments:
[TEST] Pass class level test logging to external nodes

This commit passes the test logging annotation from the class
level to the external nodes as well.

Closes #8552
I think this is a bug, we need to put in the map the current level taken from the resolved logger so we can restore it afterwards. Now we save the required log level instead.


time:
2014-12-08T11:40:38Z
class:
src/main/java/org/elasticsearch/common/lucene/LoggerInfoStream.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngineHolder.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngineModule.java
src/main/java/org/elasticsearch/index/merge/scheduler/MergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/snapshots/IndexShardRepository.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineIntegrationTest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineSettingsTest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/indices/memory/IndexingMemoryControllerTests.java
src/test/java/org/elasticsearch/indices/memory/breaker/RandomExceptionCircuitBreakerTests.java
src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
src/test/java/org/elasticsearch/test/engine/MockEngineModule.java
src/test/java/org/elasticsearch/test/engine/MockInternalEngine.java
src/test/java/org/elasticsearch/test/engine/MockInternalEngineHolder.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Internal: allow InternalEngine to be stopped and started

Once the current engine is started you can only close it once. Once closed the engine cannot be started again. This commit adds a stop method which signals the engine to free it's resources but in a way that allows restarting.

This is done by introducing InternalEngineHolder which is a wrapper around InternalEngine. This allows to add the stop() method without adding complexity the engine implementation. InternalEngineHolder also serves an entry point for listeners (incoming and outgoing) to other ES components, which removes the needs add/remove them if the engine is stopped.

Closes #8784

time:
2014-12-08T11:14:09Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderUnitTests.java
comments:
[TEST] Add unit tests for DiskThresholdDecider settings

time:
2014-12-08T11:10:28Z
class:
src/main/java/org/elasticsearch/common/lucene/SegmentReaderUtils.java
src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchDirectoryReader.java
src/main/java/org/elasticsearch/common/lucene/index/ElasticsearchLeafReader.java
src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/shard/ShardUtils.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/DirectoryUtils.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/shard/ShardUtilsTests.java
comments:
[STORE] Expose ShardId via LeafReader rather than Direcotry API

Today we try to fetch a shard Id for a given IndexReader / LeafReader
by walking it's tree until the lucene internal SegmentReader and then
casting the directory into a StoreDirecotory. This class is fully internal
to Elasticsearch and should not be exposed outside of the Store.

This commit makes StoreDirectory a private inner class and adds dedicated
ElasticsearchDirectoryReader / ElasticserachLeafReader exposing a ShardId
getter to obtain information about the shard the index / segment belogs to.

These classes can be used to expose other segment specific information in
the future more easily.

time:
2014-12-08T11:07:16Z
class:
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
comments:
Add more trace loggin to LocalIndexShardGateway.java

time:
2014-12-08T09:14:01Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
src/test/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunctionTests.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
Scripting: Add explicit error message when script_score script returns NaN

When a scoring script returns not a number, the current message is confusing (IllegalArgumentException[docID must be >= 0 and < maxDoc=3 (got docID=2147483647)]). This commit adds the error message ScriptException[script score function returns a wrong score: NaN].

Closes #2426

time:
2014-12-08T08:56:14Z
class:
comments:
Packaging: Check if proc file exists before calling sysctl

The packaged init scripts could return an error, if the file
/proc/sys/vm/max_map_count was not existing and we still called
sysctl.

This is primarly to prevent confusing error messages when elasticsearch
is started under virtualized environments without a proc file system.

Closes #4978

time:
2014-12-08T03:55:46Z
class:
src/main/java/org/elasticsearch/indices/analysis/pl/PolishIndicesAnalysis.java
src/main/java/org/elasticsearch/indices/analysis/pl/StempelAnalyzerProviderFactory.java
src/main/java/org/elasticsearch/indices/analysis/pl/StempelTokenFilterFactoryFactory.java
comments:
Analysis: Fix using PreBuiltXXXFactory

Closes #25

time:
2014-12-07T21:10:11Z
class:
src/test/java/org/elasticsearch/gateway/local/RecoverAfterNodesTests.java
comments:
Tests: move RecoverAfterNodesTests to org.elasticsearch.gateway.local and increase BLOCK_WAIT_TIMEOUT to 10s

The tests were still in org.elasticsearch.gateway.none but the none gateway was removed.

time:
2014-12-07T15:24:31Z
class:
src/main/java/org/elasticsearch/indices/analysis/KuromojiIndicesAnalysis.java
src/main/java/org/elasticsearch/indices/analysis/KurumojiCharFilterFactoryFactory.java
src/main/java/org/elasticsearch/indices/analysis/KurumojiTokenFilterFactoryFactory.java
src/main/java/org/elasticsearch/indices/analysis/KurumojiTokenizerFactoryFactory.java
comments:
Analysis: Use PreBuiltXXXFactory

  Closes #34

time:
2014-12-06T21:03:37Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java
comments:
[ALLOCATION] Speed-up disk-threshold decider

Instead of iterating all shards of all indices to get all relocating
shards for a given node we can just use the RoutingNode#shardsWithState
method and fetch all INITIALIZING / RELOCATING shards and check if they
are relocating. This operation is much faster and uses pre-build
data-structures.

Relates to #6372

time:
2014-12-06T16:30:58Z
class:
comments:
Docs: add randomizedtesting-runner to testing-framework.asciidoc

Close #8450

time:
2014-12-05T22:55:32Z
class:
src/main/java/org/elasticsearch/index/indexing/ShardIndexingService.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
comments:
Clarify InternalIndexShard callbacks

This commit changes internal callback to be clear
about when they are called and also provide the
exception that was potentially thrown as a callback argument.

Closes #5945

time:
2014-12-05T17:39:24Z
class:
src/main/java/org/elasticsearch/cluster/metadata/SnapshotMetaData.java
src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/repositories/Repository.java
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreSnapshot.java
src/main/java/org/elasticsearch/snapshots/Snapshot.java
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/test/java/org/elasticsearch/common/blobstore/BlobStoreTest.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/mockstore/BlobContainerWrapper.java
src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java
comments:
Snapshot/Restore: switch to write once mode for snapshot metadata files

This commit removes creation of in-progress snapshot file and makes creation of the final snapshot file atomic.

Fixes #8696

time:
2014-12-05T17:12:00Z
class:
src/test/java/org/elasticsearch/nodesinfo/SimpleNodesInfoTests.java
comments:
[TEST] wait unitl all machines joined the cluster

time:
2014-12-05T13:45:24Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TESTS] Log what the _default_ template is in ElasticsearchIntegrationTest

time:
2014-12-05T13:45:17Z
class:
src/test/java/org/elasticsearch/indices/mapping/ConcurrentDynamicTemplateTests.java
comments:
[TESTS] Use a _default_ template to load field data lazily

Previously it was possible for the field data clearing in this test to
take too long, causing the test to time out.

This also switches to using `scaledRandomIntBetween` for the number of
fields.

time:
2014-12-05T13:25:15Z
class:
comments:
Packaging: Make ES user own plugins dir, remove on uninstall

This change will chown /usr/share/elasticsearch/plugins to the elasticsearch
user (the directory was formerly owned by root). This enables the ES user to
manage plugins.

Also, /usr/share/elasticsearch/plugins is now removed when the elasticsearch
package is un-installed. Previously it was left lying there.

Closes #8732

Signed-off-by: Thilo Fromm <github@thilo-fromm.de>

time:
2014-12-05T11:25:48Z
class:
comments:
deb: add systemd service config for upcoming Jessie

This change adds a systemd service configuration file, and adds systemd logic
to installation and de-installation scripts. The upcoming Debian 8 "Jessie"
release will use systemd.

fixes #8943

Signed-off-by: Thilo Fromm <github@thilo-fromm.de>

time:
2014-12-05T10:14:13Z
class:
comments:
Docs: Add instructions to start elasticsearch on bootup on RHEL/Fedora.

time:
2014-12-05T10:03:32Z
class:
comments:
Docs: Added a command to start elasticsearch on bootup on Debian.

Close #8600

time:
2014-12-05T09:26:31Z
class:
comments:
Debian package: Prevent init script from returning when the service isn't actually started.

Close #6909

time:
2014-12-05T09:22:20Z
class:
src/main/java/org/elasticsearch/gateway/GatewayService.java
comments:
Gateway: GatewayService should register cluster state listener before checking for current state

At the moment we may miss a state change and fail to recover on time.

Closes #8789

time:
2014-12-04T19:20:21Z
class:
src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java
comments:
Typo in error message with too few points for geo polygon filter.

Closes #8767

time:
2014-12-04T16:02:38Z
class:
src/test/java/org/elasticsearch/common/PidFileTests.java
comments:
[TEST] produce valid symlinks in tests

time:
2014-12-04T14:56:03Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchHelper.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/action/termvectors/dfs/ShardDfsOnlyRequest.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java
src/main/java/org/elasticsearch/search/internal/SubSearchContext.java
src/main/java/org/elasticsearch/search/query/QueryPhase.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Core: surgically removed slow scroll, because master (2.0) requires full cluster restart coming from previous versions.

time:
2014-12-04T14:48:40Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
[Store] Only fail recovery if files are inconsistent

the recovery diff can return file in the `different` category
since it's conservative if it can't tell if the files are the same.
Yet, the cleanup code only needs to ensure both ends of the recovery
are consistent. If we have a very old segments_N file no checksum is present
but for the delete files they might be such that the segments file passes
the consistency check but the .del file doesn't sicne it's in-fact the same
but this check was missing in the last commit.

time:
2014-12-04T14:11:34Z
class:
comments:
[TEST] Fix Link permission to create symoblic links in temp dirs

time:
2014-12-04T13:25:46Z
class:
src/main/java/org/elasticsearch/action/OriginalIndices.java
src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryRequest.java
src/test/java/org/elasticsearch/action/OriginalIndicesTests.java
comments:
Internal: remove optional original indices

Original indices are optional in ShardDeleteByQueryRequest only for backwards compatibility, see #7406. We can remove this in master since 2.0 will require a full cluster restart.

Closes #8777

time:
2014-12-04T13:07:58Z
class:
src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsRequest.java
src/main/java/org/elasticsearch/action/search/SearchScrollRequest.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequest.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java
src/main/java/org/elasticsearch/rest/action/explain/RestExplainAction.java
comments:
Internal: remove some more bwc code

Some more code that was left for backwards compatibility can now be removed on master since 2.0 will require a full cluster restart.

Closes #8778
@javanna How this change should be backported to cloud plugins. See for example https://github.com/elasticsearch/elasticsearch-cloud-aws/blob/master/src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java#L68

good catch @dadoonet I see where this was used now :) We can restore it if needed and document who uses it and how. Maybe also take the chance to see if we can do things differently for 2.0.


time:
2014-12-04T12:38:20Z
class:
src/main/java/org/elasticsearch/action/search/SearchRequest.java
comments:
Internal: remove bwc leftover

This caused some test failures as the readFrom method was not in sync anymore with the writeTo

time:
2014-12-04T10:31:29Z
class:
src/main/java/org/elasticsearch/action/OriginalIndices.java
src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/node/info/PluginInfo.java
src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/get/GetRepositoriesRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/RestoreSnapshotRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/tasks/PendingClusterTasksRequest.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequest.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ShardClearIndicesCacheRequest.java
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/ShardOptimizeRequest.java
src/main/java/org/elasticsearch/action/admin/indices/settings/get/GetSettingsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/GetIndexTemplatesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java
src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java
src/main/java/org/elasticsearch/action/count/CountRequest.java
src/main/java/org/elasticsearch/action/count/CountResponse.java
src/main/java/org/elasticsearch/action/count/ShardCountRequest.java
src/main/java/org/elasticsearch/action/count/ShardCountResponse.java
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
src/main/java/org/elasticsearch/action/delete/ShardDeleteRequest.java
src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryRequest.java
src/main/java/org/elasticsearch/action/explain/ExplainResponse.java
src/main/java/org/elasticsearch/action/get/GetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/indexedscripts/delete/DeleteIndexedScriptRequest.java
src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java
src/main/java/org/elasticsearch/action/indexedscripts/put/PutIndexedScriptRequest.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java
src/main/java/org/elasticsearch/action/search/ClearScrollResponse.java
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/action/support/IndicesOptions.java
src/main/java/org/elasticsearch/action/support/master/MasterNodeReadOperationRequest.java
src/main/java/org/elasticsearch/action/support/master/info/ClusterInfoRequest.java
src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequest.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/single/custom/TransportSingleCustomOperationAction.java
src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java
src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/cluster/ClusterState.java
src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java
src/main/java/org/elasticsearch/cluster/service/PendingClusterTask.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/lucene/uid/Versions.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/main/java/org/elasticsearch/index/engine/SegmentsStats.java
src/main/java/org/elasticsearch/index/indexing/IndexingStats.java
src/main/java/org/elasticsearch/index/store/StoreFileMetaData.java
src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerStats.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryFileChunkRequest.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTranslogOperationsRequest.java
src/main/java/org/elasticsearch/indices/recovery/StartRecoveryRequest.java
src/main/java/org/elasticsearch/repositories/VerifyNodeRepositoryAction.java
src/main/java/org/elasticsearch/search/action/SearchServiceTransportAction.java
src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/SignificanceHeuristicStreams.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalOrder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/fetch/ShardFetchRequest.java
src/main/java/org/elasticsearch/search/fetch/source/FetchSourceContext.java
src/main/java/org/elasticsearch/search/internal/InternalSearchResponse.java
src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java
src/main/java/org/elasticsearch/search/query/QuerySearchResult.java
src/main/java/org/elasticsearch/search/suggest/Suggest.java
src/main/java/org/elasticsearch/search/warmer/IndexWarmersMetaData.java
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/test/java/org/elasticsearch/action/OriginalIndicesTests.java
src/test/java/org/elasticsearch/action/get/MultiGetShardRequestTests.java
src/test/java/org/elasticsearch/action/mlt/MoreLikeThisRequestTests.java
src/test/java/org/elasticsearch/action/support/IndicesOptionsTests.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/gateway/local/RecoveryBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/indices/recovery/StartRecoveryRequestTest.java
src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificanceHeuristicTests.java
src/test/java/org/elasticsearch/search/scroll/SlowDuelScrollTests.java
src/test/java/org/elasticsearch/search/scroll/SlowSearchScrollTests.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/ExternalNode.java
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
Remove runtime version checks

This cleanup commmit removes a large protion of the versioned reads / writes
in the network protocol since master requires a full cluster restart.

time:
2014-12-04T10:12:16Z
class:
src/main/java/org/elasticsearch/bootstrap/Bootstrap.java
src/main/java/org/elasticsearch/common/PidFile.java
src/test/java/org/elasticsearch/common/PidFileTests.java
comments:
Factor out PID file creation and add tests

This commit factors out the PID file creation from bootstrap and adds
tests for error conditions etc. We also can't rely on DELETE_ON_CLOSE
since it might not even write the file depending on the OS and JVM implementation.
This impl uses a shutdown hook to best-effort remove the pid file if it was written.

Closes #8771

time:
2014-12-04T09:49:20Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/LivenessRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/LivenessResponse.java
src/main/java/org/elasticsearch/action/admin/cluster/node/liveness/TransportLivenessAction.java
src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java
src/main/java/org/elasticsearch/transport/TransportModule.java
src/test/java/org/elasticsearch/client/transport/FailAndRetryMockTransport.java
src/test/java/org/elasticsearch/client/transport/TransportClientHeadersTests.java
comments:
[CLIENT] Add internal liveness action

This commit adds a very lightweight action to the transport
serivce that allows to fetch clustername and the discovery node
from a node. This is used by transport clients to test liveness of
a node without using the nodesinfo API which can be blocking if management
threadpools are busy.

Closes #8763

time:
2014-12-04T08:48:45Z
class:
src/test/java/org/elasticsearch/script/python/PythonScriptSearchTests.java
comments:
[Test] replace field.value() to field.values() for multivalued fields

time:
2014-12-04T08:14:20Z
class:
comments:
API endpoint cluster.put_settings accepts timeout & master_timeout query parameters

Closes #8769

time:
2014-12-03T20:13:51Z
class:
src/main/java/org/elasticsearch/index/analysis/IcuCollationTokenFilterFactory.java
comments:
Replace resolveConfigAndLoadToString

This method was removed by https://github.com/elasticsearch/elasticsearch/commit/3dfff8404362287e16466b37998ea0965eb1eacd#diff-f06b176696959d1967c63d5b74fd58ac in elasticsearch master branch

time:
2014-12-03T17:42:14Z
class:
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/StandaloneTest.java
comments:
[Test] copyToByteArray has been removed in master

time:
2014-12-03T17:31:53Z
class:
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/MultipleAttachmentIntegrationTests.java
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/SimpleAttachmentIntegrationTests.java
comments:
Test: Fix removed queryString -> queryStringQuery

time:
2014-12-03T16:02:02Z
class:
comments:
[Doc] Java API: add information on JBoss EAP

Closes #3445.

time:
2014-12-03T15:45:30Z
class:
comments:
[Doc] Java API: add search templates

Closes #7321.

time:
2014-12-03T15:28:36Z
class:
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
[DOCS] Document ActionNamesTests

time:
2014-12-03T15:18:43Z
class:
src/main/java/org/elasticsearch/transport/ActionNames.java
src/main/java/org/elasticsearch/transport/TransportService.java
src/main/java/org/elasticsearch/transport/TransportServiceAdapter.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
src/test/java/org/elasticsearch/transport/ActionNamesBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
src/test/java/org/elasticsearch/transport/netty/NettyTransportTests.java
comments:
[TEST] remove action names bwc layer

The bwc layer added with #7105 is not needed in master as a full cluster restart will be required, thus from 2.0 on the only supported action names are compliant to the defined conventions and don't need to be converted to the old format

Closes #8758

time:
2014-12-03T15:07:34Z
class:
src/main/java/org/elasticsearch/index/query/QueryBuilders.java
comments:
java: QueryBuilders cleanup: remove deprecated

Related to #8667:

Some QueryBuilders have been deprecated in 1.x branches. We removed them in 2.0.

Removed
-------

* `textPhrase(...)`
* `textPhrasePrefix(...)`
* `textPhrasePrefixQuery(...)`
* `filtered(...)`
* `inQuery(...)`
* `commonTerms(...)`
* `queryString(...)`
* `simpleQueryString(...)`

Closes #8721.

time:
2014-12-03T15:03:24Z
class:
comments:
[Doc] Add an UpdateRequest example to Java API doc

Closes #7083.

time:
2014-12-03T09:03:45Z
class:
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
comments:
[TEST] Wait for yellow before running rescorer tests

time:
2014-12-03T08:48:49Z
class:
src/main/java/org/elasticsearch/plugins/PluginManager.java
comments:
[PLUGIN] Don't use atomic move when installing plugin

the extract location might be on a different filesystem where
atomic move won't work. Yet this operation is not critical in terms
of visibility so there is no need to do this.

time:
2014-12-03T08:47:54Z
class:
src/main/java/org/elasticsearch/plugins/PluginManager.java
comments:
[PLUGIN] don't set posix permission on filesystem that don't support it

time:
2014-12-03T07:36:15Z
class:
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[TEST] guarantee REST tests execution order

REST tests are being shuffled before their execution. To guarantee their repeatability given the seed, their order needs to be always the same before the shuffling happens.

Closes #8745

time:
2014-12-02T23:09:35Z
class:
src/main/java/org/elasticsearch/common/Names.java
src/main/java/org/elasticsearch/common/io/FileSystemUtils.java
src/main/java/org/elasticsearch/env/Environment.java
src/main/java/org/elasticsearch/index/analysis/Analysis.java
src/main/java/org/elasticsearch/index/analysis/compound/HyphenationCompoundWordTokenFilterFactory.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/node/internal/InternalSettingsPreparer.java
src/main/java/org/elasticsearch/plugins/PluginManager.java
src/test/java/org/elasticsearch/env/EnvironmentTests.java
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
comments:
Revert back APIs that resolve files from classpath to java.net.URL

The conversion to the Path API doesn't work if the path points
to a file inside a JAR like a config. These path must be read
while the ZIP filesystem is opened which can't be guaranteed across
the board. This commit reverts back the relevant changes to java.net.URL
and adds a util method to read UTF-8 Encoded files from URLs correctly.

time:
2014-12-02T20:29:26Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java
src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java
src/main/java/org/elasticsearch/bootstrap/Bootstrap.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/common/Base64.java
src/main/java/org/elasticsearch/common/Names.java
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java
src/main/java/org/elasticsearch/common/http/client/HttpDownloadHelper.java
src/main/java/org/elasticsearch/common/io/FileSystemUtils.java
src/main/java/org/elasticsearch/common/io/Streams.java
src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java
src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java
src/main/java/org/elasticsearch/env/Environment.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/gateway/local/LocalGateway.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java
src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java
src/main/java/org/elasticsearch/http/HttpServer.java
src/main/java/org/elasticsearch/index/analysis/Analysis.java
src/main/java/org/elasticsearch/index/analysis/compound/HyphenationCompoundWordTokenFilterFactory.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/main/java/org/elasticsearch/indices/analysis/HunspellService.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
src/main/java/org/elasticsearch/monitor/fs/FsProbe.java
src/main/java/org/elasticsearch/monitor/fs/FsService.java
src/main/java/org/elasticsearch/monitor/fs/JmxFsProbe.java
src/main/java/org/elasticsearch/monitor/fs/SigarFsProbe.java
src/main/java/org/elasticsearch/node/internal/InternalSettingsPreparer.java
src/main/java/org/elasticsearch/node/service/NodeService.java
src/main/java/org/elasticsearch/plugins/PluginManager.java
src/main/java/org/elasticsearch/plugins/PluginsService.java
src/main/java/org/elasticsearch/repositories/Repository.java
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
src/main/java/org/elasticsearch/repositories/fs/FsRepository.java
src/main/java/org/elasticsearch/script/ScriptService.java
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/main/java/org/elasticsearch/watcher/AbstractResourceWatcher.java
src/main/java/org/elasticsearch/watcher/FileChangesListener.java
src/main/java/org/elasticsearch/watcher/FileWatcher.java
src/main/java/org/elasticsearch/watcher/ResourceWatcher.java
src/main/java/org/elasticsearch/watcher/ResourceWatcherService.java
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/cluster/allocation/ClusterRerouteTests.java
src/test/java/org/elasticsearch/common/blobstore/BlobStoreTest.java
src/test/java/org/elasticsearch/common/bytes/PagedBytesReferenceTest.java
src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java
src/test/java/org/elasticsearch/common/io/StreamsTests.java
src/test/java/org/elasticsearch/indices/store/IndicesStoreIntegrationTests.java
src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java
src/test/java/org/elasticsearch/plugins/PluginManagerTests.java
src/test/java/org/elasticsearch/plugins/PluginManagerUnitTests.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
src/test/java/org/elasticsearch/script/ScriptServiceTests.java
src/test/java/org/elasticsearch/stresstest/fullrestart/FullRestartStressTest.java
src/test/java/org/elasticsearch/stresstest/rollingrestart/RollingRestartStressTest.java
src/test/java/org/elasticsearch/watcher/FileWatcherTest.java
comments:
Add File.java to forbidden APIs

This commit cuts over all of core (not quite all tests) to java.nio.Path
It also adds the file class to the core forbidden APIs to prevent its usage.

This commit also resolves #8254 since we now consistently useing the NIO Path
API. The Changes in this commit allow for more information if IO operations fail
since the NIO API throws exceptions instead of boolean return values. The build-in
methods used in this commit are also more resillient to encodeing errors like
unmappable characters and throw exceptions if those chars are present in a file.

Closes #8254
Closes #8666

time:
2014-12-02T20:20:53Z
class:
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java
comments:
Override write(byte[] b, int off, int len) in FilterOutputStream for better performance

Closes #8748

time:
2014-12-02T18:26:17Z
class:
src/main/java/org/elasticsearch/index/store/VerifyingIndexOutput.java
comments:
Fix resource description of VerifyingIndexOutput.

time:
2014-12-02T18:23:48Z
class:
comments:
[docs] formatting and general pedantry

I'm not sure if the `distance-units` section is totally clear, when using the 'Geohash Cell Filter' and omitting a unit, the default is to interpret the integer as the 'length of the geohash prefix', not to default it to 'meter'. Maybe I'm being pedantic.

Closes #8744

time:
2014-12-02T17:22:44Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] use private randomness in InternalTestCluster
Good catch

I wrote a test for it that caught it :) http://build-us-00.elasticsearch.org/job/es_core_1x_regression/936/

Even nicer :)

Indeed it's great that we find these issues out quickly with this test!


time:
2014-12-02T17:22:17Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:19:45Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:19:35Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:18:39Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:18:27Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:16:59Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:15:43Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:15:27Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:15:14Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:15:00Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:14:42Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1642891

time:
2014-12-02T17:00:38Z
class:
comments:
Update range-filter.asciidoc

Closes #8741

time:
2014-12-02T16:43:06Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] speed up tests by reducing the recovery retry by default

time:
2014-12-02T16:38:53Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java
src/main/java/org/elasticsearch/index/store/VerifyingIndexOutput.java
comments:
Core: Upgrade to lucene-5.0.0-snapshot-1642891.

The only required change was to add a description to our index outputs.

Close #8743

time:
2014-12-02T13:56:12Z
class:
src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
comments:
Removed 1.x version check

time:
2014-12-02T13:50:57Z
class:
src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java
comments:
Fixed forgotten delegation

time:
2014-12-02T13:05:44Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/StoreFileMetaData.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryCleanFilesRequest.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
[RECOVERY] Ensure shards are identical after recovery

Today we don't check if the recovery target has all the
files that we expect there after the recovery. This commit
adds aditional safety to ensure all files are present with the
correct checksums on recovery finalization.

Closes #8723

time:
2014-12-02T12:33:35Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySettings.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[RECOVERY] Make recovery delay configurable

Today we wait 500ms before we retry a recovery if the target node is not ready.
This happens if the source starts the recovery before the target has
processed the clusterstate moving the target shard into the right state.
This can cause a 500ms delay each time it happens while the shard is ready
way earlier on the target node. This commit makes this delay configurable
to mainly speed up test processing and shard allocation in tests.

time:
2014-12-02T11:55:44Z
class:
comments:
Docs: Update range-query.asciidoc

Closes #8740

time:
2014-12-02T11:01:01Z
class:
src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
src/main/java/org/elasticsearch/index/query/NestedQueryParser.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/search/SearchHit.java
src/main/java/org/elasticsearch/search/SearchModule.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsParser.java
src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
src/main/java/org/elasticsearch/search/fetch/FetchPhase.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsBuilder.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsContext.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsFetchSubPhase.java
src/main/java/org/elasticsearch/search/fetch/innerhits/InnerHitsParseElement.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java
src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
src/main/java/org/elasticsearch/search/internal/InternalSearchHits.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/main/java/org/elasticsearch/search/internal/SubSearchContext.java
src/main/java/org/elasticsearch/search/sort/SortParseElement.java
src/test/java/org/elasticsearch/search/fetch/innerhits/NestedChildrenFilterTest.java
src/test/java/org/elasticsearch/search/innerhits/InnerHitsTests.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Added `inner_hits` feature that allows to include nested hits.

Inner hits allows to embed nested inner objects, children documents or the parent document that contributed to the matching of the returned search hit as inner hits, which would otherwise be hidden.

Closes #8153
Closes #3022
Closes #3152

time:
2014-12-02T10:19:46Z
class:
comments:
bin/elasticsearch: add help, fix endless loop

This change adds command line help for all options to the es start script.
Both '-h' and '--help' options are accepted.

Also, an endless busy loop in the long options parser was fixed: running the
script with a long opt parameter w/o value (e.g. "elasticsearch --buuuurrrnn")
the long option parser would end up in an endless busy loop.

Signed-off-by: Thilo Fromm <github@thilo-fromm.de>

time:
2014-12-02T09:11:34Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
Remove unused member / argument on Store

time:
2014-12-02T09:11:04Z
class:
src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java
comments:
[TEST] Ensure we have a mapping for all types on open/close

time:
2014-12-01T13:41:25Z
class:
src/main/java/org/elasticsearch/index/query/QueryBuilders.java
src/main/java/org/elasticsearch/rest/action/explain/RestExplainAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
src/main/java/org/elasticsearch/rest/action/support/RestActions.java
src/test/java/org/elasticsearch/action/bench/BenchmarkTestUtil.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/count/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/count/simple/SimpleCountTests.java
src/test/java/org/elasticsearch/exists/SimpleExistsTests.java
src/test/java/org/elasticsearch/explain/ExplainActionTests.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/indices/leaks/IndicesLeaksTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreFieldValueTests.java
src/test/java/org/elasticsearch/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/search/matchedqueries/MatchedQueriesTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryStringTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
src/test/java/org/elasticsearch/search/scroll/SearchScrollTests.java
src/test/java/org/elasticsearch/search/simple/SimpleSearchTests.java
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
comments:
java: QueryBuilders cleanup (add and deprecate)

Some QueryBuilders are missing or have a different naming than the other ones.

This patch is applied to branch 1.x and master (elasticsearch 1.5 and 2.0):

Added
-----

* `templateQuery(...)`
* `commonTermsQuery(...)`
* `queryStringQuery(...)`
* `simpleQueryStringQuery(...)`

Deprecated
----------

* `commonTerms(...)`
* `queryString(...)`
* `simpleQueryString(...)`

time:
2014-12-01T13:22:48Z
class:
comments:
Remove java facet documentation in master

As we did in reference guide, we need to remove facet java code in master branch.

time:
2014-12-01T09:52:00Z
class:
comments:
Fixing typo

Closes #8713

time:
2014-11-30T15:31:49Z
class:
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
comments:
[TEST] Ensure that all flushes happen on PeerRecovery tests

time:
2014-11-30T15:31:49Z
class:
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/search/child/ParentFieldLoadingTest.java
src/test/java/org/elasticsearch/test/index/merge/NoMergePolicyProvider.java
src/test/java/org/elasticsearch/update/UpdateTests.java
comments:
[TEST] Move NoMergePolicyProvider into it's own class

time:
2014-11-30T08:38:57Z
class:
comments:
Docs: Fixed bad link to top-hits agg

time:
2014-11-29T19:11:21Z
class:
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
[TEST] wait for all shards to be allocated before IndexStatsTests runs

time:
2014-11-29T19:07:19Z
class:
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
comments:
[TEST] Mute CircuitBreakerServiceTests.testMemoryBreaker

Relates to #8710

time:
2014-11-29T18:46:33Z
class:
comments:
Add java documentation for aggregations

Buckets:
--------

* terms
* range
* global
* filter
* filters
* missing
* nested
* reverse nested
* children
* significant terms
* date range
* ip range
* range
* histogram
* date histogram
* geo distance
* geo hash grid

Metrics:
--------

* min
* max
* sum
* avg
* stats
* extended stats
* value count
* percentiles
* percentile rank
* cardinality
* geo bounds
* top hits
* scripted metric

time:
2014-11-29T16:16:46Z
class:
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
comments:
[TEST] make sure number of shard is low in network corruption tests

time:
2014-11-29T15:06:05Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Use private random instance to build test cluster config

time:
2014-11-29T14:37:15Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Speed up recoveries if tests.nighly=true

time:
2014-11-29T14:36:05Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Don't fail test if dummy doc is not found

Relates to #8706

time:
2014-11-29T13:06:04Z
class:
comments:
Docs: Grammar correction

Closes #8702

time:
2014-11-28T21:04:01Z
class:
src/test/java/org/elasticsearch/test/rest/client/RestClient.java
comments:
[TEST] Use a pooling connection manager for REST tests

time:
2014-11-28T20:16:38Z
class:
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[TEST] Try to speed up REST tests by reducing max number of replicas and shards

time:
2014-11-28T16:11:16Z
class:
src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
comments:
Logging - provides template usage information on index creation
Closes #7421

time:
2014-11-28T16:04:31Z
class:
src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java
comments:
Updated AttachmentMapper to work with new validation in ES 2.0

time:
2014-11-28T15:53:33Z
class:
comments:
Update daterange-aggregation.asciidoc

Clarified the date-math expressions on date range aggregations

Closes #8703

time:
2014-11-28T14:56:11Z
class:
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
comments:
[TEST] Explicit wait for fielddata breaker to be cleared

time:
2014-11-28T14:12:09Z
class:
src/test/java/org/elasticsearch/common/breaker/MemoryCircuitBreakerTests.java
comments:
[TEST] Relax constraints of breaker tests even more

They were very stringent, and add values in worst-case situations. The
new values are acceptable while still testing the functionality of the
breaker.

time:
2014-11-28T13:48:43Z
class:
src/main/java/org/elasticsearch/action/termvectors/MultiTermVectorsRequest.java
src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java
src/main/java/org/elasticsearch/common/lucene/search/XMoreLikeThis.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/main/java/org/elasticsearch/index/search/morelikethis/MoreLikeThisFetchService.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
MLT Query: Support for ignore docs

Adds a `ignore_like` parameter to the MLT Query, which simply tells the
algorithm to skip all the terms from the given documents. This could be useful
in order to better guide nearest neighbor search by telling the algorithm to
never explore the space spanned by the given `ignore_like` docs. In essence we
are interested about the characteristic of a given item, but not of the ones
provided by `ignore_like`, thereby forcing the algorithm to go deeper in its
selection of terms. Note that this is different than simply performing a must
not boolean query on the unliked items. The syntax is exactly the same as the
`like` parameter.

Closes #8674

time:
2014-11-28T12:54:45Z
class:
comments:
Docs: Additional info about _score calculation

Description taken from http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/multi-query-strings.html / 110_Multi_Field_Search/05_Multiple_query_strings.asciidoc

Closes #8635

time:
2014-11-28T11:35:26Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/CustomBoostFactorScorer.java
src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/FunctionScoreQuery.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryParser.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
function_score: match only document with score above custom score threshold

functon_score matched each document regardless of the computed score.
This commit adds a query parameter `min_score` (-Float.MAX_VALUE default).
Documents that have a score lower than this threshold will not be mached.

closes #6952

time:
2014-11-28T11:28:31Z
class:
src/test/java/org/elasticsearch/http/netty/NettyPipeliningDisabledIntegrationTest.java
comments:
[TEST] With pipelining disabled requests can come back in any order

Closes #8697

time:
2014-11-28T10:01:15Z
class:
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
[TEST] add back accidetially removed test logging

time:
2014-11-28T09:49:56Z
class:
src/test/java/org/elasticsearch/cluster/ack/AckClusterUpdateSettingsTests.java
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
comments:
[TEST] move test to a different class that can disable publish timeout on demand

time:
2014-11-28T09:44:06Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/SameShardRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/gateway/local/LocalGatewayIndexStateTests.java
src/test/java/org/elasticsearch/gateway/local/RecoveryBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
src/test/java/org/elasticsearch/http/netty/NettyHttpServerPipeliningTest.java
src/test/java/org/elasticsearch/index/TransportIndexFailuresTest.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
src/test/java/org/elasticsearch/indices/store/IndicesStoreIntegrationTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
src/test/java/org/elasticsearch/recovery/FullRollingRestartTests.java
src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/MinDocCountTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/AvgTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/StatsTests.java
src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java
src/test/java/org/elasticsearch/search/child/ParentFieldLoadingTest.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreBackwardCompatibilityTests.java
src/test/java/org/elasticsearch/search/scroll/SearchScrollWithFailingNodesTests.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
[TEST] remove outdated TestLogging annotation

Conflicts:
	src/test/java/org/elasticsearch/bwcompat/UnicastBackwardsCompatibilityTest.java
	src/test/java/org/elasticsearch/recovery/RelocationTests.java

time:
2014-11-28T09:29:24Z
class:
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineIntegrationTest.java
comments:
[TEST] Add an assert for null indices in InternalEngineIntegrationTest

time:
2014-11-28T09:22:49Z
class:
src/test/java/org/elasticsearch/recovery/RelocationTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Test: add trace logging to RelocationTests

also improved error message when failing to delete a dummy doc

time:
2014-11-28T09:10:10Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
[TEST] Use different index on each iteration to ensure less timeout prone tests

time:
2014-11-28T07:07:57Z
class:
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
MLT Query: Fix exclude with artificial documents

Artificial documents get assigned a random id. When include is set to false
(default), the ids of these documents also get included, when they should
rather be ignored.

Closes #8679

time:
2014-11-27T22:04:40Z
class:
src/test/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzerIntegrationTests.java
comments:
[TEST] Reduce possible number of indices in the test - 10 indices can create tons of shards

time:
2014-11-27T19:29:34Z
class:
comments:
[Docs] fix consistency between examples

time:
2014-11-27T18:39:12Z
class:
comments:
[Docs] Fix missing new line

time:
2014-11-27T18:18:55Z
class:
comments:
[docs] explain default settings for parameters of decay functions

relates to #8624

time:
2014-11-27T16:57:35Z
class:
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Test: predefine sort fields in mapping, otherwise during the test the field may not be found if it were to be introduced dynamically at index time.

time:
2014-11-27T16:12:38Z
class:
src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java
comments:
[CLIENT] Only fetch the node info during node sampling

Today we are fetching a lot of information that is unneeded
for the sampling phase. We only really need the DiscoveryNode
to ensure the node is still there.
This commit clears all flags to be false on the NodeInfo call.

time:
2014-11-27T16:11:07Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java
comments:
[HEALTH] Don't mark health as timed out if desired state is reached

Today we mark cluster health requests as timed out if the request has already
timed out. Yet, and implementation detail of the health request is that we are
waiting for events which can take quite some time if the machine is busy. If
we have already reached a valid state while waiting for events to be processed
we shouldn't mark the clusterstate as timed-out. This will help tests that
wait for green state with lots of nodes and shards to not fail the cluster health
calls.

time:
2014-11-27T16:01:30Z
class:
src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java
src/main/java/org/elasticsearch/script/javascript/support/NativeList.java
src/main/java/org/elasticsearch/script/javascript/support/NativeMap.java
src/main/java/org/elasticsearch/script/javascript/support/ScriptValueConverter.java
src/test/java/org/elasticsearch/script/javascript/JavaScriptScriptSearchTests.java
comments:
Improve wrapping of lists.

With the current way that Java lists are wrapped into a Scriptable, all methods
that are not defined on the java.util.List interface are hidden. This pull
request makes NativeList extend NativeJavaObject in order to use reflection in
order to look up properties that would not be defined on the List interface.

Close #32

time:
2014-11-27T15:35:55Z
class:
src/test/java/org/elasticsearch/script/javascript/JavaScriptScriptSearchTests.java
comments:
Fix expectations around script fields as a consequence of https://github.com/elasticsearch/elasticsearch/pull/8592.

time:
2014-11-27T15:30:26Z
class:
src/test/java/org/elasticsearch/update/UpdateTests.java
comments:
Test: UpdateTests.stressUpdateDeleteConcurrency shouldn't turn off threaded operations

This may result in all network threads being busy for too long.

time:
2014-11-27T10:36:15Z
class:
comments:
[TEST] remove duplicated tests.slow from randomized testing maven plugin conf

time:
2014-11-27T10:03:19Z
class:
comments:
[Docs] Fix missing comma in mapping

time:
2014-11-27T09:42:25Z
class:
src/test/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java
comments:
[TEST] make sure rest tests info is printed for any @Rest annotated test

We introduced the @Rest annotation a while ago for REST tests (see #7795), we have then to make sure that relevant info to reproduce failures gets printed out for any test that is marked with such annotation, not only for ElasticsearchRestTests

Closes #8680

time:
2014-11-27T08:02:23Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/discovery/ZenUnicastDiscoveryTests.java
src/test/java/org/elasticsearch/test/discovery/ClusterDiscoveryConfiguration.java
comments:
[TEST] Extend unicast ports generation to support more concurrent clusters

Make it possible to run multiple tests with unicast configuration, by assigning ports based on their test scope.
Every jvm still gets its own port range based on the jvm id, but we now make sure that the different jvms ranges never overlap. The global cluster gets a reserved port range, while SUITE and TEST scopes are treated equally, just assuming that they never run concurrently on the same jvm, thus ports can be safely reused.

Closes #8634

time:
2014-11-27T07:00:00Z
class:
src/test/java/org/elasticsearch/test/discovery/ClusterDiscoveryConfiguration.java
comments:
[TEST] split base settings in ClusterDiscoveryConfiguration between node and transport client

The default settings that are currently applied to the transport client are about discovery and gateway, modules that are not even loaded on the transport client. We can now remove the local gateway as it's not the default one anyway. Also, make sure that the discovery setting is only applied to the node, as it is not relevant for transport client.

Closes #8653

time:
2014-11-26T20:47:24Z
class:
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineIntegrationTest.java
comments:
[TEST] Wait for green before testing IW settings

time:
2014-11-26T16:54:20Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreBackwardCompatibilityTests.java
comments:
[TEST] Stabelize FunctionScoreBWC tests - allocation should be disabled during upgrade

time:
2014-11-26T16:29:49Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Versions: Add 1.4.2/1.3.7 constants

time:
2014-11-26T16:18:37Z
class:
comments:
Updated docs to use v1.4.1 as current

time:
2014-11-26T15:47:15Z
class:
comments:
Update AWS SDK to 1.9.8

Closes #148

time:
2014-11-26T15:44:44Z
class:
comments:
Merge branch 'split-aws-java-sdk' of https://github.com/Collaborne/elasticsearch-cloud-aws into Collaborne-split-aws-java-sdk

time:
2014-11-26T15:38:37Z
class:
src/main/java/org/elasticsearch/cloud/aws/AwsEc2Service.java
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/cloud/aws/AbstractAwsTest.java
comments:
Merge #137
Closes #136

time:
2014-11-26T13:57:31Z
class:
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
comments:
[TEST] Add additional logging to memoryCircuitBreaker test

time:
2014-11-26T11:48:45Z
class:
src/test/java/org/elasticsearch/repositories/s3/AbstractS3SnapshotRestoreTest.java
comments:
Remove unnecessary settings in test method

time:
2014-11-26T10:10:47Z
class:
src/main/java/org/elasticsearch/common/lucene/LoggerInfoStream.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineIntegrationTest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
Core: separately log file deletions

Today, you can turn on lucene.iw TRACE logging, but that produces tons
of output.  This changes breaks out separate lucene.iw.ifd and
index.store.deletes logger components (TRACE), disabled by default, to
see what part of Elasticsearch is deleting index files.

Closed #8662

Closed #8603

time:
2014-11-26T10:04:29Z
class:
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/repositories/s3/AbstractS3SnapshotRestoreTest.java
comments:
Fix unit tests and some bugs introduced by #128

Closes #119, #147

time:
2014-11-26T09:58:01Z
class:
src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/cloud/aws/TestAwsS3Service.java
src/test/java/org/elasticsearch/repositories/s3/AbstractS3SnapshotRestoreTest.java
comments:
Merge branch 'brutasse-feature/per-repo-endpoint'

time:
2014-11-26T09:57:20Z
class:
src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/cloud/aws/TestAwsS3Service.java
src/test/java/org/elasticsearch/repositories/s3/AbstractS3SnapshotRestoreTest.java
comments:
Merge branch 'feature/per-repo-endpoint' of https://github.com/brutasse/elasticsearch-cloud-aws into brutasse-feature/per-repo-endpoint

time:
2014-11-26T09:14:02Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
comments:
Core: Let the disk threshold decider take into account shards moving away from a node in order to determine if a shard can remain.

By taking this into account we can prevent that we move too many shards away than is necessary.

Closes #8538
Closes #8659

time:
2014-11-26T08:12:34Z
class:
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
Raise REST test Timeout - LocalGW takes it't tall...

time:
2014-11-26T02:50:07Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
comments:
Core: clarify index removal log message

time:
2014-11-25T21:41:33Z
class:
src/main/java/org/elasticsearch/common/xcontent/XContentFactory.java
src/main/java/org/elasticsearch/common/xcontent/cbor/CborXContent.java
src/test/java/org/elasticsearch/common/xcontent/XContentFactoryTests.java
src/test/java/org/elasticsearch/common/xcontent/cbor/JsonVsCborTests.java
comments:
Revert "Update to Jackson 2.4.3"

This reverts commit 7523d0b150ff7b05aa37b5e6edf8216341671b38.

time:
2014-11-25T19:32:01Z
class:
src/test/java/org/elasticsearch/index/search/geo/GeoHashUtilsTests.java
comments:
Adding unit test for even / odd boundary condition

time:
2014-11-25T19:31:56Z
class:
src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java
src/test/java/org/elasticsearch/index/search/geo/GeoHashUtilsTests.java
comments:
Fix for geohash neighbors when geohash length is even.
We don't have to set XLimit and YLimit depending on the level (even or odd), since semantics of x and y are already swapped on each level.
XLimit is always 7 and YLimit is always 3.

Close #8526

time:
2014-11-25T19:03:16Z
class:
src/main/java/org/elasticsearch/common/xcontent/XContentFactory.java
src/main/java/org/elasticsearch/common/xcontent/cbor/CborXContent.java
src/test/java/org/elasticsearch/common/xcontent/XContentFactoryTests.java
src/test/java/org/elasticsearch/common/xcontent/cbor/JsonVsCborTests.java
comments:
Update to Jackson 2.4.3

- Update pom to 2.4.3 from 2.4.2
- Enable the CBOR data header (aka tag) from the CBOR Generator to provide binary identification like the Smile format
- Check for the CBOR header and ensure that the data sent in represents a "major type" that is an object
- Cleans up `JsonVsCborTests` unused imports

time:
2014-11-25T18:36:01Z
class:
comments:
Docs: Adds documentation for indices.exists_template

Closes: #8657

time:
2014-11-25T18:23:59Z
class:
comments:
Spec: Fixes URL links to documentation

Closes #8656

time:
2014-11-25T17:25:46Z
class:
comments:
Added note that ES packages automatically change vm.max_map_count

Closes #8601

time:
2014-11-25T16:39:26Z
class:
src/main/java/org/elasticsearch/common/util/SlicedDoubleList.java
src/main/java/org/elasticsearch/common/util/SlicedLongList.java
src/main/java/org/elasticsearch/common/util/SlicedObjectList.java
src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java
src/test/java/org/elasticsearch/common/util/SlicedDoubleListTests.java
src/test/java/org/elasticsearch/common/util/SlicedLongListTests.java
src/test/java/org/elasticsearch/common/util/SlicedObjectListTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/HistogramTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/MinTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/PercentileRanksTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/PercentilesTests.java
src/test/java/org/elasticsearch/search/fields/SearchFieldsTests.java
comments:
Scripts: Return new lists on calls to getValues.

Scripts currently share the same list across invocations to getValues. This
caused a bug in script fields where all documents coming from the same segment
would get the same values (basically, for the next document for which script
values have been requested). Scripts now return a fresh new list on every
invocation to `getValues`.

Close #8576

time:
2014-11-25T15:48:03Z
class:
src/main/java/org/elasticsearch/common/rounding/TimeZoneRounding.java
src/test/java/org/elasticsearch/common/rounding/TimeZoneRoundingTests.java
comments:
Aggregations: fix rounding issues on DST switch.

Closes #8339.

time:
2014-11-25T14:33:44Z
class:
comments:
[SPEC] Removed the utilities for generating REST specs/code

The utilities have been migrated to the elasticsearch/elasticsearch-ruby repository.

See: https://github.com/elasticsearch/elasticsearch-ruby/tree/master/elasticsearch-api/utils

Related: elasticsearch/elasticsearch-ruby@dfac51d

Closes #8606

time:
2014-11-25T14:07:10Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java
src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java
src/test/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormatTest.java
comments:
[GATEWAY] Cut over MetaDataStateFormat to Path API

Closes #8609

time:
2014-11-25T13:53:38Z
class:
src/test/java/org/elasticsearch/search/scroll/SearchScrollWithFailingNodesTests.java
comments:
remove unnecessary clearScroll call - these contexts are released by delete index now

time:
2014-11-25T13:46:29Z
class:
src/main/java/org/elasticsearch/index/query/QueryParserUtils.java
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
comments:
Parent/child: Fixed parent/child not being able to be used in alias filters.

Closes #8628

time:
2014-11-25T13:35:06Z
class:
src/main/java/org/elasticsearch/index/shard/IndexShardClosedException.java
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
comments:
[RECOVERY] Throw IndexShardClosedException if shard is closed

Today we throw a generic ElasticsearchException when a recovery is cancled. This
causes verbose logging and send shard failures and additional unnecessary cluster state
events. We can just throw IndexShardClosedException which prevents the send shard failures

time:
2014-11-25T12:49:15Z
class:
comments:
Docs: Added swift openstack repository

Closes #8583

time:
2014-11-25T12:15:33Z
class:
comments:
Typo: changed "5% or the real words" to "5% of the real words"

Closes #8582

time:
2014-11-25T11:43:57Z
class:
src/main/java/org/elasticsearch/index/CloseableIndexComponent.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/gateway/IndexGateway.java
src/main/java/org/elasticsearch/index/gateway/IndexShardGateway.java
src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/merge/policy/MergePolicyProvider.java
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/index/store/IndexStore.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/main/java/org/elasticsearch/index/translog/ChecksummedTranslogStream.java
src/main/java/org/elasticsearch/index/translog/LegacyTranslogStream.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/index/translog/TranslogStream.java
src/main/java/org/elasticsearch/index/translog/TranslogStreams.java
src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java
src/main/java/org/elasticsearch/index/translog/fs/ChannelReference.java
src/main/java/org/elasticsearch/index/translog/fs/FsChannelSnapshot.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslogFile.java
src/main/java/org/elasticsearch/index/translog/fs/SimpleFsTranslogFile.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
src/main/java/org/elasticsearch/plugins/AbstractPlugin.java
src/main/java/org/elasticsearch/plugins/Plugin.java
src/main/java/org/elasticsearch/plugins/PluginsService.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java
src/test/java/org/elasticsearch/index/translog/TranslogVersionTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsBufferedTranslogTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsSimpleTranslogTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
comments:
[TRANSLOG] Cut over to Path API

This commit moves all the Translog related code over to the
NIO2 Path API. It also make transaction logs write once since it
never reuses a translog file.

Closes #8611

time:
2014-11-25T10:53:29Z
class:
src/test/java/org/elasticsearch/common/breaker/MemoryCircuitBreakerTests.java
comments:
[TEST] Reduce stringency of breaker assertions

While in a perfect world we should only ever have 2 circuit breaker
trips, it's possible to get a race condition between the child and the
parent breaker with many threads. Since multiple breaking exceptions are
not actually a bad thing, it's okay to relax the constraints in the
test.

The race conditions are due to no locking inside the breaker logic, to
ensure that it is as low overhead as possible. Even though no locking is
used, we use atomic counters internally to ensure that the "estimated"
numbers for the breakers are never out of sync (which this test still
checks with no leeway).

time:
2014-11-25T10:07:42Z
class:
src/main/java/org/elasticsearch/search/aggregations/Aggregation.java
src/main/java/org/elasticsearch/search/aggregations/Aggregations.java
src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java
src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java
src/main/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregation.java
src/main/java/org/elasticsearch/search/aggregations/bucket/InternalSingleBucketAggregation.java
src/main/java/org/elasticsearch/search/aggregations/bucket/MultiBucketsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFilters.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGrid.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalOrder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/Terms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/InternalNumericMetricsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/InternalGeoBounds.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHits.java
src/main/java/org/elasticsearch/search/aggregations/support/AggregationPath.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/FilterTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/GeoHashGridTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/GlobalTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/HistogramTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/IPv4RangeTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/MissingTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/NestedTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/RangeTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/AbstractNumericTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/AvgTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ExtendedStatsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/MaxTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/MinTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/PercentileRanksTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/PercentilesTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/StatsTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/SumTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountTests.java
src/test/java/org/elasticsearch/search/aggregations/support/PathTests.java
comments:
Aggregations: Added getProperty method to Aggregations

This allows arbitrary properties to be retrieved from an aggregation tree. The property is specified using the same syntax as the
order parameter in the terms aggregation. If a property path contians a multi-bucket aggregation the property values from each bucket will be returned in an array.

time:
2014-11-25T09:13:57Z
class:
src/main/java/org/elasticsearch/index/merge/EnableMergeScheduler.java
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/merge/scheduler/MergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/rest/action/cat/RestThreadPoolAction.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Core: let Lucene kick off merges

Today, Elasticsearch has a separate merge thread pool checking once
per second (by default) if any merges are necessary, but this is no
longer necessary since we can and do now tell Lucene's
ConcurrentMergeScheduler never to "hard pause" threads when merges
fall behind, since we do our own index throttling.

This change goes back to letting Lucene launch merges as needed, and
removes these two expert settings:

  index.merge.force_async_merge
  index.merge.async_interval

Now merges kick off immediately instead of waiting up to 1 second
before running.

Closes #8643

time:
2014-11-25T07:55:24Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractTermsParametersParser.java
comments:
Aggregations: Make size parsing consistent for strings.

Close #6061

time:
2014-11-25T02:17:03Z
class:
src/main/java/org/elasticsearch/snapshots/RestoreService.java
comments:
Snapshot/Restore: fix compilation issue for JDK 1.7

time:
2014-11-25T00:37:43Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/restore/TransportRestoreSnapshotAction.java
src/main/java/org/elasticsearch/snapshots/RestoreService.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Snapshot/Restore: restore with wait_for_completion=true should wait for succesfully restored shards to get started

This commit ensures that restore operation with wait_for_completion=true doesn't return until all successfully restored shards are started. Before it was returning as soon as restore operation was over, which cause some shards to be unavailable immediately after restore completion.

Fixes #8340

time:
2014-11-24T19:43:33Z
class:
comments:
Spec: Fixes a few locations of the params array in JSON specification

A few locations of the `params` object in the JSON specification were not located in the `url` block.

Closes #8607

time:
2014-11-24T18:42:53Z
class:
src/main/java/org/elasticsearch/index/fielddata/AbstractRandomAccessOrds.java
src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTests.java
src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/SortedSetDVStringFieldDataTests.java
comments:
Fielddata: Fix iterator over global ordinals.

Our iterator over global ordinals is currently incorrect since it does NOT
return -1 (NO_MORE_ORDS) when all ordinals have been consumed. This bug does
not strike immediately with elasticsearch since we always consume ordinals in
a random-access fashion. However it strikes when consuming ordinals through
Lucene helpers such as DocValues#docsWithField.

Close #8580

time:
2014-11-24T17:38:56Z
class:
comments:
update documentation with release 2.4.1

time:
2014-11-24T17:29:11Z
class:
src/main/java/org/elasticsearch/discovery/gce/GceDiscovery.java
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
comments:
UnicastHostsProvider should use version.minimumCompatibilityVersion()

The UnicastHostsProvider implementation creates DiscoveryNodes that are used as an initial seed for unicast based discovery. At the moment it uses Version.CURRENT for those DiscoveryNode object, which confuses the backwards compatibility layer to think this nodes are of the latest version. This causes new nodes to fail to join old nodes as the ping serialization goes wrong. Instead we should use version.minimumCompatibilityVersion().

Closes #41.

(cherry picked from commit 9ae29c7)

time:
2014-11-24T17:25:31Z
class:
src/main/java/org/elasticsearch/action/index/TransportIndexAction.java
src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateTests.java
comments:
Core: Fields defined in the `_default_` mapping of an index template should be picked up when an index alias filter is parsed if a new index is introduced when a document is indexed into an index that doesn't exist yet.

Closes #8473

time:
2014-11-24T17:17:00Z
class:
comments:
update documentation with release 2.5.1

time:
2014-11-24T17:16:35Z
class:
comments:
Fix latest plugin version

time:
2014-11-24T17:05:21Z
class:
comments:
The document recommends a non-durable location for data

I noticed the documentation recommends a non-durable local resource for the Elasticsearch data path.  Although this is acceptable for some deployments it might be worth warning people that the path is not durable and there is a potential for data loss, even with replicas data loss is theoretically possible.

```
# recommended
path.data: /mnt/resource/elasticsearch/data
```

Alternatively the user could attach and use data disks which do come with a significant performance tradeoff, but premium storage options with higher IOPS have been announced and are right around the corner.

Closes #46.

time:
2014-11-24T17:00:24Z
class:
src/main/java/org/elasticsearch/discovery/azure/AzureDiscovery.java
src/main/java/org/elasticsearch/discovery/azure/AzureUnicastHostsProvider.java
comments:
UnicastHostsProvider should use version.minimumCompatibilityVersion()

The UnicastHostsProvider implementation creates DiscoveryNodes that are used as an initial seed for unicast based discovery. At the moment it uses Version.CURRENT for those DiscoveryNode object, which confuses the backwards compatibility layer to think this nodes are of the latest version. This causes new nodes to fail to join old nodes as the ping serialization goes wrong. Instead we should use version.minimumCompatibilityVersion().

Closes #47.

(cherry picked from commit 188179f)

time:
2014-11-24T16:30:33Z
class:
comments:
update documentation with release 2.4.1

time:
2014-11-24T15:06:11Z
class:
src/main/java/org/elasticsearch/discovery/ec2/AwsEc2UnicastHostsProvider.java
src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java
comments:
AwsEc2UnicastHostsProvider should use version.minimumCompatibilityVersion()

The AwsEc2UnicastHostsProvider creates DiscoveryNodes that are used as an initial seed for unicast based discovery. At the moment it uses Version.CURRENT (see [1]) for those DiscoveryNode object, which confuses the backwards compatibility layer to think this nodes are of the latest version. This causes new nodes to fail to join old nodes as the ping serialization goes wrong. Instead we should use version.minimumCompatibilityVersion(). See [2]

[1] https://github.com/elasticsearch/elasticsearch-cloud-aws/blob/es-1.x/src/main/java/org/elasticsearch/discovery/ec2/AwsEc2UnicastHostsProvider.java#L165
[2] https://github.com/elasticsearch/elasticsearch/blob/master/src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java#L130

Ps. this was reported on the mailing list. See: https://groups.google.com/forum/#!msg/elasticsearch/8pUwFld88tI/7jRuG6hqtbAJ

Closes #143.

time:
2014-11-24T15:00:45Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java
comments:
[GATEWAY] Remove _state directory if index has been deleted

Today we try to delete the index directory if all shard locks have been
acquired. Yet, if this fails due to still running recoveries etc. We might
re-import the index as dangeling which also can happen if the node is restarted.
In contrast to the shard direcotries we can safely delete the metastate which is used
to import dangling indices while leaving the shard directories untouched.

time:
2014-11-24T14:46:48Z
class:
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java
src/test/java/org/elasticsearch/index/query/TemplateQueryTest.java
comments:
Fix SearchRequest.templateParams so that it is a Map<String, Object> so that it can take more data-types than just strings, to support Arrays.

time:
2014-11-24T14:34:10Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
comments:
Updating comments in BasePolygonBuilder to explain "pairwise" intersection

time:
2014-11-24T14:33:56Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
comments:
Removing IntersectionOrder.SENTINEL and adding Edge.MAX_COORDINATE for code readability.

time:
2014-11-24T14:31:36Z
class:
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
[GEO] Fix for geo_shape query with polygon from -180/90 to 180/-90

This fix adds a simple consistency check that intersection edges appear pairwise. Polygonal boundary tests were passing (false positive) on the Eastern side of the dateline simply due to the initial order (edge direction) of the intersection edges.  Polygons in the Eastern hemispehere (which were not being tested) were correctly failing inside of JTS due to an attempt to connect incorrect intersection edges (that is, edges that were not even intersections). While this patch fixes issue/8467 (and adds broader test coverage) it is not intented as a long term solution.  The mid term fix (in work) will refactor all geospatial computational geometry to use ENU / ECF coordinate systems for higher accuracy and eliminate brute force mercator checks and conversions.

Closes #8467

time:
2014-11-24T12:32:41Z
class:
src/main/java/org/elasticsearch/index/query/SpanNotQueryBuilder.java
src/main/java/org/elasticsearch/index/query/SpanNotQueryParser.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
Applied PR, changed the way defaults are handled and updated the docs.

Closes #4452

time:
2014-11-24T12:28:55Z
class:
src/main/java/org/elasticsearch/index/query/SpanNotQueryParser.java
comments:
Cleaner error handling. Pre without post (or vice versa) is not an error condition. Set appropriate defaults for pre/post.

time:
2014-11-24T12:28:55Z
class:
src/main/java/org/elasticsearch/index/query/SpanNotQueryBuilder.java
comments:
Use static int for easier to read code

time:
2014-11-24T12:28:54Z
class:
src/main/java/org/elasticsearch/index/query/SpanNotQueryBuilder.java
src/main/java/org/elasticsearch/index/query/SpanNotQueryParser.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
Expose dist/pre/post options for SpanNotQuery

time:
2014-11-24T11:22:05Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocatorModule.java
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/ShardsAllocators.java
src/main/java/org/elasticsearch/gateway/GatewayModule.java
src/main/java/org/elasticsearch/gateway/none/NoneGateway.java
src/main/java/org/elasticsearch/gateway/none/NoneGatewayModule.java
src/main/java/org/elasticsearch/index/gateway/none/NoneIndexGateway.java
src/main/java/org/elasticsearch/index/gateway/none/NoneIndexGatewayModule.java
src/main/java/org/elasticsearch/index/gateway/none/NoneIndexShardGateway.java
src/main/java/org/elasticsearch/tribe/TribeService.java
src/test/java/org/elasticsearch/benchmark/percolator/PercolatorStressBenchmark.java
src/test/java/org/elasticsearch/benchmark/stress/SingleThreadBulkStress.java
src/test/java/org/elasticsearch/benchmark/stress/SingleThreadIndexingStress.java
src/test/java/org/elasticsearch/client/transport/TransportClientTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/RandomAllocationDeciderTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
src/test/java/org/elasticsearch/index/mapper/FileBasedMappingsTests.java
src/test/java/org/elasticsearch/indexlifecycle/IndexLifecycleActionTests.java
src/test/java/org/elasticsearch/indices/memory/IndexingMemoryControllerTests.java
src/test/java/org/elasticsearch/stresstest/gcbehavior/FilterCacheGcStress.java
src/test/java/org/elasticsearch/stresstest/indexing/ConcurrentIndexingVersioningStressTest.java
src/test/java/org/elasticsearch/stresstest/refresh/RefreshStressTest1.java
src/test/java/org/elasticsearch/stresstest/rollingrestart/RollingRestartStressTest.java
src/test/java/org/elasticsearch/stresstest/search1/ConcurrentSearchSerializationTests.java
src/test/java/org/elasticsearch/stresstest/search1/Search1StressTest.java
src/test/java/org/elasticsearch/test/ElasticsearchAllocationTestCase.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/gateway/NoopGatewayAllocator.java
comments:
Remove NoneGateway, NoneGatewayAllocator, & NoneGatewayModule

Always use the LocalGateway* equivalents

We already check in the LocalGateway whether a node is a client node, or
is not master-eligible, and skip writing the state there. This allows us
to remove this code that was previously used only for tribe nodes (which
are not master eligible anyway and wouldn't write state) and in
tests (which can shake more bugs out)

time:
2014-11-24T11:19:44Z
class:
comments:
Docs: Reword note regarding _source for accuracy

Previously it suggested _source was always present, when that is not the case.

Closes #8491

time:
2014-11-24T11:15:12Z
class:
comments:
Docs: Update plugins.asciidoc on river plugins section

Adding links to Amazon S3 and Google Drive river plugins

Closes #8544

time:
2014-11-24T10:52:16Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:52:11Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:52:10Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:52:02Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:51:58Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:51:40Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:51:36Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:51:31Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:51:25Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:51:19Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:51:11Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1641343

time:
2014-11-24T10:08:42Z
class:
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java
src/main/java/org/elasticsearch/index/analysis/SerbianNormalizationFilterFactory.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/mapper/core/BinaryFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/NumberFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/main/java/org/elasticsearch/index/store/fs/FsDirectoryService.java
src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java
src/test/java/org/elasticsearch/index/analysis/AnalysisFactoryTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/mapper/string/SimpleStringMappingTests.java
src/test/java/org/elasticsearch/index/store/distributor/DistributorTests.java
comments:
Core: upgrade to current Lucene 5.0.0 snapshot

Elasticsearch no longer unlocks the Lucene index on startup (this was
dangerous, and could possibly lead to corruption).

Added the new serbian_normalization TokenFilter from Lucene.

NoLockFactory is no longer supported (index.store.fs.fs_lock = none),
and if you have a typo in your fs_lock you'll now hit a StoreException
instead of silently using NoLockFactory.

Closes #8588

time:
2014-11-24T08:58:44Z
class:
comments:
Switch to forbidden-apis 1.7

time:
2014-11-24T08:41:16Z
class:
src/main/java/org/elasticsearch/search/fetch/script/ScriptFieldsFetchSubPhase.java
src/test/java/org/elasticsearch/script/IndexLookupTests.java
src/test/java/org/elasticsearch/search/fields/SearchFieldsTests.java
comments:
Core: Fix script fields to be returned as a multivalued field when they produce a list.

This change is essentially the same as #3015 but on script fields.

Close #8592

time:
2014-11-23T13:45:56Z
class:
comments:
Docs: Update update-settings.asciidoc

Inconsistent indentation

Closes #8525

time:
2014-11-23T13:03:58Z
class:
comments:
Missing quote in the example

time:
2014-11-23T13:02:51Z
class:
comments:
Fix error in documentation

Indexation does not fail if no timestamp provided when there is a default value defined in mapping.

time:
2014-11-23T12:56:33Z
class:
comments:
Docs: Remove reference to imaginary "no_docs_query"

No reference to it in the source code except this file.

Closes #8566

time:
2014-11-23T11:28:45Z
class:
comments:
Docs: Added new elasticsearch-river-kafka plugin to the documentation (uses latest version of Kafka, EL Bulk API, and supports concurrent requests)

Closes #8518

time:
2014-11-21T21:35:21Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
[STORE] Use Lucene checksums if segment version is >= 4.9.0

We started to use the lucene CRC32 checksums instead of the legacy Adler32
in `v1.3.0` which was the first version using lucene `4.9.0`. We can safely
assume that if the segment was written with this version that checksums
from lucene can be used even if the legacy checksum claims that it has a Adler32
for a given file / segment.

Closes #8587

Conflicts:
	src/main/java/org/elasticsearch/index/store/Store.java
	src/test/java/org/elasticsearch/index/store/StoreTest.java

time:
2014-11-21T20:04:01Z
class:
src/main/java/org/elasticsearch/action/count/CountRequestBuilder.java
comments:
Added utility method to CountRequestBuilder

Allows to add a query to CountRequestBuilder as a XContentBuilder.

Closes #8594

time:
2014-11-21T19:27:52Z
class:
src/test/java/org/elasticsearch/index/search/child/ScoreTypeTests.java
comments:
[TEST] all tests should extend ElasticsearchTestCase

time:
2014-11-21T18:28:34Z
class:
src/main/java/org/elasticsearch/index/mapper/MapperService.java
comments:
Fix a typo in a javadoc comment in MapperService.

Close #8575

time:
2014-11-21T18:28:34Z
class:
src/main/java/org/elasticsearch/index/query/MultiMatchQueryParser.java
comments:
Fix wrong error messages in MultiMatchQueryParser.

Also fix a typo in the comment

Close #8597

time:
2014-11-21T18:22:13Z
class:
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterDateRangeFormatTests.java
src/test/java/org/elasticsearch/validate/SimpleValidateQueryTests.java
comments:
Fix test failures caused by #8556

time:
2014-11-21T17:33:36Z
class:
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
comments:
Fix compile error from bad merge in #8556

time:
2014-11-21T17:28:30Z
class:
src/main/java/org/elasticsearch/common/joda/DateMathParser.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/test/java/org/elasticsearch/common/joda/DateMathParserTests.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterDateRangeFormatTests.java
comments:
DateMath: Fix semantics of rounding with inclusive/exclusive ranges.

Date math rounding currently works by rounding the date up or down based
on the scope of the rounding.  For example, if you have the date
`2009-12-24||/d` it will round down to the inclusive lower end
`2009-12-24T00:00:00.000` and round up to the non-inclusive date
`2009-12-25T00:00:00.000`.

The range endpoint semantics work as follows:
* `gt` - round D down, and use > that value
* `gte` - round D down, and use >= that value
* `lt` - round D down, and use <
* `lte` - round D up, and use <=

There are 2 problems with these semantics:
* `lte` ends up including the upper value, which should be non-inclusive
* `gt` only excludes the beginning of the date, not the entire rounding scope

This change makes the range endpoint semantics symmetrical.  First, it
changes the parser to round up and down using the first (same as before)
and last (1 ms less than before) values of the rounding scope.  This
makes both rounded endpoints inclusive. The range endpoint semantics
are then as follows:
* `gt` - round D up, and use > that value
* `gte` - round D down, and use >= that value
* `lt` - round D down, and use < that value
* `lte` - round D up, and use <= that value

closes #8424
closes #8556

time:
2014-11-21T17:05:48Z
class:
src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/cloud/aws/TestAwsS3Service.java
src/test/java/org/elasticsearch/repositories/s3/AbstractS3SnapshotRestoreTest.java
comments:
Allow per-repo protocols

Also add an integration test for custom endpoints/protocols.

time:
2014-11-21T13:06:44Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/termvectors/MultiTermVectorsAction.java
src/main/java/org/elasticsearch/action/termvectors/MultiTermVectorsItemResponse.java
src/main/java/org/elasticsearch/action/termvectors/MultiTermVectorsRequest.java
src/main/java/org/elasticsearch/action/termvectors/MultiTermVectorsRequestBuilder.java
src/main/java/org/elasticsearch/action/termvectors/MultiTermVectorsResponse.java
src/main/java/org/elasticsearch/action/termvectors/MultiTermVectorsShardRequest.java
src/main/java/org/elasticsearch/action/termvectors/MultiTermVectorsShardResponse.java
src/main/java/org/elasticsearch/action/termvectors/TermVectorsAction.java
src/main/java/org/elasticsearch/action/termvectors/TermVectorsFields.java
src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java
src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequestBuilder.java
src/main/java/org/elasticsearch/action/termvectors/TermVectorsResponse.java
src/main/java/org/elasticsearch/action/termvectors/TermVectorsWriter.java
src/main/java/org/elasticsearch/action/termvectors/TransportMultiTermVectorsAction.java
src/main/java/org/elasticsearch/action/termvectors/TransportShardMultiTermsVectorAction.java
src/main/java/org/elasticsearch/action/termvectors/TransportTermVectorsAction.java
src/main/java/org/elasticsearch/action/termvectors/dfs/DfsOnlyRequest.java
src/main/java/org/elasticsearch/action/termvectors/dfs/DfsOnlyResponse.java
src/main/java/org/elasticsearch/action/termvectors/dfs/ShardDfsOnlyRequest.java
src/main/java/org/elasticsearch/action/termvectors/dfs/ShardDfsOnlyResponse.java
src/main/java/org/elasticsearch/action/termvectors/dfs/TransportDfsOnlyAction.java
src/main/java/org/elasticsearch/action/termvectors/dfs/package-info.java
src/main/java/org/elasticsearch/action/termvectors/package-info.java
src/main/java/org/elasticsearch/client/Client.java
src/main/java/org/elasticsearch/client/support/AbstractClient.java
src/main/java/org/elasticsearch/client/transport/TransportClient.java
src/main/java/org/elasticsearch/index/mapper/Uid.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/main/java/org/elasticsearch/index/search/morelikethis/MoreLikeThisFetchService.java
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorsModule.java
src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorsService.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/termvectors/RestMultiTermVectorsAction.java
src/main/java/org/elasticsearch/rest/action/termvectors/RestTermVectorsAction.java
src/main/java/org/elasticsearch/transport/ActionNames.java
src/test/java/org/elasticsearch/action/IndicesRequestTests.java
src/test/java/org/elasticsearch/action/termvectors/AbstractTermVectorsTests.java
src/test/java/org/elasticsearch/action/termvectors/GetTermVectorsCheckDocFreqTests.java
src/test/java/org/elasticsearch/action/termvectors/GetTermVectorsTests.java
src/test/java/org/elasticsearch/action/termvectors/MultiTermVectorsTests.java
src/test/java/org/elasticsearch/action/termvectors/TermVectorsUnitTests.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/routing/SimpleRoutingTests.java
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
Term Vectors: More consistent naming for term vector[s]

We speak of the term vectors of a document, where each field has an associated
stored term vector. Since by default we are requesting all the term vectors of
a document, the HTTP request endpoint should rather be called `_termvectors`
instead of `_termvector`. The usage of `_termvector` is now deprecated, as
well as the transport client call to termVector and prepareTermVector.

Closes #8484

time:
2014-11-21T11:20:58Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
comments:
[CORE] Ensure shards are deleted under lock on close

Today there is a race condition between the actual deletion of
the shard and the release of the lock in the store. This race can cause
rare imports of dangeling indices if the cluster state update loop
tires to import the dangeling index in that particular windonw. This commit
adds more safety to the import of dangeling indices and removes the race
condition by holding on to the lock on store closing while the listener
is notified.

time:
2014-11-21T10:02:04Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/GeoHashGridTests.java
comments:
Aggregations: Fix geohash grid doc counts computation on multi-valued fields.

Close #8512

time:
2014-11-21T10:00:01Z
class:
src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/DefaultS3OutputStream.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobStore.java
src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/cloud/aws/AbstractAwsTest.java
src/test/java/org/elasticsearch/cloud/aws/TestAmazonS3.java
src/test/java/org/elasticsearch/cloud/aws/TestAwsS3Service.java
comments:
Merge branch 'master' into feature/per-repo-endpoint

Conflicts:
	src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java
	src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
	src/main/java/org/elasticsearch/repositories/s3/S3Repository.java

time:
2014-11-21T09:24:24Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java
comments:
Update DiskThresholdDecider javadoc

Since v1.3.0, and issue #6201, the default values in code and documentation have been updated to 85% and 90% for low and high watermarks. However, the related javadoc still contains the initial values : this commit fix this.

time:
2014-11-21T02:03:23Z
class:
src/main/java/org/elasticsearch/index/codec/CodecService.java
src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterPostingsFormat.java
src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterPostingsFormatProvider.java
src/main/java/org/elasticsearch/index/codec/postingsformat/Elasticsearch090PostingsFormat.java
src/main/java/org/elasticsearch/index/codec/postingsformat/PostingFormats.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/codec/CodecTests.java
src/test/java/org/elasticsearch/index/codec/postingformat/DefaultPostingsFormatTests.java
src/test/java/org/elasticsearch/index/codec/postingformat/Elasticsearch090RWPostingsFormat.java
src/test/java/org/elasticsearch/index/codec/postingformat/ElasticsearchPostingsFormatTest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineIntegrationTest.java
src/test/java/org/elasticsearch/search/suggest/completion/CompletionPostingsFormatTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Disable bloom filters.

make the "es090" postings format read-only, just to support old segments. There is a test version that subclasses it with write-capability for testing.

Closes #8571

time:
2014-11-20T21:45:28Z
class:
src/main/java/org/elasticsearch/common/util/BloomFilter.java
src/test/java/org/elasticsearch/index/codec/postingformat/ElasticsearchPostingsFormatTest.java
comments:
[BLOOM] Fix Bloom filter ram usage calculation

BloomFilter actually returned the size of the bitset as the
size in bytes so off by factor 8 plus a constant :)

Closes #8564

time:
2014-11-20T16:25:46Z
class:
comments:
Use the new 'install' form when invoking bin/plugin

'-install' was deprecated in https://github.com/elasticsearch/elasticsearch/issues/3112,
and 'install' is the proper variant from https://github.com/elasticsearch/elasticsearch/pull/7339.

time:
2014-11-20T16:10:59Z
class:
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java
src/test/java/org/elasticsearch/cloud/aws/AbstractAwsTest.java
src/test/java/org/elasticsearch/cloud/aws/TestAmazonS3.java
src/test/java/org/elasticsearch/cloud/aws/TestAwsS3Service.java
comments:
Add random read failures in unit tests to test the retry logic added to S3BlobContainer.openInput()

time:
2014-11-20T16:10:59Z
class:
src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/DefaultS3OutputStream.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobStore.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
comments:
Add retry logic for S3 connection errors when restoring snapshots

This commit adds a retry logic when reading blobs from S3. It also adds a retry logic when initializing a multipart upload and sets the internal "max retries" parameter of the Amazon S3 client with the same value as the "max_retry" parameter set for the snapshot repository (so in worst cases with the default value set to 3, 3x3=9 attempts will be made). The internal S3 client uses an exponential back off strategy between each connection exception (mainly IOException).

Closes elasticsearch/elasticsearch#8280

time:
2014-11-20T15:13:35Z
class:
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/search/SearchService.java
comments:
[CORE] Free pending search contexts if index is closed

Today we hold on to search context reference if they are not cleaned
up for a while until a reaper thread trashes them if they timed out.
This commit removes all pending contexts once the index is closed to release
resources and filehandles immediatly once the index is closed.

time:
2014-11-20T14:37:35Z
class:
src/main/java/org/elasticsearch/indices/IndicesLifecycle.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerSingleNodeTests.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
comments:
[INDEX] Add before/after indexDeleted callbacks to IndicesLifecycle

In order to implement #8551 correctly without causing problems of relocating
shards we need to be informed if an index is actually deleted. This commit adds
more callbacks to the listener and makes deleteIndex a dedicated method on IndicesService

time:
2014-11-20T14:35:08Z
class:
src/test/java/org/elasticsearch/index/mapper/FileBasedMappingsTests.java
comments:
[TEST] Delete index in test to release file handles

time:
2014-11-20T14:35:08Z
class:
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
comments:
Add missing await into an interruptable block

time:
2014-11-20T14:29:44Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreBackwardCompatibilityTests.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/junit/listeners/LoggingListener.java
comments:
Revert "[TEST] use logger level from test class annotation also in external nodes"

This reverts commit 4604a68bef9c54f5db812609157b18788279012d.

time:
2014-11-20T13:47:19Z
class:
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/store/IndexStore.java
src/main/java/org/elasticsearch/index/store/IndexStoreModule.java
src/main/java/org/elasticsearch/index/store/fs/DefaultFsDirectoryService.java
src/main/java/org/elasticsearch/index/store/fs/DefaultFsIndexStore.java
src/main/java/org/elasticsearch/index/store/fs/FsDirectoryService.java
src/main/java/org/elasticsearch/index/store/fs/FsIndexStore.java
src/main/java/org/elasticsearch/index/store/fs/MmapFsDirectoryService.java
src/main/java/org/elasticsearch/index/store/fs/MmapFsIndexStore.java
src/main/java/org/elasticsearch/index/store/fs/NioFsDirectoryService.java
src/main/java/org/elasticsearch/index/store/fs/NioFsIndexStore.java
src/main/java/org/elasticsearch/index/store/fs/SimpleFsDirectoryService.java
src/main/java/org/elasticsearch/index/store/fs/SimpleFsIndexStore.java
src/main/java/org/elasticsearch/index/store/ram/RamDirectoryService.java
src/main/java/org/elasticsearch/index/store/ram/RamIndexStore.java
src/main/java/org/elasticsearch/index/store/ram/RamIndexStoreModule.java
src/main/java/org/elasticsearch/index/store/support/AbstractIndexStore.java
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/mapper/FileBasedMappingsTests.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
src/test/java/org/elasticsearch/indices/memory/IndexingMemoryControllerTests.java
src/test/java/org/elasticsearch/indices/store/SimpleDistributorTests.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/store/MockDirectoryHelper.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
src/test/java/org/elasticsearch/test/store/MockFSIndexStore.java
src/test/java/org/elasticsearch/test/store/MockRamDirectoryService.java
src/test/java/org/elasticsearch/test/store/MockRamIndexStore.java
src/test/java/org/elasticsearch/test/store/MockRamIndexStoreModule.java
comments:
[STORE] Remove `memory`/ `ram` store

The RAM store is discuraged for production usage anyway and
we don't test it in our randomized infrastructure. This commit
removes it for `2.0`

time:
2014-11-20T13:06:11Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersParser.java
src/test/java/org/elasticsearch/search/aggregations/bucket/FilterTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java
comments:
Parser throws NullPointerException when Filter aggregation clause is empty.
Added Junit test that recreates the error and fixed FilterParser to default to using a MatchAllDocsFilter if the requested filter clause is left empty.
Also added fix and test for the Filters (with an "s") aggregation.

Closes #8438

time:
2014-11-20T11:46:27Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingOnClusterTests.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingTests.java
comments:
[root mappers] fix conflict when updating mapping with _all disabled

_all reports a conflict since #7377. However, it was not checked if _all
was actually configured in the updated mapping. Therefore whenever _all
was disabled a mapping could not be updated unless _all was again added to the
updated mapping.
Also, add enabled setting to mapping always whenever enabled was set explicitely.

closes #8423
closes #8426

time:
2014-11-20T11:04:08Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreBackwardCompatibilityTests.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/junit/listeners/LoggingListener.java
comments:
[TEST] use logger level from test class annotation also in external nodes

closes #8552

time:
2014-11-20T10:30:49Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/FilterTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java
comments:
Tests: Fix test bug in Filter[s]Tests that made it throw a version conflict.

time:
2014-11-20T09:03:56Z
class:
src/main/java/org/elasticsearch/index/fielddata/SortingNumericDocValues.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridParser.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
src/main/java/org/elasticsearch/search/aggregations/support/values/ScriptLongValues.java
src/test/java/org/elasticsearch/search/aggregations/bucket/GeoHashGridTests.java
comments:
Aggregations: Fix geohash grid aggregation on multi-valued fields.

This aggregation creates an anonymous fielddata instance that takes geo points
and turns them into a geo hash encoded as a long. A bug was introduced in 1.4
because of a fielddata refactoring: the fielddata instance tries to populate
an array with values without first making sure that it is large enough.

Close #8507

time:
2014-11-20T08:59:13Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/FilterTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java
comments:
Aggregations: Do not take deleted documents into account in aggregations filters.

Since aggregators are only called on documents that match the query, it never
gets called on deleted documents, so by specifying `null` as live docs, we very
likely remove a BitsFilteredDocIdSet layer.

Close #8540

time:
2014-11-20T06:01:26Z
class:
src/test/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java
comments:
Tests: Pass through locale and timezone to test runner, and print in
repro command line.

The carrot runner currently randomizes both locale and timezone, but
these are not set in the maven reproduce line.  Since they aren't
even printed, we have no idea what locale/timezone the tests
actually ran with.

time:
2014-11-20T00:54:41Z
class:
src/test/java/org/elasticsearch/bwcompat/StaticIndexBackwardCompatibilityTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Tests: Forward port tweak to prepareBackwardsDataDir to 1.x to allow passing
settings when loading an old index.

time:
2014-11-19T23:56:04Z
class:
src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/bwcompat/StaticIndexBackwardCompatibilityTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Tests: Add static index based backcompat tests

This change adds tests against static indexes for previous versions
of elasticsearch. It also adds a python script to
generate the indexes.

time:
2014-11-19T23:12:01Z
class:
src/test/java/org/elasticsearch/search/basic/SearchWhileRelocatingTests.java
comments:
Revert "[TEST] Add search trace logging for debugging"

This reverts commit a7b2bdca4c8779e1fca6d89db8967233e42136ec.

time:
2014-11-19T23:10:43Z
class:
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/search/SearchService.java
comments:
Revert "[CORE] Free pending search contexts if index is closed"

This reverts commit edc48f39c5ed80c235442e9f4ba87fe1db3eb0f2.

time:
2014-11-19T22:51:21Z
class:
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
Test: Fix malformed mapping setting, slipped in from merging a commit from 1.x

time:
2014-11-19T22:21:39Z
class:
src/main/java/org/elasticsearch/common/lucene/search/NoCacheQuery.java
src/main/java/org/elasticsearch/common/lucene/search/ResolvableFilter.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
src/test/java/org/elasticsearch/index/mapper/date/SimpleDateMappingTests.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterCachingTests.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterDateRangeFormatTests.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterDateRangeTimezoneTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
comments:
Core: Added query/filter wrapper that builds the actual query to be executed on the last possible moment to aid with index aliases and percolator queries using `now` date expression.

Percolator queries and index alias filters are parsed once and reused as long as they exist on a node. If they contain time based range filters with a `now` expression then the alias filters and percolator queries are going to be incorrect from the moment these are constructed (depending on the date rounding).

 If a range filter or range query is constructed as part of adding a percolator query or a index alias filter then these get wrapped in special query or filter wrappers that defer the resolution of now at last possible moment as apposed during parse time. In the case of the range filter a special Resolvable Filter makes sure that `now` is resolved when the DocIdSet is pulled and in the case of the range query `now` is resolved at query rewrite time. Both occur at the time the range filter or query is used as apposed when the query or filter is constructed during parse time.

Closes #8474
Closes #8534

time:
2014-11-19T22:13:45Z
class:
src/test/java/org/elasticsearch/search/basic/SearchWhileRelocatingTests.java
comments:
[TEST] Add search trace logging for debugging

time:
2014-11-19T21:50:30Z
class:
src/main/java/org/elasticsearch/common/util/concurrent/AbstractRunnable.java
src/main/java/org/elasticsearch/common/util/concurrent/EsThreadPoolExecutor.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
comments:
[RECOVERY] Allow to cancle recovery sources when shards are closed

Today recovery sources are not cancled if a shard is closed. The recovery target
is already cancled when shards are closed but we should also cleanup and cancel
the sources side since it holds on to shard locks / references until it's closed.

time:
2014-11-19T20:44:51Z
class:
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/search/SearchService.java
comments:
[CORE] Free pending search contexts if index is closed

Today we hold on to search context reference if they are not cleaned
up for a while until a reaper thread trashes them if they timed out.
This commit removes all pending contexts once the index is closed to release
resources and filehandles immediatly once the index is closed.

time:
2014-11-19T20:31:10Z
class:
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
comments:
Internal: IndexService - synchronize close to prevent race condition with shard creation

During node shutdown we have a race condition between processing cluster state updates (creating shards) and closing down the index service. This may cause shards to leak and not be closed properly.

This commit removes the concurrency in shard closing as InternalIndexService.removeShard has been synchronized for a long time now.

On the other hand, the commit restores the parallel shutdown of indices lost in 7e1d8a6ca3b23c07cbaebe72831c7ef4a201bd2b

Closes #8557

time:
2014-11-19T15:08:57Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/test/java/org/elasticsearch/gateway/local/LocalGatewayIndexStateTests.java
comments:
Fix: If dangling_timeout was set to 0 and auto_import_dangled
was set to yes, dangling indices were deleted by mistake,
because a RemoveDanglingIndices runnable was added
to every dangling indices, without considering the auto_import_dangled
setting.

time:
2014-11-19T14:58:53Z
class:
src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java
comments:
Fix example in logging daily rotate configuration

PR #8464 come with a bug in the example provided.

First, the current log file is not compressed so it should not end with `.gz`.
Second, conversion pattern was removing all the log content but was printing only the log date.
Then, the current log filename was hardcoded to `elasticsearch` instead of the cluster name.

time:
2014-11-19T14:23:50Z
class:
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java
comments:
[GEO] Add LinearRing and LineString validity checks as defined by http://geojson.org/geojson-spec.html to ensure valid polygons are specified at parse time.

Closes #8433

time:
2014-11-19T14:14:52Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
comments:
add more debug logging if recovery thread got iterrupted

time:
2014-11-19T10:34:57Z
class:
comments:
[DOCS] document that we support loading multiple logging conf files

time:
2014-11-19T10:34:35Z
class:
src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java
src/test/java/org/elasticsearch/common/logging/log4j/LoggingConfigurationTests.java
comments:
[TEST] move LoggingConfigurationTests to common.logging.log4j

Make also LogConfigurator#ALLOWED_SUFFIXES package private so that it can be used in LoggingConfigurationTests, now that it's in the same package as the class that it tests.
Add few randomized aspects to LoggingConfigurationTests.

time:
2014-11-19T10:34:03Z
class:
src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
comments:
Logging: restrict files loaded as logging configuration based on their suffix

Make sure that files such as logging.yml.rpmnew or logging.yml.bak are not loaded as logging configuration.

Only files that start with the "logging." prefix and end with ".yaml", ".yml", ".json" and ".properties" suffix get loaded.

Closes #7457

time:
2014-11-19T02:08:24Z
class:
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
Test: don't enable unnecessary http transport in restoreIndexWithShardsMissingInLocalGateway test

time:
2014-11-18T19:54:26Z
class:
comments:
Docs: Update execution hint docs for Significant terms agg

copied over the relevant pieces from the terms agg

Closes #8532

time:
2014-11-18T16:26:31Z
class:
src/test/java/org/elasticsearch/search/basic/SearchWhileCreatingIndexTests.java
comments:
[TEST] Revert accidential massive iterations

time:
2014-11-18T16:04:34Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/search/basic/SearchWhileCreatingIndexTests.java
src/test/java/org/elasticsearch/test/engine/MockInternalEngine.java
comments:
[TEST] add more debug output when engine / store are closed

time:
2014-11-18T16:01:36Z
class:
src/test/java/org/elasticsearch/update/UpdateTests.java
comments:
[TEST] Give tests for ctx._ttl more leeway

Fixes #8500

time:
2014-11-18T14:33:00Z
class:
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
[TEST] distributor direcotory is only used if multiple datapath are configured

time:
2014-11-18T13:14:09Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkProcessor.java
src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java
src/main/java/org/elasticsearch/cluster/routing/RoutingService.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/common/metrics/MeterMetric.java
src/main/java/org/elasticsearch/common/util/concurrent/FutureUtils.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/index/translog/TranslogService.java
src/main/java/org/elasticsearch/indices/memory/IndexingMemoryController.java
src/main/java/org/elasticsearch/monitor/jvm/JvmMonitorService.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/transport/TransportService.java
src/main/java/org/elasticsearch/watcher/ResourceWatcherService.java
comments:
[CORE] Ban all useage of Future#cancel(true)

Interrupting a thread while blocking on an NIO Read / Write Operation
can cause a file to be closed due to the interrupts. This can have unpredictable
effects when files are open by index readers etc. we should prevent interruptions
across the board if possible.

Closes #8494

time:
2014-11-18T13:02:41Z
class:
src/main/java/org/elasticsearch/index/store/DirectoryService.java
comments:
[STORE] Use DistributorDirectory only if there are more than one data direcotry

We don't need the overhead of DistributorDirectory if there is only a single directory
in the distributor.

time:
2014-11-18T12:39:06Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Register data.path for all nodes on close in InternalTestCluster

We need to register those data paths otherwise we might miss path that
need to get cleaned when using local gatway etc. which can otherwise
cause imports of dangeling indices.

time:
2014-11-18T12:25:16Z
class:
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
Test: force merge index in the end of IndexStatsTests.throttleStats

This works around slow IO (fsync) causing the test-framework cleanup
to timeout at 30 seconds when trying to delete the index.

Closes #8528

time:
2014-11-18T00:50:53Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/Store.java
comments:
Snapshot/Restore: keep the last legacy checksums file at the end of restore

 This commit fixes the issue caused by restore process deleting all legacy checksum files at the end of restore process. Instead it keeps the latest version of the checksum intact. The issue manifests itself in losing checksum for all legacy files restored into post 1.3.0 cluster, which in turn causes unnecessary snapshotting of files that didn't change.

Fixes #8119

time:
2014-11-17T23:47:58Z
class:
src/main/java/org/elasticsearch/gateway/local/LocalGatewayAllocator.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
Snapshot/Restore: restore of indices that are only partially available in the cluster

Fixes the issue with restoring of an index that had only some of its primary shards allocated before it was closed.

Fixes #8224

time:
2014-11-17T17:16:35Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/test/java/org/elasticsearch/document/BulkTests.java
comments:
Bulk indexing issue - missing parent routing causes NullPointerException.
Now each error is reported in bulk response rather than causing entire bulk to fail.
Added a Junit test but the use of TransportClient means the error is manifested differently to a REST based request - instead of a NullPointer the whole of the bulk request failed with a RoutingMissingException. Changed TransportBulkAction to catch this exception and treat it the same as the existing logic for a ElasticsearchParseException - the individual bulk request items are flagged and reported individually rather than failing the whole bulk request.

Closes #8365

time:
2014-11-17T17:13:57Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
comments:
fix of Bulk update child doc, NPE error message when parent is not specified #8365
  - Throw an RoutingMissingException instead of NPE

time:
2014-11-17T15:57:15Z
class:
src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java
comments:
Docs: Fix typo in the javadoc for #tieBreaker()

Closes #8503

time:
2014-11-17T14:46:13Z
class:
src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java
comments:
Search: Do not force the post-filter to be loaded into a BitSet.

Close #8488

time:
2014-11-17T12:07:01Z
class:
comments:
Docs: Add Wireshark protocol dissection support

Hi guys, I've finished my Wireshark dissector for Elasticsearch. It is now merged into their master. See https://code.wireshark.org/review/#/c/4948/

Closes #8495

time:
2014-11-17T09:05:46Z
class:
src/test/java/org/elasticsearch/index/search/child/AbstractChildTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentConstantScoreQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentQueryTests.java
src/test/java/org/elasticsearch/index/search/child/TopChildrenQueryTests.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Test: Let the random parent/child tests use the query and filter parsers instead of creating the queries and filters in a custom way.

By using the query and filter parsers we increase the test coverage and make the random parent/child tests simpler.

time:
2014-11-16T22:54:36Z
class:
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
comments:
Test: CorruptedFileTest.testCorruptionOnNetworkLayer used node settings when creating an index

Test used `indices.recovery.concurrent_streams` when creating an index but this is a node setting. Moved it to the node settings and added similar settings to speed up concurrent recoveries.

Also fixed a misleading log message in ShardRecoveryHandler when logging a remove corruption

time:
2014-11-16T19:54:49Z
class:
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
Prevent double wrapping directories in MockDirectoryWrapper

time:
2014-11-16T16:44:38Z
class:
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
comments:
[TEST] Close node env otherwise windows can't delete tmp files

time:
2014-11-16T14:58:10Z
class:
src/main/java/org/elasticsearch/env/NodeEnvironment.java
comments:
Fix synchronization - leftover from refactoring

time:
2014-11-16T13:24:29Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/common/io/FileSystemUtils.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/env/ShardLock.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/none/NoneGateway.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/service/IndexService.java
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/index/store/DirectoryService.java
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/StoreModule.java
src/main/java/org/elasticsearch/index/store/fs/FsDirectoryService.java
src/main/java/org/elasticsearch/index/store/fs/FsIndexStore.java
src/main/java/org/elasticsearch/index/store/ram/RamDirectoryService.java
src/main/java/org/elasticsearch/indices/IndicesService.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/test/java/org/elasticsearch/env/NodeEnvironmentTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/index/store/DistributorDirectoryTest.java
src/test/java/org/elasticsearch/index/store/DistributorInTheWildTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/index/store/distributor/DistributorTests.java
src/test/java/org/elasticsearch/indexing/IndexActionTests.java
src/test/java/org/elasticsearch/test/DummyShardLock.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
src/test/java/org/elasticsearch/test/store/MockRamDirectoryService.java
comments:
[CORE] Intorduce shards level locks to prevent concurrent shard modifications

Today it's possible that the data directory for a single shard is used by more than on
IndexShard->Store instances. While one shard is already closed but has a concurrent recovery
running and a new shard is creating it's engine files can conflict and data can potentially
be lost. We also remove shards data without checking if there are still users of the files
or if files are still open which can cause pending writes / flushes or the delete operation
to fail. If the latter is the case the index might be treated as a dangeling index and is brought
back to life at a later point in time.

This commit introduces a shard level lock that prevents modifications to the shard data
while it's still in use. Locks are created per shard and maintined in NodeEnvironment.java.
In contrast to most java concurrency primitives those locks are not reentrant.

This commit also adds infrastructure that checks if all shard locks are released after tests.

time:
2014-11-15T17:33:56Z
class:
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/test/java/org/elasticsearch/recovery/FullRollingRestartTests.java
comments:
Logging: BroadcastOperationAction - added trace logging for successful shard-level responses

In order to be able to trace the exact shards that participated in the operation.

time:
2014-11-14T21:39:07Z
class:
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
comments:
Percolator: Remove `index.percolator.allow_unmapped_fields` setting.

There should be no option to opt out from strict field resolution for percolator query parsing.

Closes #8439

time:
2014-11-14T20:40:44Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
comments:
Aggregations: Changed child filters to not require a random access based bitset in `nested` agg.
Also the nested agg now requires docs to be consumed / scored in order.

Closes #8454

time:
2014-11-14T20:00:14Z
class:
src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java
src/test/java/org/elasticsearch/index/search/child/AbstractChildTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentConstantScoreQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentQueryTests.java
src/test/java/org/elasticsearch/index/search/child/TopChildrenQueryTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Core: In the bitset cache only eagerly load bitsets for parent nested object fields.

Don't eagerly cache parent type filters in bitset cache or nested object fields that are leafs.
Also let parent/child queries not rely on FixedBitSetFilter, but rather on regular Filter

Closes #8440

time:
2014-11-14T16:28:30Z
class:
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java
comments:
Updating to throw IllegalArgument exception for null value coordinates. Tests included.

time:
2014-11-14T15:58:34Z
class:
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
comments:
Adding parse gates for valid GeoJSON coordinates. Includes unit tests.

time:
2014-11-14T15:24:52Z
class:
src/main/java/org/elasticsearch/common/settings/loader/YamlSettingsLoader.java
comments:
Configuration: Tab characters in YAML should throw an exception.

Throw an exception if there is a 'tab' character in the elasticsearch.yml file

Close #8259

time:
2014-11-14T14:12:38Z
class:
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java
comments:
Correcting coordinate checks on LinearRing and LineString, updating test

time:
2014-11-14T09:58:26Z
class:
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
comments:
Mapping: Fixes Merging of default analyzer

Fixed behaviour where two representations of the default index analyzer weren't being treated as equivalent. Added REST test to confirm fix.

Closes #2716

time:
2014-11-14T09:14:39Z
class:
src/main/java/org/elasticsearch/action/update/UpdateHelper.java
src/test/java/org/elasticsearch/update/UpdateTests.java
comments:
Provide more context variables in update scripts

In addition to `_source`, the following variables are available through
the `ctx` map: `_index`, `_type`, `_id`, `_version`, `_routing`,
`_parent`, `_timestamp`, `_ttl`.

Some of these fields are more useful still within the context of an
Update By Query, see #1607, #2230, #2231.

time:
2014-11-14T08:11:13Z
class:
src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorService.java
src/test/java/org/elasticsearch/action/termvector/GetTermVectorTests.java
comments:
Term Vectors: Fix NPE with dfs and no tvs

Fixes a bug with dfs option for when term vectors are not stored and not generated.

time:
2014-11-13T17:45:04Z
class:
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java
comments:
[GEO] Fix for ArithmeticException[/ by zero] when parsing a "polygon" with one pair of coordinates

While this commit is primariy a fix for issue/8433 it adds more rigor to ShapeBuilder for parsing against the GeoJSON specification. Specifically, this adds LinearRing and LineString validity checks as defined in http://geojson.org/geojson-spec.html to ensure valid polygons are specified. The benefit of this fix is to provide a gate check at parse time to avoid any further processing if an invalid GeoJSON is provided.  More parse checks like these will be necessary going forward to ensure full compliance with the GeoJSON specification.

Closes #8433

time:
2014-11-13T14:48:50Z
class:
src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortIntegrationTests.java
src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortTests.java
comments:
Tests: Improve netty test behaviour

Based on some test failures, this commit fixes two minor things

* Bind ports only on so called ephemeral ports to prevent try to
  bind to ports where elasticsearch already runs on
* Remove @Network annotation as it was used in a wrong scope

time:
2014-11-13T14:20:42Z
class:
src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java
comments:
Removed bwc for GetIndexRequest serialisation

time:
2014-11-13T14:14:24Z
class:
comments:
Added quotes to allow spaces in installation path

time:
2014-11-13T13:34:49Z
class:
comments:
Docs: Fixed a bad ref to docs-bulk-udp which no longer exists in master

time:
2014-11-13T13:22:46Z
class:
src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java
src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/get/RestGetIndicesAction.java
src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexTests.java
src/test/java/org/elasticsearch/bwcompat/GetIndexBackwardsCompatibilityTests.java
comments:
Indices API: Fix GET index API always running all features

Previous to this change all features (_alias,_mapping,_settings,_warmer) are run regardless of which features are actually requested. This change fixes the request object to resolve this bug

time:
2014-11-13T12:50:57Z
class:
comments:
Docs: Changed breaking docs in master to correspond with 1.x for easier merging

time:
2014-11-13T12:40:14Z
class:
comments:
[DOCS] Added documentation for log4j-extras dependency

time:
2014-11-13T12:39:30Z
class:
src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java
comments:
Logging: Add log4j-extras dependency

Close #7927

time:
2014-11-13T10:08:10Z
class:
comments:
[DOCS] Expand logging documentation

Updated log4j link so it doesn't point to log4j 2.0 but version 1.2. Clarified which formats are supported and briefly explained what loggers and appenders are, plus added a link to the log4j docs.

Closes #5305
Closes #8455

time:
2014-11-12T16:21:19Z
class:
comments:
[DOCS] Corrected syntax error in search curl cmd

Closes #8447

time:
2014-11-12T14:32:25Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
src/main/java/org/elasticsearch/index/mapper/core/BinaryFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/Murmur3FieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/TokenCountFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/TypeParsers.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/AnalyzerMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/RoutingFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SizeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SourceFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TTLFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/VersionFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/ip/IpFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/search/suggest/context/CategoryContextMapping.java
src/main/java/org/elasticsearch/search/suggest/context/ContextBuilder.java
src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java
src/test/java/org/elasticsearch/get/GetActionTests.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/ExternalMapper.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/ExternalValuesMapperIntegrationTests.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/SimpleExternalMappingTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ParentIdAggTests.java
src/test/java/org/elasticsearch/search/fields/SearchFieldsTests.java
src/test/java/org/elasticsearch/search/geo/GeoFilterTests.java
src/test/java/org/elasticsearch/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/search/query/MultiMatchQueryTests.java
src/test/java/org/elasticsearch/search/suggest/context/GeoLocationContextMappingTest.java
comments:
Mappers: Better validation of mapping JSON

Closes #7205

time:
2014-11-12T14:05:45Z
class:
comments:
[TESTS] Upgrade randomizedtesting-runner to 2.1.10
(cherry picked from commit 87b1b25)

time:
2014-11-12T13:13:53Z
class:
comments:
update documentation with release 2.4.0

time:
2014-11-12T11:33:38Z
class:
comments:
Updated threadpool documentation to elaborate/clarify what the pools are for and their values

Closes #8446

time:
2014-11-12T10:25:41Z
class:
src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java
comments:
Discovery: Removed unnecessary DiscoveryService reference from LocalDiscover, which causes circular Guice dependencies errors.

time:
2014-11-12T10:02:06Z
class:
comments:
update documentation with release 2.5.0

time:
2014-11-12T09:34:33Z
class:
src/test/java/org/elasticsearch/repositories/azure/AzureSnapshotRestoreITest.java
comments:
Activate tests for forbidden names

See #21.

time:
2014-11-12T09:29:22Z
class:
src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java
comments:
Change in BlobContainer deleteBlob does not return boolean

Due to this change: https://github.com/elasticsearch/elasticsearch/pull/8366

Closes #44.

time:
2014-11-12T08:24:03Z
class:
comments:
Docs: note about confusing disk threshold settings

time:
2014-11-12T00:05:46Z
class:
comments:
Use only the S3 and EC2 parts of the AWS Java SDK

Note that jackson is not marked as optional in the SDK POM, and the SDK uses Jackson 2 now.

time:
2014-11-11T21:56:20Z
class:
src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterPostingsFormat.java
src/test/java/org/elasticsearch/index/codec/postingformat/DefaultPostingsFormatTests.java
comments:
Core: still don't load bloom filters, even when Directory instance doesn't have a codecService

time:
2014-11-11T15:49:26Z
class:
src/test/java/org/elasticsearch/test/TestCluster.java
comments:
Test: dump all threads when delete index fails during test cleanup

time:
2014-11-11T15:13:55Z
class:
comments:
Docs: Fix incorrect documentation for the `index.query.parse.allow_unmapped_fields` setting.

The `index.query.parse.allow_unmapped_fields` setting can't influence whether unmapped fields are allowed
in alias filters and percolator queries.

time:
2014-11-11T13:12:34Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Disable compression in BWC test for version < 1.3.2

The compression bug fixed in #7210 can still strike us since we are
running BWC test against these version. This commit disables compression
forcefully if the compatibility version is < 1.3.2 to prevent debugging
already known issues.

time:
2014-11-11T11:00:27Z
class:
src/main/java/org/elasticsearch/index/query/SimpleQueryParser.java
comments:
Refactor term analysis for simple_query_string prefix queries

Also fixes an issue where the token stream could be non-closed if an
exception occured.

time:
2014-11-11T09:12:17Z
class:
src/main/java/org/elasticsearch/index/query/SimpleQueryParser.java
src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java
src/main/java/org/elasticsearch/index/query/SimpleQueryStringParser.java
src/test/java/org/elasticsearch/search/query/SimpleQueryStringTests.java
comments:
Query: add option for analyze wildcard/prefix also to simple_query_string query

The query_string query has an option for analyzing wildcard/prefix (#787) by a best effort approach.

This adds `analyze_wildcard` option also to simple_query_string.

The default is set to `false` so the existing behavior of simple_query_string is unchanged.

time:
2014-11-10T23:09:12Z
class:
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
Test: restore logging to prior state

time:
2014-11-10T21:46:31Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:46:26Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:46:24Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:46:08Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:46:04Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:45:44Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:45:40Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:45:30Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:45:24Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:45:17Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:45:08Z
class:
comments:
Upgrade to Lucene 5.0.0-snapshot-1637347

time:
2014-11-10T21:30:40Z
class:
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
Test: switch to TRACE logging for some components

time:
2014-11-10T19:40:52Z
class:
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
comments:
Internal: extend refresh-mapping logic to the _default_ type

When data nodes receive mapping updates from the master, the parse it and merge it into their own in memory representation (if there). If this results in different bytes then the master sent, the nodes will send a refresh-mapping command to indicate to the master that it's byte level storage of the mapping should be refreshed via the document mappers. This comes handy when the mapping format has changed, in a backwards compatible manner, and we want to make sure we can still rely on the bytes to identify changes.  An example of such a change can be seen at #4760.

This commit extends the logic to include the `_default_` type, which was never refreshed before. In some unlucky scenarios, this caused the _default_ mapping to be parsed with every cluster state update.

Closes #8413

time:
2014-11-10T19:14:11Z
class:
comments:
remove wrong repository

time:
2014-11-10T18:43:48Z
class:
src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java
src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java
src/main/java/org/elasticsearch/common/http/client/HttpDownloadHelper.java
src/main/java/org/elasticsearch/common/io/FileSystemUtils.java
src/main/java/org/elasticsearch/common/lucene/search/RegexpFilter.java
src/main/java/org/elasticsearch/index/mapper/FieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java
src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java
src/main/java/org/elasticsearch/index/query/QueryStringQueryParser.java
src/main/java/org/elasticsearch/index/query/RegexpFilterBuilder.java
src/main/java/org/elasticsearch/index/query/RegexpFilterParser.java
src/main/java/org/elasticsearch/index/query/RegexpQueryBuilder.java
src/main/java/org/elasticsearch/index/query/RegexpQueryParser.java
src/main/java/org/elasticsearch/index/translog/fs/RafReference.java
src/main/java/org/elasticsearch/search/suggest/context/ContextMapping.java
src/test/java/org/elasticsearch/benchmark/fs/FsAppendBenchmark.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Core: add max_determinized_states to query_string and regexp query/filter

This prevents too-difficult regular expressions from consuming
excessive RAM/CPU; the default max_determinized_states is 10,000 (same
as Lucene) but query_string and regepx query/filter can override
per-request.

The also upgrades to a new Lucene 5.0.0 snapshot.

Closes #8386

Closes #8357

time:
2014-11-10T16:06:43Z
class:
comments:
Rest API: indices.delete should have "index" as a required param

time:
2014-11-10T15:46:46Z
class:
src/main/java/org/elasticsearch/script/AbstractSearchScript.java
comments:
Scripting: Add score() back to AbstractSearchScript

See #8377
closes #8416
closes #8417

time:
2014-11-10T13:41:24Z
class:
comments:
Docs: Removed old coming/added tags

time:
2014-11-10T09:56:41Z
class:
comments:
[docs] add 2d vis for decay functions and parameters

closes #8420

time:
2014-11-10T09:14:39Z
class:
src/test/java/org/elasticsearch/bwcompat/GetIndexBackwardsCompatibilityTests.java
comments:
[TEST] added Get Index bwc test

time:
2014-11-10T08:51:42Z
class:
comments:
Update README.md for zone clarity

time:
2014-11-10T08:40:44Z
class:
src/main/java/org/elasticsearch/common/lucene/docset/AndDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/docset/DocIdSets.java
src/main/java/org/elasticsearch/common/lucene/docset/OrDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/search/XBooleanFilter.java
src/main/java/org/elasticsearch/common/lucene/search/XDocIdSetIterator.java
src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java
src/test/java/org/elasticsearch/common/lucene/docset/DocIdSetsTests.java
comments:
Internal: Inverse DocIdSets' heuristic to find out fast DocIdSets.

DocIdSets.isFast(DocIdSet) has two issues:
 - it works on the DocIdSet interface while some doc sets can generate either
   slow or fast sets depending on their options (eg. whether an OrDocIdSet is
   fast or not depends on the wrapped clauses).
 - it only works because the result of this method is only taken into account
   when a DocIdSet has non-null `bits()`.

This commit changes this method to work on top of a DocIdSetIterator and to use
a black-list rather than a white list: slow iterators should really be the
exception rather than the rule.

Close #8380

time:
2014-11-10T08:29:20Z
class:
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
comments:
Test: MinimumMasterNodesTests.testCanNotBringClusterDown should always set minimum master nodes.

time:
2014-11-09T22:51:56Z
class:
src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java
src/main/java/org/elasticsearch/index/search/nested/NestedDocsFilter.java
src/main/java/org/elasticsearch/index/search/nested/NonNestedDocsFilter.java
comments:
Core: Remove NestedDocsFilter, because it isn't used and also don't eagerly load it in bitset filter cache.

Closes #8414

time:
2014-11-09T18:27:45Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
[PING] Don't bubble up exception if we are shutting down and ping schedules get rejected

time:
2014-11-09T18:05:33Z
class:
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/test/java/org/elasticsearch/index/store/DistributorDirectoryTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
[STORE] Synchronize operations that modify file mappings on DistributorDirectory

The rename(String, String) method doesn't allow this implementation to use a simple
concurrent map. There is a race during a rename operation where files are not fully
renamed but already visible via #listAll(). This inconsistency can lead to problems
when opening commit points since the pending_segments_N as well as segments_N are visible
but not yet atomically renamed.

Yet, non of the methods that are synced are long running such that adding sychronization
doesn't introduce bottlenecks here. The Direcotry#sync(...) method is not synchronized since
it doesn't change any mapping nor does it depend on the mapping.

time:
2014-11-09T17:18:59Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
[STORE] Calculate Alder32 Checksums for legacy files in Store#checkIntegrity

Previously we didn't calculate this checksums even though we have a checksum
to compare. Since we now also verify checksums for legacy files #checkIntegrity
should also calculate the legacy checksums.

Closes #8407

time:
2014-11-09T10:36:36Z
class:
comments:
Docs: Fix some typos, and sentence structure.

Closes #8404

time:
2014-11-09T10:31:57Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
more debug logging

time:
2014-11-09T09:13:37Z
class:
src/main/java/org/elasticsearch/index/store/LegacyVerification.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/VerifyingIndexOutput.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/index/store/TestLegacyVerification.java
comments:
Internal: harden recovery for old segments

When a lucene 4.8+ file is transferred, Store returns a VerifyingIndexOutput
that verifies both the CRC32 integrity and the length of the file.

However, for older files, problems can make it to the lucene level. This is not great
since older lucene files aren't especially strong as far as detecting issues here.

For example, if a network transfer is closed on the remote side, we might write a
truncated file... which old lucene formats may or may not detect.

The idea here is to verify old files with their legacy Adler32 checksum, plus expected
length. If they don't have an Adler32 (segments_N, jurassic elasticsearch?, its optional
as far as the protocol goes), then at least check the length.

We could improve it for segments_N, its had an embedded CRC32 forever in lucene, but this
gets trickier. Long term, we should also try to also improve tests around here, especially
backwards compat testing, we should test that detected corruptions are handled properly.

Closes #8399

Conflicts:
	src/main/java/org/elasticsearch/index/store/Store.java
	src/test/java/org/elasticsearch/index/store/StoreTest.java

time:
2014-11-08T18:14:51Z
class:
comments:
fix mention of Apache License, version 2.

Closes #8400

time:
2014-11-08T17:55:57Z
class:
src/main/java/org/elasticsearch/ExceptionsHelper.java
src/main/java/org/elasticsearch/action/termvector/TermVectorFields.java
src/main/java/org/elasticsearch/common/Base64.java
src/main/java/org/elasticsearch/common/Strings.java
src/main/java/org/elasticsearch/common/inject/BindingProcessor.java
src/main/java/org/elasticsearch/common/inject/assistedinject/FactoryProvider.java
src/main/java/org/elasticsearch/common/inject/internal/AsynchronousComputationException.java
src/main/java/org/elasticsearch/common/inject/internal/ComputationException.java
src/main/java/org/elasticsearch/common/inject/internal/Errors.java
src/main/java/org/elasticsearch/common/inject/internal/ProviderMethod.java
src/main/java/org/elasticsearch/common/inject/spi/ElementVisitor.java
src/main/java/org/elasticsearch/common/inject/spi/InjectionPoint.java
src/main/java/org/elasticsearch/common/inject/spi/Message.java
src/main/java/org/elasticsearch/common/logging/support/LoggerMessageFormat.java
src/main/java/org/elasticsearch/common/lucene/search/Queries.java
src/main/java/org/elasticsearch/http/netty/pipelining/HttpPipeliningHandler.java
src/main/java/org/elasticsearch/index/indexing/ShardIndexingService.java
src/main/java/org/elasticsearch/index/query/TypeFilterParser.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryParser.java
src/main/java/org/elasticsearch/index/search/nested/IncludeNestedDocsQuery.java
src/main/java/org/elasticsearch/index/similarity/AbstractSimilarityProvider.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/lookup/PositionIterator.java
src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/test/java/org/elasticsearch/cluster/routing/allocation/RandomAllocationDeciderTests.java
src/test/java/org/elasticsearch/common/BooleansTests.java
src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTests.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/indices/mapping/UpdateMappingTests.java
src/test/java/org/elasticsearch/script/IndexLookupTests.java
src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java
src/test/java/org/elasticsearch/search/suggest/ContextSuggestSearchTests.java
src/test/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProviderV1.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/update/UpdateTests.java
comments:
typo fixes - https://github.com/vlajos/misspell_fixer

Closes #8323

time:
2014-11-08T16:49:34Z
class:
comments:
Update datehistogram-aggregation.asciidoc

Clarified use of fractional time units in the date histo agg.

Closes #7957

time:
2014-11-08T15:57:41Z
class:
comments:
Docs: Improve the exists/missing filters documentation

Closes #7274

time:
2014-11-08T12:55:23Z
class:
comments:
Update multi-get.asciidoc

Documented that the fields parameter can be passed in the query string.

Closes #4006

time:
2014-11-08T10:49:20Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
Core: add debug logging to InternalEngine.close

time:
2014-11-07T21:40:58Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
Tests: log how long IndexWriter.rollback took, and when MocmFSDirectory service started check index

time:
2014-11-07T19:05:14Z
class:
comments:
[TEST] fix term_vector realtime test to call wait for green and use no replicas

If a shard (e.g. replica) gets initialized after we indexed the document it gets refreshed internally and we find the doc and its term_vectors, thus the test fails

time:
2014-11-07T11:58:10Z
class:
src/main/java/org/elasticsearch/cluster/DiskUsage.java
src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java
src/test/java/org/elasticsearch/cluster/DiskUsageTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/MockDiskUsagesTests.java
comments:
Take percentage watermarks into account for reroute listener

Fixes an issue where only absolute bytes were taken into account when
kicking off an automatic reroute due to disk usage. Also randomized the
tests to use either an absolute value or a percentage so this is tested.

Also adds logging for each node over the high and low watermark every
time a new cluster info usage is gathered (defaults to every 30
seconds).

Related to #8368
Fixes #8367

time:
2014-11-07T11:43:15Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
comments:
[STORE] Drop pre 0.90 compression BWC

Pre 0.90 indices need to be upgraded to run with 2.0
we can drop the stored field compression BWC.

time:
2014-11-07T11:32:43Z
class:
comments:
Internal: temporarily ban buggy IOUtils methods with forbidden

Closes #8375

time:
2014-11-07T11:15:11Z
class:
src/main/java/org/elasticsearch/Version.java
src/test/java/org/elasticsearch/VersionTests.java
comments:
Allow -SNAPSHOT versions to be parsed by Version.fromString

time:
2014-11-07T10:02:28Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java
src/main/java/org/elasticsearch/cluster/ClusterService.java
src/main/java/org/elasticsearch/cluster/ClusterStateObserver.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
[STATE] Observe cluster state on health request

Today we use busy waiting and sampling when we execute HealthReqeusts
on the master. This is tricky sicne we might sample a not yet fully applied
cluster state and make a decsions base on the partial cluster state. This can
lead to ugly problems since requests might be routed to nodes where shards are
already marked as relocated but on the actual cluster state they are still started.
Yet, this window is very small usually it can lead to ugly test failures.

This commit moves the health request over to a listener pattern that gets the actual
applied cluster state.

Closes #8350

time:
2014-11-07T09:40:30Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Discovery: don't wait joinThread when stopping

When a node stops, we cancel any ongoing join process. With #8327, we improved this logic and wait for it to complete before shutting down the node. However, the joining thread is part of a thread pool and will not stop until the thread pool is shutdown.

Another issue raised by the unneeded wait is that when we shutdown, we may ping ourselves - which results in an ugly warn level log. We now log all remote exception during pings at a debug level.

Closes #8359

time:
2014-11-07T09:29:06Z
class:
comments:
update documentation with release 2.3.1

time:
2014-11-07T08:52:38Z
class:
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java
comments:
Update S3BlobContainer because BlobContainer changed

See elasticsearch/elasticsearch#8366

time:
2014-11-07T08:49:51Z
class:
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
comments:
Mark ShardRecoveryShandler class as final

time:
2014-11-07T08:42:39Z
class:
comments:
Eclipse: change import settings to have the same order as IntelliJ IDEA.

time:
2014-11-07T08:32:06Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
src/main/java/org/elasticsearch/indices/recovery/ShardRecoveryHandler.java
comments:
Refactor shard recovery from anonymous class to ShardRecoveryHandler

Previously the bulk of our shard recovery code was in a 300-line
anonymous class in `RecoverySource`. This made it difficult to find and
more difficult to read.

This factors out that code into a `ShardRecoveryHandler` class, adding
javadocs for each function and phase of the recovery, as well as
comments explaining some of the more esoteric functions performed during
recovery.

It's hoped that this will help more people understand Elasticsearch's
recovery procedure.

No *major* functionality has changed, only typo corrections, some minor
allocation improvements and logging clarification changes.

time:
2014-11-06T22:18:33Z
class:
src/main/java/org/elasticsearch/index/gateway/none/NoneIndexShardGateway.java
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
comments:
[STORE] increment store in NoneIndexShardGateway and either check if dir is null or different but not both

time:
2014-11-06T19:45:12Z
class:
src/main/java/org/elasticsearch/index/translog/ChecksummedTranslogStream.java
comments:
[TRANSLOG] Translog leaks filehandles if it's corrupted or truncated

If the translog file is corrupted or truncated the stream is never closed
and the filehandle leaks. This commit closes the stream in the case of an
exception.

time:
2014-11-06T16:17:22Z
class:
src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/BlobStore.java
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java
src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java
src/main/java/org/elasticsearch/common/http/client/HttpDownloadHelper.java
src/main/java/org/elasticsearch/common/io/FileSystemUtils.java
src/main/java/org/elasticsearch/gateway/local/LocalGateway.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java
src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java
src/main/java/org/elasticsearch/gateway/none/NoneGateway.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/store/fs/FsIndexStore.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/index/translog/fs/RafReference.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/main/java/org/elasticsearch/plugins/PluginManager.java
src/test/java/org/elasticsearch/benchmark/fs/FsAppendBenchmark.java
src/test/java/org/elasticsearch/cluster/allocation/ClusterRerouteTests.java
src/test/java/org/elasticsearch/index/mapper/FileBasedMappingsTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsBufferedTranslogTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsSimpleTranslogTests.java
src/test/java/org/elasticsearch/plugins/PluginManagerTests.java
src/test/java/org/elasticsearch/script/ScriptServiceTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/mockstore/BlobContainerWrapper.java
src/test/java/org/elasticsearch/snapshots/mockstore/BlobStoreWrapper.java
src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java
src/test/java/org/elasticsearch/stresstest/fullrestart/FullRestartStressTest.java
src/test/java/org/elasticsearch/stresstest/rollingrestart/RollingRestartStressTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/watcher/FileWatcherTest.java
comments:
[CORE] Cut over to Path API for file deletion

Today we use the File API for file deletion as well as recursive
directory deletions. This API returns a boolean if operations
are successful while hiding the actual reason why they failed.
The Path API throws and actual exception that might provide better
insights and debug information.

Closes #8366

time:
2014-11-06T10:48:35Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Revert "Discovery: a more lenient wait joinThread when stopping"

This reverts commit 83d9dab79882700fb21cb496282bafdb1d28a5ca.

time:
2014-11-06T10:33:52Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Discovery: a more lenient wait joinThread when stopping

When a node stops, we cancel any ongoing join process. With #8327, we improved this logic and wait for it to complete before shutting down the node. In our tests we typically shutdown an entire cluster at once, which makes it very likely for nodes to be joining while shutting down. This introduces a race condition where the joinThread.interrupt can happen before the thread starts waiting on pings which causes shutdown logic to be slow. This commits improves by repeatedly trying to stop the thread in smaller waits.

Another side effect of the change is that we are now more likely to ping ourselves while shutting down, we results in an ugly warn level log. We now log all remote exception during pings at a debug level.

Closes #8359

time:
2014-11-06T09:57:56Z
class:
comments:
[docs] fix typo in getting-started

Closes #8354

time:
2014-11-06T09:43:13Z
class:
src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java
comments:
[TEST] fixed scriptedMetricTests

The tests were failing because there was a shard which didn't get any documents and the tests assumed all shards had documents. This commit fixes this assumption

time:
2014-11-06T09:40:07Z
class:
comments:
Update Sonatype release link in build_release.py

time:
2014-11-06T08:15:42Z
class:
comments:
actually run all the tests

time:
2014-11-06T08:11:20Z
class:
src/main/java/org/elasticsearch/index/analysis/ICUCollationKeyFilter.java
src/main/java/org/elasticsearch/index/analysis/IcuCollationTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/IndexableBinaryStringTools.java
src/main/java/org/elasticsearch/indices/analysis/IcuIndicesAnalysis.java
src/test/java/org/elasticsearch/index/analysis/ICUIntegrationTests.java
src/test/java/org/elasticsearch/index/analysis/SimpleIcuCollationTokenFilterTests.java
src/test/java/org/elasticsearch/index/analysis/TestIndexableBinaryStringTools.java
comments:
add back collation (still the way it was working before)

time:
2014-11-05T23:33:30Z
class:
src/main/java/org/elasticsearch/discovery/azure/AzureDiscovery.java
comments:
Fix constructor for ZenDiscovery's subclass

time:
2014-11-05T23:29:23Z
class:
src/main/java/org/elasticsearch/discovery/gce/GceDiscovery.java
comments:
Fix constructor for ZenDiscovery's subclass

time:
2014-11-05T23:01:11Z
class:
comments:
upgrade to lucene 5 snapshot (the compile is still broken as it was before, so untested)

time:
2014-11-05T22:56:00Z
class:
comments:
upgrade to lucene 5 snapshot (the compile is still broken as it was before, so untested...)

time:
2014-11-05T22:49:08Z
class:
comments:
upgrade to lucene 5 snapshot

time:
2014-11-05T22:44:21Z
class:
src/main/java/org/elasticsearch/index/analysis/SmartChineseTokenizerTokenizerFactory.java
src/main/java/org/elasticsearch/indices/analysis/smartcn/SmartChineseIndicesAnalysis.java
comments:
upgrade to lucene 5 snapshot

time:
2014-11-05T22:18:37Z
class:
src/main/java/org/elasticsearch/script/python/PythonScriptEngineService.java
comments:
upgrade to lucene 5 snapshot

time:
2014-11-05T22:12:54Z
class:
src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java
comments:
upgrade to lucene 5 snapshot

time:
2014-11-05T21:48:10Z
class:
comments:
upgrade to lucene 5 snapshot

time:
2014-11-05T21:42:46Z
class:
comments:
upgrade to lucene 5 snapshot

time:
2014-11-05T21:42:20Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
comments:
[RECOVERY] Fix potential NPE status reference must be not null to fail recovery

time:
2014-11-05T21:33:52Z
class:
src/main/java/org/elasticsearch/index/analysis/pl/PolishAnalyzerProvider.java
src/main/java/org/elasticsearch/indices/analysis/pl/PolishIndicesAnalysis.java
src/test/java/org/elasticsearch/index/analysis/SimplePolishTokenFilterTests.java
comments:
upgrade to lucene 5 snapshot

time:
2014-11-05T21:25:33Z
class:
src/main/java/org/elasticsearch/index/analysis/IcuCollationTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/IcuTokenizerFactory.java
src/main/java/org/elasticsearch/indices/analysis/IcuIndicesAnalysis.java
src/test/java/org/elasticsearch/index/analysis/ICUIntegrationTests.java
src/test/java/org/elasticsearch/index/analysis/SimpleIcuCollationTokenFilterTests.java
comments:
upgrade to lucene 5 snapshot (will open issue about collators)

time:
2014-11-05T21:10:36Z
class:
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java
comments:
Fix constant to not use the default codec name since it can change in tests

time:
2014-11-05T21:06:43Z
class:
src/main/java/org/elasticsearch/index/analysis/KuromojiAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/KuromojiTokenizerFactory.java
src/main/java/org/elasticsearch/indices/analysis/KuromojiIndicesAnalysis.java
src/test/java/org/elasticsearch/index/analysis/KuromojiAnalysisTests.java
comments:
upgrade to lucene 5 snapshot

time:
2014-11-05T20:48:51Z
class:
src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java
src/main/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilter.java
src/main/java/org/apache/lucene/queries/BlendedTermQuery.java
src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java
src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java
src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java
src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java
src/main/java/org/apache/lucene/search/XFilteredDocIdSetIterator.java
src/main/java/org/apache/lucene/search/postingshighlight/CustomPostingsHighlighter.java
src/main/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighter.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java
src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java
src/main/java/org/elasticsearch/ElasticsearchCorruptionException.java
src/main/java/org/elasticsearch/ExceptionsHelper.java
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/action/termvector/TermVectorFields.java
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java
src/main/java/org/elasticsearch/common/io/FileSystemUtils.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/lucene/MinimumScoreCollector.java
src/main/java/org/elasticsearch/common/lucene/MultiCollector.java
src/main/java/org/elasticsearch/common/lucene/ReaderContextAware.java
src/main/java/org/elasticsearch/common/lucene/SegmentReaderUtils.java
src/main/java/org/elasticsearch/common/lucene/all/AllField.java
src/main/java/org/elasticsearch/common/lucene/all/AllTermQuery.java
src/main/java/org/elasticsearch/common/lucene/docset/AndDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/docset/ContextDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/docset/DocIdSets.java
src/main/java/org/elasticsearch/common/lucene/docset/MatchDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/docset/OrDocIdSet.java
src/main/java/org/elasticsearch/common/lucene/index/FilterableTermsEnum.java
src/main/java/org/elasticsearch/common/lucene/search/AndFilter.java
src/main/java/org/elasticsearch/common/lucene/search/ApplyAcceptedDocsFilter.java
src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java
src/main/java/org/elasticsearch/common/lucene/search/LimitFilter.java
src/main/java/org/elasticsearch/common/lucene/search/MatchAllDocsFilter.java
src/main/java/org/elasticsearch/common/lucene/search/MatchNoDocsFilter.java
src/main/java/org/elasticsearch/common/lucene/search/MatchNoDocsQuery.java
src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java
src/main/java/org/elasticsearch/common/lucene/search/NoCacheFilter.java
src/main/java/org/elasticsearch/common/lucene/search/NoopCollector.java
src/main/java/org/elasticsearch/common/lucene/search/NotFilter.java
src/main/java/org/elasticsearch/common/lucene/search/OrFilter.java
src/main/java/org/elasticsearch/common/lucene/search/Queries.java
src/main/java/org/elasticsearch/common/lucene/search/RegexpFilter.java
src/main/java/org/elasticsearch/common/lucene/search/XBooleanFilter.java
src/main/java/org/elasticsearch/common/lucene/search/XCollector.java
src/main/java/org/elasticsearch/common/lucene/search/XConstantScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/XFilteredQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/BoostScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/FunctionScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/WeightFactorFunction.java
src/main/java/org/elasticsearch/common/lucene/store/OutputStreamIndexOutput.java
src/main/java/org/elasticsearch/common/lucene/uid/PerThreadIDAndVersionLookup.java
src/main/java/org/elasticsearch/common/lucene/uid/Versions.java
src/main/java/org/elasticsearch/common/util/AbstractArray.java
src/main/java/org/elasticsearch/common/util/BloomFilter.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/gateway/local/state/meta/CorruptStateException.java
src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java
src/main/java/org/elasticsearch/index/analysis/Analysis.java
src/main/java/org/elasticsearch/index/analysis/ArabicAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/ArmenianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/BasqueAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/BrazilianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/BrazilianStemTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/BulgarianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/CatalanAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/ChineseAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/CjkAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/ClassicTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/CommonGramsTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/CustomAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/CzechAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/DanishAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/DutchAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/DutchStemTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/ElisionTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/EnglishAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/FinnishAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/FrenchAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/FrenchStemTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/GalicianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/GermanAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/GermanStemTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/GreekAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/HindiAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/HungarianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/IndonesianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/IrishAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/ItalianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/KeepTypesFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/KeepWordFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/KeywordMarkerTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/KeywordTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/LatvianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/LengthTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/LetterTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/LowerCaseTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/LowerCaseTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/NorwegianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/NumericAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericDateAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericDateTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericDoubleAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericDoubleTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericFloatAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericFloatTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericIntegerAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericIntegerTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericLongAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericLongTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericTokenizer.java
src/main/java/org/elasticsearch/index/analysis/PathHierarchyTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/PatternAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/PatternAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/PatternTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/PersianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/PortugueseAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/ReverseTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/RomanianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/RussianAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/SimpleAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/SnowballAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/SnowballAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/SoraniAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/SpanishAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/StandardAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/StandardHtmlStripAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/StandardHtmlStripAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/StandardTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/StandardTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/StopAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/StopTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/SwedishAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/SynonymTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/ThaiAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/ThaiTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/TokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/TrimTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/TurkishAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/UAX29URLEmailTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/UpperCaseTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/WhitespaceAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/WhitespaceTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/WordDelimiterTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/compound/AbstractCompoundWordTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/compound/DictionaryCompoundWordTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/compound/HyphenationCompoundWordTokenFilterFactory.java
src/main/java/org/elasticsearch/index/cache/IndexCache.java
src/main/java/org/elasticsearch/index/cache/IndexCacheModule.java
src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCache.java
src/main/java/org/elasticsearch/index/cache/bitset/BitsetFilterCacheModule.java
src/main/java/org/elasticsearch/index/cache/bitset/ShardBitsetFilterCache.java
src/main/java/org/elasticsearch/index/cache/bitset/ShardBitsetFilterCacheModule.java
src/main/java/org/elasticsearch/index/cache/filter/support/CacheKeyFilter.java
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/cache/fixedbitset/FixedBitSetFilter.java
src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java
src/main/java/org/elasticsearch/index/codec/docvaluesformat/DocValuesFormats.java
src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterPostingsFormat.java
src/main/java/org/elasticsearch/index/codec/postingsformat/DefaultPostingsFormatProvider.java
src/main/java/org/elasticsearch/index/codec/postingsformat/Elasticsearch090PostingsFormat.java
src/main/java/org/elasticsearch/index/codec/postingsformat/PostingFormats.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/SegmentsStats.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/engine/internal/LiveVersionMap.java
src/main/java/org/elasticsearch/index/engine/internal/VersionValue.java
src/main/java/org/elasticsearch/index/fielddata/AtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataCache.java
src/main/java/org/elasticsearch/index/fielddata/NumericDoubleValues.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefFieldComparatorSource.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/DoubleValuesComparatorSource.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/FloatValuesComparatorSource.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/LongValuesComparatorSource.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SinglePackedOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicGeoPointFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicOrdinalsFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicParentChildFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractIndexOrdinalsFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AtomicDoubleFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AtomicLongFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVNumericIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DisabledIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointBinaryDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointCompressedIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/IndexIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/NumericDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIntersectTermsEnum.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/mapper/ParseContext.java
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/BinaryFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/NumberFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/TokenCountFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/TypeParsers.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/FieldNamesFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/RoutingFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SourceFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TTLFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TypeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/UidFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/ip/IpFieldMapper.java
src/main/java/org/elasticsearch/index/merge/policy/ElasticsearchMergePolicy.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/percolator/QueriesLoaderCollector.java
src/main/java/org/elasticsearch/index/query/ConstantScoreQueryParser.java
src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java
src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java
src/main/java/org/elasticsearch/index/query/GeoShapeFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoShapeQueryParser.java
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/main/java/org/elasticsearch/index/query/MissingFilterParser.java
src/main/java/org/elasticsearch/index/query/NestedFilterParser.java
src/main/java/org/elasticsearch/index/query/NestedQueryParser.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/ScriptFilterParser.java
src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryParser.java
src/main/java/org/elasticsearch/index/query/support/QueryParsers.java
src/main/java/org/elasticsearch/index/query/support/XContentStructure.java
src/main/java/org/elasticsearch/index/search/FieldDataTermsFilter.java
src/main/java/org/elasticsearch/index/search/NumericRangeFieldDataFilter.java
src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/CustomQueryWrappingFilter.java
src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentIdsFilter.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
src/main/java/org/elasticsearch/index/search/geo/GeoDistanceFilter.java
src/main/java/org/elasticsearch/index/search/geo/GeoDistanceRangeFilter.java
src/main/java/org/elasticsearch/index/search/geo/GeoPolygonFilter.java
src/main/java/org/elasticsearch/index/search/geo/InMemoryGeoBoundingBoxFilter.java
comments:
Upgrade master to lucene 5.0 snapshot

This has a lot of improvements in lucene, particularly around memory usage, merging, safety, compressed bitsets, etc.

On the elasticsearch side, summary of the larger changes:

    API changes: postings API became a "pull" rather than "push", collector API became per-segment, etc.
    packaging changes: add lucene-backwards-codecs.jar as a dependency.
    improvements to boolean filtering: especially ensuring it will not be slow for SparseBitSet.
    use generic BitSet api in plumbing so that concrete bitset type is an implementation detail.
    use generic BitDocIdSetFilter api for dedicated bitset cache, so there is type safety.
    changes to support atomic commits
    implement Accountable.getChildResources (detailed memory usage API) for fielddata, etc
    change handling of IndexFormatTooOld/New, since they no longer extends CorruptIndexException

Closes #8347.

Squashed commit of the following:

commit d90d53f5f21b876efc1e09cbd6d63c538a16cd89
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Nov 5 21:35:28 2014 +0100

    Make default codec/postings/docvalues format constants

commit cb66c22c71cd304a36e7371b199a8c279908ae37
Merge: d4e2f6d ad4ff43
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Nov 5 11:41:13 2014 -0500

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

commit d4e2f6dfe767a5128c9b9ae9e75036378de08f47
Merge: 4e5445c 4111d93
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Nov 5 06:26:32 2014 -0500

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

commit 4e5445c775f580730eb01360244e9330c0dc3958
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 16:19:19 2014 -0500

    FixedBitSet -> BitSet

commit 9887ea73e8b857eeda7f851ef3722ef580c92acf
Merge: 1bf8894 fc84666
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 15:26:25 2014 -0500

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

commit 1bf8894430de3e566d0dc5623b0cc28b0d674ebb
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 15:22:51 2014 -0500

    remove nocommit

commit a9c2a2259ff79c69bae7806b64e92d5f472c18c8
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 13:48:43 2014 -0500

    turn jenkins red again

commit 067baaaa4d52fce772c81654dcdb5051ea79139f
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 13:18:21 2014 -0500

    unzip from stream

commit 82b6fba33d362aca2313cc0ca495f28f5ebb9260
Merge: b2214bb 6523cd9
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 13:10:59 2014 -0500

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

commit b2214bb093ec2f759003c488c3c403c8931db914
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 13:09:53 2014 -0500

    go back to my URL until we can figure out what is up with jenkins

commit e7d614172240175a51f580aeaefb6460d21cede9
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 10:52:54 2014 -0500

    try this jenkins

commit 337a3c7704efa7c9809bf373152d711ee55f876c
Author: Simon Willnauer <simonw@apache.org>
Date:   Tue Nov 4 16:17:49 2014 +0100

    Rename temp-files under lock to prevent metadata reads while renaming

commit 77d5ba80d0a76efa549dd753b9f114b2f2d2d29c
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 10:07:11 2014 -0500

    continue to treat too-old/too-new as corruption for now

commit 98d0fd2f4851bc50e505a94ca592a694d502c51c
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Nov 4 09:24:21 2014 -0500

    fix last nocommit

commit 643fceed66c8caf22b97fc489d67b4a2a90a1a1c
Author: Simon Willnauer <simonw@apache.org>
Date:   Tue Nov 4 14:46:17 2014 +0100

    remove NoSuchDirectoryException

commit 2e43c4feba05cfaf451df70f946c0930cbcc4557
Merge: 93826e4 8163107
Author: Simon Willnauer <simonw@apache.org>
Date:   Tue Nov 4 14:38:00 2014 +0100

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

commit 93826e4d56a6a97c2074669014af77ff519bde63
Merge: 7f10129 44e24d3
Author: Simon Willnauer <simonw@apache.org>
Date:   Tue Nov 4 12:54:27 2014 +0100

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

    Conflicts:
    	src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
    	src/main/java/org/elasticsearch/index/store/Store.java
    	src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
    	src/test/java/org/elasticsearch/index/store/DistributorDirectoryTest.java
    	src/test/java/org/elasticsearch/index/store/StoreTest.java
    	src/test/java/org/elasticsearch/indices/recovery/RecoveryStatusTests.java

commit 7f10129364623620575c109df725cf54488b3abb
Author: Adrien Grand <jpountz@gmail.com>
Date:   Tue Nov 4 11:32:24 2014 +0100

    Fix TopHitsAggregator to not ignore the top-level/leaf collector split.

commit 042fadc8603b997bdfdc45ca44fec70dc86774a6
Author: Adrien Grand <jpountz@gmail.com>
Date:   Tue Nov 4 11:31:20 2014 +0100

    Remove MatchDocIdSet in favor of DocValuesDocIdSet.

commit 7d877581ff5db585a674c95ac391ac78a0282826
Author: Adrien Grand <jpountz@gmail.com>
Date:   Tue Nov 4 11:10:08 2014 +0100

    Make the and filter use the cost API.

    Lucene 5 ensured that cost() can safely be used, and this will have the benefit
    that the order in which filters are specified is not important anymore (only
    for slow random-access filters in practice).

commit 78f1718aa2cd82184db7c3a8393e6215f43eb4a8
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 23:55:17 2014 -0500

    fix previous eclipse import braindamage

commit 186c40e9258ce32f22a9a714ab442a310b6376e0
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 22:32:34 2014 -0500

    allow child queries to exhaust iterators again

commit b0b1271305e1b6d0c4c4da51a3c54df1aa5c0605
Author: Ryan Ernst <ryan@iernst.net>
Date:   Mon Nov 3 14:50:44 2014 -0800

    Fix nocommit for mapping output.  index_options will not be printed if
    the field is not indexed.

commit ba223eb85e399c9620a347a983e29bf703953e7a
Author: Ryan Ernst <ryan@iernst.net>
Date:   Mon Nov 3 14:07:26 2014 -0800

    Remove no commit for chinese analyzer provider.  We should have a
    separate issue to address not using this provider on new indexes.

commit ca554b03c4471797682b2fb724f25205cf040c4a
Author: Ryan Ernst <ryan@iernst.net>
Date:   Mon Nov 3 13:41:59 2014 -0800

    Fix stop tests

commit de67c4653ec47dee9c671390536110749d2bb05f
Author: Ryan Ernst <ryan@iernst.net>
Date:   Mon Nov 3 12:51:17 2014 -0800

    Remove analysis nocommits, switching over to Lucene43*Filters for
    backcompat

commit 50cae9bec72c25c33a1ab8a8931bccb3355171e2
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 15:32:25 2014 -0500

    add ram accounting and TODO lazy-loading (its no worse than master, can be a followup improvement) for suggesters

commit 7a7f0122f138684b312d0f0b03dc2a9c16c15f9c
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 15:11:26 2014 -0500

    bump lucene version

commit cd0cae5c35e7a9e049f49ae45431f658fb86676b
Merge: 446bc09 3c72073
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 14:49:05 2014 -0500

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

commit 446bc09b4e8bf4602d3c252b53ddaa0da65cce2f
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 14:46:30 2014 -0500

    remove hack

commit a19d85a968d82e6d00292b49630ef6ff2dbf2f32
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 12:53:11 2014 -0500

    dont create exceptions with circular references on corruption (will open a PR for this)

commit 0beefb9e821d97c37e90ec556d81ac7b00369b8a
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 11:47:14 2014 -0500

    temporarily add craptastic detector for this horrible bug

commit e9f2d298bff75f3d1591f8622441e459c3ce7ac3
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 10:56:01 2014 -0500

    add nocommit

commit e97f1d50a91a7129650b8effc7a9ecf74ca0569a
Merge: c57a3c8 f1f50ac
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 10:12:12 2014 -0500

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

commit c57a3c8341ed61dca62eaf77fad6b8b48aeb6940
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 10:11:46 2014 -0500

    fix nocommit

commit dd0e77e4ec07c7011ab5f6b60b2ead33dc2333d2
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Nov 3 09:54:09 2014 -0500

    nocommit -> TODO, this is in much more places in the codebase, bigger issue

commit 3cc3bf56d72d642059f8fe220d6f2fed608363e9
Author: Ryan Ernst <ryan@iernst.net>
Date:   Sat Nov 1 23:59:17 2014 -0700

    Remove nocommit and awaitsfix for edge ngram filter test.

commit 89f115245155511c0fbc0d5ee62e63141c3700c1
Author: Ryan Ernst <ryan@iernst.net>
Date:   Sat Nov 1 23:57:44 2014 -0700

    Fix EdgeNGramTokenFilter logic for version <= 4.3, and fixed instanceof
    checks in corresponding tests to correctly check for reverse filter when
    applicable.

commit 112df869cd199e36aab0e1a7a288bb1fdb2ebf1c
Author: Robert Muir <rmuir@apache.org>
Date:   Sun Nov 2 00:08:30 2014 -0400

    execute geo disjoint query/filter as intersects

commit e5061273cc685f1252e9a3a9ae4877ec9bce7752
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Nov 1 22:58:59 2014 -0400

    remove chinese analyzer from docs

commit ea1af11b8978fcc551f198e24fe21d52806993ef
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Nov 1 22:29:00 2014 -0400

    fix ram accounting bug

commit 53c0a42c6aa81aa6bf81d3aa77b95efd513e0f81
Merge: e3bcd3c 6011a18
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Nov 1 22:16:29 2014 -0400

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

commit e3bcd3cc07a4957e12c7b3affc462c31290a9186
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Nov 1 22:15:01 2014 -0400

    fix url-email back compat (thanks ryan)

commit 91d6b096a96c357755abee167098607223be1aad
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Nov 1 22:11:26 2014 -0400

    bump lucene version

commit d2bb9568df72b37ec7050d25940160b8517394bc
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Nov 1 20:33:07 2014 -0400

    remove nocommit

commit 1d049c471e19e5c457262c7399c5bad9e023b2e3
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Nov 1 20:28:58 2014 -0400

    fix eclipse to group org/com imports together: without this, its madness

commit 09d8c1585ee99b6e63be032732c04ef6fed84ed2
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Nov 1 14:27:41 2014 -0400

    remove nocommit, if you dont liek it, print assembly and tell me how it can be better

commit 8a6a294313fdf33b50c7126ec20c07867ecd637c
Author: Adrien Grand <jpountz@gmail.com>
Date:   Fri Oct 31 20:01:55 2014 +0100

    Remove deprecated usage of DocIdSets.newDocIDSet.

commit 601bee60543610558403298124a84b1b3bbd1045
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 31 14:13:18 2014 -0400

    maybe one of these zillions of annotations will stop thread leaks

commit 9d3f69abc7267c5e455aefa26db95cb554b02d62
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 31 14:05:39 2014 -0400

    fix some analysis nocommits

commit 312e3a29c77214b8142d21c33a6b2c2b151acf9a
Author: Adrien Grand <jpountz@gmail.com>
Date:   Fri Oct 31 18:28:45 2014 +0100

    Remove XConstantScoreQuery/XFilteredQuery/ApplyAcceptedDocsFilter.

commit 5a0cb9f8e167215df7f1b1fad11eec6e6c74940f
Author: Adrien Grand <jpountz@gmail.com>
Date:   Fri Oct 31 17:06:45 2014 +0100

    Fix misleading documentation of DocIdSets.toCacheable.

commit 8b4ef2b5b476fff4c79c0c2a0e4769ead26cf82b
Author: Adrien Grand <jpountz@gmail.com>
Date:   Fri Oct 31 17:05:59 2014 +0100

    Fix CustomRandomAccessFilterStrategy to override the right method.

commit d7a9a407a615987cfffc651f724fbd8795c9c671
Author: Adrien Grand <jpountz@gmail.com>
Date:   Fri Oct 31 16:21:35 2014 +0100

    Better handle the special case when there is a single SHOULD clause.

commit 648ad389f07e92dfc451f345549c9841ba5e4c9a
Author: Adrien Grand <jpountz@gmail.com>
Date:   Fri Oct 31 15:53:38 2014 +0100

    Cut over XBooleanFilter to BitDocIdSet.Builder.

    The idea is similar to what happened to Lucene's BooleanFilter.

    Yet XBooleanFilter is a bit more sophisticated and I had to slightly
    change the way it is implemented in order to make it work. The main difference
    with before is that slow filters are now applied lazily, so eg. if you have 3
    MUST clauses, two with a fast iterator and the third with a slow iterator, the
    previous implementation used to apply the fast iterators first and then only
    check the slow filter for bits which were set in the bit set. Now we are
    computing a bit set based on the fast must clauses and then basically returning
    a BitsFilteredDocIdSet.wrap(bitset, slowClause).

    Other than that, BooleanFilter still uses the bitset optimizations when or-ing
    and and-ind filters.

    Another improvement is that BooleanFilter is now aware of the cost API.

commit b2dad312b4bc9f931dc3a25415dd81c0d9deee08
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 31 10:18:53 2014 -0400

    clear nocommit

commit 4851d2091e744294336dfade33906c75fbe695cd
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 15:15:16 2014 +0100

    cut over to RoaringDocIdSet

commit ca6aec24a901073e65ce4dd6b70964fd3612409e
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 14:57:30 2014 +0100

    make nocommit more explicit

commit d0742ee2cb7a6c48b0bbb31580b7fbcebdb6ec40
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 31 09:55:24 2014 -0400

    fix standardtokenizer nocommit

commit 7d6faccafff22a86af62af0384838391d46695ca
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 14:54:08 2014 +0100

    fix compilation

commit a038a405c1ff6458ad294e6b5bc469e622f699d0
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 14:53:43 2014 +0100

    fix compilation

commit 30c9e307b1f5d80e2deca3392c0298682241207f
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 14:52:35 2014 +0100

    fix compilation

commit e5139bc5a0a9abd2bdc6ba0dfbcb7e3c2e7b8481
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 31 09:52:16 2014 -0400

    clear nocommit here

commit 85dd2cedf7a7994bed871ac421cfda06aaf5c0a5
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 14:46:17 2014 +0100

    fix CompletionPostingsFormatTest

commit c0f3781f616c9b0ee3b5c4d0998810f595868649
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 31 09:38:00 2014 -0400

    add tests for these analyzers

commit 51f9999b4ad079c283ae762c862fd0e22d00445f
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 14:10:26 2014 +0100

    remove nocommit - this is not an issue

commit fd1388fa03e622b0738601c8aeb2dbf7949a6dd2
Author: Martijn van Groningen <martijn.v.groningen@gmail.com>
Date:   Fri Oct 31 14:07:01 2014 +0100

    Remove redundant null check

commit 3d6dd51b0927337ba941a235446b22e8cd500dc3
Author: Martijn van Groningen <martijn.v.groningen@gmail.com>
Date:   Fri Oct 31 14:01:37 2014 +0100

    Removed the work around to prevent p/c error when invoking #iterator() twice, because the custom query filter wrapper now doesn't transform the result to a cache doc id set any more.

    I think the transforming to a cachable doc id set in CustomQueryWrappingFilter isn't needed at all, because we use the DocIdSet only once and because of that is just slowed things down.

commit 821832a537e00cd1216064b379df3e01d2911d3a
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 13:54:33 2014 +0100

    one more nocommit

commit 77eb9ea4c4ea50afb2680c29682ddcb3851a9d4f
Author: Martijn van Groningen <martijn.v.groningen@gmail.com>
Date:   Fri Oct 31 13:52:29 2014 +0100

    Remove cast

commit a400573c034ed602221f801b20a58a9186a06eae
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 13:49:24 2014 +0100

    fix stop filter

commit 51746087cf8ec34c4d20aa05ba8dbff7b3b43eec
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 13:21:36 2014 +0100

    fix changed semantics of FBS.nextSetBit to check for NO_MORE_DOCS

commit 8d0a4e2511310f1293860823fe3ba80ac771bbe3
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 31 08:13:44 2014 -0400

    do the bogus cast differently

commit 46a5cc5732dea096c0c80ae5ce42911c9c51e44e
Author: Simon Willnauer <simonw@apache.org>
Date:   Fri Oct 31 13:00:16 2014 +0100

    I hate it but P/C now passes

commit 580c0c2f82bbeacf217e594f22312b11d1bdb839
Merge: a9d3c00 1645434
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 31 06:54:31 2014 -0400

    fix nocommit/classcast

commit a9d3c004d62fe04989f49a897e6ff84973c06eb9
Author: Adrien Grand <jpountz@gmail.com>
Date:   Fri Oct 31 08:49:31 2014 +0100

    Update TODO.

commit aa75af0b407792aeef32017f03a6f442ed970baa
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Oct 30 19:18:25 2014 -0400

    clear obselete nocommits from lucene bump

commit d438534cf41fcbe2d88070e2f27c994625e082c2
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Oct 30 18:53:20 2014 -0400

    throw classcastexception when ES abuses regular filtercache for nested docs

commit 2c751f3a8feda43ec127c34769b069de21f3d16f
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Oct 30 18:31:34 2014 -0400

    bump lucene revision, fix tests

commit d6ef7f6304ae262bf6228a7d661b2a452df332be
Author: Simon Willnauer <simonw@apache.org>
Date:   Thu Oct 30 22:37:58 2014 +0100

    fix merge problems

commit de9d361f88a9ce6bb3fba85285de41f223c95767
Merge: 41f6aab f6b37a3
Author: Simon Willnauer <simonw@apache.org>
Date:   Thu Oct 30 22:28:59 2014 +0100

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

    Conflicts:
    	pom.xml
    	src/main/java/org/elasticsearch/Version.java
    	src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java

commit 41f6aab388aa80c40b08a2facab2617576203a0d
Author: Simon Willnauer <simonw@apache.org>
Date:   Thu Oct 30 17:48:46 2014 +0100

    fix potiential NPE

commit c4428b12e1ae838b91e847df8b4a8be7f49e10f4
Author: Simon Willnauer <simonw@apache.org>
Date:   Thu Oct 30 17:38:46 2014 +0100

    don't advance iterator in a match(doc) method

commit 28ab948e99e3ea4497c9b1e468384806ba7e1790
Author: Simon Willnauer <simonw@apache.org>
Date:   Thu Oct 30 17:34:58 2014 +0100

    don't advance iterator in a match(doc) method

commit eb0f33f6634fadfcf4b2bf7327400e568f0427bb
Author: Simon Willnauer <simonw@apache.org>
Date:   Thu Oct 30 16:55:54 2014 +0100

    fix GeoUtilsTest

commit 7f711fe3eaf73b6c2268cf42d5a41132a61ad831
Author: Simon Willnauer <simonw@apache.org>
Date:   Thu Oct 30 16:43:16 2014 +0100

    Use a dedicated default index option if field type is not indexed by default

commit 78e3f37ab779e3e1b25b45a742cc86ab5f975149
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Oct 30 10:56:14 2014 -0400

    disable this test with AwaitsFix to reduce noise

commit 9a590f563c8e03a99ecf0505c92d12d7ab20d11d
Author: Simon Willnauer <simonw@apache.org>
Date:   Thu Oct 30 09:38:49 2014 +0100

    fix lucene version

commit abe3ca1d8bb6b5101b545198f59aec44bacfa741
Author: Simon Willnauer <simonw@apache.org>
Date:   Thu Oct 30 09:35:05 2014 +0100

    fix AnalyzingCompletionLookupProvider to wrok with new codec API

commit 464293b245852d60bde050c6d3feb5907dcfbf5f
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Oct 30 00:26:00 2014 -0400

    don't try to write stuff to tests class directory

commit 031cc6c19f4fe4423a034b515f77e5a0e282a124
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Oct 30 00:12:36 2014 -0400

    AwaitsFix these known issues to reduce noise

commit 4600d51891e35847f2d344247d6f915a0605c0d1
Author: Robert Muir <rmuir@apache.org>
Date:   Thu Oct 30 00:06:53 2014 -0400

    openbitset lives on

commit 8492bae056249e2555d24acd55f1046b66a667c4
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Oct 29 23:42:54 2014 -0400

    fixes for filter tests

commit 31f24ce4efeda31f97eafdb122346c7047a53bf2
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Oct 29 23:12:38 2014 -0400

    don't use fieldcache

commit 8480789942fdff14a6d2b2cd8134502fe62f20c8
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Oct 29 23:04:29 2014 -0400

    ancient index no longer supported

commit 02e78dc7ebdd827533009f542582e8db44309c57
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 23:37:02 2014 +0100

    fix more tests

commit ff746c6df23c50b3f3ec24922413b962c8983080
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 23:08:19 2014 +0100

    fix all mapper

commit e4fb84b517107b25cb064c66f83c9aa814a311b2
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 22:55:54 2014 +0100

    fix distributor tests and cut over to FileStore API

commit 20c850e2cfe3210cd1fb9e232afed8d4ac045857
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 22:42:18 2014 +0100

    use DOCS_ONLY if index=true and current options == null

commit 44169c108418413cfe51f5ce23ab82047463e4c2
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 22:33:36 2014 +0100

    Fix index=yes|no settings in mappers

commit a3c5f77987461a18121156ed345d42ded301c566
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 21:51:41 2014 +0100

    fix several field mappers conversion from setIndexed to indexOptions

commit df84d736908e88a031d710f98e222be68ae96af1
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 21:33:35 2014 +0100

    fix SourceFieldMapper to be not indexed

commit b2bf01d12a8271a31fb2df601162d0e89924c8f5
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 21:23:08 2014 +0100

    Cut over to .liv files in store and corruption tests

commit 619004df436f9ef05d24bef1b6a7f084c6b0ad75
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 17:05:52 2014 +0100

    fix more tests

commit b7ed653a8b464de446e00456bce0a89e47627c38
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 16:19:08 2014 +0100

    [STORE] Add dedicated method to write temporary files

    Recovery writes temporary files which might not end up in the
    right distributor directories today. This commit adds a dedicated
    API that allows specifying the target file name in order to create the
    tempoary file in the correct directory.

commit 7d574659f6ae04adc2b857146ad0d8d56ca66f12
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Oct 29 10:28:49 2014 -0400

    add some leniency to temporary bogus method

commit f97022ea7c2259f7a5cf97d924c59ed75ab65b32
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Oct 29 10:24:17 2014 -0400

    fix MultiCollector bug

commit b760533128c2b4eb10ad76e9689ef714293dd819
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 14:56:08 2014 +0100

    CheckIndex is now closeable we need to close it

commit 9dae9fb6d63546a6c2427be2a2d5c8358f5b1934
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 14:45:11 2014 +0100

    s/Lucene51/Lucene50

commit 7aea9b86856a8c1b06a08e7c312ede1168af1287
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 14:42:30 2014 +0100

    fix BloomFilterPostingsFormat

commit 16fea6fe842e88665d59cc091e8224e8dc6ce08c
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 14:41:16 2014 +0100

    fix some codec format issues

commit 3d77aa97dd2c4012b63befef3f2ba2525965e8a6
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 14:30:43 2014 +0100

    fix CodecTests

commit 6ef823b1fde25657438ace1aabd9d552d6ae215e
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 14:26:47 2014 +0100

    make it compile

commit 9991eee1fe99435118d4dd42b297ffc83fce5ec5
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Oct 29 09:12:43 2014 -0400

    add an ugly hack for TopHitsAggregator for now

commit 03e768a01fcae6b1f4cb50bcceec7d42977ac3e6
Author: Simon Willnauer <simonw@apache.org>
Date:   Wed Oct 29 14:01:02 2014 +0100

    cut over ES090PostingsFormat

commit 463d281faadb794fdde3b469326bdaada25af048
Merge: 0f8740a 8eac79c
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Oct 29 08:30:36 2014 -0400

    Merge branch 'master' into enhancement/lucene_5_0_upgrade

commit 0f8740a782455a63524a5a82169f6bbbfc613518
Author: Robert Muir <rmuir@apache.org>
Date:   Wed Oct 29 01:00:15 2014 -0400

    fix/hack remaining filter and analysis issues

commit df534488569da13b31d66e581456dfd4b55156b9
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Oct 28 23:11:47 2014 -0400

    fix ngrams / openbitset usage

commit 11f5dc3b9887f4da80a0fa1818e1350b30599329
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Oct 28 22:42:44 2014 -0400

    hack over sort comparators

commit 4ebdc754350f512596f6a02770d223e9f5f7975a
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Oct 28 21:27:07 2014 -0400

    compiler errors < 100

commit 2d60c9e29de48ccb0347dd87f7201f47b67b83a0
Author: Robert Muir <rmuir@apache.org>
Date:   Tue Oct 28 03:13:08 2014 -0400

    clear some nocommits around ram usage

commit aaf47fe6c0aabcfb2581dd456fc50edf871da758
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Oct 27 12:27:34 2014 -0400

    migrate fieldinfo handling

commit ef6ed6d15d8def71cd880d97249678136cd29fe3
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Oct 27 12:07:13 2014 -0400

    more simple fixes

commit f475e1048ae697dd9da5bd9da445102b0b7bc5b3
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Oct 27 11:58:21 2014 -0400

    more fielddata ram accounting fixes

commit 16b4239eaa9b4262df258257df4f31d39f28a3a2
Author: Simon Willnauer <simonw@apache.org>
Date:   Mon Oct 27 16:47:32 2014 +0100

    add missing file

commit 5b542fa2a6da81e36a0c35b8e891a1d8bc58f663
Author: Simon Willnauer <simonw@apache.org>
Date:   Mon Oct 27 16:43:29 2014 +0100

    cut over completion posting formats - still some nocommits

commit ecdea49404c4ec4e1b78fb54575825f21b4e096e
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Oct 27 11:21:09 2014 -0400

    fielddata accountable fixes

commit d43da265718917e20c8264abd43342069198fe9c
Author: Simon Willnauer <simonw@apache.org>
Date:   Mon Oct 27 16:19:53 2014 +0100

    cut over BloomFilterPostings to new API

commit 29b192ba621c14820175775d01242162b88bd364
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Oct 27 10:22:51 2014 -0400

    fix more analyzers

commit 74b4a0c5283e323a7d02490df469497c722780d2
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Oct 27 09:54:25 2014 -0400

    fix tests

commit 554084ccb4779dd6b1c65fa7212ad1f64f3a6968
Author: Simon Willnauer <simonw@apache.org>
Date:   Mon Oct 27 14:51:48 2014 +0100

    maintain supressed exceptions on CorruptIndexException

commit cf882d9112c5e8ef1e9f2b0f800f7aa59001a4f2
Author: Simon Willnauer <simonw@apache.org>
Date:   Mon Oct 27 14:47:17 2014 +0100

    commitOnClose=false

commit ebb2a9189ab2f459b7c6c9985be610fd90dfe410
Author: Simon Willnauer <simonw@apache.org>
Date:   Mon Oct 27 14:46:06 2014 +0100

    cut over indexwriter closeing in InternalEngine

commit cd21b3d4706f0b562bd37792d077d60832aff65f
Author: Simon Willnauer <simonw@apache.org>
Date:   Mon Oct 27 14:38:10 2014 +0100

    fix constant

commit f93f900c4a1c90af3a21a4af5735a7536423fe28
Author: Robert Muir <rmuir@apache.org>
Date:   Mon Oct 27 09:50:49 2014 -0400

    fix test

commit a9a752940b1ab4699a6a08ba8b34afca82b843fe
Author: Martijn van Groningen <martijn.v.groningen@gmail.com>
Date:   Mon Oct 27 09:26:18 2014 +0100

    Be explicit about the index options

commit d9ee815babd030fa2ceaec9f467c105ee755bf6b
Author: Simon Willnauer <simonw@apache.org>
Date:   Sun Oct 26 20:03:44 2014 +0100

    cut over store and directory

commit b3f5c8e39039dd8f5caac0c4dd1fc3b1116e64ca
Author: Robert Muir <rmuir@apache.org>
Date:   Sun Oct 26 13:08:39 2014 -0400

    more test fixes

commit 8842f2684e3606aae0860c27f7a4c53e273d47fb
Author: Robert Muir <rmuir@apache.org>
Date:   Sun Oct 26 12:14:52 2014 -0400

    tests manual labor

commit c43de5aec337919a3fdc3638406dff17fc80bc98
Author: Robert Muir <rmuir@apache.org>
Date:   Sun Oct 26 11:04:13 2014 -0400

    BytesRef -> BytesRefBuilder

commit 020c0d087a2f37566a1db390b0e044ebab030138
Author: Martijn van Groningen <martijn.v.groningen@gmail.com>
Date:   Sun Oct 26 15:53:37 2014 +0100

    Moved over to BitSetFilter

commit 48dd1b909e6c52cef733961c9ecebfe4f67109fe
Author: Martijn van Groningen <martijn.v.groningen@gmail.com>
Date:   Sun Oct 26 15:53:11 2014 +0100

    Left over Collector api change in ScanContext

commit 6ec248ef63f262bcda400181b838fd9244752625
Author: Martijn van Groningen <martijn.v.groningen@gmail.com>
Date:   Sun Oct 26 15:47:40 2014 +0100

    Moved indexed() over to indexOptions != null or indexOptions == null

commit 9937aebfd8546ae4bb652cd976b3b43ac5ab7a63
Author: Martijn van Groningen <martijn.v.groningen@gmail.com>
Date:   Sun Oct 26 13:26:31 2014 +0100

    Fixed many compile errors. Mainly around the breaking Collector api change in 5.0.

commit fec32c4abc0e3309cf34260c8816305a6f820c9e
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Oct 25 11:22:17 2014 -0400

    more easy fixes

commit dab22531d801800d17a65dc7c9464148ce8ebffd
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Oct 25 09:33:41 2014 -0400

    more progress

commit 414767e9a955010076b0497cc4f6d0c1850b48d3
Author: Robert Muir <rmuir@apache.org>
Date:   Sat Oct 25 06:33:17 2014 -0400

    more progress

commit ad9d969fddf139a8830254d3eb36a908ba87cc12
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 24 14:28:01 2014 -0400

    current state of fun

commit 464475eecb0be15d7d084135ed16051f76a7e521
Author: Robert Muir <rmuir@apache.org>
Date:   Fri Oct 24 11:42:41 2014 -0400

    bump to 5.0 snapshot

time:
2014-11-05T19:38:24Z
class:
comments:
update documentation with release 2.4.1

time:
2014-11-05T19:22:48Z
class:
comments:
update documentation with release 2.4.1

time:
2014-11-05T17:09:08Z
class:
comments:
update documentation with release 2.4.2

time:
2014-11-05T16:57:36Z
class:
comments:
update documentation with release 2.4.1

time:
2014-11-05T16:49:43Z
class:
comments:
update documentation with release 2.4.1

time:
2014-11-05T16:45:35Z
class:
comments:
update documentation with release 2.4.1

time:
2014-11-05T16:30:57Z
class:
comments:
update documentation with release 2.4.1

time:
2014-11-05T16:14:59Z
class:
comments:
update documentation with release 2.4.1

time:
2014-11-05T16:05:49Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Add Version constants for 1.3.6 and 1.4.1

time:
2014-11-05T14:00:53Z
class:
comments:
Docs: minor update to resiliency page

time:
2014-11-05T13:50:52Z
class:
comments:
Docs: updated resiliency page for 1.4.0

time:
2014-11-05T11:53:45Z
class:
comments:
Update the status of the shard info header work.

time:
2014-11-05T11:41:22Z
class:
comments:
Docs: Updated ES/JVM versions

time:
2014-11-05T11:28:56Z
class:
src/test/java/org/elasticsearch/index/query/TemplateQueryTest.java
comments:
[TEST] Remove redundant call to setTemplateType()

time:
2014-11-05T10:05:28Z
class:
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Test: make field `id` is defined in mapping, so sort can't fail

time:
2014-11-05T08:16:16Z
class:
src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java
comments:
Revert "Tests: Temporarily ignore RoutingBackwardCompatibilityUponUpgradeTests."

This reverts commit 181bd6e56a2e6cfa1e0e85a5a7778cae5a8e62e1.

time:
2014-11-05T08:15:43Z
class:
src/test/java/org/elasticsearch/search/basic/TransportTwoNodesSearchTests.java
comments:
Tests: Fix more bad assumptions about routing in TransportTwoNodesSearchTests.

time:
2014-11-04T19:12:12Z
class:
src/test/java/org/elasticsearch/script/GroovyScriptTests.java
comments:
Tests: Fix GroovyScriptTests to not depend on the way documents are routed to shards.

time:
2014-11-04T18:58:08Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java
src/test/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormatTest.java
comments:
Gateway: Prefer recovering the state file that uses the latest format.

Currently MetaDataStateFormat loads the first available state file that has
the latest version. In case several files are available and some of them use
the new format while other ones use the legacy format, it should also prefer
the new format. This is typically useful when we upgrade the metadata when
recovering from the gateway: we might write the upgraded state with the new
format while the previous state used the legacy format, so we end up with
two files having the same version but using different formats.

Close #8343

time:
2014-11-04T17:07:33Z
class:
src/test/java/org/elasticsearch/search/query/SimpleQueryStringTests.java
comments:
Tests: Fix SimpleQueryStringTests.testSimpleQueryString assumption that depends on how documents are routed.

time:
2014-11-04T17:01:35Z
class:
src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java
comments:
Tests: Temporarily ignore RoutingBackwardCompatibilityUponUpgradeTests.

time:
2014-11-04T16:15:48Z
class:
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/test/java/org/elasticsearch/index/mapper/dynamic/DynamicMappingTests.java
comments:
Mappings: Generate dynamic mappings for empty strings.

This will help the exists/missing filters behave as expected in presence of
empty strings, as well as when using a default analyzer that would generate
tokens for an empty string (uncommon).

Close #8198

time:
2014-11-04T16:08:03Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchThreadFilter.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
comments:
[TEST] assign a name to the transport client created within ExternalTestCluster

The transport client created within ExternalTestCluster needs a name that follows our naming convention otherwise the thread leak filter barfs when running tests against an external cluster. Used "transport_client_external_{n}" where n gets incremented every time a new external cluster gets created. Updated thread leak filters rules to ignore threads created by such transport client.

time:
2014-11-04T15:32:42Z
class:
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/main/java/org/elasticsearch/cluster/routing/operation/OperationRoutingModule.java
src/main/java/org/elasticsearch/cluster/routing/operation/hash/HashFunction.java
src/main/java/org/elasticsearch/cluster/routing/operation/hash/murmur3/Murmur3HashFunction.java
src/main/java/org/elasticsearch/cluster/routing/operation/plain/PlainOperationRouting.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/test/java/org/elasticsearch/action/termvector/AbstractTermVectorTests.java
src/test/java/org/elasticsearch/action/termvector/GetTermVectorTests.java
src/test/java/org/elasticsearch/action/termvector/MultiTermVectorsTests.java
src/test/java/org/elasticsearch/cluster/ClusterHealthResponsesTests.java
src/test/java/org/elasticsearch/cluster/metadata/MetaDataTests.java
src/test/java/org/elasticsearch/cluster/metadata/ToAndFromJsonMetaDataTests.java
src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityTests.java
src/test/java/org/elasticsearch/cluster/routing/RoutingBackwardCompatibilityUponUpgradeTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/AddIncrementallyTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/AllocatePostApiFlagTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/AllocationCommandsTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/AwarenessAllocationTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/BalanceConfigurationTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/ClusterRebalanceRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/ConcurrentRebalanceRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/DeadNodesAllocationTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/DisableAllocationTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/ElectReplicaAsPrimaryDuringRelocationTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/FailedNodeRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/FailedShardsRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/FilterRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/IndexBalanceTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/NodeVersionAllocationDeciderTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/PreferLocalPrimariesToRelocatingPrimariesTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/PreferPrimaryAllocationTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/PrimaryElectionRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/PrimaryNotRelocatedWhileBeingRecoveredTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/RandomAllocationDeciderTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/RebalanceAfterActiveTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/ReplicaAllocatedAfterPrimaryTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/RoutingNodesIntegrityTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/SameShardRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/ShardVersioningTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/ShardsLimitAllocationTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/SingleShardNoReplicasRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/SingleShardOneReplicaRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/TenShardsOneReplicaRoutingTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/ThrottlingAllocationTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/UpdateNumberOfReplicasTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationTests.java
src/test/java/org/elasticsearch/cluster/routing/operation/hash/murmur3/Murmur3HashFunctionTests.java
src/test/java/org/elasticsearch/cluster/serialization/ClusterSerializationTests.java
src/test/java/org/elasticsearch/cluster/serialization/ClusterStateToStringTests.java
src/test/java/org/elasticsearch/cluster/structure/RoutingIteratorTests.java
src/test/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormatTest.java
src/test/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzerIntegrationTests.java
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
src/test/java/org/elasticsearch/indices/store/IndicesStoreTests.java
src/test/java/org/elasticsearch/mget/SimpleMgetTests.java
src/test/java/org/elasticsearch/percolator/PercolatorBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeReallyOldIndexTest.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ShardSizeTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ShardSizeTests.java
src/test/java/org/elasticsearch/search/basic/TransportTwoNodesSearchTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Switch to murmurhash3 to route documents to shards.

We currently use the djb2 hash function in order to compute the shard a
document should go to. Unfortunately this hash function is not very
sophisticated and you can sometimes hit adversarial cases, such as numeric ids
on 33 shards.

Murmur3 generates hashes with a better distribution, which should avoid the
adversarial cases.

Here are some examples of how 100000 incremental ids are distributed to shards
using either djb2 or murmur3.

5 shards:
Murmur3: [19933, 19964, 19940, 20030, 20133]
DJB:     [20000, 20000, 20000, 20000, 20000]

3 shards:
Murmur3: [33185, 33347, 33468]
DJB:     [30100, 30000, 39900]

33 shards:
Murmur3: [2999, 3096, 2930, 2986, 3070, 3093, 3023, 3052, 3112, 2940, 3036, 2985, 3031, 3048, 3127, 2961, 2901, 3105, 3041, 3130, 3013, 3035, 3031, 3019, 3008, 3022, 3111, 3086, 3016, 2996, 3075, 2945, 2977]
DJB:     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 900, 900, 900, 1000, 1000, 10000, 10000, 10000, 10000, 9100, 9100, 9100, 9100, 9000, 9000, 0, 0, 0, 0, 0, 0]

Even if djb2 looks ideal in some cases (5 shards), the fact that the
distribution of its hashes has some patterns can raise issues with some shard
counts (eg. 3, or even worse 33).

Some tests have been modified because they relied on implementation details of
the routing hash function.

Close #7954

time:
2014-11-04T15:26:42Z
class:
src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
geo sort: remove unneded code from geo distance builder

The if statements are unneded and also wrong (second
else if can never be reached).

closes #8338

time:
2014-11-04T15:20:01Z
class:
comments:
[TEST] add description of -Dvalidate.skip parameter

time:
2014-11-04T14:22:36Z
class:
comments:
Update cluster.asciidoc - fix invalid asciidoc

time:
2014-11-04T13:34:28Z
class:
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
comments:
Catch NoSuchDirectoryException on consistency check - the directory might not be there anymore

time:
2014-11-04T13:34:28Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/store/DistributorInTheWildTest.java
comments:
[TEST] only assert consistency before closing

time:
2014-11-04T13:32:05Z
class:
comments:
Update cluster.asciidoc

Fixed asciidoc on cluster module page

time:
2014-11-04T13:27:22Z
class:
comments:
Update zen.asciidoc

Tidied up the "No master block" asciidoc

time:
2014-11-04T12:56:24Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/discovery/ZenUnicastDiscoveryTests.java
src/test/java/org/elasticsearch/test/discovery/ClusterDiscoveryConfiguration.java
comments:
[TEST] move ClusterDiscoveryConfiguration to org.elasticsearch.test.discovery

ClusterDiscoveryConfiguration is part of the test infra and should get exported as part of the test jar. This is achieved by moving the class to org.elasticsearch.test.discovery

Closes #8337

time:
2014-11-04T12:36:52Z
class:
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
[TEST] Fix the throttle test.

time:
2014-11-04T12:21:37Z
class:
src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortIntegrationTests.java
src/test/java/org/elasticsearch/transport/netty/NettyTransportMultiPortTests.java
src/test/java/org/elasticsearch/transport/netty/NettyTransportTests.java
src/test/java/org/elasticsearch/transport/netty/SimpleNettyTransportTests.java
comments:
[TEST] move NettyTransport*Tests to org.elasticsearch.transport.netty package

NettyTransport*Tests were previously in org.elasticsearch.test.transport and ended up being exported with the test jar. org.elasticsearch.transport.netty should be a better place for them together with exising tests.

time:
2014-11-04T11:38:45Z
class:
src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java
comments:
Test: ClusterServiceTetsts.testLocalNodeMasterListenerCallbacks should verify cluster state is applied

The test verifies the correct behavior of a listener but we only call the listener after publishing a new cluster state. Only checking on the publishing of the state introduces a racing condition.

time:
2014-11-04T11:17:19Z
class:
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
comments:
Test: MinimumMasterNodesTests.testCanNotBringClusterDown didn't check for cluster health properly

Also reduced the number of nodes the test uses

time:
2014-11-04T10:31:18Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
src/test/java/org/elasticsearch/index/store/DistributorDirectoryTest.java
src/test/java/org/elasticsearch/index/store/DistributorInTheWildTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/indices/recovery/RecoveryStatusTests.java
comments:
[STORE] Remove special file handling from DistributorDirecotry

This commit removes all special file handling from DistributorDirectory
that assigned certain files to the primary directory. This special handling
was added to ensure that files that are written more than once are essentially
overwritten. Yet this implementation is consistent all the time and doesn't need
this special handling for files that are written through this directory. Writes
to the underlying directory not going through the distributor directory are not
and have never been supported.

Note: this commit also fixes the problem of adding directories to the distributor
during restart where the primary can suddenly change and file mappings are by-passed.

Closes #8276

time:
2014-11-04T09:46:41Z
class:
comments:
[TEST] exclude org.elasticsearch.test.test package from test-jar

The package was only excluded during test-jar sources generation but ended up in the actual jar.

time:
2014-11-04T09:02:52Z
class:
src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java
comments:
Fix constructors of ZenDiscovery's sub classes

Closes #133

time:
2014-11-04T08:49:05Z
class:
src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java
src/test/java/org/elasticsearch/search/query/ExistsMissingTests.java
comments:
Tests: Do not index dummy documents in ExistsMissingTests.

This way we make sure that there is only one mapping for
_field_names.

time:
2014-11-04T08:45:03Z
class:
src/main/java/org/elasticsearch/ExceptionsHelper.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Discovery: Improve the lifecycle management of the join control thread in zen discovery.

Also added:
* Better exception handling in UnicastZenPing#ping and MulticastZenPing#ping
* In the join thread that runs the innerJoinCluster loop, remember the last known exception and throw that when assertions are enabled. We loop until inner join has completed and if continues exceptions are thrown we should fail the test, because the exception shouldn't occur in production (at least not too often).
Applied feedback 3

Closes #8327

time:
2014-11-03T21:32:23Z
class:
src/main/java/org/elasticsearch/search/aggregations/Aggregation.java
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/Aggregator.java
src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
src/main/java/org/elasticsearch/search/aggregations/AggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/AggregatorParsers.java
src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java
src/main/java/org/elasticsearch/search/aggregations/NonCollectingAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/BucketsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/InternalSingleBucketAggregation.java
src/main/java/org/elasticsearch/search/aggregations/bucket/SingleBucketAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/InternalChildren.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filter/InternalFilter.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFilters.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGrid.java
src/main/java/org/elasticsearch/search/aggregations/bucket/global/GlobalAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/global/InternalGlobal.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/missing/InternalMissing.java
src/main/java/org/elasticsearch/search/aggregations/bucket/missing/MissingAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/InternalNested.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/InternalReverseNested.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/InternalDateRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistanceParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/InternalGeoDistance.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/InternalIPv4Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/UnmappedSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/UnmappedTerms.java
src/main/java/org/elasticsearch/search/aggregations/metrics/InternalMetricsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/metrics/InternalNumericMetricsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/metrics/MetricsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/NumericMetricsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/AvgAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/InternalAvg.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/InternalCardinality.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/InternalGeoBounds.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/InternalMax.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/MaxAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/InternalMin.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/MinAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractInternalPercentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractPercentilesAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentileRanks.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/InternalStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/StatsAggegator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/InternalExtendedStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/InternalSum.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/SumAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHits.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCount.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregator.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceAggregatorFactory.java
src/test/java/org/elasticsearch/search/aggregations/MetaDataTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificanceHeuristicTests.java
comments:
[Aggregations] Meta data support

This commit adds the ability to associate a bit of state with each
individual aggregation.

The aggregation response can be hard to stitch back together without
having a reference to the aggregation request. In many cases this is not
available, many json serializer frameworks cache types globally or have a
static deserialisation override mechanism. In these cases making the
original request available, if at all possible, would be a hack.

The old facets returned `_type` which was just enough metadata to know
what the originating facet type in the request was.

This PR takes `_type` one step further by introducing ANY arbitrary meta
data. This could be further <strike>ab</strike>used for instance by
generic/automated aggregations that include UI state (color information,
thresholds, user input states, etc) per aggregation.

time:
2014-11-03T19:44:41Z
class:
comments:
Fix missing word in upgrade docs.

time:
2014-11-03T19:18:18Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
comments:
Internal: when corruption strikes, don't create exceptions with circular references

Closes #8331

time:
2014-11-03T16:07:12Z
class:
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BinaryDVNumericIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/NumericDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedNumericDVIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVBytesAtomicFieldData.java
comments:
Return 0 instead of -1 for unknown/non-exposed ramBytesUsed()

The accountable interface specifies that such values are illegal

Fixes #8239

time:
2014-11-03T15:53:12Z
class:
src/main/java/org/elasticsearch/index/query/functionscore/ScoreFunctionBuilders.java
src/main/java/org/elasticsearch/index/query/functionscore/random/RandomScoreFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/random/RandomScoreFunctionParser.java
src/test/java/org/elasticsearch/search/functionscore/RandomScoreFunctionTests.java
comments:
FunctionScore: RandomScoreFunction now accepts long, as well a strings.

closes #8267
closes #8311

time:
2014-11-03T13:53:12Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
comments:
Discovery: don't accept a dynamic update to min_master_nodes which is larger then current master node count

The discovery.zen.minimum_master_nodes setting can be updated dynamically. Settings it to a value higher then the current number of master nodes will cause the current master to step down. This is dangerous because if done by mistake (typo) there is no way to restore the settings (this requires an active master).

Closes #8321

time:
2014-11-03T11:09:24Z
class:
comments:
[TESTS] Upgrade randomizedtesting-runner to 2.1.10

Closes #24

time:
2014-11-03T10:29:22Z
class:
comments:
[TESTS] Upgrade randomizedtesting-runner to 2.1.10

Closes #30

time:
2014-11-03T10:06:16Z
class:
src/main/java/org/elasticsearch/index/search/geo/IndexedGeoBoundingBoxFilter.java
comments:
Geo: Fix IndexedGeoBoundingBoxFilter to not modify the bits of other filters.

Close #8325

time:
2014-11-02T17:22:45Z
class:
src/test/java/org/elasticsearch/index/mapper/xcontent/MapperTestUtils.java
src/test/java/org/elasticsearch/index/mapper/xcontent/MultifieldAttachmentMapperTests.java
comments:
Tests: thread leaks detected

* exclude *StarndaloneTest*.class from test target
* add cleanup to MultifieldAttachementMapperTests for terminating ThreadPool
* Modify MapperTestUtils.newMapperService for adding ThreadPool

Closes #88

time:
2014-11-02T17:15:59Z
class:
comments:
Tests: Fix randomizedtest fail

Closes #90

time:
2014-11-02T12:55:21Z
class:
comments:
Docs: Add elastics-rb to the list of community clients

Closes #8319

time:
2014-11-02T07:25:45Z
class:
comments:
Docs: Convert markdown to asciidoc in transport profile docs

time:
2014-11-01T14:47:53Z
class:
comments:
Docs: Add mention of `hyphenation_patterns_path`

Refs ElasticSearch's HyphenationCompoundWordTokenFilterFactory.java.

Closes #8305

time:
2014-11-01T08:03:59Z
class:
src/test/java/org/elasticsearch/http/netty/NettyHttpClient.java
src/test/java/org/elasticsearch/http/netty/NettyHttpServerPipeliningTest.java
comments:
Tests: Stop measuring request time in HTTP pipelining tests

This destabilizes tests on virtualized hardware. Functionality
testing is sufficient here. Performance tests should to be conducted
elsewhere.

time:
2014-11-01T07:38:46Z
class:
comments:
Packaging: Export JAVA_HOME in RPM init script

Closes #5433
Closes #5434

time:
2014-11-01T02:09:38Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
comments:
Tests: Remove accidentally added bwc behavior for auto choosing a
version.

An early version of #7966 had the ability to choose a bwc version
automatically, but this was removed before the change was committed.
However, the change was not removed from the ongoing work in #7922
and it made it in unknowningly.

time:
2014-10-31T22:32:09Z
class:
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/threadpool/UpdateThreadPoolSettingsTests.java
comments:
Core: Allow to configure custom thread pools

Closes #8247

time:
2014-10-31T22:04:05Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Tests: Move logSegmentsState to shared location, and remove no longer
needed verbose logging from upgrade test.

time:
2014-10-31T17:32:19Z
class:
src/main/java/org/elasticsearch/search/fetch/source/FetchSourceSubPhase.java
comments:
Search: Reduce memory usage during fetch source sub phase.

If includes or excludes are set
XContentFactory.xcontentBuilder() allocates a new
BytesStreamOutput using the default page size which is 16kb.

Can be optimized to use the length of the sourceRef because
that is the maximum possible size that the streamOutput will
use.

This redcues the amount of memory allocated for a request
that is fetching 200.000 small documents (~150 bytes each)
by about 300 MB

Close #8138

time:
2014-10-31T15:30:11Z
class:
src/main/java/org/elasticsearch/http/netty/HttpRequestHandler.java
src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java
src/main/java/org/elasticsearch/http/netty/NettyHttpRequest.java
src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java
src/main/java/org/elasticsearch/http/netty/pipelining/HttpPipeliningHandler.java
src/main/java/org/elasticsearch/http/netty/pipelining/OrderedDownstreamChannelEvent.java
src/main/java/org/elasticsearch/http/netty/pipelining/OrderedUpstreamMessageEvent.java
src/test/java/org/elasticsearch/http/netty/NettyHttpClient.java
src/test/java/org/elasticsearch/http/netty/NettyHttpServerPipeliningTest.java
src/test/java/org/elasticsearch/http/netty/NettyPipeliningDisabledIntegrationTest.java
src/test/java/org/elasticsearch/http/netty/NettyPipeliningEnabledIntegrationTest.java
src/test/java/org/elasticsearch/http/netty/pipelining/HttpPipeliningHandlerTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/test/InternalTestClusterTests.java
src/test/java/org/elasticsearch/test/transport/NettyTransportMultiPortIntegrationTests.java
src/test/java/org/elasticsearch/tribe/TribeTests.java
comments:
Netty: Add HTTP pipelining support

This adds HTTP pipelining support to netty. Previously pipelining was not
supported due to the asynchronous nature of elasticsearch. The first request
that was returned by Elasticsearch, was returned as first response,
regardless of the correct order.

The solution to this problem is to add a handler to the netty pipeline
that maintains an ordered list and thus orders the responses before
returning them to the client. This means, we will always have some state
on the server side and also requires some memory in order to keep the
responses there.

Pipelining is enabled by default, but can be configured by setting the
http.pipelining property to true|false. In addition the maximum size of
the event queue can be configured.

The initial netty handler is copied from this repo
https://github.com/typesafehub/netty-http-pipelining

Closes #2665

time:
2014-10-31T14:32:14Z
class:
comments:
Update search-template.asciidoc

Clarified using the conditional clause template example as a string

time:
2014-10-31T13:42:27Z
class:
comments:
Docs: Add elastic client for Google Go.

Add elastic, an Elasticsearch client for Google Go.

Closes #8302

time:
2014-10-31T13:40:32Z
class:
comments:
Update search-template.asciidoc

Fixed asciidoc typo

Closes #8308

time:
2014-10-31T12:53:34Z
class:
comments:
Docs: Document action.replication_type setting

Document action.replication_type setting

Closes #8290

time:
2014-10-31T12:22:56Z
class:
src/main/java/org/elasticsearch/action/percolate/TransportMultiPercolateAction.java
comments:
Logs: Change log level for mpercolate

When using _mpercolate API we log by default a lot of DEBUG `Percolate shard response`.
They should be in TRACE level instead of DEBUG.

time:
2014-10-31T11:54:41Z
class:
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java
comments:
Use a 1024 byte minimum weight for filter cache entries

This changes the weighing function for the filter cache to use a
configurable minimum weight for each filter cached. This value defaults
to 1kb and can be configured with the
`indices.cache.filter.minimum_entry_weight` setting.

This also fixes an issue with the filter cache where the concurrency
level of the cache was exposed as a setting, but not used in cache
construction.

Relates to #8268

time:
2014-10-31T10:58:22Z
class:
src/main/java/org/elasticsearch/action/LatchedActionListener.java
src/main/java/org/elasticsearch/cluster/ClusterInfoService.java
src/main/java/org/elasticsearch/cluster/ClusterModule.java
src/main/java/org/elasticsearch/cluster/DiskUsage.java
src/main/java/org/elasticsearch/cluster/EmptyClusterInfoService.java
src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/AllocationDecidersModule.java
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/monitor/fs/FsStats.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/MockDiskUsagesTests.java
comments:
Reroute shards automatically when high disk watermark is exceeded

This adds a Listener interface to the ClusterInfoService, this is used
by the DiskThresholdDecider, which adds a listener to check for nodes
passing the high watermark. If a node is past the high watermark an
empty reroute is issued so shards can be reallocated if desired.

A reroute will only be issued once every
`cluster.routing.allocation.disk.reroute_interval`, which is "60s" by
default.

Refactors InternalClusterInfoService to delegate the nodes stats and
indices stats gathering into separate methods so they have be overriden
by extending classes. Each stat gathering method returns a
CountDownLatch that can be used to wait until processing for that part
is successful before calling the listeners.

Fixes #8146

time:
2014-10-31T10:00:32Z
class:
src/main/java/org/elasticsearch/index/query/NestedFilterParser.java
comments:
Forgot to cut over the child filter in nested filter to use fixed bitset cache.

time:
2014-10-31T05:32:33Z
class:
comments:
Tests: Fix randomizedtest fail

Closes #131

time:
2014-10-31T05:17:45Z
class:
comments:
Update to Lucene 4.10.2

Closes #130

time:
2014-10-30T17:03:35Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java
comments:
[STORE] Cut over MetaDataStateFormat to NIO Path API

This class already uses Path most of the time since it
uses ATOMIC_MOVE. This commit makes it a bit more consistent.

time:
2014-10-30T16:27:02Z
class:
comments:
Docs: more information about certificate management

Closes #33.

time:
2014-10-30T15:11:58Z
class:
comments:
Update to elasticsearch 1.4.0

Related to #30

(cherry picked from commit 442d06e)
(cherry picked from commit aa27eb9)

time:
2014-10-30T15:08:59Z
class:
comments:
Tests: upgrade randomizedtesting-runner to 2.1.10

Closes #43.

(cherry picked from commit 6e5efe6)
(cherry picked from commit 675a860)

time:
2014-10-30T14:45:35Z
class:
comments:
Update to Lucene 4.10.2

Closes #42.

