time:
2013-08-15T11:15:52Z
class:
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
comments:
Always catch exceptions from TransportBroadcastOperationAction#newResponse (reduce phase)

time:
2013-08-15T11:14:34Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
comments:
Moved the reduce logic to the percolator type.

time:
2013-08-15T09:41:54Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java
src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java
src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java
src/main/java/org/elasticsearch/action/support/nodes/NodeOperationResponse.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalAllocateDangledIndices.java
src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
src/main/java/org/elasticsearch/monitor/dump/DumpMonitorService.java
src/main/java/org/elasticsearch/node/service/NodeService.java
src/main/java/org/elasticsearch/river/cluster/PublishRiverClusterStateAction.java
src/test/java/org/elasticsearch/test/integration/cluster/ClusterServiceTests.java
comments:
Use ClusterService#localNode instead of checking the cluster state.

The ClusterState can hold an 'invalid' local 'DiscoveryNode' during
node startup and rare race conditions can cause NPEs if an 'invalid'
'DiscoveryNode' is serialized.

Closes #3515

time:
2013-08-15T08:58:40Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/percolator/QueriesLoaderCollector.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
comments:
Added percolator improvements:
* The _percolator type now has always to _id field enabled (index=not_analyzed, store=no)
* During loading shard initialization the query ids are fetched from field data, before ids were fetched from stored values.
* Moved internal percolator query map storage from Text to HashedBytesRef based keys.

time:
2013-08-14T22:19:47Z
class:
src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
comments:
Limit the number created threads for machines with large number of cores

For machines with lots of cores ie. >= 48 the number of threads
created by default might cause unecessary memory pressure on the system
and can even lead to OOM where the system is not able to create any
native threads anymore. This commit limits the number of available
CPUs on the system used for thread pool initialization to at most
24 cores.

Closes #3478

time:
2013-08-14T21:42:05Z
class:
src/main/java/org/elasticsearch/ExceptionsHelper.java
src/main/java/org/elasticsearch/search/SearchService.java
comments:
Errors (like StackOverflow) can cause a search context to not be released
It will eventually time out (with the default 5 minutes timeout), but we should properly handle it, and also, properly propagate the failure.
closes #3513

time:
2013-08-14T21:19:16Z
class:
src/main/java/org/elasticsearch/index/analysis/AbstractTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenizerFactory.java
src/test/java/org/elasticsearch/test/unit/index/analysis/NGramTokenizerFactoryTests.java
comments:
Improve backwards compatibility handling for NGram / EdgeNGram analysis

The '"side" : "back"' parameter is not supported anymore on
EdgeNGramTokenizer if the mapping is created with 0.90.2 / Lucene 4.3
The 'EdgeNgramTokenFilter' handles this automatically wrapping the
'EdgeNgramTokenFilter' in a 'ReverseTokenFilter' yet with tokenizers this
optimization is not possible. This commit also add a more verbose error message
how to work around this limitation.

Closes #3489

time:
2013-08-14T19:49:47Z
class:
src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
comments:
Correctly apply boosts in query string.

This applies boosts to phrase queries generated by query string queries
both in boolean and dismax mode.

time:
2013-08-14T19:49:00Z
class:
src/test/java/org/elasticsearch/test/integration/recovery/RecoveryWhileUnderLoadTests.java
comments:
Add more information to asserts and assert on the result of refresh.

time:
2013-08-14T18:21:00Z
class:
src/test/java/org/elasticsearch/test/integration/search/basic/SearchWhileCreatingIndexTests.java
comments:
Added a timeout check to searchWhileCreatingIndex with cluster state dump on failure.

time:
2013-08-14T16:21:27Z
class:
src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java
src/main/java/org/elasticsearch/script/AbstractSearchScript.java
comments:
expose simplified field methods for custom scripts
also, add respective iter methods to the script values to be used in custom scripts

time:
2013-08-14T15:05:55Z
class:
src/main/java/org/elasticsearch/cluster/action/index/NodeMappingCreatedAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
Put Mappings CountDownListener validates cluster state version of incoming change confirmations.

Closes #3508

time:
2013-08-14T14:57:42Z
class:
comments:
Upgrade Tika to 1.4.
Closes #36.

time:
2013-08-14T14:23:53Z
class:
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
Small protection against a high number of nodes in UpdateMappingTests.updateMappingConcurrently

time:
2013-08-14T14:15:53Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
Added index and type checks to MetaDataMappingService.CountDownListener

Closes #3507

time:
2013-08-14T12:21:07Z
class:
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
src/main/java/org/elasticsearch/index/query/functionscore/exp/ExponentialDecayFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/gauss/GaussDecayFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/lin/LinearDecayFunctionBuilder.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/DecayFunctionScoreTests.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/FunctionScorePluginTests.java
comments:
Fix some minor things in function score parser/builder

- remove default scale weight in builder
- make parameters object/double instead of string
- do not convert number to string and back again, parse double instead
- remove javadoc reference to test classes
- Set parameters in constructor instead of in method

time:
2013-08-14T12:21:07Z
class:
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/DecayFunctionScoreTests.java
comments:
remove check and test for more than one mapper per field

time:
2013-08-14T11:51:13Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Added scoring support to percolate api

Scoring support will allow the percolate matches to be sorted, or just assign a scores to percolate matches. Sorting by score can be very useful when millions of matching percolate queries are being returned.

The scoring support hooks in into the percolate query option and adds two new boolean options:
* `sort` - Whether to sort the matches based on the score. This will also include the score for each match. The `size` option is a required option when sorting percolate matches is enabled.
* `score` - Whether to compute the score and include it with each match. This will not sort the matches.

For both new options the `query` option needs to be specified, which is used to produce the scores. The `query` option is normally used to control which percolate queries are evaluated. In order to give meaning to these scores, the recently added `function_score` query in #3423 can be used to wrap the percolate query, this way the scores have meaning.

Closes #3506

time:
2013-08-14T08:38:02Z
class:
src/test/java/org/elasticsearch/test/integration/search/functionscore/DecayFunctionScoreTests.java
comments:
remove sysout

time:
2013-08-13T22:06:40Z
class:
src/main/java/org/elasticsearch/index/fielddata/DoubleValues.java
src/main/java/org/elasticsearch/index/fielddata/LongValues.java
comments:
empty double/long values should return 0
to conform with all other implementations (non empty), they getValue when there is no value associated with a doc should be 0

time:
2013-08-13T22:02:29Z
class:
src/test/java/org/elasticsearch/test/integration/client/transport/DiscoveryTransportClientTests.java
src/test/java/org/elasticsearch/test/integration/client/transport/TransportClientDocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/client/transport/TransportClientSniffDocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java
comments:
no need doc action test to check count in before class
 - also, since we randomize client transports, no need for specific classes to test for it, we test different clients across all our tests

time:
2013-08-13T18:38:57Z
class:
src/test/java/org/elasticsearch/test/unit/index/fielddata/DuellFieldDataTests.java
comments:
rename class to conform with Tests suffix

time:
2013-08-13T16:52:35Z
class:
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/NumericFieldDataTests.java
comments:
empty numeric field data should retain the correct num docs
the fact that there are no values in the numeric field data, doesn't mean there are no docs, behavior should be to the bytes variant

time:
2013-08-13T15:46:57Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/FunctionScoreQuery.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/FunctionScorePluginTests.java
comments:
Fix assert to check the deviation rather than the absolute difference.

Deviation should be less or equal to 0.01 ~ 1% after the cast.

time:
2013-08-13T15:46:48Z
class:
src/test/java/org/elasticsearch/benchmark/checksum/ChecksumBenchmark.java
src/test/java/org/elasticsearch/test/stress/indexing/ConcurrentIndexingVersioningStressTest.java
src/test/java/org/elasticsearch/test/unit/common/settings/ImmutableSettingsTests.java
src/test/java/org/elasticsearch/test/unit/common/settings/bar/BarTestClass.java
src/test/java/org/elasticsearch/test/unit/common/settings/foo/FooTestClass.java
comments:
Fix test include pattern to include *Test.class

We missed *Test.class which is not our convention but we could miss
some tests. We should better include the *Test.class tests as well.

time:
2013-08-13T15:28:19Z
class:
src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequestBuilder.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
comments:
Raise default DeleteIndex Timeout

Currently the timeout for an delete index operation is set to 10 seconds.
Yet, if a full flush is running while we delete and index this can
easily exceed 10 seconds. The timeout is not dramatic ie. the index
will be deleted eventually but the client request is not acked which
can cause confusion. We should raise it to prevent unnecessary confusion
especially in client tests where this can happen if the machine is pretty busy.

The new timeout is set to 60 seconds.

Closes #3498

time:
2013-08-13T15:23:38Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/FunctionScoreQuery.java
src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/CustomDistanceScoreBuilder.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/CustomDistanceScoreParser.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/CustomDistanceScorePlugin.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/DecayFunctionScoreTests.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/FunctionScorePluginTests.java
comments:
function score test cleanup
- also, properly report on the failed assertion in toFloat
- use function score in the explain compared to custom score
- use the Tests suffix convention

time:
2013-08-13T15:16:11Z
class:
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
UpdateMappingTests -  updateDefaultMappingSettings now creates the index with a mapping.

time:
2013-08-13T15:09:02Z
class:
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/index/mapper/internal/SourceFieldMapper.java
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
Allow to update the _source mapping exclude/include dynamically when we merge mappings.

Closes #3491

time:
2013-08-13T15:06:04Z
class:
src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
comments:
Make RestSearchAction#parseSearchXXX(RestRequest) public
When building a plugin with a new search endpoint, you need to parse the request as a searchRequest.

Methods exist in RestSearchAction class but are private.

We will modify them to be public static. This applies to:

* `RestSearchAction#parseSearchRequest(RestRequest)`
* `RestSearchAction#parseSearchSource(RestRequest)`

 Closes #3499.

time:
2013-08-13T14:41:16Z
class:
src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java
comments:
lazily create the no shard available exception

time:
2013-08-13T12:32:51Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
comments:
Added some comments regarding the acknowledgement logic in MetaDataMappingService.putMapping

Made left over cluster state debug log entry less verbose.

time:
2013-08-13T12:26:19Z
class:
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
comments:
Removed todo

time:
2013-08-13T10:15:05Z
class:
src/main/java/org/elasticsearch/index/analysis/NamedAnalyzer.java
comments:
remove the assert on AnalyzerWrapper
see https://issues.apache.org/jira/browse/LUCENE-5170
Thanks Shay,
unfortunately LUCENE-5170 is a can of worms, because ReuseStrategy does not follow the "strategy pattern": It contains state. So you cannot reuse the same strategy in the wrapper analyzer... To fix this we need a backwards break and a revisit of the API.
This is all horrible.


time:
2013-08-12T22:19:50Z
class:
src/main/java/org/elasticsearch/index/gateway/none/NoneIndexShardGateway.java
comments:
better log message for none gateway, also make it debug level

time:
2013-08-12T19:25:40Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
src/main/java/org/elasticsearch/transport/TransportService.java
comments:
Also catch EsRejectedExecutionException next to
RejectedExcecutionException

time:
2013-08-12T16:32:28Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateAction.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java
src/main/java/org/elasticsearch/action/percolate/TransportMultiPercolateAction.java
src/main/java/org/elasticsearch/client/Client.java
src/main/java/org/elasticsearch/client/support/AbstractClient.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/percolate/RestMultiPercolateAction.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/test/java/org/elasticsearch/test/integration/percolator/MultiPercolatorTests.java
src/test/java/org/elasticsearch/test/unit/action/percolate/MultiPercolatorRequestTests.java
comments:
Added multi percolate api

The multi percolate allows the bundle multiple percolate requests into one request. This api works similar to the multi search api. The request body format is line based. Each percolate request item takes two lines, the first line is the header and the second line is the body.

The header can contain any parameter that normally would be set via the request path or query string parameters. There are several percolate actions, because there are multiple types of percolate requests:
* `percolate` - Action for defining a regular percolate request.
* `count_percolate` - Action for defining a count percolate request.
* `percolate_existing_doc` - Action for defining a percolate existing document request.
* `count_percolate_existing_doc` - Action for defining a count percolate existing document request.

Each action has its own set of parameters that need to be specified in the percolate action.
Format:
```
{"[header_type]" : {[options...]}
{[body]}
```

Depending on the percolate action different parameters can be specified. For example the percolate and percolate existing document actions support different parameters.

The following endpoints are supported:
```
POST localhost:9200/[index]/[type]/_mpercolate
POST localhost:9200/[index]/_mpercolate
POST localhost:9200/_mpercolate
```

The `index` and `type` defined in the url path are the default index and type.

Closes #3488

time:
2013-08-12T15:46:44Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
comments:
Catch Throwable rather than Exception if latches are present.

time:
2013-08-12T15:46:44Z
class:
src/main/java/org/apache/lucene/search/vectorhighlight/XFieldTermStack.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
comments:
Limit the number of extracted token instance per query token.

FVH deploys some recursive logic to extract terms from documents
that need to highlighted. For documents that have terms with super
large term frequency like a document that repeats a terms very
very often this can produce some very large stacks when extracting
the terms. Taken to an extreme this causes stack overflow errors
when this grow beyond a term frequency >= 6000.

The ultimate solution is a iterative implementation of the extract
logic but until then we should protect users from these massive
term extractions which might be not very useful in the first place.

Closes #3486

time:
2013-08-12T15:00:47Z
class:
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetMappingsAction.java
src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
Postponed acknowledging put mapping requests to after master has finished processed them

Also - TransportMasterNodeOperationAction was potentially use stale cluster state

Closes #3487

time:
2013-08-12T13:30:09Z
class:
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequest.java
src/main/java/org/elasticsearch/rest/action/admin/indices/cache/clear/RestClearIndicesCacheAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/flush/RestFlushAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/optimize/RestOptimizeAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/refresh/RestRefreshAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/segments/RestIndicesSegmentsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/status/RestIndicesStatusAction.java
src/main/java/org/elasticsearch/rest/action/count/RestCountAction.java
src/main/java/org/elasticsearch/rest/action/suggest/RestSuggestAction.java
comments:
Changed default operation_threading from single_thread to thread_per_shard.
Closes #3483

time:
2013-08-12T13:17:48Z
class:
src/test/java/org/elasticsearch/test/integration/cluster/MinimumMasterNodesTests.java
comments:
Use awaitBusy rather than hand crafted version in tests.

time:
2013-08-12T13:07:07Z
class:
src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java
src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java
src/main/java/org/elasticsearch/search/suggest/completion/Completion090PostingsFormat.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestParser.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionBuilder.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionContext.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionFuzzyBuilder.java
src/test/java/org/elasticsearch/test/integration/search/suggest/CompletionPostingsFormatTest.java
src/test/java/org/elasticsearch/test/integration/search/suggest/CompletionSuggestSearchTests.java
comments:
Support fuzzy queries in CompletionSuggest

Added the FuzzySuggester in order to support completion queries

The following options have been added for the fuxxy suggester

* edit_distance: Maximum edit distance
* transpositions: Sets if transpositions should be counted as one or two changes
* min_prefix_len: Minimum length of the input before fuzzy suggestions are returned
* non_prefix_len: Minimum length of the input, which is not checked for fuzzy alternatives

Closes #3465

time:
2013-08-12T13:03:42Z
class:
comments:
Fix debian init script to not depend on new start-stop-daemon

By making use of the lsb provided functions, one does not depend on the start-stop daemon version to test if elasticsearch is running.
This ensures, that the init script works on debian wheezy, squeeze, current ubuntu and LTS versions.

Closes #3452

time:
2013-08-12T12:48:20Z
class:
src/main/java/org/elasticsearch/action/admin/indices/template/get/GetIndexTemplatesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/TransportGetIndexTemplatesAction.java
comments:
Use TransportMasterNodeOperationAction in TransportGetIndexTemplatesAction

No need to use ClusterInfoRequest, as we do not need to access any indices.

time:
2013-08-12T12:45:51Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/test/java/org/elasticsearch/benchmark/percolator/PercolatorStressBenchmark.java
comments:
Set default `operation_threading` to `thread_per_shard` and exposed it as an option in the rest api.

time:
2013-08-12T12:32:04Z
class:
comments:
Remove accidentially committed default values

`-Dtests.maxFailures` and `-Dtests.failfast` should not be enabled
by default.

time:
2013-08-12T11:56:25Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/GetIndexTemplatesAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/GetIndexTemplatesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/GetIndexTemplatesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/GetIndexTemplatesResponse.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/TransportGetIndexTemplatesAction.java
src/main/java/org/elasticsearch/client/IndicesAdminClient.java
src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/get/RestGetIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/head/RestHeadIndexTemplateAction.java
src/test/java/org/elasticsearch/test/integration/indices/template/SimpleIndexTemplateTests.java
comments:
Added IndicesAdminClient.getIndexTemplates()

In addition to creating and removing a template, one can now receive index templates as well.
Simple regexes like template* are supported.

Closes #3439

time:
2013-08-12T11:18:56Z
class:
src/test/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilterTests.java
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java
src/test/java/org/elasticsearch/test/integration/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/integration/client/transport/TransportClientDocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/client/transport/TransportClientSniffDocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/cluster/shards/ClusterSearchShardsTests.java
src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/gateway/fs/IndexGatewayTests.java
src/test/java/org/elasticsearch/test/integration/gateway/none/RecoverAfterNodesTests.java
src/test/java/org/elasticsearch/test/integration/indices/wamer/LocalGatewayIndicesWarmerTests.java
src/test/java/org/elasticsearch/test/unit/index/engine/robin/RobinEngineTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/AbstractFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/transport/AbstractSimpleTransportTests.java
comments:
Added support for `tests.failfast` and `tests.maxiters`

This commit adds support for failing fast when running a test
case with `-Dtests.iters=N` and uses some goodness from LuceneTestCase
in a new base `AbstractRandomizedTest`. This class checks among other
things if a tests doesn't call `super.setup` / `super.tearDown` when it
should do and checks if a large static resources are not cleaned up
after the tests ie. a running node.

time:
2013-08-12T10:05:22Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java
src/test/java/org/elasticsearch/test/integration/percolator/DeletePercolatorTypeTests.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Test deleting the percolate type differently. Instead of checking the types exist api, register a DocumentTypeListener that notifies when percolate queries have been cleared.

time:
2013-08-11T19:21:02Z
class:
src/main/java/org/elasticsearch/search/facet/FacetExecutor.java
src/test/java/org/elasticsearch/test/integration/search/facet/SimpleFacetsTests.java
comments:
NPE for POST mode facets if facet_filter gives no document.
Closes #3479.

time:
2013-08-10T16:43:13Z
class:
comments:
Move version table to markdown format

time:
2013-08-10T16:39:25Z
class:
comments:
Move version table to markdown format

time:
2013-08-10T08:21:30Z
class:
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
comments:
Failure to execute search request with empty top level filter
closes #3477

time:
2013-08-10T05:57:58Z
class:
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
Disable UpdateMappingTets#updateDefaultMappingSettings

Test has been too flaky over nightly builds. Disabling it
with AwaitFix.

time:
2013-08-09T19:39:47Z
class:
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
Separated index creation from mapping creation pending bug fix concerning concurrent not-acked mapping requests

time:
2013-08-09T18:15:51Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
when changing the mapping of the _default_ mapping, do not apply the old _default_ mapping to the new one and also do not validate the new version with a merge but parse is as a new type.

Closes #3474, Closes #3476

time:
2013-08-09T17:57:05Z
class:
comments:
prepare for next development iteration

time:
2013-08-09T17:30:06Z
class:
comments:
prepare release elasticsearch-cloud-aws-1.14.0

time:
2013-08-09T17:29:05Z
class:
src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryITest.java
comments:
Revert change made with #32.
Fix missing lib in assembly. relative to #29.
Closes #33.

time:
2013-08-09T13:06:09Z
class:
src/main/java/org/elasticsearch/action/termvector/TermVectorResponse.java
src/main/java/org/elasticsearch/action/termvector/TransportSingleShardTermVectorAction.java
src/test/java/org/elasticsearch/test/integration/termvectors/GetTermVectorTests.java
src/test/java/org/elasticsearch/test/integration/termvectors/GetTermVectorTestsCheckDocFreq.java
comments:
termvectors: fix null pointer exception if field has no term vectors

Retrieving termvectors for a document that does not have the requested field
caused a null pointer exception. Same for documents if the field has no term vectors,
for example, because the field only contains "?".
Now, an empty response is returned.

Closes #3471

time:
2013-08-09T12:15:26Z
class:
src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java
comments:
Added random sort test for dense and sparse fields.

This test triggers a MultiDoc / MultiOrds in-memory representation
even if the field is not multivalued

Relates to #3470

time:
2013-08-09T08:08:33Z
class:
comments:
prepare for next development iteration

time:
2013-08-09T08:00:44Z
class:
comments:
prepare release elasticsearch-cloud-gce-1.1.0

time:
2013-08-09T07:58:38Z
class:
src/main/java/org/elasticsearch/discovery/gce/GceDiscovery.java
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
comments:
Update to Elasticsearch 0.90.3.
Closes #5.

time:
2013-08-09T07:39:14Z
class:
comments:
Fix path for tests

time:
2013-08-09T07:37:18Z
class:
comments:
prepare for next development iteration

time:
2013-08-09T07:32:24Z
class:
comments:
prepare release elasticsearch-cloud-aws-1.13.0

time:
2013-08-09T07:30:43Z
class:
comments:
Update to AWS Java SDK 1.5.3.
Closes #32.

time:
2013-08-09T07:27:15Z
class:
src/main/java/org/elasticsearch/discovery/ec2/AwsEc2UnicastHostsProvider.java
comments:
Catch AmazonClientExceptions to prevent connection loss
If the AWS client throws an exception (e.g: because of a DNS failure) it will end up killing the rejoin thread and stop retrying which can lead to a node getting stuck unable to rejoin the cluster.

Closes #30.

time:
2013-08-09T07:23:12Z
class:
comments:
Old common-codecs version in use
Closes #29.

time:
2013-08-09T07:17:01Z
class:
src/main/java/org/elasticsearch/cloud/aws/network/Ec2NameResolver.java
src/main/java/org/elasticsearch/cloud/aws/node/Ec2CustomNodeAttributes.java
src/main/java/org/elasticsearch/discovery/ec2/AwsEc2UnicastHostsProvider.java
src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java
comments:
Update to Elasticsearch 0.90.3
Closes #31.

time:
2013-08-09T06:03:08Z
class:
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
comments:
Return ordinals from MultiOrdinals.MultiDocs

MultiOrdinals.MultiDocs returned 'null' ordinals which caused
a NPE if the field was single valued and would allow a significantly
smaller in memory representation than single packed int ordinals.

Closes #3470

time:
2013-08-08T15:48:56Z
class:
src/main/java/org/elasticsearch/plugins/PluginManager.java
comments:
Use nonzero status code to signal abnormal termination

We currently return with status code 0 when an IOException occurs.
The plugin manager should in any case return a nonzero status if
the operation was not successful. Now the PluginManager uses the
following reponse codes based on 'sysexists.sh':
 * '0' on success
 * '64' command line usage error
 * '70' internal software error
 * '74' input/output

Closes #3463

time:
2013-08-08T15:43:11Z
class:
src/test/java/org/elasticsearch/test/integration/ttl/SimpleTTLTests.java
comments:
ttl can be as lower than 0 (purge interval)

time:
2013-08-08T15:42:12Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/TTLPercolatorTests.java
comments:
In case ttl has passed, then just check the delete count

time:
2013-08-08T15:28:59Z
class:
src/test/java/org/elasticsearch/test/integration/search/suggest/CompletionSuggestSearchTests.java
comments:
Create mapping ahead of time and don't rely on index request in test

time:
2013-08-08T13:58:02Z
class:
comments:
Documentation: Version table is incorrect
Closes #5.

time:
2013-08-08T13:54:09Z
class:
comments:
prepare for next development iteration

time:
2013-08-08T13:49:35Z
class:
comments:
prepare release elasticsearch-analysis-kuromoji-1.5.0

time:
2013-08-08T13:49:26Z
class:
src/main/java/org/elasticsearch/index/analysis/KuromojiPartOfSpeechFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/KuromojiIndicesAnalysis.java
comments:
Update to Elasticsearch 0.90.3 / Lucene 4.4.0
Closes #6.

time:
2013-08-08T13:40:29Z
class:
comments:
prepare for next development iteration

time:
2013-08-08T13:38:33Z
class:
comments:
prepare release elasticsearch-analysis-phonetic-1.6.0

time:
2013-08-08T13:37:29Z
class:
comments:
Update to Elasticsearch 0.90.3 / Lucene 4.4.0
Closes #12.

time:
2013-08-08T13:35:01Z
class:
comments:
prepare for next development iteration

time:
2013-08-08T13:27:56Z
class:
comments:
prepare release elasticsearch-analysis-smartcn-1.6.0

time:
2013-08-08T13:26:08Z
class:
comments:
Update to Elasticsearch 0.90.3 / Lucene 4.4.0
Closes #4.

time:
2013-08-08T13:23:57Z
class:
comments:
prepare for next development iteration

time:
2013-08-08T13:14:58Z
class:
comments:
prepare release elasticsearch-analysis-icu-1.11.0

time:
2013-08-08T13:13:34Z
class:
comments:
Update to Elasticsearch 0.90.3 / Lucene 4.4.0
Closes #11.

time:
2013-08-08T13:04:41Z
class:
comments:
prepare for next development iteration

time:
2013-08-08T13:02:13Z
class:
comments:
prepare release elasticsearch-analysis-stempel-1.7.0

time:
2013-08-08T13:00:00Z
class:
comments:
Update to Elasticsearch 0.90.3 / Lucene 4.4.0
Closes #6.

time:
2013-08-08T11:36:05Z
class:
src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java
src/test/java/org/elasticsearch/test/unit/index/engine/robin/RobinEngineTests.java
src/test/java/org/elasticsearch/test/unit/index/engine/robin/SimpleRobinEngineTests.java
comments:
Expose 'index.compound_on_flush' via engine settings

Lucene 4.4 shipped with a fundamental change in how the decision
on when to write compound files is made. During segment flush the
compound files are written by default which solely relies on a flag
in the IndexWriterConfig. The merge policy has been factored out to
only make decisions on merges and not on IW flushes. The default now
is always writing CFS on flush to reduce resource usage like open files
etc. if segments are flushed regularly. While providing a senseable
default certain users / usecases might need to change this setting if
re-packing flushed segments into CFS is not desired.

Closes #3461

time:
2013-08-08T11:10:13Z
class:
src/main/java/org/elasticsearch/transport/TransportService.java
comments:
Catch RejectedExecutionException on node shutdown

time:
2013-08-08T10:39:49Z
class:
src/test/java/org/elasticsearch/test/integration/indexlifecycle/IndexLifecycleActionTests.java
comments:
Use DiscoveryModule instead of ClusterService to obtain local node id

The ClusterService might not see the latest cluster state and therefore
might not contain the local node id. Discovery will always see the local
node id since it's set on startup.

time:
2013-08-08T09:33:06Z
class:
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
comments:
Simplified checks

time:
2013-08-07T21:28:07Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
comments:
make sure we add the _uid as the first field in a doc
this will improve early termination loading times, but requires potential improvements in Lucene in terms of decompression

time:
2013-08-07T15:56:55Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
comments:
Assert on index delete in tests to ensure all indices are wiped even on disk

time:
2013-08-07T12:17:27Z
class:
src/test/java/org/elasticsearch/test/unit/index/mapper/source/DefaultSourceMappingTests.java
comments:
Remove random empty string from test since it triggers a different exception

time:
2013-08-07T12:16:22Z
class:
src/main/java/org/elasticsearch/action/search/ShardSearchFailure.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
comments:
improve effort into figuring out the shard associated with a search failure

time:
2013-08-07T12:05:40Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
comments:
Added improvements for terms filter on _parent field similar to what has been for term filter.

Relates to #3454

time:
2013-08-07T12:01:32Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
src/test/java/org/elasticsearch/test/unit/index/mapper/source/DefaultSourceMappingTests.java
comments:
Added tests for malformed mappings with no root object

This commit also makes the error message more consistent with
other exception messages in the DocumentMapperParser.

time:
2013-08-07T11:41:49Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
comments:
Improved error message when the mapping document is malformed

time:
2013-08-07T11:25:09Z
class:
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java
src/main/java/org/elasticsearch/index/query/BoolQueryParser.java
src/test/java/org/elasticsearch/test/integration/mlt/MoreLikeThisActionTests.java
comments:
Return nothing instead of everything in MLT if no field is supported.

Today due the optimizations in the boolean query builder we adjust
a pure negative query with a 'match_all'. This is not the desired
behavior in the MLT API if all the fields in a document are unsupported.
If that happens today we return all documents but the one MLT is
executed on.

Closes #3453

time:
2013-08-07T11:20:21Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
comments:
Improved filtering by _parent field

In the _parent field the type and id of the parent are stored as type#id, because of this a term filter on the _parent field with the parent id is always resolved to a terms filter with a type / id combination for each type in the mapping.

This can be improved by automatically use the most optimized filter (either term or terms) based on the number of parent types in the mapping.

Also added support to use the parent type in the term filter for the _parent field. Like this:
```json
{
   "term" : {
        "_parent" : "parent_type#1"
    }
}
```
This will then always automatically use the term filter.

Closes #3454

time:
2013-08-07T08:46:25Z
class:
src/main/java/org/elasticsearch/common/lucene/search/TermFilter.java
comments:
added Lucene upgrade reminder

time:
2013-08-07T08:27:20Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Added `size` option to percolate api

The `size` option in the percolate api will limit the number of matches being returned:
 ```bash
 curl -XGET 'localhost:9200/my-index/my-type/_percolate' -d '{
    "size" : 10,
    "doc" : {...}
 }'
 ```
 In the above request no more than 10 matches will be returned. The `count` field will still return the total number of matches the document matched with.

 The `size` option is not applicable for the count percolate api.

 Closes #3440

time:
2013-08-07T08:19:11Z
class:
src/main/java/org/elasticsearch/search/suggest/Suggest.java
comments:
Add binary protocol backwards compatibility for suggest highlights

This change requires different request processing on the binary protocol
level since it has been we provide compatibilty across minor version.
Yet, the suggest feature is still experimental but we try best effort
to make upgrades as seamless as possible.

time:
2013-08-07T08:02:02Z
class:
comments:
prepare for next development iteration

time:
2013-08-07T07:52:29Z
class:
comments:
prepare release elasticsearch-mapper-attachments-1.8.0

time:
2013-08-07T07:47:12Z
class:
src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java
comments:
Mapper 1.7.0 does not work with elasticsearch 0.90.3
FastByteArrayInputStream has been removed in 0.90.3.
Closes #34.

time:
2013-08-06T21:10:33Z
class:
src/test/java/org/elasticsearch/test/integration/document/BulkTests.java
comments:
added explicit creation of parent type in create index

time:
2013-08-06T18:57:39Z
class:
src/main/java/org/elasticsearch/search/suggest/Suggest.java
src/main/java/org/elasticsearch/search/suggest/phrase/CandidateGenerator.java
src/main/java/org/elasticsearch/search/suggest/phrase/Correction.java
src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGenerator.java
src/main/java/org/elasticsearch/search/suggest/phrase/MultiCandidateGeneratorWrapper.java
src/main/java/org/elasticsearch/search/suggest/phrase/NoisyChannelSpellChecker.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestParser.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggester.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionContext.java
src/test/java/org/elasticsearch/test/integration/search/suggest/SuggestSearchTests.java
src/test/java/org/elasticsearch/test/unit/search/suggest/phrase/NoisyChannelSpellCheckerTests.java
comments:
Add highlighting support for suggester.

This commit adds general highlighting support to the suggest feature.
The only implementation that implements this functionality at this
point is the phrase suggester.
The API supports a 'pre_tag' and a 'post_tag' that are used
to wrap suggested parts of the given user input changed by the
suggester.

Closes #3442

time:
2013-08-06T16:39:36Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/BoostScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/FunctionScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
comments:
add assertion for cast double->float

ScoreFunction scoring might result in under or overflow, for example if a user
decides to use the timestamp as a boost in the script scorer. Therefore, check
if cast causes a huge precision loss. Note that this does not always detect
casting issues. For example in
ScriptFunction.score()
the function
SearchScript.runAsDouble()
is called. AbstractFloatSearchScript implements it as follows:
@Override     public double runAsDouble() {         return runAsFloat();     }
In this case the cast happens before the assertion and therfore precision
lossor over/underflows cannot be detected by the assertion.

time:
2013-08-06T16:37:55Z
class:
src/main/java/org/elasticsearch/index/fielddata/GeoPointValues.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunction.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreModule.java
src/main/java/org/elasticsearch/index/query/functionscore/exp/ExponentialDecayFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/exp/ExponentialDecayFunctionParser.java
src/main/java/org/elasticsearch/index/query/functionscore/gauss/GaussDecayFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/gauss/GaussDecayFunctionParser.java
src/main/java/org/elasticsearch/index/query/functionscore/lin/LinearDecayFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/lin/LinearDecayFunctionParser.java
src/main/java/org/elasticsearch/index/query/functionscore/script/ScriptScoreFunctionParser.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/CustomDistanceScoreBuilder.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/CustomDistanceScoreParser.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/CustomDistanceScorePlugin.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/DecayFunctionScoreTest.java
src/test/java/org/elasticsearch/test/integration/search/functionscore/FunctionScorePluginTest.java
comments:
Distance scoring
================

It might sometimes be desirable to have a tool available that allows to multiply the original score for a document with a function that decays depending on the distance of a numeric field value of the document from a user given reference.

These functions could be computed for several numeric fields and eventually be combined as a sum or a product and multiplied on the score of the original query.

This commit adds new score functions similar to boost factor and custom script scoring, that can be used togeter with the <code>function_score</code> keyword in a query.

To use distance scoring, the user has to define

 1. a reference and
 2. a scale

for each field the function should be applied on. A reference is needed to define a distance for the document and a scale to define the rate of decay.

Example use case
----------------

Suppose you are searching for a hotel in a certain town. Your budget is limited. Also, you would like the hotel to be close to the town center, so the farther the hotel is from the desired location the less likely you are to check in.
You would like the query results that match your criterion (for example, "hotel, Berlin, non-smoker") to be scored with respect to distance to the town center and also the price.

Intuitively, you would like to define the town center as the origin and maybe you are willing to walk 2km to the town center from the hotel.
In this case your *reference* for the location field is the town center and the *scale* is ~2km.

If your budget is low, you would probably prefer something cheap above something expensive.
For the price field, the *reference* would be 0 Euros and the *scale* depends on how much you are willing to pay, for example 20 Euros.

Usage
----------------

The distance score functions can be applied in two ways:

In the most simple case, only one numeric field is to be evaluated. To do so, call <code>function_score</code>, with the appropriate function. In the above example, this might be:

    curl 'localhost:9200/hotels/_search/' -d '{
    "query": {
        "function_score": {
            "gauss": {
                "location": {
                    "reference": [
                        52.516272,
                        13.377722
                    ],
                    "scale": "2km"
                }
            },
            "query": {
                "bool": {
                    "must": {
                        "city": "Berlin"
                    }
                }
            }
        }
    }
    }'

which would then search for hotels in berlin with a balcony and weight them depending on how far they are from the Brandenburg Gate.

If you have more that one numeric field, you can combine them by defining a series of functions and filters, like, for example, this:

    curl 'localhost:9200/hotels/_search/' -d '{
    "query": {
        "function_score": {
            "functions": [
                {
                    "filter": {
                        "match_all": {}
                    },
                    "gauss": {
                        "location": {
                            "reference": "11,12",
                            "scale": "2km"
                        }
                    }
                },
                {
                    "filter": {
                        "match_all": {}
                    },
                    "linear": {
                        "price": {
                            "reference": "0",
                            "scale": "20"
                        }
                    }
                }
            ],
            "query": {
                "bool": {
                    "must": {
                        "city": "Berlin"
                    }
                }
            },
            "score_mode": "multiply"
        }
    }
    }'

This would effectively compute the decay function for "location" and "price" and multiply them onto the score. See <code> function_score</code> for the different options for combining functions.

Supported fields
----------------
Only single valued numeric fields, including time and geo locations, are be supported.

What is a field is missing?
----------------

Is the numeric field is missing in the document, that field will not be taken into account at all for this document. The function value for this field is set to 1 for this document. Suppose you have two hotels both of which are in Berlin and cost the same. If one of the documents does not have a "location", this document would get a higher score than the document having the "location" field set.

To avoid this, you could, for example, use the exists or the missing filter and add a custom boost factor to the functions.

      …
     "functions": [
        {
            "filter": {
                "match_all": {}
            },
            "gauss": {
                "location": {
                    "reference": "11, 12",
                    "scale": "2km"
                }
            }
        },
        {
            "filter": {
                "match_all": {}
            },
            "linear": {
                "price": {
                    "reference": "0",
                    "scale": "20"
                }
            }
        },
        {
            "boost_factor": 0.001,
            "filter": {
                "bool": {
                    "must_not": {
                        "missing": {
                            "existence": true,
                            "field": "coordinates",
                            "null_value": true
                        }
                    }
                }
            }
        }
    ],
    ...

Closes #3423

time:
2013-08-06T16:37:34Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/BoostScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/FunctionScoreQuery.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
src/main/java/org/elasticsearch/index/query/CustomBoostFactorQueryBuilder.java
src/main/java/org/elasticsearch/index/query/CustomBoostFactorQueryParser.java
src/main/java/org/elasticsearch/index/query/CustomFiltersScoreQueryBuilder.java
src/main/java/org/elasticsearch/index/query/CustomFiltersScoreQueryParser.java
src/main/java/org/elasticsearch/index/query/CustomScoreQueryBuilder.java
src/main/java/org/elasticsearch/index/query/CustomScoreQueryParser.java
src/main/java/org/elasticsearch/index/query/QueryBuilders.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreModule.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryParser.java
src/main/java/org/elasticsearch/index/query/functionscore/ScoreFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/ScoreFunctionParser.java
src/main/java/org/elasticsearch/index/query/functionscore/ScoreFunctionParserMapper.java
src/main/java/org/elasticsearch/index/query/functionscore/factor/FactorBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/factor/FactorParser.java
src/main/java/org/elasticsearch/index/query/functionscore/script/ScriptScoreFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/script/ScriptScoreFunctionParser.java
src/main/java/org/elasticsearch/indices/query/IndicesQueriesModule.java
src/main/java/org/elasticsearch/search/SearchModule.java
src/test/java/org/elasticsearch/test/integration/search/basic/TransportTwoNodesSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/rescore/QueryRescorerTests.java
src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java
src/test/java/org/elasticsearch/test/unit/index/aliases/IndexAliasesServiceTests.java
src/test/java/org/elasticsearch/test/unit/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/test/unit/index/query/guice/IndexQueryParserModuleTests.java
src/test/java/org/elasticsearch/test/unit/index/query/plugin/IndexQueryParserPlugin2Tests.java
src/test/java/org/elasticsearch/test/unit/index/query/plugin/IndexQueryParserPluginTests.java
comments:
Unify custom scores
===================

The custom boost factor, custom script boost and the filters function query all do the same thing: They take a query and for each found document compute a new score based on the query score and some script, come custom boost factor or a combination of these two. However, the json format for these three functionalities is very different. This makes it hard to add new functions.

This commit introduces one keyword <code>function_score</code> for all three functions.

The new format can be used to either compute a new score with one function:

	"function_score": {
        "(query|filter)": {},
        "boost": "boost for the whole query",
        "function": {}
    }

or allow to combine the newly computed scores

    "function_score": {
        "(query|filter)": {},
        "boost": "boost for the whole query",
        "functions": [
            {
                "filter": {},
                "function": {}
            },
            {
                "function": {}
            }
        ],
        "score_mode": "(mult|max|...)"
    }

<code>function</code> here can be either

	"script_score": {
    	"lang": "lang",
    	"params": {
        	"param1": "value1",
        	"param2": "value2"
   		 },
    	"script": "some script"
	}

or

	"boost_factor" : number

New custom functions can be added via the function score module.

Changes
---------

The custom boost factor query

	"custom_boost_factor" : {
    	"query" : {
        	....
    	},
    	"boost_factor" : 5.2
	}

becomes

	"function_score" : {
    	"query" : {
        	....
    	},
    	"boost_factor" : 5.2
	}

The custom script score

	"custom_score" : {
    	"query" : {
        	....
	    },
    	"params" : {
        	"param1" : 2,
 	       	"param2" : 3.1
    	},
	    "script" : "_score * doc['my_numeric_field'].value / pow(param1, param2)"
	}

becomes

	"custom_score" : {
    	"query" : {
        	....
	    },
	    "script_score" : {

    		"params" : {
        		"param1" : 2,
 	       		"param2" : 3.1
    		},
	    	"script" : "_score * doc['my_numeric_field'].value / pow(param1, param2)"
	    }
	}

and the custom filters score query

    "custom_filters_score" : {
        "query" : {
            "match_all" : {}
       	 },
        "filters" : [
            {
                "filter" : { "range" : { "age" : {"from" : 0, "to" : 10} } },
                "boost" : "3"
            },
            {
                "filter" : { "range" : { "age" : {"from" : 10, "to" : 20} } },
                "script" : "_score * doc['my_numeric_field'].value / pow(param1, param2)"
            }
        ],
        "score_mode" : "first",
        "params" : {
        	"param1" : 2,
 	       	"param2" : 3.1
    	}
    	"score_mode" : "first"
    }

becomes:

    "function_score" : {
        "query" : {
            "match_all" : {}
       	},
        "functions" : [
            {
                "filter" : { "range" : { "age" : {"from" : 0, "to" : 10} } },
                "boost" : "3"
            },
            {
                "filter" : { "range" : { "age" : {"from" : 10, "to" : 20} } },
                "script_score" : {
                	"script" : "_score * doc['my_numeric_field'].value / pow(param1, param2)",
                	"params" : {
        				"param1" : 2,
 	       				"param2" : 3.1
    				}

            	}
            }
        ],
        "score_mode" : "first",
    }

Partially closes issue #3423

time:
2013-08-06T14:24:29Z
class:
src/test/java/org/elasticsearch/test/integration/document/BulkTests.java
comments:
Improved test, printed out potential shard failures

time:
2013-08-06T14:19:53Z
class:
comments:
RPM Init script bugfix, which might prevent startup

Removing dangerous set calls, which might not set back the current state, but something invalid which leads to stop the script when proceeding

time:
2013-08-06T14:08:47Z
class:
src/main/java/org/elasticsearch/action/admin/indices/segments/IndicesSegmentResponse.java
src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusResponse.java
src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java
src/main/java/org/elasticsearch/index/cache/filter/FilterCacheStats.java
src/main/java/org/elasticsearch/index/cache/id/IdCacheStats.java
src/main/java/org/elasticsearch/index/fielddata/FieldDataStats.java
src/main/java/org/elasticsearch/index/flush/FlushStats.java
src/main/java/org/elasticsearch/index/get/GetStats.java
src/main/java/org/elasticsearch/index/indexing/IndexingStats.java
src/main/java/org/elasticsearch/index/merge/MergeStats.java
src/main/java/org/elasticsearch/index/percolator/stats/PercolateStats.java
src/main/java/org/elasticsearch/index/refresh/RefreshStats.java
src/main/java/org/elasticsearch/index/search/stats/SearchStats.java
src/main/java/org/elasticsearch/index/store/StoreStats.java
src/main/java/org/elasticsearch/index/warmer/WarmerStats.java
src/main/java/org/elasticsearch/monitor/fs/FsStats.java
src/main/java/org/elasticsearch/monitor/jvm/JvmInfo.java
src/main/java/org/elasticsearch/monitor/jvm/JvmStats.java
src/main/java/org/elasticsearch/monitor/os/OsInfo.java
src/main/java/org/elasticsearch/monitor/os/OsStats.java
src/main/java/org/elasticsearch/monitor/process/ProcessStats.java
src/main/java/org/elasticsearch/rest/action/support/RestXContentBuilder.java
src/main/java/org/elasticsearch/transport/TransportStats.java
comments:
Added support for readable_format parameter when printing out time and size values

The following are the API affected by this change and support now the readable_format flag (default false when not specified):
- indices segments
- indices stats
- indices status
- cluster nodes stats
- cluster nodes info

Closes #3432

time:
2013-08-06T13:28:02Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
add 0.90.4

time:
2013-08-06T13:13:25Z
class:
comments:
Included only runtime dependencies when copying

This makes sure, that no test dependencies are placed in the distribution

time:
2013-08-06T12:20:36Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Better check for verifying that the _percolator type is removed

time:
2013-08-06T11:06:06Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
src/test/java/org/elasticsearch/test/integration/document/BulkTests.java
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
comments:
Maxing out retries on conflict in bulk update cause null pointer exceptions

Also:
Bulk update one less retry then requested
Document for retries on conflict says it default to 1 (but default is 0)
TransportShardReplicationOperationAction methods now catches Throwables instead of exceptions
Added a little extra check to UpdateTests.concurrentUpdateWithRetryOnConflict

Closes #3447 & #3448

time:
2013-08-06T10:00:44Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
src/test/java/org/elasticsearch/test/integration/document/BulkTests.java
comments:
Added missing metadata fields to upserted documents (parent, routing, ttl, timestamp, version and versionType)

Closes #3444
Thanks Luca!


time:
2013-08-05T21:33:38Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Catch RejectedExecutionException in outer ping request

time:
2013-08-05T16:43:11Z
class:
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
If the _percolator has been removed then also remove percolator queries.

time:
2013-08-05T15:50:24Z
class:
src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/search/basic/TransportTwoNodesSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/fields/SearchFieldsTests.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoDistanceFacetTests.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/matchedfilters/MatchedFiltersTests.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java
src/test/java/org/elasticsearch/test/integration/search/suggest/CompletionSuggestSearchTests.java
comments:
Use domain specific assertions for shard failures across tests

time:
2013-08-05T14:50:45Z
class:
src/test/java/org/elasticsearch/test/integration/cluster/NoMasterNodeTests.java
comments:
Use busy sleeps in NoMasterNodeTests

The busy sleep is less prone to slow tests / machines while still
fails if the actual condition isn't met.

time:
2013-08-05T13:40:54Z
class:
src/test/java/org/elasticsearch/test/integration/indexlifecycle/IndexLifecycleActionTests.java
comments:
Add better assertion reporting if nodes are not present in the ClusterState
can that be used elsewhere and go into `ElasticsearchAssertions`?

not sure it's pretty much a sugar method on top of something that is used in this class... but I will check maybe we can make it simpler / more generic.


time:
2013-08-05T12:22:47Z
class:
src/test/java/org/elasticsearch/test/integration/ttl/SimpleTTLTests.java
comments:
the ttl purger might have already deleted the documents.

time:
2013-08-05T10:55:38Z
class:
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java
src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java
src/main/java/org/elasticsearch/action/admin/indices/gateway/snapshot/TransportGatewaySnapshotAction.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java
src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java
src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java
src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java
src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java
src/main/java/org/elasticsearch/action/count/TransportCountAction.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/action/search/SearchResponse.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/index/IndexShardMissingException.java
src/main/java/org/elasticsearch/index/shard/IllegalIndexShardStateException.java
src/main/java/org/elasticsearch/rest/action/support/RestActions.java
comments:
Streamline Search / Broadcast (count, suggest, refresh, ...) APIs header

closes #3441

time:
2013-08-05T09:43:48Z
class:
src/test/java/org/elasticsearch/test/unit/common/util/concurrent/EsExecutorsTests.java
comments:
Fix occasionally hanging test moving away from timeouts.

Fixes EsExecutorTests to use latches and a busy wait util from
ElasticsearchTestCase. This commit also adds some minor randomization
to the test.

time:
2013-08-05T09:43:47Z
class:
src/test/java/org/elasticsearch/test/integration/ElasticsearchTestCase.java
comments:
Added busy waiting util and add suite timeout.

Some rare tests require to busy-wait a short time until a given
condition occurs for instance until a threadpool scaled down the
number of threads. This commit adds a util that waits a give time
until a condition is met, in contrast to Thread.sleep this method
waits increases the wait time by doubleling the waiting time
iterativly by doubeling it to prevent fast tests to always wait
a given sleep interval.

This commit also adds a suite timeout to fail a test if the test
times out. The test infrastructure will provide thread stack traces
if the timeout kicks in. The default timeout is set to 1h.

time:
2013-08-05T09:28:37Z
class:
src/main/java/org/elasticsearch/bootstrap/Bootstrap.java
comments:
Overwriting pidfile on startup

The current implementation does not overwrite, but only prepend the new PID into the pidfile.
So if the process is 4 digits long, but the file is already there with a 5 digit number, the file will contain 5 digits after the write.

Note: If the pidfile still exists this usually means, there either is already an instance running using this pidfile or the process has not finished correctly.

Closes #3425

time:
2013-08-04T11:51:34Z
class:
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/get/RestGetIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/head/RestHeadIndexTemplateAction.java
comments:
Added index templates REST support for HEAD and proper 404

* Added HEAD support for index templates to find out of they exist
* Returning a 404 instead of a 200 if a GET hits on a non-existing index template

Closes #3434

time:
2013-08-02T20:01:35Z
class:
src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
comments:
Make (HighlightBuilder|SearchContextHighlight).Field consistent

Update HighlightBuilder.Field API, it should allow for the same API
as SearchConstextHighlight.Field. In other words, what is possible
to setup using DSL in highlighting at the field level is also
possible via the Java API.

Closes #3435

time:
2013-08-02T18:56:54Z
class:
src/test/java/org/elasticsearch/test/integration/mlt/MoreLikeThisActionTests.java
comments:
Wait for green status when index is created

time:
2013-08-02T18:30:52Z
class:
src/main/java/org/elasticsearch/rest/XContentRestResponse.java
comments:
Don't cache BytesRef in ThreadLocal

time:
2013-08-02T15:13:46Z
class:
src/main/java/org/elasticsearch/index/aliases/IndexAliasesService.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/main/java/org/elasticsearch/index/query/ParsedFilter.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/search/facet/FacetParseElement.java
src/main/java/org/elasticsearch/search/facet/filter/FilterFacetParser.java
src/main/java/org/elasticsearch/search/fetch/matchedfilters/MatchedFiltersFetchSubPhase.java
src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/main/java/org/elasticsearch/search/query/FilterParseElement.java
src/main/java/org/elasticsearch/search/sort/GeoDistanceSortParser.java
src/main/java/org/elasticsearch/search/sort/ScriptSortParser.java
src/main/java/org/elasticsearch/search/sort/SortParseElement.java
src/test/java/org/elasticsearch/test/integration/search/matchedfilters/MatchedFiltersTests.java
comments:
Added support for named filters in top-level filter

Closes #3097

time:
2013-08-02T15:10:16Z
class:
src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java
src/main/java/org/elasticsearch/indices/AliasMissingException.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetAliasesAction.java
src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java
src/test/java/org/elasticsearch/test/integration/aliases/IndexAliasesTests.java
comments:
Removed AliasMissingException, get alias api will now just return an empty map. In the rest layer a 404 is returned when map is empty.

time:
2013-08-02T14:31:00Z
class:
src/test/java/org/elasticsearch/test/integration/mlt/MoreLikeThisActionTests.java
comments:
Use assertions that print out shard failures, if there are any

time:
2013-08-02T12:44:00Z
class:
src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java
comments:
mark bool field type as not toknized
even though we use keyword analyzer for the bool type, we should mark it as not tokenized in the lucene field type as well, no reason to take it though analysis phase to begin with

time:
2013-08-02T12:10:55Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Use debug logging rather than info for rejected ping task

This exception is thrown on node shutdown and doesn't indicate
an critical situation but rather is caught for consistency reasons.

time:
2013-08-02T10:30:20Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Added count percolate api

Added a new percolate api that only returns the number of percolate queries that have matched with the document being percolated. The actual query ids are not included. The percolate total count will be put in the total field and is the only result that will be returned from the dedicated count apis.

The total field will also be included in the already existing percolate and percolating existing document apis and are equal to the number of matches.

Closes #3430

time:
2013-08-02T09:32:15Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Catch and Log RejectedExecutionException in async ping

time:
2013-08-02T07:56:56Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/action/support/TransportActions.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java
src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java
comments:
Search on a shard group while relocation final flip happens might fail

single shard read operations should have the same override exception logic as search and broadcast

relates to #3427

time:
2013-08-02T07:19:57Z
class:
src/main/java/org/elasticsearch/plugins/PluginManager.java
comments:
Allow bin/plugin to set -D JVM parameters

Currently the bin/plugin command did not allow one to set jvm parameters
for startup. Usually this parameters are not needed (no need to configure
heap sizes for such a short running process), but one could not set the
configuration path. And that one is important for plugins in order find
out, where the plugin directory is.

This is especially problematic when elasticsearch is installed as
debian/rpm package, because the configuration file is not placed in the
same directory structure the plugin shell script is put.

This pull request allows to call bin/plugin like this

bin/plugin -Des.default.config=/etc/elasticsearch/elasticsearch.yml -install mobz/elasticsearch-head

As a last small improvement, the PluginManager now outputs the directort
the plugin was installed to in order to avoid confusion.

Closes #3304

time:
2013-08-01T22:20:10Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java
src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java
comments:
Search on a shard group while relocation final flip happens might fail

make sure relocation shards add their corresponding initializing shard routing when search across initializing shards

also, make shardFailures lazy again

closes #3427

time:
2013-08-01T17:52:37Z
class:
src/test/java/org/elasticsearch/test/unit/common/util/concurrent/PrioritizedExecutorsTests.java
comments:
less agreesive timeout to catch it on the pending check

time:
2013-08-01T17:45:08Z
class:
src/test/java/org/elasticsearch/test/integration/indexlifecycle/IndexLifecycleActionTests.java
comments:
improve test to wait for nodes before getting the local node id

time:
2013-08-01T16:35:58Z
class:
src/main/java/org/elasticsearch/action/NoShardAvailableActionException.java
src/main/java/org/elasticsearch/action/search/SearchPhaseExecutionException.java
src/main/java/org/elasticsearch/action/search/ShardSearchFailure.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java
src/main/java/org/elasticsearch/cluster/routing/operation/plain/PlainOperationRouting.java
src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateNumberOfReplicasTests.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/unit/cluster/structure/RoutingIteratorTests.java
comments:
Search on a shard group while relocation final flip happens might fail

At the final stage of a relocation, during the final flip of the states, a search request might hit a node that would then execute it on a shard that has already relocated.

For this, we need to execute broadcast and search operations against initializing shards as well, but only as a last resort. The operation will be rejected if not applicable (i.e. IndexShard#searcher() checked for read allowed).

Note, this requires careful though about which failures we send back. If we try and initializing shard and it fails, its failure should not override an actual failure of an active shard.

Also, removed an atomic integer used in broadcast request and use a similar shard index trick we now have in our search execution.

closes #3427

time:
2013-08-01T15:07:52Z
class:
src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java
comments:
Modified test to make failures clearer

Added shard failure check when sorting on unmapped field, could be any SearchPhaseExecutionException otherwise (e.g. missing shards)

time:
2013-08-01T13:40:04Z
class:
src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateNumberOfReplicasTests.java
comments:
Take fragile test out of the loop

UpdateNumberOfReplicasTests#simpleUpdateNumberOfReplicasTests is very
fragile due to executing searches based on dated knowledge of
the cluster state and calling shards that have been relocating away in
the mean time. A fix is on the way.

time:
2013-08-01T13:12:15Z
class:
src/test/java/org/elasticsearch/test/integration/ttl/SimpleTTLTests.java
comments:
Run refresh before executing non realtime get

time:
2013-08-01T13:07:35Z
class:
src/test/java/org/elasticsearch/test/integration/ttl/SimpleTTLTests.java
comments:
Made use of the static client() method instead of the client field.

time:
2013-08-01T12:09:41Z
class:
src/main/java/org/elasticsearch/search/facet/termsstats/TermsStatsFacetParser.java
comments:
If no mapping can be found for value field, throw a proper exception.

time:
2013-08-01T11:23:39Z
class:
src/main/java/org/elasticsearch/cluster/routing/PlainShardIterator.java
src/main/java/org/elasticsearch/cluster/routing/PlainShardsIterator.java
src/main/java/org/elasticsearch/cluster/routing/ShardIterator.java
src/main/java/org/elasticsearch/cluster/routing/ShardsIterator.java
comments:
cleamup ShardIter#reset method
don't have teh reset method return an instance, as it might confuse usage into thinking it might be a different instance

time:
2013-08-01T10:41:42Z
class:
src/test/java/org/elasticsearch/test/integration/search/facet/terms/UnmappedFieldsTermsFacetsTests.java
comments:
better failure message in test

time:
2013-08-01T08:42:14Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/client/Client.java
src/main/java/org/elasticsearch/client/support/AbstractClient.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/test/java/org/elasticsearch/benchmark/percolator/PercolatorStressBenchmark.java
src/test/java/org/elasticsearch/test/integration/cluster/NoMasterNodeTests.java
src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/percolator/RecoveryPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
src/test/java/org/elasticsearch/test/integration/percolator/TTLPercolatorTests.java
comments:
Improved alias support in the percolate api

* Changed the response to include the alias as part of each match.
* Added `percolate_format=ids` query string option to just serialize the ids in the rest response.
* Added support for multiple indices in the percolate api.

Closes #3420

time:
2013-08-01T08:14:18Z
class:
src/test/java/org/elasticsearch/test/integration/search/suggest/CompletionSuggestSearchTests.java
comments:
Improving test CompletionSuggestSearch test stability

Ensuring that the maximum number of replicas is less than the number of nodes.
this is a good way of randomizing the replicas. maybe we can make this more generic in the base class!


time:
2013-08-01T06:44:09Z
class:
src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java
src/main/java/org/elasticsearch/search/suggest/Suggest.java
src/main/java/org/elasticsearch/search/suggest/SuggestModule.java
src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java
src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java
src/main/java/org/elasticsearch/search/suggest/completion/Completion090PostingsFormat.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionPostingsFormatProvider.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestParser.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestion.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionBuilder.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionContext.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionTokenStream.java
src/main/java/org/elasticsearch/search/suggest/completion/PayloadProcessor.java
src/test/java/org/elasticsearch/test/integration/search/suggest/CompletionPostingsFormatTest.java
src/test/java/org/elasticsearch/test/integration/search/suggest/CompletionSuggestSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/suggest/CompletionTokenStreamTest.java
src/test/java/org/elasticsearch/test/unit/index/mapper/completion/CompletionFieldMapperTests.java
comments:
Added prefix suggestions based on AnalyzingSuggester

This commit introduces near realtime suggestions. For more information about
its usage refer to github issue #3376

From the implementation point of view, a custom AnalyzingSuggester is used
in combination with a custom postingsformat (which is not exposed to the user
anywhere for him to use).

Closes #3376

time:
2013-07-31T20:10:43Z
class:
src/main/java/org/elasticsearch/search/facet/filter/FilterFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/filter/InternalFilterFacet.java
src/main/java/org/elasticsearch/search/facet/query/InternalQueryFacet.java
src/main/java/org/elasticsearch/search/facet/query/QueryFacetExecutor.java
comments:
Query/Filter Facet should support 64bit counter, not 32
closes #3419

time:
2013-07-31T14:58:26Z
class:
src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java
comments:
Reroute eagerly on shard started events

We have an optimization where we try to delay reroute after we processed the shard started events to try and combine a few into the same event. With teh queueing of shard started events in places, we don't need to do it, and we can reroute right away, which will actually reduce the amount of cluster state events we send.

This will also have a nice side effect of not missing on "waitForRelocatingShards(0)" on cluster health checks since relocations will happen right away.

closes #3417

time:
2013-07-31T12:26:44Z
class:
src/test/java/org/elasticsearch/test/integration/indexlifecycle/IndexLifecycleActionTests.java
comments:
Improved test

- checking routing table taken from same (up-to-date) cluster state
- added @Slow annotation
- forced cluster reroute when needed
- changed order of assertions so that if it fails again it's easier to understand why

time:
2013-07-31T11:59:53Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/none/NoneGateway.java
comments:
process deleted index events on a node even if it has no local FS
this will not happen now, but in the future, if data nodes will only be in memory (including translog and such), then we need to fire the deleted events

time:
2013-07-31T07:34:18Z
class:
src/main/java/org/elasticsearch/index/analysis/SynonymTokenFilterFactory.java
comments:
Forbid usage of StringReader in favor of FastStringReader.

StringReader is synchronized although input streams should always be consumed
by a single thread at a time. FastStringReader on the other hand is completely
thread unsafe.

Closes #3411

time:
2013-07-30T21:41:32Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
comments:
don't call the refresh mapping listener callback twice
though not harmful, results in an annoying transport service log

time:
2013-07-30T20:20:18Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
comments:
auto_expand_replicas causing very large amount of cluster state changes when a node joins or leaves the cluster

Closes #3399

time:
2013-07-30T16:58:28Z
class:
src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
src/main/java/org/elasticsearch/cluster/action/index/NodeIndexDeletedAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/none/NoneGateway.java
src/main/java/org/elasticsearch/gateway/shared/SharedStorageGateway.java
comments:
Delete API ack to wait also for actual deletion of shards from disk
closes #3413

time:
2013-07-30T15:39:38Z
class:
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
removed a left over  assert made redundant by last commit

time:
2013-07-30T15:22:53Z
class:
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateNumberOfReplicasTests.java
comments:
ElasticsearchAssertions.assertHitCount variants now report shard failure upon fail.

Cleaned up a UpdateNumberOfReplicasTests a bit.

time:
2013-07-30T15:18:08Z
class:
src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java
src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
src/main/java/org/elasticsearch/index/analysis/Analysis.java
src/main/java/org/elasticsearch/index/query/CommonTermsQueryParser.java
src/main/java/org/elasticsearch/index/search/MatchQuery.java
src/main/java/org/elasticsearch/search/highlight/PlainHighlighter.java
src/test/java/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilterTests.java
src/test/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilterTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/CharFilterTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/NumericAnalyzerTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/PatternCaptureTokenFilterTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/StopAnalyzerTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/commongrams/CommonGramsTokenFilterFactoryTests.java
comments:
Use Analyzer.tokenStream(fieldName, text) instead of Analyzer.tokenStream(fieldName, new StringReader(text)).

Lucene 4.4 introduced the tokenStream(String fieldName, String text) helper
method which nicely reuses the string reader. Whenever analyzing Strings, we
should use this method instead of using the Reader method with a
(Fast)StringReader.

Closes #3409

time:
2013-07-30T15:07:21Z
class:
src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TransportTypesExistsAction.java
src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java
src/main/java/org/elasticsearch/cluster/metadata/AliasMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java
src/main/java/org/elasticsearch/common/collect/MapBuilder.java
src/main/java/org/elasticsearch/common/collect/XMaps.java
src/main/java/org/elasticsearch/index/aliases/IndexAliasesService.java
src/test/java/org/elasticsearch/benchmark/aliases/AliasesBenchmark.java
comments:
Improved how aliases are handled in the cluster state.

The following changes improved alias creation:
* Moved away from ImmutableMap to JCF's UnmodifiableMap. The ImmutableMap always made a copy, whereas the UnmodifiableMap just wraps the target map.
* Reducing the number of maps being created during the creation of MetaData and IndexMetadata.
* Changed IndexAliasesService's aliases from a copy on write ImmutableMap to ConcurrentMap.

Closes #3410

time:
2013-07-30T14:44:30Z
class:
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
comments:
make sure we wrap a potential failure in sending master state change in a catch

time:
2013-07-30T12:00:23Z
class:
comments:
Added version skip commands for source filtering tests

time:
2013-07-30T11:30:45Z
class:
comments:
Added source filtering to tests

time:
2013-07-30T11:21:14Z
class:
src/main/java/org/elasticsearch/action/explain/ExplainRequest.java
src/main/java/org/elasticsearch/action/explain/ExplainRequestBuilder.java
src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java
src/main/java/org/elasticsearch/action/get/GetRequest.java
src/main/java/org/elasticsearch/action/get/GetRequestBuilder.java
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java
src/main/java/org/elasticsearch/action/get/TransportGetAction.java
src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java
src/main/java/org/elasticsearch/action/get/TransportShardMultiGetAction.java
src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
src/main/java/org/elasticsearch/action/update/UpdateHelper.java
src/main/java/org/elasticsearch/index/fieldvisitor/AllFieldsVisitor.java
src/main/java/org/elasticsearch/index/fieldvisitor/CustomFieldsVisitor.java
src/main/java/org/elasticsearch/index/get/ShardGetService.java
src/main/java/org/elasticsearch/rest/action/explain/RestExplainAction.java
src/main/java/org/elasticsearch/rest/action/get/RestGetAction.java
src/main/java/org/elasticsearch/rest/action/get/RestGetSourceAction.java
src/main/java/org/elasticsearch/rest/action/get/RestMultiGetAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
src/main/java/org/elasticsearch/search/SearchModule.java
src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
src/main/java/org/elasticsearch/search/fetch/FetchPhase.java
src/main/java/org/elasticsearch/search/fetch/source/FetchSourceContext.java
src/main/java/org/elasticsearch/search/fetch/source/FetchSourceParseElement.java
src/main/java/org/elasticsearch/search/fetch/source/FetchSourceSubPhase.java
src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/main/java/org/elasticsearch/search/lookup/SourceLookup.java
src/test/java/org/elasticsearch/test/integration/explain/ExplainActionTests.java
src/test/java/org/elasticsearch/test/integration/get/GetActionTests.java
src/test/java/org/elasticsearch/test/integration/mget/SimpleMgetTests.java
src/test/java/org/elasticsearch/test/integration/search/source/SourceFetchingTests.java
comments:
Added source fetching and filtering parameters to search, get, multi-get, get-source and explain requests

Closes #3301

time:
2013-07-30T11:16:57Z
class:
src/test/java/org/elasticsearch/test/integration/indexlifecycle/IndexLifecycleActionTests.java
comments:
Solved test timing issue and removed meaningless test

time:
2013-07-30T10:55:14Z
class:
src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateSettingsTests.java
comments:
Ported an 0.90 branch excplicit test for dynamic update of gc_delete setting for RobinEngine.
This issue is already solved in master.

See #3396

time:
2013-07-30T08:47:16Z
class:
src/test/java/org/elasticsearch/test/integration/indices/wamer/SimpleIndicesWarmerTests.java
comments:
warmer test to use 0 replicas
they are meaningless in the context of the test, should stabilize it

time:
2013-07-30T08:25:42Z
class:
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
comments:
Made a clear distinction in the rest api between percolating a provided document and percolating an existing document. The latter is now a separate api.

time:
2013-07-30T07:48:05Z
class:
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
comments:
Lowered the default size of the percolate thread pool

time:
2013-07-29T15:40:07Z
class:
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/percolator/PercolateException.java
src/main/java/org/elasticsearch/percolator/PercolatorModule.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
comments:
Moved node level classes classes out of the index.percolator package into toplevel percolator package.

time:
2013-07-29T15:32:26Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/index/percolator/PercolatorService.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Rewrote the percolate existing doc api.
The percolate existing doc feature now reuses the get request instead of having a separate request body.
Relates to #3380

time:
2013-07-29T13:53:12Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
src/main/java/org/elasticsearch/action/get/GetRequest.java
src/main/java/org/elasticsearch/action/get/GetRequestBuilder.java
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java
src/main/java/org/elasticsearch/action/get/TransportGetAction.java
src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java
src/main/java/org/elasticsearch/action/get/TransportShardMultiGetAction.java
src/main/java/org/elasticsearch/action/update/UpdateHelper.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java
src/main/java/org/elasticsearch/index/get/ShardGetService.java
src/main/java/org/elasticsearch/rest/action/get/RestGetAction.java
src/test/java/org/elasticsearch/test/integration/get/GetActionTests.java
comments:
Added version support to mget and get apis, that only will perform the get operation if the version of the document to be fetched matches with the provided version.

Both get and mget apis now support the following additional parameters: `version` and `version_type`.

Closes #3404

time:
2013-07-29T13:46:50Z
class:
src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/open/TransportOpenIndexAction.java
comments:
completed renaming of MetaDataStateIndexService to MetaDataIndexStateService

time:
2013-07-29T13:12:09Z
class:
src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/open/TransportOpenIndexAction.java
src/main/java/org/elasticsearch/cluster/ClusterModule.java
src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexStateService.java
comments:
Renamed MetaDataStateIndexService to MetaDataIndexStateService for consistency

time:
2013-07-29T13:12:08Z
class:
src/test/java/org/elasticsearch/test/integration/indices/IgnoreIndicesTests.java
comments:
Updated test to reflect added acknowledgement from all nodes in open/close index api

If it's acknowledged all the other nodes already hold the latest cluster state, thus we can search on the closed index and be sure we get an error back

time:
2013-07-29T13:12:08Z
class:
src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequest.java
src/main/java/org/elasticsearch/cluster/ClusterChangedEvent.java
src/main/java/org/elasticsearch/cluster/ClusterModule.java
src/main/java/org/elasticsearch/cluster/action/index/NodeIndicesStateUpdatedAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataStateIndexService.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/indices/state/OpenCloseIndexTests.java
comments:
Added support for acknowledgement from other nodes in open/close index api

The open/close index api now waits for an acknowledgement from all the other nodes before returning its response, till the timeout (configurable, default 10 secs) expires. The returned acknowledged flag reflects whether the cluster state change was acknowledged by all the nodes or the timeout expired before.

Closes #3400

time:
2013-07-29T13:02:42Z
class:
src/main/java/org/elasticsearch/index/query/FuzzyLikeThisFieldQueryBuilder.java
src/main/java/org/elasticsearch/index/query/FuzzyLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
src/test/java/org/elasticsearch/test/integration/flt/FuzzyLikeThisActionTests.java
src/test/java/org/elasticsearch/test/integration/mlt/MoreLikeThisActionTests.java
comments:
FuzzLikeThis*QueryBuilder and MoreLikeThis*QueryBuilder do not send failOnUnsupportedField if not explicitly specified.

Closes #3402 , a better solution to #3374

time:
2013-07-29T11:36:21Z
class:
src/main/java/org/elasticsearch/common/lucene/search/vectorhighlight/SimpleBoundaryScanner2.java
src/main/java/org/elasticsearch/search/highlight/FastVectorHighlighter.java
src/main/java/org/elasticsearch/search/highlight/HighlighterParseElement.java
src/main/java/org/elasticsearch/search/highlight/SearchContextHighlight.java
comments:
remove our own version of highlighting boundary scanner
the bug that we fixed in it was already pushed to the lucene version

time:
2013-07-29T10:58:09Z
class:
src/main/java/org/apache/lucene/analysis/util/XCharacterUtils.java
src/main/java/org/elasticsearch/common/lucene/store/NullIndexOutput.java
comments:
cleanup unused classes (not needed with Lucene 4.4)

time:
2013-07-28T23:55:41Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/xcontent/json/JsonXContent.java
src/main/java/org/elasticsearch/common/xcontent/smile/SmileXContent.java
src/main/java/org/elasticsearch/common/xcontent/smile/SmileXContentGenerator.java
src/main/java/org/elasticsearch/common/xcontent/yaml/YamlXContent.java
src/main/java/org/elasticsearch/common/xcontent/yaml/YamlXContentGenerator.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/StopTokenFilterFactory.java
src/test/java/org/elasticsearch/test/unit/common/lucene/all/SimpleAllTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/search/MatchAllDocsFilterTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/search/MoreLikeThisQueryTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/search/MultiPhrasePrefixQueryTests.java
src/test/java/org/elasticsearch/test/unit/deps/jackson/JacksonLocationTests.java
src/test/java/org/elasticsearch/test/unit/deps/lucene/VectorHighlighterTests.java
src/test/java/org/elasticsearch/test/unit/index/cache/filter/FilterCacheTests.java
src/test/java/org/elasticsearch/test/unit/index/deletionpolicy/SnapshotDeletionPolicyTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/lucene/DoubleIndexingDocTest.java
comments:
cleanup deprecations / warnings

time:
2013-07-28T23:29:58Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/common/Digest.java
src/main/java/org/elasticsearch/common/Hex.java
src/main/java/org/elasticsearch/common/blobstore/fs/AbstractFsBlobContainer.java
src/main/java/org/elasticsearch/common/inject/InjectorImpl.java
src/main/java/org/elasticsearch/common/inject/internal/Annotations.java
src/main/java/org/elasticsearch/common/inject/internal/Classes.java
src/main/java/org/elasticsearch/common/lab/LongsLAB.java
src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java
src/test/java/org/elasticsearch/benchmark/checksum/ChecksumBenchmarkTest.java
comments:
cleanup
- remove Digest/Hex, only used in test, directly use MD5 there
- don't use Closeables and use IOUtils
- remove duplicate Classes usage and unused LongsLAB

time:
2013-07-28T23:08:08Z
class:
src/main/java/org/elasticsearch/common/Recycler.java
comments:
remove unused class

time:
2013-07-28T23:06:09Z
class:
src/main/java/org/elasticsearch/common/RandomStringGenerator.java
src/test/java/org/elasticsearch/benchmark/search/facet/TermsFacetSearchBenchmark.java
src/test/java/org/elasticsearch/benchmark/trove/StringMapAdjustOrPutBenchmark.java
src/test/java/org/elasticsearch/test/integration/search/facet/ExtendedFacetsTests.java
src/test/java/org/elasticsearch/test/integration/search/suggest/CustomSuggesterSearchTests.java
src/test/java/org/elasticsearch/test/stress/rollingrestart/QuickRollingRestartStressTest.java
src/test/java/org/elasticsearch/test/stress/search1/ConcurrentSearchSerializationTests.java
comments:
remove RandomStringGenerator, using random strings from randomized testing

time:
2013-07-28T22:20:37Z
class:
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
comments:
use BigDoubleList on all cases of geo point field data
same with other field data implementations, prefer to use the paged list compared to single long array in all cases

time:
2013-07-28T22:02:42Z
class:
src/main/java/org/elasticsearch/common/RamUsage.java
src/main/java/org/elasticsearch/common/util/BigDoubleArrayList.java
src/main/java/org/elasticsearch/common/util/BigFloatArrayList.java
src/main/java/org/elasticsearch/common/util/BigIntArray.java
src/main/java/org/elasticsearch/index/cache/id/simple/SimpleIdReaderTypeCache.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SinglePackedOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayAtomicFieldData.java
comments:
remove RamUsage and use Lucene one

time:
2013-07-28T20:50:46Z
class:
src/test/java/org/elasticsearch/test/unit/transport/AbstractSimpleTransportTests.java
comments:
wait till connection callback have executed on setup

time:
2013-07-28T20:43:35Z
class:
src/main/java/org/elasticsearch/common/io/stream/CachedStreamInput.java
src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
comments:
move char array caching to streams

time:
2013-07-28T18:09:14Z
class:
src/main/java/org/elasticsearch/common/util/concurrent/AtomicArray.java
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
comments:
don't use guava ordering sorted copy, since it does 2 copies (instead of 1)
simply use regular toArray and sort on it (we do need to copy it)

time:
2013-07-28T17:36:02Z
class:
src/test/java/org/elasticsearch/test/unit/discovery/zen/ping/unicast/UnicastZenPingTests.java
src/test/java/org/elasticsearch/test/unit/transport/AbstractSimpleTransportTests.java
comments:
improve test to be more descriptive when it fails

time:
2013-07-28T13:23:41Z
class:
src/test/java/org/elasticsearch/test/integration/search/basic/SearchWhileCreatingIndexTests.java
comments:
improve test
the test checks that even though some shards might not be active, search will still work

time:
2013-07-28T12:45:52Z
class:
src/test/java/org/elasticsearch/test/unit/discovery/zen/ping/multicast/MulticastZenPingTests.java
src/test/java/org/elasticsearch/test/unit/discovery/zen/ping/unicast/UnicastZenPingTests.java
src/test/java/org/elasticsearch/test/unit/transport/AbstractSimpleTransportTests.java
src/test/java/org/elasticsearch/test/unit/transport/netty/SimpleNettyTransportTests.java
comments:
randomize ports on specific transport and disco tests

time:
2013-07-27T20:14:04Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/client/transport/TransportClient.java
src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java
src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java
src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/node/service/NodeService.java
src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java
src/main/java/org/elasticsearch/transport/PlainTransportFuture.java
src/main/java/org/elasticsearch/transport/TransportService.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/local/LocalTransportChannel.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
src/main/java/org/elasticsearch/transport/netty/NettyTransportChannel.java
src/test/java/org/elasticsearch/benchmark/transport/BenchmarkNettyLargeMessages.java
src/test/java/org/elasticsearch/benchmark/transport/TransportBenchmark.java
src/test/java/org/elasticsearch/test/unit/cluster/node/DiscoveryNodeFiltersTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/RoutingAllocationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/serialization/ClusterSerializationTests.java
src/test/java/org/elasticsearch/test/unit/discovery/zen/ping/multicast/MulticastZenPingTests.java
src/test/java/org/elasticsearch/test/unit/discovery/zen/ping/unicast/UnicastZenPingTests.java
src/test/java/org/elasticsearch/test/unit/transport/AbstractSimpleTransportTests.java
src/test/java/org/elasticsearch/test/unit/transport/local/SimpleLocalTransportTests.java
src/test/java/org/elasticsearch/test/unit/transport/netty/SimpleNettyTransportTests.java
comments:
fix transport support for versioning
when starting the request/response cycle, we should use the lowest version out of the current node version, and the target node version to serialize the request, and put it in the header. this will allow to support both backward and forward comp.
in addition, have Version as an injected value to different services, to make different versions more easily testable, compared to using Version#CURRENT

time:
2013-07-26T20:08:18Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataStateIndexService.java
src/main/java/org/elasticsearch/indices/IndexPrimaryShardNotAllocatedException.java
src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateSettingsTests.java
src/test/java/org/elasticsearch/test/integration/indices/state/SimpleIndexStateTests.java
comments:
Don't allow unallocated indexes to be closed.

Closes #3313

time:
2013-07-26T16:57:21Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/node/restart/TransportNodesRestartAction.java
src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/TransportNodesShutdownAction.java
src/main/java/org/elasticsearch/common/Base64.java
src/main/java/org/elasticsearch/common/compress/bzip2/BZip2Constants.java
src/main/java/org/elasticsearch/common/compress/bzip2/CBZip2InputStream.java
src/main/java/org/elasticsearch/common/compress/bzip2/CBZip2OutputStream.java
src/main/java/org/elasticsearch/common/compress/bzip2/CRC.java
src/main/java/org/elasticsearch/common/logging/support/LoggerMessageFormat.java
src/main/java/org/elasticsearch/common/math/MathRuntimeException.java
src/main/java/org/elasticsearch/common/math/MathUtils.java
comments:
enable sys out check + remove unused code

time:
2013-07-26T16:32:51Z
class:
comments:
cleanup signatures file

time:
2013-07-26T14:39:17Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/common/xcontent/XContentFactory.java
src/main/java/org/elasticsearch/index/percolator/PercolatorService.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/test/java/org/elasticsearch/test/integration/cluster/NoMasterNodeTests.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Added support for percolating an existing document.

The percolate an existing document feature executes an internal get operation to get the source of the document to percolate.

All options for percolating an existing document:
* `id` - The id of the document to percolate.
* `type` - The type of the document to percolate.
* `index` - The index to fetch the document to percolate from.
* `routing` - The routing value to use to retrieve the document to percolate.
* `preference` - Which shard to prefer (defaults to `_local`).
* `version` - Enables a version check. If the fetched document's version isn't equal to the specified version then the request fails with a version conflict and the percolation request is aborted.

All the option can be specified inside the `get` body part or via query string arguments.
Internally the percolate api will issue a get request for fetching the`_source` of the document to percolate.

For this feature to work the `_source` for documents to percolate need to be stored.

Closes #3380

time:
2013-07-26T13:36:30Z
class:
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
comments:
pass the codec to fix index
its not used in Lucene fix index implementation, but just in case, pass it because we can (tm).

time:
2013-07-26T12:06:59Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/TTLPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/ttl/SimpleTTLTests.java
comments:
Only check if ttl purger has deleted the docs when the delete count in indexing stats has been increased.

time:
2013-07-26T10:27:55Z
class:
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
comments:
better handling of failures in transport to catch assertions
move wrapping the stream into the try block, even though its unlikely they will throw a failure, better be safe...

time:
2013-07-26T10:10:01Z
class:
src/main/java/org/elasticsearch/search/rescore/QueryRescorer.java
src/main/java/org/elasticsearch/search/rescore/RescoreBuilder.java
src/test/java/org/elasticsearch/test/integration/search/rescore/QueryRescorerTests.java
comments:
Add a "score_mode" parameter to rescoring query.

Default value is "total", possible values are: "max", "min", "avg",
"multiply" and "total".

- "total": the final score of a document is the sum of the original
  query score with the rescore query score.
- "max": only the highest score count.
- "min": only the lowest score is kept (if the document doesn't match
  the rescore query, the original query score is used).
- "avg": average of both scores
- "multiply": product of both scores

Closes #3258

time:
2013-07-26T10:00:52Z
class:
src/main/java/org/elasticsearch/transport/TransportService.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java
comments:
better handling of failures in transport to catch assertions
make sure we also catch assertions (well Throwable) in our transport layer and properly log or callback the exception handler in that case

time:
2013-07-26T08:39:50Z
class:
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
comments:
Fixed test that relied on internal document ordering.

Lucene might internally tie-break on low level doc-Ids which
can change depending on merges etc. and test timings. No test should
rely on the actual order if scores are identical.

time:
2013-07-26T05:40:11Z
class:
comments:
Replace refresh with cluster.health check

Possible to fail this test with a 500 NoShardsAvailable error, due
to the index not being fully allocated before the analyze call is
executed.

Changing for a wait_for_status: yellow fixes the occasional problem.

time:
2013-07-26T05:40:06Z
class:
comments:
Change script language to something guaranteed to never exist

time:
2013-07-25T18:31:16Z
class:
src/test/java/org/elasticsearch/test/integration/gateway/fs/IndexGatewayTests.java
comments:
fix test to use correct store setting

time:
2013-07-25T16:36:15Z
class:
src/test/java/org/elasticsearch/test/integration/cluster/ClusterServiceTests.java
comments:
Math is as hard as Concurrency

time:
2013-07-25T16:34:02Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
0.90.3 uses lucene 44
true! thanks


time:
2013-07-25T16:30:49Z
class:
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
comments:
Added regression tests for #3381

time:
2013-07-25T16:18:41Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java
comments:
break out if there no more liveIds. This can happen if another thread emptied the liveIds.

time:
2013-07-25T16:01:38Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java
comments:
Can't share XContentBuilder across threads.

time:
2013-07-25T14:20:56Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
comments:
Fixed hang when submitting mappings and no changes are made

Added missing listener call before return

Closes #3381

time:
2013-07-25T13:17:08Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
comments:
Add facility to index in random order

Tests are more reproducible if documents are indexed in random order
with random flushes/refreshes etc. in order to catch corner cases
where doc Ids are used for tie-breaking and tests rely on a certain
order.

time:
2013-07-25T11:04:23Z
class:
src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java
comments:
Fix CustomScoreSearchTest that assumed a certain order of doc IDs with equal score

time:
2013-07-25T07:35:46Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java
src/test/java/org/elasticsearch/test/integration/gateway/fs/IndexGatewayTests.java
comments:
Generate consistent random settings across nodes

IndexGatewayTests rely on that all nodes have the same type of
storage to pass consistently. Random configs should be the same for all
nodes in the cluster.

time:
2013-07-25T07:17:31Z
class:
src/main/java/org/elasticsearch/index/analysis/HunspellTokenFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/HunspellService.java
src/test/java/org/elasticsearch/test/unit/index/analysis/HunspellTokenFilterFactoryTests.java
comments:
Expose recursion level for Hunspell token filter. Closes #3369

time:
2013-07-25T06:14:20Z
class:
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
comments:
Fix test that assumed a certain order of doc IDs with equal score

If the score is equal in Lucene the order of the result depends on the
actual global doc ID such that due to background merges or concurrency
these test can return different result set orders.
Can we make the naming more exact? The name does not imply that the order can be arbitrary.


time:
2013-07-24T20:57:08Z
class:
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/index/mapper/object/RootObjectMapper.java
src/test/java/org/elasticsearch/test/unit/index/mapper/merge/TestMergeMapperTests.java
comments:
Mapping: Allow to update/merge the dynamic flag
Allow to update / merge in the dynamic flag on object or the root object mapper, meaning that it can be changed dynamically using the update mapping API.
closes #3384

time:
2013-07-24T19:34:33Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
comments:
process internal refresh/update mapping events per index
this allows us to only create the index (if needed) for the exact duration it is needed, and not across processing of all the events

time:
2013-07-24T18:49:07Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java
comments:
Fixed testConcurrentAddingAndRemovingWhilePercolating test

time:
2013-07-24T18:24:23Z
class:
src/main/java/org/elasticsearch/Build.java
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java
comments:
Add Git build info when we build a distribution
closes #3370

time:
2013-07-24T17:12:21Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
comments:
only process an internal refresh mapping once
we only need to process a refresh on an index/type tuple once even if there are several pending, optimize to not do it several times

time:
2013-07-24T16:04:54Z
class:
src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/MultiOrdinalsTests.java
comments:
Fix test-bug that produced ordinals with gaps

time:
2013-07-24T15:51:18Z
class:
comments:
extra space...

time:
2013-07-24T15:28:51Z
class:
src/test/java/org/elasticsearch/test/integration/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/integration/cluster/AbstractZenNodesTests.java
comments:
make base classes tests abstract
(for intellij)

time:
2013-07-24T15:22:18Z
class:
src/test/java/org/elasticsearch/test/integration/rest/helper/HttpClient.java
comments:
use host address instead of host name in tests to not do host lookup

time:
2013-07-24T15:13:03Z
class:
comments:
cluster.node_info

time:
2013-07-24T15:08:54Z
class:
comments:
cluster state

time:
2013-07-24T14:59:36Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java
src/test/java/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilterTests.java
src/test/java/org/apache/lucene/analysis/miscellaneous/UniqueTokenFilterTests.java
src/test/java/org/apache/lucene/util/English.java
src/test/java/org/apache/lucene/util/MockDirectoryWrapper.java
src/test/java/org/elasticsearch/junit/listerners/ReproduceInfoPrinter.java
src/test/java/org/elasticsearch/test/TestNGLoggingListener.java
src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/ClusterManager.java
src/test/java/org/elasticsearch/test/integration/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/integration/TestCluster.java
src/test/java/org/elasticsearch/test/integration/aliases/IndexAliasesTests.java
src/test/java/org/elasticsearch/test/integration/blocks/SimpleBlocksTests.java
src/test/java/org/elasticsearch/test/integration/broadcast/BroadcastActionsTests.java
src/test/java/org/elasticsearch/test/integration/client/transport/DiscoveryTransportClientTests.java
src/test/java/org/elasticsearch/test/integration/client/transport/TransportClientDocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/client/transport/TransportClientSniffDocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/cluster/AbstractZenNodesTests.java
src/test/java/org/elasticsearch/test/integration/cluster/ClusterHealthTests.java
src/test/java/org/elasticsearch/test/integration/cluster/ClusterServiceTests.java
src/test/java/org/elasticsearch/test/integration/cluster/MinimumMasterNodesTests.java
src/test/java/org/elasticsearch/test/integration/cluster/NoMasterNodeTests.java
src/test/java/org/elasticsearch/test/integration/cluster/SimpleDataNodesTests.java
src/test/java/org/elasticsearch/test/integration/cluster/SpecificMasterNodesTests.java
src/test/java/org/elasticsearch/test/integration/cluster/UpdateSettingsValidationTests.java
src/test/java/org/elasticsearch/test/integration/cluster/allocation/AwarenessAllocationTests.java
src/test/java/org/elasticsearch/test/integration/cluster/allocation/ClusterRerouteTests.java
src/test/java/org/elasticsearch/test/integration/cluster/allocation/FilteringAllocationTests.java
src/test/java/org/elasticsearch/test/integration/cluster/allocation/ShardsAllocatorModuleTests.java
src/test/java/org/elasticsearch/test/integration/cluster/allocation/SimpleAllocationTests.java
src/test/java/org/elasticsearch/test/integration/cluster/shards/ClusterSearchShardsTests.java
src/test/java/org/elasticsearch/test/integration/codecs/CodecTests.java
src/test/java/org/elasticsearch/test/integration/consistencylevel/WriteConsistencyLevelTests.java
src/test/java/org/elasticsearch/test/integration/deleteByQuery/DeleteByQueryTests.java
src/test/java/org/elasticsearch/test/integration/discovery/DiscoveryTests.java
src/test/java/org/elasticsearch/test/integration/document/BulkTests.java
src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/explain/ExplainActionTests.java
src/test/java/org/elasticsearch/test/integration/flt/FuzzyLikeThisActionTests.java
src/test/java/org/elasticsearch/test/integration/gateway/fs/BlobStoreSmallBufferSizeFsIndexGatewayTests.java
src/test/java/org/elasticsearch/test/integration/gateway/fs/ChunkFsIndexGatewayTests.java
src/test/java/org/elasticsearch/test/integration/gateway/fs/FsMetaDataGatewayTests.java
src/test/java/org/elasticsearch/test/integration/gateway/fs/IndexGatewayTests.java
src/test/java/org/elasticsearch/test/integration/gateway/fs/SimpleFsIndexGatewayTests.java
src/test/java/org/elasticsearch/test/integration/gateway/fs/SimpleFsIndexInRamIndexGatewayTests.java
src/test/java/org/elasticsearch/test/integration/gateway/local/LocalGatewayIndexStateTests.java
src/test/java/org/elasticsearch/test/integration/gateway/local/QuorumLocalGatewayTests.java
src/test/java/org/elasticsearch/test/integration/gateway/local/SimpleRecoveryLocalGatewayTests.java
src/test/java/org/elasticsearch/test/integration/gateway/none/RecoverAfterNodesTests.java
src/test/java/org/elasticsearch/test/integration/get/GetActionTests.java
src/test/java/org/elasticsearch/test/integration/indexing/IndexActionTests.java
src/test/java/org/elasticsearch/test/integration/indexlifecycle/IndexLifecycleActionTests.java
src/test/java/org/elasticsearch/test/integration/indices/IgnoreIndicesTests.java
src/test/java/org/elasticsearch/test/integration/indices/analyze/AnalyzeActionTests.java
src/test/java/org/elasticsearch/test/integration/indices/analyze/HunspellServiceTests.java
src/test/java/org/elasticsearch/test/integration/indices/cache/CacheTests.java
src/test/java/org/elasticsearch/test/integration/indices/exists/types/TypesExistsTests.java
src/test/java/org/elasticsearch/test/integration/indices/leaks/IndicesLeaksTests.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/SimpleDeleteMappingTests.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/SimpleGetMappingsTests.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java
src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateNumberOfReplicasTests.java
src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateSettingsTests.java
src/test/java/org/elasticsearch/test/integration/indices/state/CloseIndexDisableCloseAllTests.java
src/test/java/org/elasticsearch/test/integration/indices/state/OpenCloseIndexTests.java
src/test/java/org/elasticsearch/test/integration/indices/state/SimpleIndexStateTests.java
src/test/java/org/elasticsearch/test/integration/indices/stats/SimpleIndexStatsTests.java
src/test/java/org/elasticsearch/test/integration/indices/store/IndicesStoreTests.java
src/test/java/org/elasticsearch/test/integration/indices/store/SimpleDistributorTests.java
src/test/java/org/elasticsearch/test/integration/indices/template/SimpleIndexTemplateTests.java
src/test/java/org/elasticsearch/test/integration/indices/wamer/LocalGatewayIndicesWarmerTests.java
src/test/java/org/elasticsearch/test/integration/indices/wamer/SimpleIndicesWarmerTests.java
src/test/java/org/elasticsearch/test/integration/mget/SimpleMgetTests.java
src/test/java/org/elasticsearch/test/integration/mlt/MoreLikeThisActionTests.java
src/test/java/org/elasticsearch/test/integration/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/test/integration/node/InternalNodeTests.java
src/test/java/org/elasticsearch/test/integration/nodesinfo/SimpleNodesInfoTests.java
src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/percolator/RecoveryPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
src/test/java/org/elasticsearch/test/integration/percolator/TTLPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/plugin/ResponseHeaderPluginTests.java
src/test/java/org/elasticsearch/test/integration/plugin/SitePluginTests.java
src/test/java/org/elasticsearch/test/integration/recovery/FullRollingRestartTests.java
src/test/java/org/elasticsearch/test/integration/recovery/RecoveryWhileUnderLoadTests.java
src/test/java/org/elasticsearch/test/integration/recovery/RelocationTests.java
src/test/java/org/elasticsearch/test/integration/recovery/SimpleRecoveryTests.java
src/test/java/org/elasticsearch/test/integration/routing/AliasResolveRoutingTests.java
src/test/java/org/elasticsearch/test/integration/routing/AliasRoutingTests.java
src/test/java/org/elasticsearch/test/integration/routing/SimpleRoutingTests.java
src/test/java/org/elasticsearch/test/integration/search/basic/SearchWhileCreatingIndexTests.java
src/test/java/org/elasticsearch/test/integration/search/basic/TransportSearchFailuresTests.java
src/test/java/org/elasticsearch/test/integration/search/basic/TransportTwoNodesSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/test/integration/search/compress/SearchSourceCompressTests.java
src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/facet/ExtendedFacetsTests.java
src/test/java/org/elasticsearch/test/integration/search/facet/SimpleFacetsMultiShardMultiNodeTests.java
src/test/java/org/elasticsearch/test/integration/search/facet/SimpleFacetsMultiShardTests.java
src/test/java/org/elasticsearch/test/integration/search/facet/SimpleFacetsTests.java
src/test/java/org/elasticsearch/test/integration/search/facet/terms/UnmappedFieldsTermsFacetsTests.java
src/test/java/org/elasticsearch/test/integration/search/fields/SearchFieldsTests.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoBoundingBoxTests.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoDistanceFacetTests.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoDistanceTests.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoFilterTests.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoShapeIntegrationTests.java
src/test/java/org/elasticsearch/test/integration/search/highlight/CustomHighlighterSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/indicesboost/SimpleIndicesBoostSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/matchedfilters/MatchedFiltersTests.java
src/test/java/org/elasticsearch/test/integration/search/msearch/SimpleMultiSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/preference/SearchPreferenceTests.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/integration/search/rescore/QueryRescorerTests.java
src/test/java/org/elasticsearch/test/integration/search/scan/SearchScanScrollingTests.java
src/test/java/org/elasticsearch/test/integration/search/scan/SearchScanTests.java
src/test/java/org/elasticsearch/test/integration/search/scriptfilter/ScriptFilterSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/scroll/SearchScrollTests.java
src/test/java/org/elasticsearch/test/integration/search/simple/SimpleSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java
src/test/java/org/elasticsearch/test/integration/search/stats/SearchStatsTests.java
src/test/java/org/elasticsearch/test/integration/search/suggest/CustomSuggesterSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/suggest/SuggestSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/timeout/SearchTimeoutTests.java
src/test/java/org/elasticsearch/test/integration/similarity/SimilarityTests.java
src/test/java/org/elasticsearch/test/integration/termvectors/GetTermVectorTests.java
src/test/java/org/elasticsearch/test/integration/termvectors/GetTermVectorTestsCheckDocFreq.java
src/test/java/org/elasticsearch/test/integration/threadpool/SimpleThreadPoolTests.java
src/test/java/org/elasticsearch/test/integration/timestamp/SimpleTimestampTests.java
src/test/java/org/elasticsearch/test/integration/ttl/SimpleTTLTests.java
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
src/test/java/org/elasticsearch/test/integration/validate/SimpleValidateQueryTests.java
src/test/java/org/elasticsearch/test/integration/versioning/ConcurrentDocumentOperationTests.java
src/test/java/org/elasticsearch/test/integration/versioning/SimpleVersioningTests.java
src/test/java/org/elasticsearch/test/stress/search1/ConcurrentSearchSerializationTests.java
src/test/java/org/elasticsearch/test/stress/search1/Search1StressTest.java
src/test/java/org/elasticsearch/test/unit/ElasticSearchExceptionTests.java
src/test/java/org/elasticsearch/test/unit/VersionTests.java
src/test/java/org/elasticsearch/test/unit/action/bulk/BulkRequestTests.java
src/test/java/org/elasticsearch/test/unit/action/search/MultiSearchRequestTests.java
src/test/java/org/elasticsearch/test/unit/action/suggest/SuggestActionTests.java
src/test/java/org/elasticsearch/test/unit/cluster/metadata/MappingMetaDataParserTests.java
src/test/java/org/elasticsearch/test/unit/cluster/metadata/MetaDataTests.java
src/test/java/org/elasticsearch/test/unit/cluster/metadata/ToAndFromJsonMetaDataTests.java
src/test/java/org/elasticsearch/test/unit/cluster/node/DiscoveryNodeFiltersTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/AddIncrementallyTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/AllocatePostApiFlagTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/AllocationCommandsTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/AwarenessAllocationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/BalanceConfigurationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/ClusterRebalanceRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/ConcurrentRebalanceRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/DeadNodesAllocationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/DisableAllocationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/ElectReplicaAsPrimaryDuringRelocationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/FailedNodeRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/FailedShardsRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/FilterRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/IndexBalanceTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/PrimaryElectionRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/PrimaryNotRelocatedWhileBeingRecoveredTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/RebalanceAfterActiveTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/ReplicaAllocatedAfterPrimaryTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/RoutingAllocationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/SameShardRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/ShardVersioningTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/ShardsLimitAllocationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/SingleShardNoReplicasRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/SingleShardOneReplicaRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/TenShardsOneReplicaRoutingTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/ThrottlingAllocationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/UpdateNumberOfReplicasTests.java
src/test/java/org/elasticsearch/test/unit/cluster/serialization/ClusterSerializationTests.java
src/test/java/org/elasticsearch/test/unit/cluster/settings/ClusterSettingsTests.java
src/test/java/org/elasticsearch/test/unit/cluster/settings/SettingsValidatorTests.java
src/test/java/org/elasticsearch/test/unit/cluster/structure/RoutingIteratorTests.java
src/test/java/org/elasticsearch/test/unit/common/compress/CompressedStringTests.java
src/test/java/org/elasticsearch/test/unit/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/test/unit/common/geo/ShapeBuilderTests.java
src/test/java/org/elasticsearch/test/unit/common/io/StreamsTests.java
src/test/java/org/elasticsearch/test/unit/common/io/streams/BytesStreamsTests.java
src/test/java/org/elasticsearch/test/unit/common/io/streams/HandlesStreamsTests.java
src/test/java/org/elasticsearch/test/unit/common/joda/DateMathParserTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/LuceneTest.java
src/test/java/org/elasticsearch/test/unit/common/lucene/all/SimpleAllTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/search/MatchAllDocsFilterTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/search/MoreLikeThisQueryTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/search/MultiPhrasePrefixQueryTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/search/TermsFilterTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/search/XBooleanFilterLuceneTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/search/XBooleanFilterTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/store/InputStreamIndexInputTests.java
src/test/java/org/elasticsearch/test/unit/common/lucene/uid/VersionsTests.java
src/test/java/org/elasticsearch/test/unit/common/path/PathTrieTests.java
src/test/java/org/elasticsearch/test/unit/common/regex/RegexTests.java
src/test/java/org/elasticsearch/test/unit/common/settings/ImmutableSettingsTests.java
src/test/java/org/elasticsearch/test/unit/common/settings/loader/JsonSettingsLoaderTests.java
src/test/java/org/elasticsearch/test/unit/common/settings/loader/YamlSettingsLoaderTests.java
src/test/java/org/elasticsearch/test/unit/common/unit/ByteSizeUnitTests.java
src/test/java/org/elasticsearch/test/unit/common/unit/ByteSizeValueTests.java
src/test/java/org/elasticsearch/test/unit/common/unit/DistanceUnitTests.java
src/test/java/org/elasticsearch/test/unit/common/unit/TimeValueTests.java
src/test/java/org/elasticsearch/test/unit/common/util/SlicedDoubleListTests.java
src/test/java/org/elasticsearch/test/unit/common/util/SlicedLongListTests.java
src/test/java/org/elasticsearch/test/unit/common/util/SlicedObjectListTests.java
src/test/java/org/elasticsearch/test/unit/common/util/concurrent/EsExecutorsTests.java
src/test/java/org/elasticsearch/test/unit/common/util/concurrent/PrioritizedExecutorsTests.java
src/test/java/org/elasticsearch/test/unit/common/xcontent/builder/BuilderRawFieldTests.java
src/test/java/org/elasticsearch/test/unit/common/xcontent/builder/XContentBuilderTests.java
src/test/java/org/elasticsearch/test/unit/common/xcontent/smile/JsonVsSmileTests.java
src/test/java/org/elasticsearch/test/unit/common/xcontent/support/XContentMapValuesTests.java
src/test/java/org/elasticsearch/test/unit/deps/jackson/JacksonLocationTests.java
src/test/java/org/elasticsearch/test/unit/deps/joda/SimpleJodaTests.java
src/test/java/org/elasticsearch/test/unit/deps/joda/TimeZoneRoundingTests.java
src/test/java/org/elasticsearch/test/unit/deps/lucene/SimpleLuceneTests.java
src/test/java/org/elasticsearch/test/unit/deps/lucene/VectorHighlighterTests.java
src/test/java/org/elasticsearch/test/unit/discovery/zen/ping/multicast/MulticastZenPingTests.java
src/test/java/org/elasticsearch/test/unit/discovery/zen/ping/unicast/UnicastZenPingTests.java
src/test/java/org/elasticsearch/test/unit/index/VersionTypeTests.java
src/test/java/org/elasticsearch/test/unit/index/aliases/IndexAliasesServiceTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/AnalysisModuleTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/AnalysisTestsHelper.java
src/test/java/org/elasticsearch/test/unit/index/analysis/CJKFilterFactoryTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/CharFilterTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/CompoundAnalysisTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/HunspellTokenFilterFactoryTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/KeepFilterFactoryTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/LimitTokenCountFilterFactoryTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/NGramTokenizerFactoryTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/NumericAnalyzerTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/PatternCaptureTokenFilterTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/ShingleTokenFilterFactoryTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/StopAnalyzerTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/WordDelimiterTokenFilterFactoryTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/commongrams/CommonGramsTokenFilterFactoryTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/synonyms/SynonymsAnalysisTest.java
src/test/java/org/elasticsearch/test/unit/index/cache/filter/FilterCacheTests.java
src/test/java/org/elasticsearch/test/unit/index/cache/id/SimpleIdCacheTests.java
src/test/java/org/elasticsearch/test/unit/index/codec/CodecTests.java
src/test/java/org/elasticsearch/test/unit/index/codec/postingformat/DefaultPostingsFormatTests.java
src/test/java/org/elasticsearch/test/unit/index/deletionpolicy/SnapshotDeletionPolicyTests.java
src/test/java/org/elasticsearch/test/unit/index/engine/AbstractSimpleEngineTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/AbstractFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/AbstractStringFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/DuellFieldDataTest.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/FSTPackedBytesStringFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/FilterFieldDataTest.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/LongFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/NumericFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/PagedBytesStringFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/MultiOrdinalsTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/SingleOrdinalsTests.java
src/test/java/org/elasticsearch/test/unit/index/gateway/CommitPointsTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/MapperTestUtils.java
src/test/java/org/elasticsearch/test/unit/index/mapper/UidTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/all/SimpleAllMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/analyzer/AnalyzerMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/boost/BoostMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/boost/CustomBoostMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/boost/FieldLevelBoostTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/camelcase/CamelCaseFieldNameTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/compound/CompoundTypesTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/date/SimpleDateMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/dynamic/DynamicMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/dynamictemplate/genericstore/GenericStoreDynamicTemplateTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/dynamictemplate/pathmatch/PathMatchDynamicTemplateTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/dynamictemplate/simple/SimpleDynamicTemplatesTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/geo/GeoShapeFieldMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/geo/GeohashMappingGeoPointTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/geo/LatLonAndGeohashMappingGeoPointTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/geo/LatLonMappingGeoPointTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/id/IdMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/index/IndexTypeMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/ip/SimpleIpMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/lucene/DoubleIndexingDocTest.java
src/test/java/org/elasticsearch/test/unit/index/mapper/lucene/StoredNumericValuesTest.java
src/test/java/org/elasticsearch/test/unit/index/mapper/merge/TestMergeMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/multifield/MultiFieldTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/multifield/merge/JavaMultiFieldMergeTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/nested/NestedMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/numeric/SimpleNumericTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/object/NullValueObjectMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/object/SimpleObjectMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/overridetype/OverrideTypeMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/parent/ParentMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/path/PathMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/routing/RoutingTypeMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/simple/SimpleMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/size/SizeMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/source/CompressSourceMappingTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/source/DefaultSourceMappingTests.java
comments:
Cut over to JUnit & Randomized Runner from TestNG

For better integration with the Lucene Test Framework and the
availabilty of RandomizedRunner / Randommized Testing this commit
moves over from TestNG to JUnit.
This commit also moves relevant places over to RandomzedRunner for
reproduceability and removes copied classes from the Lucene Test
Framework.

time:
2013-07-24T14:51:55Z
class:
comments:
indices.clear_cache

time:
2013-07-24T14:51:38Z
class:
comments:
cluster.node_stats

time:
2013-07-24T14:05:38Z
class:
comments:
indices.snapshot_index

time:
2013-07-24T14:05:21Z
class:
comments:
indices.segments

time:
2013-07-24T13:59:08Z
class:
comments:
sanity check for stats

time:
2013-07-24T13:59:01Z
class:
src/test/java/org/elasticsearch/test/integration/cluster/ClusterServiceTests.java
comments:
We should wait until the first blocking task is actual being executed.
The pending tasks can be returned out of order.

time:
2013-07-24T10:47:22Z
class:
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
comments:
don't xcontent locale if its ROOT for date since its the default

time:
2013-07-24T07:54:23Z
class:
src/main/java/org/elasticsearch/index/query/FuzzyLikeThisFieldQueryBuilder.java
src/test/java/org/elasticsearch/test/integration/flt/FuzzyLikeThisActionTests.java
comments:
FuzzyLikeThisFieldQueryBuilder now defaults failOnUnsupportedField to true, to be consistent with REST API.

Closes #3374

time:
2013-07-24T02:12:03Z
class:
comments:
validate query

time:
2013-07-24T01:57:58Z
class:
comments:
Optimize tests

time:
2013-07-24T01:51:57Z
class:
comments:
indices.status

time:
2013-07-24T01:47:52Z
class:
comments:
open/close index tests

time:
2013-07-24T01:41:02Z
class:
comments:
use flush instead of cluster health to avoid writing a separate test

time:
2013-07-23T23:58:31Z
class:
src/main/java/org/elasticsearch/action/admin/indices/create/TransportCreateIndexAction.java
comments:
better logging on failure to create index
if the index already exists, trace log it, since it might happen as a result of multiple index requests at the same time creating the index, all other ones, should be debug and not warn in the same spirit of other APIs

time:
2013-07-23T23:58:11Z
class:
src/main/java/org/elasticsearch/cluster/action/index/NodeMappingRefreshAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
comments:
bulk refresh and update mapping cluster events
try and bulk as much as possible refresh and update mapping events, so they will all be processed at a single go, resulting in less cluster change events, and also reduce the load of multiple changes to the same index
also, change the prio for those to HIGH, since we want URGENT ones (like create index, delete index) to execute

time:
2013-07-23T23:54:12Z
class:
comments:
Basic explain tests

time:
2013-07-23T23:47:28Z
class:
comments:
Super simple super useless mlt test

time:
2013-07-23T23:39:20Z
class:
comments:
Percolate tests

time:
2013-07-23T23:28:27Z
class:
comments:
Warmer APIs

time:
2013-07-23T23:17:51Z
class:
comments:
update_aliases basic tests

time:
2013-07-23T18:42:20Z
class:
comments:
ticket #3259 still isn't done

time:
2013-07-23T18:26:58Z
class:
comments:
Make put_mapping tests work for 0.90.2 and master

time:
2013-07-23T18:24:46Z
class:
comments:
enable skip to be in the middle of a test

time:
2013-07-23T18:10:59Z
class:
comments:
Siggest api broken in current release

time:
2013-07-23T18:10:48Z
class:
comments:
Delete ignores parent param

time:
2013-07-23T17:26:22Z
class:
comments:
suggest api tests

time:
2013-07-23T17:20:40Z
class:
comments:
formattings issues

time:
2013-07-23T16:55:07Z
class:
comments:
Added regression tests for #3363 and #3364

time:
2013-07-23T15:55:55Z
class:
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
comments:
Moving log level to debug
We don't want to have too much INFO log level. So we move some parts to log.debug.

Closes #4.

time:
2013-07-23T13:56:48Z
class:
src/main/java/org/elasticsearch/cluster/ClusterState.java
src/main/java/org/elasticsearch/common/compress/CompressorFactory.java
src/main/java/org/elasticsearch/common/io/CachedStreams.java
src/main/java/org/elasticsearch/common/io/FastByteArrayInputStream.java
src/main/java/org/elasticsearch/common/io/FastByteArrayOutputStream.java
src/main/java/org/elasticsearch/common/io/Streams.java
src/main/java/org/elasticsearch/common/io/stream/BytesStreamOutput.java
src/main/java/org/elasticsearch/common/io/stream/CachedStreamOutput.java
src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
src/main/java/org/elasticsearch/common/settings/loader/PropertiesSettingsLoader.java
src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java
src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java
src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java
src/main/java/org/elasticsearch/gateway/blobstore/BlobStoreGateway.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java
src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java
src/main/java/org/elasticsearch/index/gateway/blobstore/BlobStoreIndexShardGateway.java
src/main/java/org/elasticsearch/index/mapper/core/BinaryFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SourceFieldMapper.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/rest/XContentRestResponse.java
src/main/java/org/elasticsearch/rest/action/support/RestXContentBuilder.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/local/LocalTransportChannel.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
src/main/java/org/elasticsearch/transport/netty/NettyTransportChannel.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoShapeIntegrationTests.java
src/test/java/org/elasticsearch/test/unit/common/io/streams/BytesStreamsTests.java
src/test/java/org/elasticsearch/test/unit/common/xcontent/builder/XContentBuilderTests.java
src/test/java/org/elasticsearch/test/unit/common/xcontent/smile/JsonVsSmileTests.java
src/test/java/org/elasticsearch/test/unit/deps/jackson/JacksonLocationTests.java
src/test/java/org/elasticsearch/test/unit/transport/AbstractSimpleTransportTests.java
comments:
remove cached stream output
start to build the infra for simpler migration to netty 4, starting with removing the cache stream output handling as it will come built in

time:
2013-07-23T13:33:29Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/admin/cluster/tasks/PendingClusterTasksAction.java
src/main/java/org/elasticsearch/action/admin/cluster/tasks/PendingClusterTasksRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/tasks/PendingClusterTasksRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/tasks/PendingClusterTasksResponse.java
src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java
src/main/java/org/elasticsearch/client/ClusterAdminClient.java
src/main/java/org/elasticsearch/client/support/AbstractClusterAdminClient.java
src/main/java/org/elasticsearch/cluster/ClusterService.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/cluster/service/PendingClusterTask.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/tasks/RestPendingClusterTasksAction.java
src/test/java/org/elasticsearch/test/integration/cluster/ClusterServiceTests.java
comments:
Added cluster pending tasks api.
Closes #3368

time:
2013-07-23T11:55:20Z
class:
src/main/java/org/apache/lucene/analysis/pattern/XPatternCaptureGroupTokenFilter.java
src/main/java/org/elasticsearch/index/analysis/PatternCaptureGroupTokenFilterFactory.java
comments:
Removed XPatternCaptureGroupTokenFilter

time:
2013-07-23T11:55:15Z
class:
src/main/java/org/apache/lucene/analysis/ngram/XEdgeNGramTokenFilter.java
src/main/java/org/apache/lucene/analysis/ngram/XEdgeNGramTokenizer.java
src/main/java/org/apache/lucene/analysis/ngram/XLucene43EdgeNGramTokenizer.java
src/main/java/org/apache/lucene/analysis/ngram/XLucene43NGramTokenizer.java
src/main/java/org/apache/lucene/analysis/ngram/XNGramTokenFilter.java
src/main/java/org/apache/lucene/analysis/ngram/XNGramTokenizer.java
src/main/java/org/apache/lucene/search/vectorhighlight/XFieldQuery.java
src/main/java/org/apache/lucene/util/packed/XAbstractPagedMutable.java
src/main/java/org/apache/lucene/util/packed/XGrowableWriter.java
src/main/java/org/apache/lucene/util/packed/XPackedInts.java
src/main/java/org/apache/lucene/util/packed/XPagedGrowableWriter.java
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/lucene/all/AllTermQuery.java
src/main/java/org/elasticsearch/common/lucene/docset/DocIdSets.java
src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/KeepWordFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/LengthTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/TrimTokenFilterFactory.java
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/deletionpolicy/SnapshotDeletionPolicy.java
src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/gateway/CommitPoints.java
src/main/java/org/elasticsearch/index/merge/policy/AbstractMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/LogByteSizeMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/LogDocMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/TieredMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/scheduler/ConcurrentMergeSchedulerProvider.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/indices/analysis/IndicesAnalysisService.java
src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java
src/main/java/org/elasticsearch/search/highlight/PlainHighlighter.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/FragmentBuilderHelper.java
src/main/java/org/elasticsearch/search/rescore/QueryRescorer.java
src/test/java/org/elasticsearch/test/unit/index/merge/policy/MergePolicySettingsTest.java
comments:
Upgrade to Lucene 4.4

time:
2013-07-23T11:41:48Z
class:
comments:
Fix version number in `plugin -install` command

time:
2013-07-23T11:40:09Z
class:
comments:
prepare for next development iteration

time:
2013-07-23T11:17:44Z
class:
comments:
prepare release elasticsearch-cloud-gce-1.0.0

time:
2013-07-23T11:17:44Z
class:
src/main/java/org/elasticsearch/cloud/gce/GceComputeServiceImpl.java
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceAbstractTest.java
comments:
Cleaning code before release

time:
2013-07-23T09:05:15Z
class:
src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
comments:
Add optimize thread pool (size 1) dedicated to perform explicit optimize API
Have a dedicated thread pool for explicit optimize calls (shard level optimize operations). By default, the size should be 1 to work the same with how things work currently allowing for only 1 shard level optimize on a node.

The change allows to see the optimize thread pool stats now, and potentially increase the thread pool size for beefy machines.

closes #3366

time:
2013-07-23T08:54:42Z
class:
src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
comments:
make sure we update last failure

time:
2013-07-22T22:29:11Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/TTLPercolatorTests.java
comments:
Wait a bit longer for ttl to have occurred

time:
2013-07-22T22:10:27Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Fix SimplePercolatorTests#testPercolateStatistics

time:
2013-07-22T22:08:45Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java
src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/TransportNodesShutdownAction.java
src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/TransportClusterSearchShardsAction.java
src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/TransportAliasesExistAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/create/TransportCreateIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/exists/indices/TransportIndicesExistsAction.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TransportTypesExistsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/open/TransportOpenIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/settings/TransportUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/delete/TransportDeleteIndexTemplateAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/TransportDeleteWarmerAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/TransportGetWarmersAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java
src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java
src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java
src/main/java/org/elasticsearch/cluster/ClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/ProcessedClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/TimeoutClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java
src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataStateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
src/main/java/org/elasticsearch/cluster/routing/RoutingService.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/gateway/GatewayService.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalAllocateDangledIndices.java
src/test/java/org/elasticsearch/test/integration/cluster/ClusterServiceTests.java
comments:
move master actions to accept a lister, improve cluster service state execution
- master actions many times end up being executed on the cluster service, so there is no need to block them on the management thread pool to wait for a response, this remove the load on the management thread pool, and also simplifies the code implementing it
- cluster service state update exception handling was improved to include a callback when a failure happens during state update execution, this makes sure that we catch all relevant exceptions and invoke the callback, as well as simplify the code of cluster state update tasks, as they can throw failures from within the execute method and then handle them properly

time:
2013-07-22T22:06:25Z
class:
comments:
add master_timeout to cluster state changing operations

time:
2013-07-22T17:43:22Z
class:
src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java
src/main/java/org/apache/lucene/search/vectorhighlight/XBaseFragListBuilder.java
src/main/java/org/apache/lucene/search/vectorhighlight/XBaseFragmentsBuilder.java
src/main/java/org/apache/lucene/search/vectorhighlight/XFastVectorHighlighter.java
src/main/java/org/apache/lucene/search/vectorhighlight/XFieldFragList.java
src/main/java/org/apache/lucene/search/vectorhighlight/XFieldPhraseList.java
src/main/java/org/apache/lucene/search/vectorhighlight/XFieldQuery.java
src/main/java/org/apache/lucene/search/vectorhighlight/XFieldTermStack.java
src/main/java/org/apache/lucene/search/vectorhighlight/XFragListBuilder.java
src/main/java/org/apache/lucene/search/vectorhighlight/XFragmentsBuilder.java
src/main/java/org/apache/lucene/search/vectorhighlight/XScoreOrderFragmentsBuilder.java
src/main/java/org/apache/lucene/search/vectorhighlight/XSimpleFieldFragList.java
src/main/java/org/apache/lucene/search/vectorhighlight/XSimpleFragListBuilder.java
src/main/java/org/apache/lucene/search/vectorhighlight/XSimpleFragmentsBuilder.java
src/main/java/org/apache/lucene/search/vectorhighlight/XSingleFragListBuilder.java
src/main/java/org/elasticsearch/common/lucene/search/vectorhighlight/SimpleBoundaryScanner2.java
src/main/java/org/elasticsearch/search/highlight/FastVectorHighlighter.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/FragmentBuilderHelper.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SimpleFragmentsBuilder.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceScoreOrderFragmentsBuilder.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/test/unit/deps/lucene/VectorHighlighterTests.java
comments:
Add FastVectorHighlighter support for more complex queries.

FastVectorHighlighter fails at highlighting some complex queries such as
multi phrase queries which have two terms at the same position. This can be
easily triggered by running a `match_phrase` query with an analyzer which
outputs synonyms such as SynonymFilter or WordDelimiterFilter.

Close #3357

time:
2013-07-22T15:53:44Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java
comments:
should be 500...

time:
2013-07-22T15:53:18Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataService.java
comments:
Cluster State Update APIs (master node) to respect master_timeout better
also respect the timeout when trying to obtain the md lock
relates #3365

time:
2013-07-22T14:58:00Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/create/TransportCreateIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/open/TransportOpenIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/settings/TransportUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/delete/TransportDeleteIndexTemplateAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/TransportDeleteWarmerAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java
src/main/java/org/elasticsearch/cluster/TimeoutClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataDeleteIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataStateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
src/main/java/org/elasticsearch/cluster/metadata/ProcessClusterEventTimeoutException.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestIndicesAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/delete/RestIndexDeleteAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/put/RestIndexPutAliasAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/close/RestCloseIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/create/RestCreateIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/delete/RestDeleteIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/delete/RestDeleteMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/put/RestPutMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/open/RestOpenIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestUpdateSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/delete/RestDeleteIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/put/RestPutIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/delete/RestDeleteWarmerAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/put/RestPutWarmerAction.java
src/test/java/org/elasticsearch/test/integration/cluster/ClusterServiceTests.java
comments:
Cluster State Update APIs (master node) to respect master_timeout better
Currently, the master node might be processing too many cluster state events, and then be blocked on waiting for its respective even to be processed. We can use the new cluster state update timeout support to use the master_timeout value and respect it.

closes #3365

time:
2013-07-22T13:27:20Z
class:
src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestIndicesAliasesAction.java
src/test/java/org/elasticsearch/test/integration/aliases/IndexAliasesTests.java
comments:
Added alias action validation

Moved alias action validation to IndicesAliasesRequest, so that Java api and RestIndexPutAliasAction can benefit from it too.
Added check in MetaDataIndexAliasesService too.

Closes #3363

time:
2013-07-22T13:16:29Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
comments:
Also serialize the routing and preference

time:
2013-07-22T09:32:55Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java
comments:
Fix ConcurrentPercolatorTests replaces CountDownLatches array by a Semaphore.

The writes to the CountDownLatches array wasn't visible by all threads when the countdown latch array slots were re-initialized.

time:
2013-07-22T09:19:23Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java
comments:
catch failures and notify the listener in aliases action handling

time:
2013-07-22T08:29:57Z
class:
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/main/java/org/elasticsearch/transport/TransportRequestOptions.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
comments:
Transport: Add a dedicated ping channel
Today, we have a low/med/high channel groups in our transport layer. High is used to publish cluster state and send ping requests. Sometimes, the overhead of publishing large cluster states can interfere with ping requests.

Introduce a new, dedicated ping channel (with size 1) to have a channel that only handles ping requests.
closes #3362

time:
2013-07-22T07:16:56Z
class:
src/main/java/org/elasticsearch/cluster/TimeoutClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java
src/main/java/org/elasticsearch/common/util/concurrent/PrioritizedEsThreadPoolExecutor.java
src/test/java/org/elasticsearch/test/integration/cluster/ClusterServiceTests.java
src/test/java/org/elasticsearch/test/unit/common/util/concurrent/PrioritizedExecutorsTests.java
comments:
add ability to associate a timeout with a priority executor
enhancement that can be used later to timeout tasks that are pending, also added the ability to get the pending task list from the executor

time:
2013-07-22T07:02:27Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Test to some extent the time spent on percolating.

time:
2013-07-21T22:51:35Z
class:
comments:
Add a comment about using \. to escape dots in yaml lookup paths

time:
2013-07-21T22:49:53Z
class:
comments:
Indices settings tests

time:
2013-07-21T22:40:20Z
class:
comments:
Delete by query tests

time:
2013-07-21T22:40:12Z
class:
comments:
msearch tests

time:
2013-07-21T13:21:22Z
class:
src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java
comments:
reroute post shard started should have HIGH prio as well

time:
2013-07-21T12:57:26Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
Zen Discovery Cluster Events to have Priority.URGENT
Master node cluster state events resulting in zen discovery (node gets added, removed, for example) should be processed with priority URGENT as its always better to process them as fast as possible, and not let other events get in the way.
closes #3361

time:
2013-07-21T12:25:26Z
class:
src/test/java/org/elasticsearch/test/integration/indices/stats/SimpleIndexStatsTests.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
fix percolate stats tests failures

time:
2013-07-20T19:12:39Z
class:
comments:
Bulk tests

time:
2013-07-20T19:12:27Z
class:
comments:
Template APIs tests

time:
2013-07-20T18:32:44Z
class:
comments:
Alias API tests

time:
2013-07-19T17:37:36Z
class:
src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java
comments:
Be consistent with the default value of `acceptable_overhead_ratio`.

time:
2013-07-19T17:14:49Z
class:
src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java
src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStatsFlags.java
src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java
src/main/java/org/elasticsearch/index/percolator/PercolatorService.java
src/main/java/org/elasticsearch/index/percolator/PercolatorShardModule.java
src/main/java/org/elasticsearch/index/percolator/stats/PercolateStats.java
src/main/java/org/elasticsearch/index/percolator/stats/ShardPercolateService.java
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
src/main/java/org/elasticsearch/indices/NodeIndicesStats.java
src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
comments:
Added percolate statistics to indices and node stats.

Relates to #3173

time:
2013-07-19T17:13:15Z
class:
src/main/java/org/elasticsearch/index/analysis/PatternReplaceCharFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/PatternReplaceTokenFilterFactory.java
comments:
pattern replace with empty "" setting fails
we should default the replacement to "", since in the settings, if its set to "", we remove the setting

time:
2013-07-19T16:10:00Z
class:
comments:
Use systemd configuration file for applying limits correctly

In case systemd is used, ulimit is not called (as it would be in the initscript)
and has to be configured in the systemd configuration.

For more information about the parameters LimitNOFILE and LimitMEMLOCK
see http://www.freedesktop.org/software/systemd/man/systemd.exec.html

time:
2013-07-19T14:54:14Z
class:
src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java
comments:
Fix ConcurrentPercolatorTests that failed occasionally when running with other tests, by not using the shared test cluster.

time:
2013-07-19T14:17:22Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
src/main/java/org/elasticsearch/action/delete/DeleteResponse.java
src/main/java/org/elasticsearch/action/get/GetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/index/IndexResponse.java
src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/action/update/UpdateResponse.java
src/main/java/org/elasticsearch/common/io/stream/AdapterStreamInput.java
src/main/java/org/elasticsearch/common/io/stream/AdapterStreamOutput.java
src/main/java/org/elasticsearch/common/io/stream/HandlesStreamInput.java
src/main/java/org/elasticsearch/common/io/stream/HandlesStreamOutput.java
src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
src/main/java/org/elasticsearch/index/get/GetResult.java
src/main/java/org/elasticsearch/search/highlight/HighlightField.java
src/main/java/org/elasticsearch/search/internal/InternalSearchHitField.java
src/test/java/org/elasticsearch/test/unit/common/io/StreamsTests.java
src/test/java/org/elasticsearch/test/unit/common/io/streams/HandlesStreamsTests.java
comments:
introduce read/writeSharedString while streaming
currently, we treat all strings as shared (either by full equality or identity equality), while almost all times we know if they should be serialized as shared or not. Add an explicitly write/readSharedString, and use it where applicable, and all other write/readString will not treat them as shared
relates to #3322

time:
2013-07-19T11:12:23Z
class:
src/main/java/org/elasticsearch/search/query/FilterParseElement.java
comments:
top level filter not resulting in an actual filter is ignored
when parsing a filter, we use null to indicate that this filter should not match anything, the top level filter doesn't take it into account
fixes #3356

time:
2013-07-19T07:47:55Z
class:
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
comments:
Work around the fact that AssertionError(String message, Throwable cause) is a Java 1.7-only API.

time:
2013-07-19T07:10:08Z
class:
src/main/java/org/apache/lucene/util/packed/XAbstractPagedMutable.java
src/main/java/org/apache/lucene/util/packed/XGrowableWriter.java
src/main/java/org/apache/lucene/util/packed/XPackedInts.java
src/main/java/org/apache/lucene/util/packed/XPagedGrowableWriter.java
src/main/java/org/elasticsearch/common/util/AbstractBigArray.java
src/main/java/org/elasticsearch/common/util/BigDoubleArrayList.java
src/main/java/org/elasticsearch/common/util/BigFloatArrayList.java
src/main/java/org/elasticsearch/common/util/BigIntArray.java
src/main/java/org/elasticsearch/common/util/IntArray.java
src/main/java/org/elasticsearch/common/util/IntArrays.java
src/main/java/org/elasticsearch/index/fielddata/BytesValues.java
src/main/java/org/elasticsearch/index/fielddata/DoubleValues.java
src/main/java/org/elasticsearch/index/fielddata/LongValues.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefOrdValComparator.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/DocIdOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/EmptyOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiFlatArrayOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/Ordinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/PositiveIntPool.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SinglePackedOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SparseMultiArrayOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/main/java/org/elasticsearch/search/facet/terms/strings/TermsStringOrdinalsFacetExecutor.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/FilterFieldDataTest.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/FlatMultiOrdinalsTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/MultiOrdinalsTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/SingleOrdinalsTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/SparseMultiOrdinalsTests.java
comments:
Make field data able to support more than 2B ordinals per segment.

Although segments are limited to 2B documents, there is not limit on the number
of unique values that a segment may store. This commit replaces 'int' with
'long' every time a number is used to represent an ordinal and modifies the
data-structures used to store ordinals so that they can actually support more
than 2B ordinals per segment.

This commit also improves memory usage of the multi-ordinals data-structures
and the transient memory usage which is required to build them (OrdinalsBuilder)
by using Lucene's PackedInts data-structures. In the end, loading the ordinals
mapping from disk may be a little slower, field-data-based features such as
faceting may be slightly slower or faster depending on whether being nicer to
the CPU caches balances the overhead of the additional abstraction or not, and
memory usage should be better in all cases, especially when the size of the
ordinals mapping is not negligible compared to the size of the values (numeric
data for example).

Close #3189

time:
2013-07-18T15:41:23Z
class:
src/main/java/org/elasticsearch/common/lucene/docset/MatchDocIdSet.java
src/main/java/org/elasticsearch/index/mapper/Uid.java
src/main/java/org/elasticsearch/index/query/HasChildFilterBuilder.java
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryBuilder.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java
src/main/java/org/elasticsearch/index/search/child/HasParentFilter.java
src/main/java/org/elasticsearch/index/search/child/ParentIdsFilter.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/test/java/org/elasticsearch/benchmark/search/child/ChildSearchBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/child/ChildSearchShortCircuitBenchmark.java
comments:
Optimize `has_child` query & filter execution with two short circuit mechanisms:
* If all parent ids have been emitted as hit, abort the query / filter execution.
* If the a relative small number of parent ids have been collected in the first phase then limit the number of second phase parent id lookups by putting a short circuit filter before parent document evaluation or omit the it in the case of the filter. This is contrable via the `short_circuit_cutoff` option which is exposed in the `has_child` query & filter.

All parent / child queries and filters (expect `top_children` query) abort execution if no parent ids have been collected in the first phase.

Closes #3190

time:
2013-07-18T14:52:42Z
class:
src/main/java/org/apache/lucene/index/memory/ExtendedMemoryIndex.java
src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequestBuilder.java
src/main/java/org/elasticsearch/action/index/IndexResponse.java
src/main/java/org/elasticsearch/action/index/TransportIndexAction.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java
src/main/java/org/elasticsearch/action/update/UpdateHelper.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
src/main/java/org/elasticsearch/action/update/UpdateResponse.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
src/main/java/org/elasticsearch/index/mapper/DocumentTypeListener.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/percolator/PercolateException.java
src/main/java/org/elasticsearch/index/percolator/PercolatorException.java
src/main/java/org/elasticsearch/index/percolator/PercolatorExecutor.java
src/main/java/org/elasticsearch/index/percolator/PercolatorModule.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/percolator/PercolatorService.java
src/main/java/org/elasticsearch/index/percolator/PercolatorShardModule.java
src/main/java/org/elasticsearch/index/percolator/QueriesLoaderCollector.java
src/main/java/org/elasticsearch/index/percolator/QueryCollector.java
src/main/java/org/elasticsearch/index/service/IndexService.java
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java
src/main/java/org/elasticsearch/rest/action/index/RestIndexAction.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/benchmark/percolator/EmbeddedPercolatorBenchmarkTest.java
src/test/java/org/elasticsearch/benchmark/percolator/PercolatorStressBenchmark.java
src/test/java/org/elasticsearch/test/integration/TestCluster.java
src/test/java/org/elasticsearch/test/integration/percolator/ConcurrentPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/percolator/RecoveryPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java
src/test/java/org/elasticsearch/test/integration/percolator/TTLPercolatorTests.java
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
src/test/java/org/elasticsearch/test/unit/index/cache/id/SimpleIdCacheTests.java
src/test/java/org/elasticsearch/test/unit/index/percolator/PercolatorExecutorTests.java
comments:
Redesigned the percolator engine to execute in a distribute manner.

With this design the percolate queries will be stored in a special `_percolator` type with its own mapping in the same index where the actual data is or in a different index (dedicated percolation index, which might require different sharding behavior compared to the index that holds actual data and being search on). This approach allows percolate requests to scale to the number of primary shards an index has been configured with and effectively distributes the percolate execution.

This commit doesn't add new percolate features other than scaling. The response remains similar, with exception that a header similar to the search api has been added to the percolate response.

Closes #3173

time:
2013-07-18T14:46:41Z
class:
comments:
Basic tests for get/set cluster settings

time:
2013-07-18T14:36:20Z
class:
comments:
super basic test for cluster.reroute

time:
2013-07-18T14:23:22Z
class:
comments:
Added test for searching over type and all indices

time:
2013-07-18T12:49:35Z
class:
comments:
Eclipse: organize imports on save.

It can happen that Eclipse fails at correctly adding a new import entry to an
existing list of imports since we don't use its default rules. This commit
forces Eclipse to organize imports on save.

time:
2013-07-18T10:49:12Z
class:
src/main/java/org/elasticsearch/common/geo/GeoPoint.java
src/main/java/org/elasticsearch/index/query/GeoBoundingBoxFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoDistanceFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoDistanceRangeFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoPolygonFilterParser.java
src/main/java/org/elasticsearch/search/facet/geodistance/GeoDistanceFacetParser.java
src/main/java/org/elasticsearch/search/sort/GeoDistanceSortParser.java
comments:
Changed GeoPoint parsing in serveral parsers using Geopoint.parse() Closes #3351

time:
2013-07-18T09:18:37Z
class:
src/main/java/org/elasticsearch/index/analysis/ThaiAnalyzerProvider.java
comments:
Analysis: update ThaiAnalyzerProvider to use custom stopwords setting

time:
2013-07-17T17:07:22Z
class:
comments:
added missing link to the elasticsearch.org website

time:
2013-07-16T16:37:34Z
class:
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/index/analysis/Analysis.java
src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java
src/main/java/org/elasticsearch/index/query/FuzzyLikeThisFieldQueryBuilder.java
src/main/java/org/elasticsearch/index/query/FuzzyLikeThisFieldQueryParser.java
src/main/java/org/elasticsearch/index/query/FuzzyLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/FuzzyLikeThisQueryParser.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryParser.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/test/java/org/elasticsearch/test/integration/flt/FuzzyLikeThisActionTests.java
src/test/java/org/elasticsearch/test/integration/mlt/MoreLikeThisActionTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/geo/LatLonMappingGeoPointTests.java
comments:
Add the ability to ignore or fail on numeric fields when executing more-like-this or fuzzy-like-this queries.

More-like-this and fuzzy-like-this queries expect analyzers which are able to
generate character terms (CharTermAttribute), so unfortunately this doesn't
work with analyzers which generate binary-only terms (BinaryTermAttribute,
the default CharTermAttribute impl being a special BinaryTermAttribute) such as
our analyzers for numeric fields (byte, short, integer, long, float, double but
also date and ip).

To work around this issue, this commits adds a fail_on_unsupported_field
parameter to the more-like-this and fuzzy-like-this parsers. When this parameter
is false, numeric fields will just be ignored and when it is true, an error will
be returned, saying that these queries don't support numeric fields. By default,
this setting is true but the mlt API sets it to true in order not to fail on
documents which contain numeric fields.

Close #3252

time:
2013-07-16T16:20:13Z
class:
src/main/java/org/apache/lucene/analysis/pattern/XPatternCaptureGroupTokenFilter.java
src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java
src/main/java/org/elasticsearch/common/settings/Settings.java
src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java
src/main/java/org/elasticsearch/index/analysis/PatternCaptureGroupTokenFilterFactory.java
src/test/java/org/elasticsearch/test/unit/index/analysis/PatternCaptureTokenFilterTests.java
comments:
Merge pull request #3341 from clintongormley/pattern_capture

Added the "pattern_capture" token filter from Lucene 4.4

time:
2013-07-16T16:08:12Z
class:
src/main/java/org/apache/lucene/analysis/pattern/XPatternCaptureGroupTokenFilter.java
src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java
src/main/java/org/elasticsearch/common/settings/Settings.java
src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java
src/main/java/org/elasticsearch/index/analysis/PatternCaptureGroupTokenFilterFactory.java
src/test/java/org/elasticsearch/test/unit/index/analysis/PatternCaptureTokenFilterTests.java
comments:
Added the "pattern_capture" token filter from Lucene 4.4

The XPatternCaptureGroupTokenFilter.java file can be removed once we
upgrade to Lucene 4.4.

This change required the addition of the commaDelimited flag to getAsArray()
to disable parsing strings as comma-delimited values.

Closes #3340

time:
2013-07-16T14:43:47Z
class:
comments:
Basic scroll tests

time:
2013-07-16T13:10:13Z
class:
src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/open/TransportOpenIndexAction.java
src/main/java/org/elasticsearch/client/IndicesAdminClient.java
src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataStateIndexService.java
src/main/java/org/elasticsearch/rest/action/admin/indices/close/RestCloseIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/open/RestOpenIndexAction.java
src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java
src/test/java/org/elasticsearch/test/integration/indices/state/CloseIndexDisableCloseAllTests.java
src/test/java/org/elasticsearch/test/integration/indices/state/OpenCloseIndexTests.java
src/test/java/org/elasticsearch/test/unit/cluster/metadata/MetaDataTests.java
comments:
Added support for multiple indices in open/close index apis

Open/Close index api supports now multiple indices the same way as the delete index api works. The only exception is when dealing with all indices: it's required to explicitly use _all or a pattern that identifies all the indices, not just an empty array of indices. Supports the ignore_missing param too.
Added also a new flag action.disable_close_all_indices (default false) to disable closing all indices

Closes #3217

time:
2013-07-16T08:49:05Z
class:
src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoShapeIntegrationTests.java
comments:
Fixed nullshape indexing.
Closes #3310

time:
2013-07-16T08:29:48Z
class:
src/test/java/org/elasticsearch/test/integration/nested/SimpleNestedTests.java
comments:
Removed useless TODO

time:
2013-07-16T08:28:10Z
class:
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
comments:
rename variable and add comment about TopDocs#merge

time:
2013-07-16T07:59:02Z
class:
src/test/java/org/elasticsearch/test/integration/nested/SimpleNestedTests.java
comments:
Added statistical facet to term facet in SimpleNestedTests

The test now uses a statistical facet plus a filter facet on nested documents.

time:
2013-07-16T07:22:12Z
class:
src/main/java/org/elasticsearch/common/util/concurrent/AtomicArray.java
comments:
AtomicArray.toArray will now throw an exception if target array if of the wrong size.

time:
2013-07-15T21:03:21Z
class:
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
comments:
Add info to _cat/nodes, add _cat/indices.

time:
2013-07-15T20:44:57Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java
src/main/java/org/elasticsearch/common/util/concurrent/AtomicArray.java
src/test/java/org/elasticsearch/benchmark/stress/SingleThreadBulkStress.java
src/test/java/org/elasticsearch/test/stress/indexing/BulkIndexingStressTest.java
comments:
Using AtomicArray to collect responses in mget and bulk indexing (instead of synchronised)

time:
2013-07-15T16:02:39Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/RoutingFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/test/java/org/elasticsearch/test/unit/index/mapper/routing/RoutingTypeMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/timestamp/TimestampMappingTests.java
comments:
Fix xcontent serialization of timestamp/routing index field

The index field was serialized as a boolean instead of showing the
'analyed', 'not_analzyed', 'no' options. Fixed by calling
indexTokenizeOptionToString() in the builder.

Closes #3174

time:
2013-07-15T15:31:49Z
class:
src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java
comments:
fixed existing test and linked it to its issue

time:
2013-07-15T14:03:24Z
class:
comments:
Debian/Redhat package improvments

This decision helps people who want to rollout the oracle java without having an openjdk java installed.

* Removed any hard dependency on Java in the debian package
* The debian init script does not check for an existing JAVA_HOME anymore
* Debian and RedHat initscripts now exit if they do not find a java binary (instead of starting elasticsearch in the background and swallowing the error as there is no way to log it in that case)
* Changed the debian init script to rely on the pid file instead of the argument name of process
* Added a useful error message in case no java binary is available (in elasticsearch shell script)

Closes #3304
Closes #3311

time:
2013-07-15T13:40:58Z
class:
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/StringScriptDataComparator.java
src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java
comments:
Set spare becore comparing comparator bottom value

The actual documents value was never calculated if setSpare wasn't called
before compareBottom was called on a certain document.

Closes #3309

time:
2013-07-15T13:08:43Z
class:
src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java
comments:
Add found field for bulk deletes. Closes #3320

time:
2013-07-15T13:04:56Z
class:
comments:
Tests for indices.exists

time:
2013-07-15T13:01:48Z
class:
comments:
Delete mapping tests

also testing exists_type

time:
2013-07-15T12:55:46Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/TransportAliasesExistAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/BaseAliasesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesResponse.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java
src/main/java/org/elasticsearch/client/IndicesAdminClient.java
src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/head/RestAliasesExistAction.java
src/test/java/org/elasticsearch/test/integration/aliases/IndexAliasesTests.java
comments:
Renamed IndicesGetAliases* classes to begin with GetAliases*

time:
2013-07-15T12:54:28Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchCountAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScanAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/search/controller/ScoreDocQueue.java
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/main/java/org/elasticsearch/search/controller/ShardDoc.java
src/main/java/org/elasticsearch/search/controller/ShardFieldDoc.java
src/main/java/org/elasticsearch/search/controller/ShardFieldDocSortedHitQueue.java
src/main/java/org/elasticsearch/search/controller/ShardScoreDoc.java
comments:
move to use ScoreDoc/FieldDoc instead of our wrappers
now that we have the concept of a shardIndex as part of our search execution, we can simply move to use ScoreDoc and FieldDoc instead of having our own wrappers that held the info
Also, rename shardRequestId where needed to be called shardIndex to conform with the variable name in Lucene

time:
2013-07-15T12:53:32Z
class:
comments:
tests for get_mapping

time:
2013-07-15T12:50:48Z
class:
src/main/java/org/elasticsearch/action/termvector/TransportSingleShardTermVectorAction.java
comments:
fix term vector api retrieved wrong doc

The previous loading of term vectors from the top level reader did not use the
correct docId. The docId in Versions.DocIdAndVersion  is relative to the segment
reader in Versions.DocIdAndVersion and not to the top level reader.
Consequently the term vectors for the wrong document were returned if the
document was not on the first segment of the shard.

time:
2013-07-15T12:43:27Z
class:
comments:
Add basic tests for put mapping

time:
2013-07-15T12:33:44Z
class:
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/main/java/org/elasticsearch/search/controller/ShardFieldDocSortedHitQueue.java
comments:
move the fields doc queue to a better package location

time:
2013-07-15T12:28:09Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/AliasesExistResponse.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/TransportAliasesExistAction.java
src/main/java/org/elasticsearch/client/IndicesAdminClient.java
src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/head/RestAliasesExistAction.java
src/test/java/org/elasticsearch/test/integration/aliases/IndexAliasesTests.java
comments:
Rename IndicesAdminClient#existsAliases to IndicesAdminClient#aliasesExist.
Closes #3330

time:
2013-07-15T12:21:35Z
class:
src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java
src/main/java/org/elasticsearch/common/lucene/uid/Versions.java
src/main/java/org/elasticsearch/index/get/ShardGetService.java
comments:
Rename DocIdAndVersion.reader to DocIdAndVersion.context to avoid confusion.

time:
2013-07-15T08:31:28Z
class:
comments:
fixed parent/routing mget tests - missing fields parameter

time:
2013-07-15T07:58:10Z
class:
src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java
src/test/java/org/elasticsearch/test/integration/mget/SimpleMgetTests.java
comments:
multiget requests which referred to missing indexes blocked and never returned.

time:
2013-07-14T13:44:57Z
class:
comments:
Unicode in parent/routing

time:
2013-07-14T13:43:07Z
class:
comments:
unicode in index name, dot in type name

time:
2013-07-14T13:37:55Z
class:
comments:
Sprinkle some unicode in GET tests

time:
2013-07-13T22:51:54Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchCache.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchCountAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchHelper.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScanAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/common/lucene/search/ShardFieldDocSortedHitQueue.java
src/main/java/org/elasticsearch/common/util/concurrent/AtomicArray.java
src/main/java/org/elasticsearch/search/controller/ScoreDocQueue.java
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/main/java/org/elasticsearch/search/controller/ShardDoc.java
src/main/java/org/elasticsearch/search/controller/ShardFieldDoc.java
src/main/java/org/elasticsearch/search/controller/ShardScoreDoc.java
comments:
search reducer to use atomic reference arrays
move away from maps to correlate between responses from different shards to unique incremental integer representing a shardRequestId (unique for the specific search request)

 this allows to no longer require using maps (or CHM), and simply use atomic reference arrays, which rely on volatiles. it also removes the need to use a cache for heavy data structures since we don't really have them around anymore...

time:
2013-07-13T15:23:14Z
class:
src/main/java/org/elasticsearch/search/count/CountSearchResult.java
comments:
remove unused class

time:
2013-07-12T23:00:45Z
class:
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java
src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java
src/main/java/org/elasticsearch/action/count/TransportCountAction.java
src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java
src/main/java/org/elasticsearch/cache/recycler/CacheRecycler.java
src/main/java/org/elasticsearch/cache/recycler/CacheRecyclerModule.java
src/main/java/org/elasticsearch/cache/recycler/DefaultCacheRecycler.java
src/main/java/org/elasticsearch/cache/recycler/NoneCacheRecycler.java
src/main/java/org/elasticsearch/client/transport/TransportClient.java
src/main/java/org/elasticsearch/common/CacheRecycler.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java
src/main/java/org/elasticsearch/index/search/child/HasParentFilter.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/main/java/org/elasticsearch/search/facet/InternalFacet.java
src/main/java/org/elasticsearch/search/facet/datehistogram/CountDateHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/datehistogram/DateHistogramFacetParser.java
src/main/java/org/elasticsearch/search/facet/datehistogram/InternalCountDateHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/datehistogram/InternalFullDateHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/datehistogram/ValueDateHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/datehistogram/ValueScriptDateHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/filter/InternalFilterFacet.java
src/main/java/org/elasticsearch/search/facet/geodistance/InternalGeoDistanceFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/CountHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/histogram/FullHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/histogram/InternalCountHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/InternalFullHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/ScriptHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/histogram/ValueHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/histogram/ValueScriptHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/query/InternalQueryFacet.java
src/main/java/org/elasticsearch/search/facet/range/InternalRangeFacet.java
src/main/java/org/elasticsearch/search/facet/statistical/InternalStatisticalFacet.java
src/main/java/org/elasticsearch/search/facet/terms/TermsFacetParser.java
src/main/java/org/elasticsearch/search/facet/terms/doubles/InternalDoubleTermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/doubles/TermsDoubleFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/longs/InternalLongTermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/longs/TermsLongFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/InternalStringTermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/strings/ScriptTermsStringFieldFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/TermsStringOrdinalsFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/termsstats/doubles/InternalTermsStatsDoubleFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/doubles/TermsStatsDoubleFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/termsstats/longs/InternalTermsStatsLongFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/longs/TermsStatsLongFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/termsstats/strings/InternalTermsStatsStringFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/strings/TermsStatsStringFacetExecutor.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/test/java/org/elasticsearch/test/unit/index/aliases/IndexAliasesServiceTests.java
src/test/java/org/elasticsearch/test/unit/index/percolator/PercolatorExecutorTests.java
src/test/java/org/elasticsearch/test/unit/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/test/unit/index/query/guice/IndexQueryParserModuleTests.java
src/test/java/org/elasticsearch/test/unit/index/query/plugin/IndexQueryParserPlugin2Tests.java
src/test/java/org/elasticsearch/test/unit/index/query/plugin/IndexQueryParserPluginTests.java
comments:
cache recycler now node/client level component

time:
2013-07-12T16:26:18Z
class:
comments:
Update text ids

time:
2013-07-11T20:48:49Z
class:
src/main/java/jsr166e/CompletableFuture.java
src/main/java/jsr166e/ForkJoinPool.java
src/main/java/jsr166e/StampedLock.java
comments:
latest jsr166 upgrade only compiled with 1.7

time:
2013-07-11T12:04:16Z
class:
comments:
mget ids and formatting

time:
2013-07-11T11:52:20Z
class:
comments:
more numeric ids

time:
2013-07-11T11:52:03Z
class:
comments:
fixing old format of indices.analyze tests

time:
2013-07-11T11:51:36Z
class:
comments:
lucene_version is only in es sine 0.90.1

time:
2013-07-11T11:50:59Z
class:
comments:
skip clause for get_source tests

time:
2013-07-11T00:32:35Z
class:
comments:
text ids

time:
2013-07-10T20:09:04Z
class:
src/main/java/jsr166e/CompletableFuture.java
src/main/java/jsr166e/ConcurrentHashMapV8.java
src/main/java/jsr166e/CountedCompleter.java
src/main/java/jsr166e/ForkJoinPool.java
src/main/java/jsr166e/ForkJoinTask.java
src/main/java/jsr166e/ForkJoinWorkerThread.java
src/main/java/jsr166e/StampedLock.java
src/main/java/jsr166e/extra/AtomicDouble.java
src/main/java/jsr166e/extra/AtomicDoubleArray.java
src/main/java/jsr166e/package-info.java
src/main/java/jsr166y/package-info.java
comments:
update to latest jsr166

time:
2013-07-10T12:18:37Z
class:
comments:
text ids

time:
2013-07-10T12:16:04Z
class:
comments:
Text ids

time:
2013-07-10T12:10:53Z
class:
comments:
IDs are stings in json returned by ES, respect that

time:
2013-07-09T16:55:56Z
class:
src/main/java/org/elasticsearch/cloud/gce/GceModule.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceAbstractTest.java
comments:
Changes after @imotov review.

time:
2013-07-09T12:06:48Z
class:
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
comments:
Added an error message for when child mapping is not properly configured (incorrect type)

time:
2013-07-08T20:44:18Z
class:
comments:
Make documentation more readable

time:
2013-07-08T13:44:24Z
class:
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceComputeServiceAbstractMock.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceDifferentTagsTest.java
comments:
Add support for metadata `es_port`. If you run on a specific port, it will indicate it to GCE plugin. By default, `9300` will be used.

time:
2013-07-08T13:15:41Z
class:
src/main/java/org/elasticsearch/cloud/gce/GceComputeServiceImpl.java
src/main/java/org/elasticsearch/cloud/gce/GceModule.java
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
src/main/java/org/elasticsearch/plugin/cloud/gce/CloudGcePlugin.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceAbstractTest.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceComputeServiceAbstractMock.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceComputeServiceTwoNodesDifferentTagsMock.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceComputeServiceTwoNodesSameTagsMock.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceDifferentTagsTest.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceSameTagsTest.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceSimpleTest.java
comments:
Adding JUnit test using GCE API Mock

time:
2013-07-08T12:31:06Z
class:
src/main/java/org/elasticsearch/search/highlight/PlainHighlighter.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
comments:
Don't reset TokenStreams twice when highlighting.

When using PlainHighlighter, TokenStreams are resetted both before highlighting
and at the beginning of highlighting, causing issues with analyzers that read
in reset() such as PatternAnalyzer. This commit removes the call to reset which
was performed before passing the TokenStream to the highlighter.

Close #3200

time:
2013-07-06T21:12:52Z
class:
src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java
src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/ThrottlingAllocationDecider.java
comments:
optimize reroute
- optimize initialization of building the all the assigned shards state
- optimize iteration in throttling allocation decider

time:
2013-07-06T17:56:36Z
class:
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslogFile.java
src/main/java/org/elasticsearch/index/translog/fs/SimpleFsTranslogFile.java
src/main/java/org/elasticsearch/indices/memory/IndexingMemoryController.java
comments:
automatically set translog buffer size based on number of shards
similar to how we set the indexing buffer size, automatically set the translog buffer size based on the number of shards allocated on a node

time:
2013-07-06T17:42:34Z
class:
src/main/java/org/elasticsearch/rest/StringRestResponse.java
src/main/java/org/elasticsearch/rest/Utf8RestResponse.java
comments:
make utf8 bytes response not reuse thread local buffer
no need, optimized conversion to bytes anyhow, and when sending, it will just get wrapped by a buffer

time:
2013-07-06T05:47:27Z
class:
src/main/java/org/elasticsearch/common/inject/spi/Elements.java
comments:
guice optimization
only under debug logging use the source provider to find the line number through stack trace elements, otherwise, its very expensive

time:
2013-07-06T02:07:08Z
class:
src/main/java/org/apache/lucene/analysis/CustomAnalyzerWrapper.java
src/main/java/org/elasticsearch/index/analysis/AnalysisService.java
src/main/java/org/elasticsearch/index/analysis/NamedAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NamedCustomAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericDoubleAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericFloatAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericIntegerAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NumericLongAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerProviderFactory.java
src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java
comments:
properly reuse indices analyzers
don't wrap in AnalysisService the indices analyzers we have with a NamedAnalyzer, since its effectively creates a new instance of an analyzer (with per field reuse strategy) and we don't benefit as much from reusing analyzers on the indices / node level

Now, the indices level analyzers return a NamedAnalyzer, also NamedAnalyzer will use the non per field reuse strategy since thats really the common case for it (no need for per field reuse there).

Also, try and reuse numeric analyzers globally instead of creating them per numeric mapper. Although those analyzers are not used during indexing (we have a custom numeric field for it), they can be used sometimes when searching in a query string for example without specific query implemenation in the mappers
Hi kimchy,
This asserts makes the analyzer plugin of one of our customers no longer working. They had a lot of own Analyzers that are plugged into ES using a Analyzer plugin that registers the custom analyzer instances by name in ES.
Some of those Analyzers use Lucene's original AnalyzerWrapper.
I don't see a reason for this assert: You state that ES only uses each analyzer solely for one field, so if the underlying analyzer uses another strategy it is no problem at all.

In my opinion: The correct fix here would be to open an issue on Lucene to expose a getter for the reuse strategy so the NamedAnalyzer can reuse the same strategy of the wrapped analyzer. Should I open issue and fix this in Lucene?

Uwe

I agree!, would love to see that in Lucene, I talked to @jpountz to add it so we can properly use it from Lucene. For now, I am ok with removing the assert, open a pull request?

I don't use GIT, so I would need to setup it here, so it is easier to just remove this line - I don't care about the attribution :-) I will open an issue and fix this in Lucene.

sure, I will fix it.

See: https://issues.apache.org/jira/browse/LUCENE-5170


time:
2013-07-06T00:30:09Z
class:
src/main/java/org/elasticsearch/common/inject/InheritingState.java
src/main/java/org/elasticsearch/common/inject/InjectorImpl.java
src/main/java/org/elasticsearch/common/inject/ModulesBuilder.java
src/main/java/org/elasticsearch/common/inject/State.java
src/main/java/org/elasticsearch/common/inject/internal/InternalFactory.java
comments:
optimize guice injector once created

in guice, we always use eager loaded singletons for all modules we create, thus, we can actually optimize the memory used by injectors by reduced the construction information they store per binding resulting in extensive reduction in memory usage for many indices/shards case on a node

 also because all are eager singletons (and effectively, read only), we can not go through trying to create just in time bindings in the parent injector before trying to craete it in the current injector, resulting in improvement of object creations time and the time it takes to create an index or a shard on a node

time:
2013-07-06T00:30:09Z
class:
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
comments:
optimize applyDeletes event
- reuse set
- don't copy over again the shard ids immutable set

time:
2013-07-05T14:26:50Z
class:
src/test/java/org/elasticsearch/test/unit/common/xcontent/support/XContentMapValuesTests.java
comments:
fixed casting that caused compilation errors with JDK7

time:
2013-07-05T10:51:07Z
class:
src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java
src/test/java/org/elasticsearch/test/unit/common/xcontent/support/XContentMapValuesTests.java
comments:
added support for a prefix wild card (*.field) in includes

time:
2013-07-04T23:58:59Z
class:
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
comments:
Add /_cat/nodes.

time:
2013-07-04T23:58:57Z
class:
src/main/java/org/elasticsearch/rest/action/support/RestTable.java
comments:
Don't consider header width if not printed.

time:
2013-07-04T23:58:53Z
class:
src/main/java/org/elasticsearch/common/Table.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
comments:
Use standard CSS separator.

time:
2013-07-04T23:26:30Z
class:
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/cat/RestMasterAction.java
comments:
Add /_cat/master.

% curl localhost:9200/_cat/master
id                     ip             node
Zdumn8bkTuOGRLfr9JL8jQ 192.168.20.109 Petros, Dominic

time:
2013-07-04T20:59:36Z
class:
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
comments:
when thread pool queue size is negative use unbounded queue

time:
2013-07-04T20:27:44Z
class:
src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
comments:
Simplified the rewrite logic for the parent/child queries.

time:
2013-07-04T17:55:00Z
class:
src/test/java/org/elasticsearch/benchmark/percolator/EmbeddedPercolatorBenchmarkTest.java
comments:
Fixed embedded percolator benchmark

time:
2013-07-04T13:57:13Z
class:
comments:
Updated maven shade plugin to version 2.1

The currently used maven shade plugin still keeps references to the
original classes in their constant pools around. This is never a problem
at runtime, but for dependency tools which try to use the constant pool
for determining dependencies will get confused (OSGI for example). This
patch simply bumps the version and will implicetely fix
fix http://jira.codehaus.org/browse/MSHADE-105

Closes #3254
Closes #3255

time:
2013-07-04T13:51:26Z
class:
src/test/java/org/elasticsearch/test/unit/common/lucene/search/TermsFilterTests.java
comments:
Fix test, because of term filter change.

time:
2013-07-04T12:40:38Z
class:
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
comments:
only ask for the relevant stats

time:
2013-07-04T11:02:45Z
class:
src/main/java/org/elasticsearch/common/lucene/docset/DocIdSets.java
src/main/java/org/elasticsearch/common/lucene/search/TermFilter.java
comments:
Changed the TermFilter to return a native DocIdSetIterator instead of the FixedBitSet's implementation.

This has two advantages in the case term filter is *not* cached:
 * We iterate only once over the matching docs. Before this fix we iterated once to create the FBS and another time the consume the matching docs from the FBS.
 * The DocIdSetIterator#cost method of a DocIdSetIterator from the DocsEnum is accurate, because it based on the document frequency whereas the cost method of the FBS' iterator impl is based on the total number of bits (which is based on maxDoc). This will make this filter execute faster when it is included in a filtered query, because the filtered query can base its decision on what strategy to pick on an accurate heuristic.

 This change doesn't have any negative implications in the case a filter is cached (which is the default). The FBS is now created lazily in the DocIdSets#toCacheable method, which is always invoked when the term filter needs to be cached.

time:
2013-07-04T08:22:45Z
class:
src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java
src/test/java/org/elasticsearch/test/unit/common/xcontent/support/XContentMapValuesTests.java
comments:
Filtering maps had false hit is a field was a prefix (but not a match) of an include. Also, exact matching a key whose value is an object resulted in an empty value.

Closes #3288

time:
2013-07-03T19:37:16Z
class:
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/HasChildFilter.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
comments:
Fixes class cast exception when`top_children`, `has_child` and `has_parent` queries are cached via `fquery` filter.
The error only occurs for `has_child` and `has_parent` if `score_mode` is used.
Closes #3290

time:
2013-07-03T19:05:20Z
class:
src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsResponse.java
src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java
src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java
src/main/java/org/elasticsearch/common/Table.java
src/main/java/org/elasticsearch/common/table/Align.java
src/main/java/org/elasticsearch/common/table/Cell.java
src/main/java/org/elasticsearch/common/table/Row.java
src/main/java/org/elasticsearch/common/table/Table.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/cat/RestMasterAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
src/main/java/org/elasticsearch/rest/action/support/RestTable.java
comments:
more cat support
- add attributes to each cell
- change how it gets rendered, allow for other formats
- various other changes

time:
2013-07-03T08:53:41Z
class:
src/main/java/org/elasticsearch/common/geo/GeoJSONShapeParser.java
src/main/java/org/elasticsearch/common/geo/GeoJSONShapeSerializer.java
src/main/java/org/elasticsearch/common/geo/ShapeBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/BaseLineStringBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/BasePolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/EnvelopeBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/LineStringBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiLineStringBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiPointBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/MultiPolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/PointBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/PointCollection.java
src/main/java/org/elasticsearch/common/geo/builders/PolygonBuilder.java
src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoShapeFieldMapper.java
src/main/java/org/elasticsearch/index/query/FilterBuilders.java
src/main/java/org/elasticsearch/index/query/GeoShapeFilterBuilder.java
src/main/java/org/elasticsearch/index/query/GeoShapeFilterParser.java
src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java
src/main/java/org/elasticsearch/index/query/GeoShapeQueryParser.java
src/main/java/org/elasticsearch/index/query/QueryBuilders.java
src/main/java/org/elasticsearch/index/search/shape/ShapeFetchService.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoFilterTests.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoShapeIntegrationTests.java
src/test/java/org/elasticsearch/test/unit/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/test/unit/common/geo/GeoJSONShapeSerializerTests.java
src/test/java/org/elasticsearch/test/unit/common/geo/ShapeBuilderTests.java
comments:
Geo-Refactoring
===============
The code handling geo-shapes is not centralized and creating points takes
place at different places. Also the collection of supported geo_shapes is
not complete regarding to the GEOJSon specification. This commit
centralizes the code related to GEO calculations and extends the old API by
a set of new shapes.

Null-Shapes
===========
The latest implementation of geo-shapes allows to index null-shapes. This
means a field that is defined to hold a geo-shape can be set to null. In
example:
    {

        "shape": null
    }

New Shapes
==========
The geo-shapes multipoint and multilinestring have been added to the
geo_shape types. Also geo_circle is introduced by this commit.

Dateline wrapping
=================
A major issue of geo-shapes is the spherical geometry. Since ElasticSearch
works on the Geo-Coordinates by wrapping the Earths surface to a plane,
some shapes are hard to define if it’s crossing the +180°, -180 longitude.
To solve this issue ElasticSearch offers the possibility to define geo
shapes crossing this borders and decompose these shapes and automatically
re-compose them in a spherical manner. This feature may change the indexed
shape-type. If for example a polygon is defined, that crosses the dateline,
it will be re-assembled to a set of polygons. This causes indexing a
multipolygon. Also linestrings crossing the dateline might be re-assembled
to multilinestrings.

Builders
========
The API has been refactored to use builders instead of using shapes. So
parsing geo-shapes will result in builder objects. These builders can be
parsed and serialized without generating any shapes. this causes shape
generation only on the nodes executing the actual operation. Also the
baseclass ShapeBuilder implements the ToXContent interface which allows to
set fields of XContent directly.

TODO’s
======
 - The geo-circle will not work, if it’s crossing the dateline
 - The envelope also needs to wrapped

Closes #1997 #2708

time:
2013-07-03T08:31:32Z
class:
src/test/java/org/elasticsearch/test/unit/common/table/TableTests.java
comments:
remove table tests for now

time:
2013-07-03T04:40:22Z
class:
src/main/java/org/elasticsearch/rest/action/cat/RestMasterAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
comments:
Prefer getHostAddress().

time:
2013-07-03T04:30:59Z
class:
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
comments:
Add relocation info to _cat/shards.

time:
2013-07-03T04:17:02Z
class:
src/main/java/org/elasticsearch/common/table/Table.java
comments:
Don't trim() table since we need the newline most of the time.

time:
2013-07-03T03:43:43Z
class:
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/cat/RestMasterAction.java
comments:
Add /_cat/master.

time:
2013-07-02T23:00:05Z
class:
src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsResponse.java
src/main/java/org/elasticsearch/cluster/routing/ImmutableShardRouting.java
src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java
src/main/java/org/elasticsearch/common/table/Align.java
src/main/java/org/elasticsearch/common/table/Cell.java
src/main/java/org/elasticsearch/common/table/Row.java
src/main/java/org/elasticsearch/common/table/Table.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
src/test/java/org/elasticsearch/test/unit/common/table/TableTests.java
comments:
Start cat api with shards endpoint.

time:
2013-07-02T10:10:35Z
class:
src/main/java/org/elasticsearch/action/ActionRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestBuilder.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequestBuilder.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java
src/test/java/org/elasticsearch/test/integration/document/BulkTests.java
src/test/java/org/elasticsearch/test/integration/routing/AliasRoutingTests.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
comments:
simplify builder API with simpler get()
also simplify some common API calls, for example, a simplified format in Java API for providing mapping

time:
2013-07-02T09:59:14Z
class:
src/main/java/org/elasticsearch/search/fetch/FetchPhase.java
comments:
_source could be loaded twice from disk

 if only partial_fields was specified or fields needed to be extracted from _source the source it self isn't needed to be returned.

time:
2013-07-02T09:28:50Z
class:
comments:
Improved formatting of test README

time:
2013-07-02T06:51:55Z
class:
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/test/java/org/elasticsearch/test/integration/mget/SimpleMgetTests.java
comments:
Support for parent in multi get request

When specifying the docs to be returned in a multi get request, a parent
field could not be specified, so that some docs seemingly did not exist,
even though they did.

This fix behaves like the normal GetRequest and simply overwrites the
routing value if it has not yet been set.

Also a test for routing with mget has been added.

Closes #3274

time:
2013-07-01T21:17:14Z
class:
src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java
src/main/java/org/elasticsearch/cloud/gce/GceComputeServiceImpl.java
src/main/java/org/elasticsearch/cloud/gce/GceModule.java
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
src/main/java/org/elasticsearch/plugin/cloud/gce/CloudGcePlugin.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceComputeServiceMock.java
comments:
Trying to Mock GCE API for tests

time:
2013-07-01T19:47:46Z
class:
src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java
src/main/java/org/elasticsearch/common/xcontent/support/AbstractXContentParser.java
src/main/java/org/elasticsearch/common/xcontent/support/XContentMapConverter.java
comments:
(Java) Using primitive arrays instead of Object with map/builder
also simplify and consolidate the builder generic value write handling
fixes #3279

time:
2013-07-01T16:13:05Z
class:
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
comments:
By default, we don't cache GCE API calls
`refresh_interval` = 0.

time:
2013-07-01T15:56:41Z
class:
src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java
src/main/java/org/elasticsearch/discovery/gce/GceDiscovery.java
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
comments:
Move all discovery process to GceUnicastHostsProvider
We want to be able to rebuild the full list of existing nodes each time we need it so we don't want to have a fixed list of nodes.

time:
2013-07-01T15:15:17Z
class:
src/main/java/org/elasticsearch/rest/action/get/RestHeadAction.java
comments:
Parent was ignored in exists request

The routing was always set to null right after the parent was set.

Closes #3276

time:
2013-07-01T14:03:37Z
class:
comments:
Added tests for exists, get_source and mget

time:
2013-07-01T14:03:03Z
class:
comments:
Clarified that testing a field called "" (empty string) tests the whole $var

time:
2013-07-01T14:02:38Z
class:
comments:
Added realtime/refresh tests to get

time:
2013-07-01T14:01:24Z
class:
comments:
meta-fields test should be fixed in 0.90.3

time:
2013-07-01T14:00:58Z
class:
comments:
Added test with missing type to get

time:
2013-07-01T14:00:42Z
class:
comments:
Added a test with wrong parent to delete

time:
2013-07-01T14:00:12Z
class:
comments:
Test for missing parent param when parent enabled in index/create/update

time:
2013-07-01T13:58:23Z
class:
comments:
Renamed "ok" and "not_ok" to "is_true" and "is_false"
and tidied up the layout to make it easier to read

time:
2013-07-01T11:48:27Z
class:
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
comments:
Supports mget fields parameter given as string.

Closes 3270

time:
2013-07-01T11:14:16Z
class:
comments:
Mget doesn't support "parent" and "routing" params in the query string
Why have you removed `routing` query param?
I think it's a mistake. You told the same day that `parent` is not supported, but `routing` is here: https://github.com/elastic/elasticsearch/issues/3274
The param is missing through `2.x`.
Documentation tells that `routing` is supported: https://www.elastic.co/guide/en/elasticsearch/reference/2.0/docs-multi-get.html#mget-routing
I think `routing` param should be brought back in `2.x`

Thanks @serg3ant - I've opened https://github.com/elastic/elasticsearch/pull/21357

time:
2013-07-01T07:43:43Z
class:
src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java
src/test/java/org/elasticsearch/test/integration/mget/SimpleMgetTests.java
comments:
Stop aborting of multiget requests in case of missing index

The MultiGet API stops with a IndexMissingException, if only one of all
requests tries to access a non existing index. This patch creates a
failure for this item without failing the whole request.

Closes #3267

time:
2013-06-30T18:02:32Z
class:
comments:
Wait-for-yellow IS required for routing, otherwise can get
shard-not-available instead of missing

time:
2013-06-30T16:50:22Z
class:
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
comments:
Clean up update tests

time:
2013-06-30T16:50:22Z
class:
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
comments:
Changes validation error message

time:
2013-06-30T16:49:37Z
class:
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
comments:
Fixes issue that in some cases the doc_as_upsert option is ignored.
Closes #3265

time:
2013-06-29T09:41:09Z
class:
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/cache/id/simple/SimpleIdCache.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/test/java/org/elasticsearch/test/unit/index/cache/id/SimpleIdCacheTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/DoubleFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/FloatFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/LongFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/StringFieldDataTests.java
comments:
Ignore live docs when loading field data, the ID cache and filter caches.

Relying on deleted documents when loading field data is dangerous because a
field data instance might be loaded for a given generation of a segment and
then loaded from the cache by an older generation of the same segment which
has fewer deleted documents. This could, for example, lead to under-estimated
facet counts. The same issue applies to the ID cache and filter caches.

Close #3224

time:
2013-06-28T17:44:13Z
class:
comments:
Added tests for update()

time:
2013-06-28T17:42:37Z
class:
comments:
wait-for-yellow is not required for the routing tests

time:
2013-06-28T15:42:00Z
class:
comments:
Added test skipping to the README

time:
2013-06-28T15:22:32Z
class:
comments:
Added tests for delete

time:
2013-06-28T15:22:32Z
class:
comments:
Added ignore_missing test to get/10_basic

time:
2013-06-28T15:02:22Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
Fix misspelling.

time:
2013-06-28T14:29:40Z
class:
comments:
Update documentation.
Thanks to @spinscale

time:
2013-06-28T14:27:13Z
class:
comments:
Google service account name is not required

time:
2013-06-28T14:25:19Z
class:
comments:
Update documentation.
Thanks to @spinscale

time:
2013-06-28T13:49:18Z
class:
src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java
comments:
Ignore TERMINATED instances
When an instance is removed, its status become `TERMINATED`.
As stated in [GCE Documentation](https://developers.google.com/compute/docs/instances#checkmachinestatus):

> TERMINATED - The instance either failed for some reason or was shutdown. This is a permanent status, and the only way to repair the instance is to delete and recreate it.

So we need to ignore instances with such a status.

Closes #3.

time:
2013-06-28T13:44:52Z
class:
src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java
comments:
Filtering by tags
-----------------

The GCE discovery can also filter machines to include in the cluster based on tags using `discovery.gce.tags` settings.
For example, setting `discovery.gce.tags` to `dev` will only filter instances having a tag set to `dev`. Several tags
set will require all of those tags to be set for the instance to be included.

One practical use for tag filtering is when an GCE cluster contains many nodes that are not running
elasticsearch. In this case (particularly with high ping_timeout values) there is a risk that a new node's discovery
phase will end before it has found the cluster (which will result in it declaring itself master of a new cluster
with the same name - highly undesirable). Adding tag on elasticsearch GCE nodes and then filtering by that
tag will resolve this issue.

Add your tag when building the new instance:

```sh
gcutil --project=es-cloud addinstance myesnode1 --service_account_scope=compute-rw --persistent_boot_disk \
       --tags=elasticsearch,dev
```

Then, define it in `elasticsearch.yml`:

```yaml
  cloud:
      gce:
          project_id: es-cloud
          zone: europe-west1-a
  discovery:
          type: gce
          gce:
                tags: elasticsearch, dev
```
Closes #2.

time:
2013-06-28T12:31:17Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
src/main/java/org/elasticsearch/rest/action/delete/RestDeleteAction.java
comments:
Fixes the issue that the `parent` option was ignored for delete requests.

The `parent` option was ignored in the delete api (rest only) and for delete actions in the bulk api.
This bug occurred in the case that the _parent field is enabled, and only the parent option was used. This resulted in a situation that documents are deleted even if the specified parent value is incorrect.

Closes #3257

time:
2013-06-28T11:24:32Z
class:
comments:
Updated elasticsearch.yml file for recovery throttling

time:
2013-06-28T11:12:52Z
class:
comments:
Moving forbidden-api checks to compile phase instead of test phase (fail fast)

time:
2013-06-28T10:07:34Z
class:
src/main/java/org/elasticsearch/search/suggest/SuggestParseElement.java
comments:
Dont execute suggest before parsing the full request

The current implementation of parsing suggestions executed inside of the
the pull parser - which resulted in being reliable of the order of the
elements in the request. This fix changes the behaviour to parse the
relevant parts of the request first and then execute all the suggestions
afterwards, so we can be sure that every information has been extracted
from the request before execution.

Closes #3247

time:
2013-06-28T08:28:08Z
class:
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/main/java/org/elasticsearch/indices/warmer/InternalIndicesWarmer.java
src/test/java/org/elasticsearch/test/integration/indices/wamer/SimpleIndicesWarmerTests.java
comments:
Make index.warmer.enabled setting dynamic

Even though proposed in the documentation, the realtime enabling/disabling of
index warmers was not supported. This commit adds support for
index.warmer.enabled as a dynamic setting.

Closes #3246

time:
2013-06-28T07:45:02Z
class:
src/main/java/org/elasticsearch/cloud/gce/GceComputeService.java
src/main/java/org/elasticsearch/cloud/gce/GceModule.java
src/main/java/org/elasticsearch/cloud/gce/GceSettingsFilter.java
src/main/java/org/elasticsearch/discovery/gce/GceDiscovery.java
src/main/java/org/elasticsearch/discovery/gce/GceDiscoveryModule.java
src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
src/main/java/org/elasticsearch/plugin/cloud/gce/CloudGcePlugin.java
src/test/java/org/elasticsearch/cloud/gce/tests/GceSimpleTest.java
comments:
Add cloud discovery for google compute engine
Google Compute Engine VM discovery allows to use the google APIs to perform automatic discovery (similar to multicast in non hostile
multicast environments). Here is a simple sample configuration:

```yaml
  cloud:
      gce:
          project_id: <your-google-project-id>
          zone: <your-zone>
  discovery:
          type: gce
```

How to start (short story)
--------------------------

* Create Google Compute Engine instance
* Install Elasticsearch
* Install Google Compute Engine Cloud plugin
* Modify `elasticsearch.yml` file
* Start Elasticsearch

Closes #1.

time:
2013-06-28T07:22:10Z
class:
comments:
Initial commit

time:
2013-06-27T22:23:13Z
class:
comments:
add running the tests in headless mode in maven

time:
2013-06-27T14:12:27Z
class:
src/main/java/org/elasticsearch/plugins/PluginManager.java
comments:
NPE in PluginManager when asking for list on non existing dir
Asking for list of installed plugins with no existing plugin dir:

```sh
$ bin/plugin --list
```

It causes a NPE in PluginManager.
Closes #3253.

time:
2013-06-27T10:55:16Z
class:
comments:
Added a README explaining the functionality required to run the test suite

time:
2013-06-27T09:34:44Z
class:
comments:
Added tests for get

time:
2013-06-27T09:34:43Z
class:
comments:
Added tests for create

time:
2013-06-27T09:34:43Z
class:
comments:
Fixed tests for info, ping and index

time:
2013-06-27T09:34:43Z
class:
comments:
Added tests for info, ping and index

time:
2013-06-26T20:22:23Z
class:
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java
src/main/java/org/elasticsearch/index/fielddata/IndexNumericFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/plain/ByteArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ByteArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/DoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FloatArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/GeoPointDoubleArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/IntArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/IntArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/LongArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ShortArrayAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ShortArrayIndexFieldData.java
src/test/java/org/elasticsearch/benchmark/fielddata/LongFieldDataBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/facet/HistogramFacetSearchBenchmark.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/AbstractFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ByteFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/IntFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/LongFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ShortFieldDataTests.java
src/test/java/org/elasticsearch/test/unit/index/search/nested/ByteNestedSortingTests.java
src/test/java/org/elasticsearch/test/unit/index/search/nested/IntegerNestedSortingTests.java
src/test/java/org/elasticsearch/test/unit/index/search/nested/LongNestedSortingTests.java
src/test/java/org/elasticsearch/test/unit/index/search/nested/ShortNestedSortingTests.java
comments:
Merge integer field data implementations.

This commit merges field data implementations for byte, short, int and long
data into PackedArrayAtomicFieldData which uses Lucene's PackedInts API to
store data.

Close #3220

time:
2013-06-26T16:49:50Z
class:
src/main/java/org/elasticsearch/plugins/PluginManager.java
comments:
PluginManager fails with unknown command when passing url or verbose parameters
Closes #3245.

time:
2013-06-26T14:57:13Z
class:
src/main/java/org/elasticsearch/index/merge/policy/IndexUpgraderMergePolicy.java
src/test/java/org/elasticsearch/test/unit/common/lucene/uid/VersionsTests.java
comments:
Fix field number attribution to _version.

IndexUpgraderMergePolicy assumed that field numbers were dense and that
fieldInfos.size() was a free field number. This can however be wrong for a
segment which doesn't have one or more fields that some older segments have.

Close #3237

time:
2013-06-26T14:51:47Z
class:
comments:
Put Eclipse settings in the root directory.

This enforces that settings are taken into account whichever mean is used to
import the project into Eclipse (manual import, m2e, mvn eclipse:eclipse, ...).

time:
2013-06-26T13:25:18Z
class:
src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java
src/main/java/org/elasticsearch/index/analysis/PatternReplaceCharFilterFactory.java
src/test/java/org/elasticsearch/test/unit/index/analysis/AnalysisModuleTests.java
comments:
Added support for PatternReplaceCharFilter

PatternReplaceCharFilter allows the use of a regex to manipulate the characters in a string before analysis

Closes #3197

time:
2013-06-26T10:55:56Z
class:
src/main/java/org/elasticsearch/index/search/shape/ShapeFetchService.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoShapeIntegrationTests.java
comments:
fixed ShapeFetchService. closes #3242

time:
2013-06-26T08:02:54Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
add 0.90.3

time:
2013-06-26T07:45:57Z
class:
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/index/query/TermsLookupFilterBuilder.java
src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java
comments:
Terms Filter Lookup: Allow to disable caching of lookup terms
closes #3241

time:
2013-06-26T07:34:25Z
class:
src/main/java/org/elasticsearch/index/cache/filter/support/CacheKeyFilter.java
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java
comments:
Terms Filter Lookup: When on cache key defined, use terms values as key to filter cache
closes #3240

time:
2013-06-25T20:40:59Z
class:
src/main/java/org/elasticsearch/common/lucene/search/TermFilter.java
comments:
No need to fetch the freq for term filter

time:
2013-06-25T12:13:44Z
class:
src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
comments:
A small doc change to reflect StreamOutput.writeVInt() does support negative numbers but not efficiently. StreamOutput.writeVLong & StreamInput.readVLong really support it.

This is to better describe the current situation. We probably want to normalize these methods and potentially add optimization/support for -1 values.

time:
2013-06-25T11:38:10Z
class:
src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
comments:
Made the minimum score only active when executing the main query and not during the context rewrite phase.

This fixes parent/child queries when using minimum_score.

Closes #3203

time:
2013-06-25T10:16:08Z
class:
src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java
src/main/java/org/elasticsearch/common/geo/GeoPoint.java
src/main/java/org/elasticsearch/index/query/FilterBuilders.java
src/main/java/org/elasticsearch/index/query/GeohashFilter.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoFilterTests.java
comments:
The `geohash_cell` filter now adapts the format of other geo-filters. The oject fieldnames match the fieldnames document names automatically. This invalidates the `field` field in previeous versions. The value these fields value is a `geo_point` value (all formats supported) which is internally translated to a geohash. Since those points alway have a maximum precision (level 12) a `precision` definition has been included. This precision can either be defined as *length* of the geohash-string or as *distance*. It's assumed the a distance without any unit is a geohash-length.

```
GET 'http://127.0.0.1:9200/locations/_search?pretty=true' -d '{
    "query": {
        "match_all":{}
    },
    "filter": {
        "geohash_cell": {
			"pin": {
				"lat": 13.4080,
				"lon": 52.5186
			},
            "precision": 3,
            "neighbors": true
        }
    }
}'
```
Closes #3229

time:
2013-06-25T09:54:09Z
class:
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/index/query/TermsLookupFilterBuilder.java
src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java
src/main/java/org/elasticsearch/indices/cache/filter/terms/TermsLookup.java
comments:
Lookup Terms Filter ignores the routing parameter
fixes #3233

time:
2013-06-24T22:44:00Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/test/java/org/elasticsearch/test/integration/indices/leaks/IndicesLeaksTests.java
comments:
Deleting or closing an index doesn't clean the memory properly
fixes #3232

time:
2013-06-24T22:06:55Z
class:
src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java
comments:
properly set the set flag

time:
2013-06-24T20:09:53Z
class:
src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java
src/main/java/org/elasticsearch/index/analysis/ArabicNormalizationFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/PersianNormalizationFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/IndicesAnalysisService.java
src/test/java/org/elasticsearch/test/unit/index/analysis/AnalysisModuleTests.java
comments:
Added Arabic/PersianNormalizationFilters from Lucene

time:
2013-06-24T16:13:29Z
class:
comments:
[UTIL] Added a utility to print the list of APIs based on the JSON filenames

time:
2013-06-24T16:01:35Z
class:
src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java
comments:
only call terms lookup once and not per segment
There seems to be no code that sets this variable to true?


time:
2013-06-24T14:20:38Z
class:
src/test/java/org/elasticsearch/test/integration/search/geo/GeoFilterTests.java
comments:
Reduced geobulk data

time:
2013-06-24T13:34:44Z
class:
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
comments:
better handling of null filters when caching them

time:
2013-06-24T13:23:16Z
class:
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
comments:
Lookup Terms Filter _cache parameter not being taken into account
fixes #3219

time:
2013-06-24T12:13:27Z
class:
src/main/java/org/elasticsearch/common/io/Streams.java
src/main/java/org/elasticsearch/common/io/stream/InputStreamStreamInput.java
src/main/java/org/elasticsearch/index/analysis/NumericDateTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericDoubleTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericFloatTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericIntegerTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericLongTokenizer.java
src/main/java/org/elasticsearch/index/analysis/NumericTokenizer.java
src/main/java/org/elasticsearch/index/mapper/ip/IpFieldMapper.java
src/main/java/org/elasticsearch/search/highlight/PlainHighlighter.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/NumericAnalyzerTests.java
comments:
Fix NumericTokenizer.

NumericTokenizer is a simple wrapper aroung a NumericTokenStream. However, its
implementations had a few issues: its reset() method was not idempotent,
causing exceptions if reset() was called twice (causing #3211) and it had no
attributes, meaning that the only thing it allowed to do is counting the number
of generated tokens. The reason why indexing numeric data worked is that
the mapper's parseCreateField directly generates a NumericTokenStream and
by-passes the analyzer.

This commit makes NumericTokenizer.reset idempotent and makes consuming a
NumericTokenizer behave the same way as consuming the underlying
NumericTokenStream.

time:
2013-06-24T09:34:59Z
class:
src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java
src/main/java/org/elasticsearch/index/mapper/FieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/IdFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/main/java/org/elasticsearch/index/query/GeohashFilter.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoFilterTests.java
comments:
improve geohash_filter to use terms filter
and various other cleanups

time:
2013-06-22T19:25:01Z
class:
comments:
Added the "get_source" API

Specific endpoint for:

    curl -XGET 'http://localhost:9200/twitter/tweet/1/_source'

time:
2013-06-22T17:41:02Z
class:
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
comments:
Terms Filter Lookup: Failure when no mappings for the terms field exists (no data indexed)
closes #3216

time:
2013-06-22T17:16:44Z
class:
comments:
Fixed, that `body` is not required in the "explain" API

time:
2013-06-22T16:57:35Z
class:
comments:
Start adding the YAML test suite

time:
2013-06-22T15:04:21Z
class:
comments:
Added missing parameters to the "delete_by_query" API

(Added parameters related to qs queries.)

time:
2013-06-22T14:55:03Z
class:
comments:
Improved description for `index` parameter in "delete_by_query" API

time:
2013-06-22T09:28:14Z
class:
comments:
Added, that `body` is required in "percolate" API

time:
2013-06-21T20:35:25Z
class:
comments:
Added, that `body` is required in "msearch"

time:
2013-06-21T16:38:55Z
class:
comments:
Added, that `body` is required in "mget" API

time:
2013-06-21T16:02:22Z
class:
comments:
Added the `q` URL parameter to the `indices.validate_query` API

time:
2013-06-21T14:58:41Z
class:
comments:
[UTIL] Fixed whitespace in Ruby template for code generator

time:
2013-06-21T14:58:41Z
class:
comments:
Improved formatting of endpoint in `indices.stats`

time:
2013-06-21T10:44:17Z
class:
comments:
Changed body to be required in update_aliases

time:
2013-06-21T10:44:10Z
class:
comments:
Removed put_aliases as we already have update_aliases.

time:
2013-06-20T15:07:06Z
class:
comments:
Revert cfd49f8: type is required in "indices.put_mapping"

Fixed required, fixed the path

time:
2013-06-20T15:04:30Z
class:
src/test/java/org/elasticsearch/test/integration/search/basic/SearchWhileCreatingIndexTests.java
src/test/java/org/elasticsearch/test/integration/search/msearch/SimpleMultiSearchTests.java
comments:
stabelize more tests

time:
2013-06-20T14:38:52Z
class:
comments:
Fixed: `type` in "indices.put_mapping" is not required

time:
2013-06-20T13:13:58Z
class:
comments:
[UTIL] Set up `params` correctly in the Ruby template

When no params are specified in the spec, set `params` to empty Hash.

time:
2013-06-20T13:12:22Z
class:
comments:
[UTIL] Improve the body argument handling in the Ruby template

time:
2013-06-20T13:06:49Z
class:
comments:
[UTIL] Added support for required body in Ruby template for code generator

time:
2013-06-20T13:06:20Z
class:
comments:
Fixed: body is required in `indices.put_aliases`

time:
2013-06-20T13:05:37Z
class:
comments:
Fixed: body is not required in `indices.put_alias`

time:
2013-06-20T11:27:00Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/update/UpdateHelper.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
src/main/java/org/elasticsearch/index/VersionType.java
src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/document/BulkTests.java
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
src/test/java/org/elasticsearch/test/unit/index/VersionTypeTests.java
comments:
Added version support to update requests

Moved version handling from RobinEngine into VersionType. This avoids code re-use and makes it cleaner and easier to read.

Closes #3111

time:
2013-06-20T11:05:06Z
class:
comments:
Added the "Put Aliases" API

time:
2013-06-20T11:05:06Z
class:
comments:
Corrected `timeout` description in the `indices.get_aliases` API

time:
2013-06-20T11:05:06Z
class:
comments:
Added, that `index` and `name` are required for `indices.put_alias`

time:
2013-06-20T09:44:02Z
class:
comments:
Added timeout param to cluster.node_info

time:
2013-06-20T09:34:18Z
class:
comments:
Added "version" param to delete and update

time:
2013-06-20T09:21:19Z
class:
comments:
Revert "Corrected `indices.get_warmer` API (index not required, base path just `/_warmer`)"

This reverts commit 9834e49a86c609e0e7dc7e28e0ee94c97eb4628c.

time:
2013-06-20T09:04:45Z
class:
comments:
Corrected `indices.get_warmer` API (index not required, base path just `/_warmer`)

time:
2013-06-19T15:53:15Z
class:
comments:
Removed `index` and `name` parameters from the "Get Alias" API

time:
2013-06-19T15:39:04Z
class:
src/main/java/org/elasticsearch/index/analysis/Analysis.java
src/main/java/org/elasticsearch/index/analysis/AnalysisModule.java
src/main/java/org/elasticsearch/index/analysis/CommonGramsTokenFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/IndicesAnalysisService.java
src/test/java/org/elasticsearch/test/unit/index/analysis/commongrams/CommonGramsTokenFilterFactoryTests.java
comments:
Add Lucene CommonGrams/CommonGramsQuery token fiter
Both filters merged in a single "common_grams" tokenfilter.

Closes #3202

time:
2013-06-19T13:32:30Z
class:
comments:
In the index API, id should be specified in the URL, not the query string

time:
2013-06-19T13:12:20Z
class:
comments:
Clarified the information about utils in the README

time:
2013-06-19T13:01:46Z
class:
comments:
In indices.put_mapping, the type is required

time:
2013-06-19T12:35:02Z
class:
src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/main/java/org/elasticsearch/index/query/FilterBuilders.java
src/main/java/org/elasticsearch/index/query/GeoBoundingBoxFilterBuilder.java
src/main/java/org/elasticsearch/index/query/GeoBoundingBoxFilterParser.java
src/main/java/org/elasticsearch/index/query/GeohashFilter.java
src/main/java/org/elasticsearch/indices/query/IndicesQueriesModule.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoFilterTests.java
comments:
GeoHash Filter
##############

Previous versions of the GeoPointFieldMapper just stored the actual geohash
of a point. This commit changes the behavior of storing geohashes by storing
the geohash and all its prefixes in decreasing order in the same field. To
enable this functionality the option geohash_prefix must be set in the mapping.

This behavior allows to filter GeoPoints by their geohashes. Basically a
geohash prefix is defined by the filter and all geohashes that match this
prefix will be returned. The neighbors flag allows to filter geohashes
that surround the given geohash cell. In general the neighborhood of a
geohash is defined by its eight adjacent cells.

To enable this, the type of filtered fields must be geo_point with geohashes
and geohash_prefix enabled.

For example:
    curl -XPUT 'http://127.0.0.1:9200/locations/?pretty=true' -d '{
        "mappings" : {
            "location": {
                "properties": {
                    "pin": {
                        "type": "geo_point",
                        "geohash": true,
                        "geohash_prefix": true
                    }
                }
            }
        }
    }'

This example defines a mapping for a type location in an index locations
with a field pin. The option geohash arranges storing the geohash of
the pin field.

To filter the results by the geohash a geohash_cell needs to be defined.
For example
    curl -XGET 'http://127.0.0.1:9200/locations/_search?pretty=true' -d '{
        "query": {
            "match_all":{}
        },
        "filter": {
            "geohash_cell": {
                "field": "pin",
                "geohash": "u30",
                "neighbors": true
            }
        }
    }'

This filter will match all geohashes that start with one of the following
prefixes: u30, u1r, u32, u33, u1p, u31, u0z, u2b and u2c.

Internally the GeoHashFilter is either a simple TermFilter, in case no
neighbors should be filtered or a BooleanFilter combining the TermFilters
of the geohash and all its neighbors.

Closes #2778

time:
2013-06-19T11:18:55Z
class:
src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java
comments:
Expose fielddata "fields" param in standard in indicesStatsRequest

Closes #3205

time:
2013-06-19T10:33:01Z
class:
src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java
comments:
The "fielddata" qs param to index stats was setting idCache, not fieldData

Closes #3204

time:
2013-06-19T10:14:26Z
class:
comments:
"fields" is not a valid value for "metric_family"

time:
2013-06-19T10:14:10Z
class:
src/main/java/org/elasticsearch/script/mvel/MvelScriptEngineService.java
comments:
Trimming MVEL scripts before compiling them.

This bypasses an issue with MVEL error handling why can go into an infinite loop in some edge cases. More info here: http://jira.codehaus.org/browse/MVEL-292

Closes #3168

time:
2013-06-19T07:45:17Z
class:
src/main/java/org/apache/lucene/analysis/ngram/XEdgeNGramTokenFilter.java
src/main/java/org/apache/lucene/analysis/ngram/XEdgeNGramTokenizer.java
src/main/java/org/apache/lucene/analysis/ngram/XLucene43EdgeNGramTokenizer.java
src/main/java/org/apache/lucene/analysis/ngram/XLucene43NGramTokenizer.java
src/main/java/org/apache/lucene/analysis/ngram/XNGramTokenFilter.java
src/main/java/org/apache/lucene/analysis/ngram/XNGramTokenizer.java
src/main/java/org/apache/lucene/analysis/util/XCharacterUtils.java
src/main/java/org/elasticsearch/index/analysis/CharMatcher.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenizerFactory.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/NGramTokenizerFactoryTests.java
comments:
Import the new n-gram tokenizers and filters from Lucene.

Lucene 4.4 will feature new n-gram tokenizers and filters that should not
generate broken offsets (that cause highlighting bugs) anymore. They also
correctly handle supplementary characters and the tokenizers can work in a
streaming fashion (they are not limited to the first 1024 chars of the
stream anymore).

time:
2013-06-18T20:16:52Z
class:
comments:
Corrected the missing `field` parameter description for `indices.analyze` API

time:
2013-06-18T20:15:31Z
class:
comments:
Upgrade to Lucene 4.3.1

time:
2013-06-18T16:56:55Z
class:
comments:
update_aliases does not accept an index name in the path

time:
2013-06-18T16:53:13Z
class:
comments:
Separated indices.aliases into indices.update_aliases and indices.get_aliases

time:
2013-06-18T13:00:42Z
class:
src/main/java/org/elasticsearch/action/suggest/TransportSuggestAction.java
src/main/java/org/elasticsearch/search/suggest/SuggestParseElement.java
src/main/java/org/elasticsearch/search/suggest/SuggestPhase.java
src/main/java/org/elasticsearch/search/suggest/SuggestionSearchContext.java
comments:
Add ShardId and Index to SuggestionContext

Suggesters might need access to the shard they run on as well as the
index they operate on. This patch adds indexname and shard ID to the
SuggestionContext

Closes #3199

time:
2013-06-17T18:31:38Z
class:
src/main/java/org/apache/lucene/queries/ExtendedCommonTermsQuery.java
src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java
src/main/java/org/elasticsearch/index/query/CommonTermsQueryParser.java
src/main/java/org/elasticsearch/index/query/MatchQueryParser.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/unit/index/query/SimpleIndexQueryParserTests.java
comments:
Add support for "high_freq" and "low_freq" parameters for Common Query
"minimum_should_match" parameter. High freq parameters is used when the
query has only high frequent terms.

Closes #3188

time:
2013-06-17T16:55:34Z
class:
comments:
Added the `cluster.put_settings` API

time:
2013-06-17T16:54:25Z
class:
comments:
Extracted the `cluster.get_settings` API spec from `cluster.settings`

time:
2013-06-17T16:50:46Z
class:
comments:
Clarified the various endpoints in the `cluster.node_stats` API

time:
2013-06-17T15:48:35Z
class:
src/test/java/org/elasticsearch/test/integration/search/geo/GeoShapeIntegrationTests.java
comments:
create 'shape' index explicitly to ensure tests don't hang

time:
2013-06-17T14:58:12Z
class:
comments:
Yet another change to preference - get requests also accept shard/node

time:
2013-06-17T14:43:02Z
class:
comments:
Improved the preference description to distinguish get requests from search requests

time:
2013-06-17T14:29:50Z
class:
comments:
Corrected the description of the preference parameter

time:
2013-06-17T11:55:18Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/indices/IgnoreIndicesTests.java
src/test/java/org/elasticsearch/test/integration/search/basic/SearchWhileCreatingIndexTests.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/rescore/QueryRescorerTests.java
comments:
Ensure tests wait for relocations

time:
2013-06-17T08:36:38Z
class:
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
comments:
Simplified validate check

time:
2013-06-17T08:23:37Z
class:
src/main/java/org/elasticsearch/action/update/UpdateHelper.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
comments:
Added `doc_as_upsert` option to update api.
This option can reduce to amount of data being send to Elasticsearch.
Closes #3195

time:
2013-06-16T21:25:08Z
class:
comments:
[UTIL] Added a source code generator using the JSON API specs

The generator is based on [Thor](https://github.com/wycats/thor),
a library/framework for command line applications.

The generator will read the JSON API spec file(s), and generate
the Ruby source code (one file per API endpoint) with correct
module namespace, method names, and RDoc documentation.

It will generate a test file for each API endpoint as well.

Currently it only generates Ruby source, but can easily be
extended and adapted to generate source code for other
programming languages.

Usage example:

    $ thor api:code:generate ../../api-spec/*.json --force --verbose

time:
2013-06-16T15:10:42Z
class:
comments:
[UTIL] Moved the JSON spec generator into the `utils` folder

time:
2013-06-15T17:28:42Z
class:
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/info/RestNodesInfoAction.java
comments:
Merge pull request #3192 from clintongormley/nodes_info_timeout

Expose timeout for nodes_info requests in the REST interface

time:
2013-06-15T17:01:09Z
class:
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/info/RestNodesInfoAction.java
comments:
Expose timeout for nodes_info requests in the REST interface

Closes #3191

time:
2013-06-15T07:31:23Z
class:
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
comments:
Compress PagedBytesAtomicFieldData's termOrdToBytesOffset.

Using MonotonicAppendingLongBuffer instead of a GrowableWriter should help
save several bits per value, especially when the bytes to store have similar
lengths.

Closes #3186

time:
2013-06-14T19:59:43Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
comments:
Wait for reloctations in utility methods

time:
2013-06-14T10:14:43Z
class:
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
comments:
Wait for Yellow state after indexing

time:
2013-06-14T09:08:56Z
class:
src/main/java/org/elasticsearch/index/query/CommonTermsQueryParser.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
comments:
Change default operator to "or" for "low_freq_operator" and "high_freq_operator" parameters for "common" queries

Closes #3178

time:
2013-06-14T08:16:49Z
class:
src/main/java/org/elasticsearch/index/fielddata/ordinals/OrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/SingleArrayOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/MultiOrdinalsTests.java
src/test/java/org/elasticsearch/test/unit/index/fielddata/ordinals/SingleOrdinalsTests.java
comments:
Use SinglePackedOrdinals over SingleArrayOrdinals to reduce the memory ordinals take for single valued fields in field data.

Closes #3185

time:
2013-06-14T07:49:30Z
class:
src/main/java/org/elasticsearch/common/lucene/docset/NotDocIdSet.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
comments:
Call DISI#cost() ahead of time to prevent NPE

NotDocIdSet resets the internal DocIdSetIterator to null causing NPE
if cost is called.

Closes #3177

time:
2013-06-14T01:06:00Z
class:
comments:
Fix documentation URL for Scroll

time:
2013-06-13T17:40:47Z
class:
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
comments:
Fixed an error message on the terms filter

time:
2013-06-13T13:52:33Z
class:
src/test/java/org/elasticsearch/test/integration/routing/AliasRoutingTests.java
comments:
Check if Alias Creation was acknoledge in tests.

if there is a failure during alias creation the tests don't fail with the
correct exception. This commit simplifies the debugging asserting on the ack
flag.

time:
2013-06-13T13:12:38Z
class:
src/main/java/org/elasticsearch/search/suggest/phrase/NoisyChannelSpellChecker.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestParser.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggester.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionContext.java
src/test/java/org/elasticsearch/test/integration/search/suggest/SuggestSearchTests.java
comments:
Set a hard limit on the number of tokens we run suggestion on

PhraseSuggester can be very slow and CPU intensive if a lot of terms
are suggested. Yet, to prevent cluster instabilty and long running requests
this commit adds a hard limit of by default 10 tokens where we just return
no correction for anymore if the query is parsed into more tokens.

Closes #3164

time:
2013-06-13T13:03:55Z
class:
src/main/java/org/elasticsearch/common/joda/Joda.java
src/test/java/org/elasticsearch/test/unit/deps/joda/SimpleJodaTests.java
comments:
Allow date format to supported group of built-in patterns

Until now 'named dates' like dateOptionalTime could not be used as a group
of dates. This patch allows it to group it arbitrarily like this:

* yyyy/MM/dd HH:mm:ss||yyyy/MM/dd||dateOptionalTime
* dateOptionalTime||yyyy/MM/dd HH:mm:ss||yyyy/MM/dd
* yyyy/MM/dd HH:mm:ss||dateOptionalTime||yyyy/MM/dd
* date_time||date_time_no_millis

Closes #2132

time:
2013-06-13T11:21:36Z
class:
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java
comments:
Made not found logic easier.
Relates #3172

time:
2013-06-13T09:58:28Z
class:
src/test/java/org/elasticsearch/test/integration/search/basic/SearchWhileCreatingIndexTests.java
src/test/java/org/elasticsearch/test/integration/search/simple/SimpleSearchTests.java
comments:
add more verbose assertions to tests

time:
2013-06-13T08:14:35Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/common/inject/internal/Errors.java
src/main/java/org/elasticsearch/common/network/NetworkUtils.java
src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java
src/main/java/org/elasticsearch/index/gateway/CommitPoints.java
src/main/java/org/elasticsearch/monitor/jvm/HotThreads.java
src/main/java/org/elasticsearch/search/facet/datehistogram/InternalFullDateHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/InternalFullHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/doubles/InternalTermsStatsDoubleFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/longs/InternalTermsStatsLongFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/strings/InternalTermsStatsStringFacet.java
src/main/java/org/elasticsearch/search/highlight/PlainHighlighter.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/FragmentBuilderHelper.java
src/main/java/org/elasticsearch/search/suggest/Suggest.java
comments:
Forbid usage of Character.codePoint(At|Before) and Collections.sort.

Character.codePointAt and codePointBefore have two versions: one which only
accepts an offset, and one which accepts an offset and a limit. The former can
be dangerous when working with buffers of characters because if the offset
is the last char of the buffer, a char outside the buffer might be used to
compute the code point, so one should always use the version which accepts a
limit.

Collections.sort is wasteful on random-access lists: it dumps data into an
array, sorts the list and then adds elements back to the list. However, the
sorting can easily be performed in-place by using Lucene's
CollectionUtil.(merge|quick|tim)Sort.

time:
2013-06-13T08:11:06Z
class:
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java
comments:
Made get mapping rest response consistent.
Closes #3172

time:
2013-06-13T08:00:54Z
class:
src/main/java/org/elasticsearch/index/query/CustomScoreQueryParser.java
comments:
Use XConstantScoreQuery instead of ConstantScoreQuery.

Relates to #3167

time:
2013-06-13T07:10:32Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java
src/main/java/org/elasticsearch/action/index/IndexResponse.java
src/main/java/org/elasticsearch/action/index/TransportIndexAction.java
src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java
src/main/java/org/elasticsearch/action/update/UpdateHelper.java
src/main/java/org/elasticsearch/action/update/UpdateResponse.java
src/main/java/org/elasticsearch/common/lucene/uid/Versions.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/robin/RobinEngine.java
src/main/java/org/elasticsearch/rest/action/index/RestIndexAction.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/indexing/IndexActionTests.java
src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java
src/test/java/org/elasticsearch/test/integration/versioning/SimpleVersioningTests.java
src/test/java/org/elasticsearch/test/unit/index/engine/AbstractSimpleEngineTests.java
comments:
Added created flag to index related request classes.

The flag is set to true when a document is new, false when replacing an existing object.

Other minor changes:
Fixed an issue with dynamic gc deletes settings update
Added an assertThrows to ElasticsearchAssertion

Closes #3084 , Closes #3154

time:
2013-06-12T20:41:49Z
class:
src/main/java/org/elasticsearch/index/query/CustomScoreQueryBuilder.java
src/main/java/org/elasticsearch/index/query/CustomScoreQueryParser.java
src/main/java/org/elasticsearch/index/query/QueryBuilders.java
src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java
comments:
Added `filter` support to `custom_score` query.
Closes #3167

time:
2013-06-12T19:03:47Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetMappingsResponse.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersRequest.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/TransportGetWarmersAction.java
src/main/java/org/elasticsearch/action/support/master/info/ClusterInfoRequest.java
src/main/java/org/elasticsearch/action/support/master/info/ClusterInfoRequestBuilder.java
src/main/java/org/elasticsearch/action/support/master/info/TransportClusterInfoAction.java
src/main/java/org/elasticsearch/client/IndicesAdminClient.java
src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/common/regex/Regex.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/get/RestGetWarmerAction.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/SimpleDeleteMappingTests.java
src/test/java/org/elasticsearch/test/integration/indices/mapping/SimpleGetMappingsTests.java
src/test/java/org/elasticsearch/test/integration/indices/wamer/SimpleIndicesWarmerTests.java
comments:
Improves the way the get mapping and get warmer get their data from the master's cluster state copy.

Both apis now also support a `local` parameter, that fetches the mapping / warmer from the cluster state of the node that received the request. The `type` option in the get mapping api now also support wildcards. The warmer api now also support the `type` option.

Closes #3171

time:
2013-06-12T18:45:18Z
class:
src/main/java/org/elasticsearch/index/merge/policy/AbstractMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/LogByteSizeMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/LogDocMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/TieredMergePolicyProvider.java
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/unit/index/merge/policy/MergePolicySettingsTest.java
comments:
Use CFS in any case if index.compound_format is set to true

Lucenes MergePolicies support a noCFSRatio. This commit introduces
support for this ratio via `index.compound_format`. This setting
can parse a boolean value or a value in the interval [0..1] that
is equivalent to the noCFSRatio. The setting `1`, `1.0` and `true`
are equivalent as well as `0`, `0.0` and `false`.

Closes #3166

time:
2013-06-12T18:39:16Z
class:
comments:
Fixed incorrect `options` property for "cluster.node_stats" and "indices.stats"

time:
2013-06-12T15:52:32Z
class:
comments:
Changed the `nodeID` parameter to `node_id`

time:
2013-06-12T11:25:26Z
class:
src/test/java/org/elasticsearch/test/integration/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
comments:
stabelize more tests

time:
2013-06-12T02:42:23Z
class:
src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java
src/main/java/org/elasticsearch/index/query/MissingFilterParser.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
comments:
missing/exists filters should also work for objects
closes #3141

time:
2013-06-11T18:36:08Z
class:
comments:
upgrade jackson to 2.2.2, netty to 3.6.6

time:
2013-06-11T17:08:33Z
class:
src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java
comments:
Always ceate index with mapping in test to ensure shards are available

time:
2013-06-11T14:35:13Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/search/basic/TransportTwoNodesSearchTests.java
comments:
remove the index level class support
fix the test that relies on it, just index the data for each test case

time:
2013-06-11T12:49:34Z
class:
src/test/java/org/elasticsearch/test/integration/search/rescore/QueryRescorerTests.java
comments:
fix the type of the mapping

time:
2013-06-11T12:43:18Z
class:
src/main/java/org/elasticsearch/action/admin/indices/template/delete/TransportDeleteIndexTemplateAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/indices/template/SimpleIndexTemplateTests.java
src/test/java/org/elasticsearch/test/integration/search/basic/TransportTwoNodesSearchTests.java
comments:
fix shared cluster to delete templates as well per test run

time:
2013-06-11T11:19:54Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
comments:
simplify parsing code

time:
2013-06-11T11:07:07Z
class:
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/test/integration/threadpool/SimpleThreadPoolTests.java
src/test/java/org/elasticsearch/test/unit/threadpool/UpdateThreadPoolSettingsTests.java
comments:
Thread pool: rename `capacity` to `queue_size`
fixes #3161

time:
2013-06-10T19:56:24Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchHelper.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/common/Names.java
src/main/java/org/elasticsearch/common/Strings.java
src/main/java/org/elasticsearch/common/Unicode.java
src/main/java/org/elasticsearch/common/bytes/HashedBytesArray.java
src/main/java/org/elasticsearch/common/compress/CompressedString.java
src/main/java/org/elasticsearch/common/io/FastByteArrayOutputStream.java
src/main/java/org/elasticsearch/common/io/Streams.java
src/main/java/org/elasticsearch/common/lucene/LoggerInfoStream.java
src/main/java/org/elasticsearch/common/math/MathRuntimeException.java
src/main/java/org/elasticsearch/common/settings/ImmutableSettings.java
src/main/java/org/elasticsearch/env/Environment.java
src/main/java/org/elasticsearch/index/cache/filter/support/CacheKeyFilter.java
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/cache/id/simple/SimpleIdCache.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java
src/main/java/org/elasticsearch/monitor/dump/AbstractDump.java
src/main/java/org/elasticsearch/script/ScriptService.java
src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
src/main/java/org/elasticsearch/search/facet/datehistogram/InternalCountDateHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/datehistogram/InternalFullDateHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/filter/InternalFilterFacet.java
src/main/java/org/elasticsearch/search/facet/geodistance/InternalGeoDistanceFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/InternalCountHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/InternalFullHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/query/InternalQueryFacet.java
src/main/java/org/elasticsearch/search/facet/range/InternalRangeFacet.java
src/main/java/org/elasticsearch/search/facet/statistical/InternalStatisticalFacet.java
src/main/java/org/elasticsearch/search/facet/terms/doubles/InternalDoubleTermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/longs/InternalLongTermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/strings/InternalStringTermsFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/doubles/InternalTermsStatsDoubleFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/longs/InternalTermsStatsLongFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/strings/InternalTermsStatsStringFacet.java
src/test/java/org/elasticsearch/test/integration/broadcast/BroadcastActionsTests.java
src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/rest/helper/HttpClient.java
src/test/java/org/elasticsearch/test/integration/search/basic/TransportSearchFailuresTests.java
src/test/java/org/elasticsearch/test/integration/search/basic/TransportTwoNodesSearchTests.java
src/test/java/org/elasticsearch/test/integration/search/suggest/SuggestSearchTests.java
src/test/java/org/elasticsearch/test/integration/validate/SimpleValidateQueryTests.java
src/test/java/org/elasticsearch/test/unit/action/bulk/BulkRequestTests.java
src/test/java/org/elasticsearch/test/unit/common/io/StreamsTests.java
src/test/java/org/elasticsearch/test/unit/index/analysis/AnalysisModuleTests.java
src/test/java/org/elasticsearch/test/unit/index/cache/id/SimpleIdCacheTests.java
src/test/java/org/elasticsearch/test/unit/index/gateway/CommitPointsTests.java
src/test/java/org/elasticsearch/test/unit/index/mapper/simple/SimpleMapperTests.java
src/test/java/org/elasticsearch/test/unit/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/test/unit/search/suggest/phrase/NoisyChannelSpellCheckerTests.java
comments:
Cleanup String to UTF-8 conversion

Currently we have many different places that convert String to UTF-8
bytes and back. We shouldn't maintain more code than necessary to
do this conversion and rather use Lucene's support for it.

time:
2013-06-10T15:30:24Z
class:
comments:
Format param for analyze API

time:
2013-06-10T14:57:09Z
class:
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
src/test/java/org/elasticsearch/test/integration/gateway/local/SimpleRecoveryLocalGatewayTests.java
src/test/java/org/elasticsearch/test/integration/search/rescore/QueryRescorerTests.java
comments:
Cleaning up some tests by using assertHitCount assertion

time:
2013-06-10T14:50:10Z
class:
src/test/java/org/elasticsearch/test/integration/search/rescore/QueryRescorerTests.java
comments:
Ensure all shards return compareable scores for rescore tests

time:
2013-06-10T14:06:04Z
class:
src/test/java/org/elasticsearch/test/integration/gateway/local/SimpleRecoveryLocalGatewayTests.java
src/test/java/org/elasticsearch/test/integration/search/facet/terms/UnmappedFieldsTermsFacetsTests.java
src/test/java/org/elasticsearch/test/integration/search/rescore/QueryRescorerTests.java
comments:
Add more verbose matchers / asserts to tests
just call `hasId("1")` here (and everywhere else), it is imported statically anyway

create a `assertHitCount(countResponse, 2)` in the ElasticAssertions for the CountResponse here?

go do it!

cool stuff can you fix?

sure, will do


time:
2013-06-10T10:13:43Z
class:
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/test/java/org/elasticsearch/test/integration/search/geo/GeoDistanceTests.java
comments:
Fixed the `GeoPointFieldMapper` to parse `geohashes` correctly.

Closes #3073

time:
2013-06-10T10:07:11Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/ClusterManager.java
src/test/java/org/elasticsearch/test/integration/TestCluster.java
comments:
Simplify TestCluster

TestCluster now doesn't use any reference counting anymore and
testcluster names are based on creation time to prevent confilcts if
builds hang.

time:
2013-06-10T09:09:11Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/termvector/TermVectorAction.java
src/main/java/org/elasticsearch/action/termvector/TermVectorFields.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequest.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequestBuilder.java
src/main/java/org/elasticsearch/action/termvector/TermVectorResponse.java
src/main/java/org/elasticsearch/action/termvector/TermVectorWriter.java
src/main/java/org/elasticsearch/action/termvector/TransportSingleShardTermVectorAction.java
src/main/java/org/elasticsearch/action/termvector/package-info.java
src/main/java/org/elasticsearch/client/Client.java
src/main/java/org/elasticsearch/client/support/AbstractClient.java
src/main/java/org/elasticsearch/client/transport/TransportClient.java
src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/TypeParsers.java
src/main/java/org/elasticsearch/indices/analysis/IndicesAnalysisService.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/termvector/RestTermVectorAction.java
src/test/java/org/elasticsearch/test/integration/termvectors/GetTermVectorTests.java
src/test/java/org/elasticsearch/test/integration/termvectors/GetTermVectorTestsCheckDocFreq.java
comments:
term vector request
================================

Returns information and statistics on terms in the fields of a particular document as stored in the index.

        curl -XGET 'http://localhost:9200/twitter/tweet/1/_termvector?pretty=true'

Tree types of values can be requested: term information, term statistics and field statistics.
By default, all term information and field statistics are returned for all fields but no term statistics.

Optionally, you can specify the fields for which the information is retrieved either with a parameter in the url

	curl -XGET 'http://localhost:9200/twitter/tweet/1/_termvector?fields=text,...'

or adding by adding the requested fields in the request body (see example below).

Term information
-------------------------

- term frequency in the field (always returned)
- term positions ("positions" : true)
- start and end offsets ("offsets" : true)
- term payloads ("payloads" : true), as base64 encoded bytes

If the requested information wasn't stored in the index, it will be omitted without further warning.
See [mapping](http://www.elasticsearch.org/guide/reference/mapping/core-types/) on how to configure your index to store term vectors.

Term statistics
-------------------------

Setting "term_statistics" to "true" (default is "false") will return

- total term frequency (how often a term occurs in all documents)
- document frequency (the number of documents containing the current term)

By default these values are not returned since term statistics can have a serious performance impact.

Field statistics
-------------------------

Setting "field_statistics" to "false" (default is "true") will omit

- document count (how many documents contain this field)
- sum of document frequencies (the sum of document frequencies for all terms in this field)
- sum of total term frequencies (the sum of total term frequencies of each term in this field)

Behavior
-------------------------

The term and field statistics are not accurate. Deleted documents are not taken into account. The information is only retrieved for the shard the requested document resides in. The term and field statistics are therefore only useful as relative measures whereas the absolute numbers have no meaning in this context.

Example
-------------------------

First, we create an index that stores term vectors, payloads etc. :

    curl -s -XPUT 'http://localhost:9200/twitter/' -d '{
        "mappings": {
            "tweet": {
                "properties": {
                    "text": {
                                "type": "string",
                                "term_vector": "with_positions_offsets_payloads",
                                "store" : "yes",
                                "index_analyzer" : "fulltext_analyzer"
                         },
                     "fullname": {
                                "type": "string",
                                "term_vector": "with_positions_offsets_payloads",
                                "index_analyzer" : "fulltext_analyzer"
                         }
                 }
            }
        },
        "settings" : {
            "index" : {
                "number_of_shards" : 1,
                "number_of_replicas" : 0
            },
            "analysis": {
                    "analyzer": {
                        "fulltext_analyzer": {
                            "type": "custom",
                            "tokenizer": "whitespace",
                            "filter": [
                                "lowercase",
                                "type_as_payload"
                            ]
                        }
                    }
            }
         }
    }'

Second, we add some documents:

    curl -XPUT 'http://localhost:9200/twitter/tweet/1?pretty=true' -d '{
      "fullname" : "John Doe",
      "text" : "twitter test test test "

    }'

    curl -XPUT 'http://localhost:9200/twitter/tweet/2?pretty=true' -d '{
      "fullname" : "Jane Doe",
      "text" : "Another twitter test ..."

    }'

The following request returns all information and statistics for field "text" in document "1" (John Doe):

     curl -XGET 'http://localhost:9200/twitter/tweet/1/_termvector?pretty=true' -d '{
                    "fields" : ["text"],
                    "offsets" : true,
                    "payloads" : true,
                    "positions" : true,
                    "term_statistics" : true,
                    "field_statistics" : true
            }'
Equivalently, all parameters can be passed as URI parameters:
     curl -GET 'http://localhost:9200/twitter/tweet/1/_termvector?pretty=true&fields=text&offsets=true&payloads=true&positions=true&term_statistics=true&field_statistics=true'

Response:

  {
    "_index" : "twitter",
    "_type" : "tweet",
    "_id" : "1",
    "_version" : 1,
    "exists" : true,
    "term_vectors" : {
      "text" : {
        "field_statistics" : {
          "sum_doc_freq" : 6,
          "doc_count" : 2,
          "sum_ttf" : 8
        },
        "terms" : {
          "test" : {
            "doc_freq" : 2,
            "ttf" : 4,
            "term_freq" : 3,
            "pos" : [ 1, 2, 3 ],
            "start" : [ 8, 13, 18 ],
            "end" : [ 12, 17, 22 ],
            "payload" : [ "d29yZA==", "d29yZA==", "d29yZA==" ]
          },
          "twitter" : {
            "doc_freq" : 2,
            "ttf" : 2,
            "term_freq" : 1,
            "pos" : [ 0 ],
            "start" : [ 0 ],
            "end" : [ 7 ],
            "payload" : [ "d29yZA==" ]
          }
        }
      }
    }
  }

Further changes:
-------------------------

XContentBuilder
new method
public XContentBuilder field(XContentBuilderString name, int offset, int length, int... value)
to put an integer array.

IndicesAnalysisService
make token filter for saving payloads available in elasticsearch

AbstractFieldMapper/TypeParser
make term vector options string available and also fix the parsing of this string:
with_positions_payloads is actually allowed as can be seen in TermVectorsConsumerPerFields.

Closes #3114

time:
2013-06-09T19:50:59Z
class:
comments:
Add doc url for put_template

time:
2013-06-09T19:17:29Z
class:
comments:
Required settings for path parts

time:
2013-06-08T13:34:13Z
class:
comments:
put_* apis have required body

time:
2013-06-08T13:31:15Z
class:
comments:
Put mapping has a body

time:
2013-06-07T21:24:04Z
class:
comments:
Use singular for index and type, index is default for exists methods

time:
2013-06-07T18:53:03Z
class:
comments:
Index is not required for segments

time:
2013-06-07T18:50:14Z
class:
comments:
Index is not required for refresh

time:
2013-06-07T18:41:02Z
class:
comments:
Index is required for open

time:
2013-06-07T18:40:50Z
class:
src/test/java/org/elasticsearch/test/integration/abstracttests/AbstractClusterAndNodeTestTests.java
comments:
Don't test the test - who tests the test for the test? ;)

time:
2013-06-07T18:38:55Z
class:
comments:
Index is not required for optimize

time:
2013-06-07T18:33:17Z
class:
src/test/java/org/elasticsearch/test/integration/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java
comments:
Stabelize more tests

time:
2013-06-07T18:23:02Z
class:
comments:
Index is not required for flush

time:
2013-06-07T17:44:28Z
class:
comments:
Split settings to get_ and set_ methods

time:
2013-06-07T17:05:13Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/abstracttests/AbstractClusterAndNodeTestTests.java
comments:
Fix addMapping() in AbstractSharedClusterTest for more than one field

time:
2013-06-07T17:01:48Z
class:
comments:
snapshot_index as last of the renames

time:
2013-06-07T16:58:34Z
class:
comments:
validate_query for consistency

time:
2013-06-07T16:56:11Z
class:
comments:
Rename api methods to verb_object for consistency

time:
2013-06-07T16:38:20Z
class:
comments:
The api is actuall called delete mapping

time:
2013-06-07T16:38:20Z
class:
comments:
Revert "Only support one path path for node info"

This reverts commit 04134492cc2bc8656512288b0127b4658b739c3e.
We should only support one path but we should still maintain the full
spec in the json file.

time:
2013-06-07T16:38:20Z
class:
comments:
name the scroll endpoint correctly

time:
2013-06-07T16:37:37Z
class:
comments:
Added "alias exists" API

time:
2013-06-07T11:53:14Z
class:
comments:
Making deb installable by being lintian compatible

According to #2515 the ubuntu software center does not allow to install
debian packages which are not lintian compatible

I worked on the package and made it lintian compatible by doing

* Ignoring errors about arch dependent binaries as we will not split
  this package. The arch dependent libraries are used correctly.
* Added a copyright file pointing to the apache license in debian

Closes #2515
Closes #2320

time:
2013-06-07T10:30:30Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
comments:
Added shortcuts for several common commands

added simple way to add more complex mappings as well as shortcuts for flush
and status etc. all checking if requests return failed shards

time:
2013-06-06T19:42:42Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java
comments:
Fixed minor issue in ASCT#indexExists(...)

time:
2013-06-06T15:13:49Z
class:
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
comments:
ChildrenQuery and ParentQuery now take into account documents that have been marked.

Closes #3144

time:
2013-06-06T15:03:36Z
class:
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/indices/IgnoreIndicesTests.java
comments:
Stabelize more tests

Wait for relocation before checking statistics or run refresh / optimze.

time:
2013-06-06T14:02:20Z
class:
comments:
prepare for next development iteration

time:
2013-06-06T13:59:57Z
class:
comments:
prepare release elasticsearch-analysis-stempel-1.6.0

time:
2013-06-06T13:52:42Z
class:
src/main/java/org/elasticsearch/index/analysis/pl/PolishAnalysisBinderProcessor.java
src/main/java/org/elasticsearch/index/analysis/pl/PolishStemTokenFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/pl/PolishIndicesAnalysis.java
comments:
Support for polish_stem token filter
Added missing token filter support for polish analyzer.
Now it's possible to combine polish_stem token filter with the other token filters available in ES to create custom analyzer.
Closes #3.

time:
2013-06-06T09:22:49Z
class:
src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
comments:
Fallback to extract terms if MultiPhraseQuery is large

Currently if MPQ is very large highlighing can take down a node
or cause high CPU / RAM consumption. If the query grows > 16 terms
we just extract the terms and do term by term highlighting.

Closes  #3142 #3128

time:
2013-06-06T08:23:09Z
class:
src/main/java/org/elasticsearch/search/highlight/FastVectorHighlighter.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SimpleFragmentsBuilder.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceSimpleFragmentsBuilder.java
src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java
comments:
Correct offsets in FVH also if stored field is used for highlighting

The SimpleFragemntsBuilder did not correct offsets if the used
analysis chais could produce broken offsets that could lead to
StringArrayIndexOutOfBounds Exceptions

Closes #3140

time:
2013-06-05T22:54:34Z
class:
src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java
comments:
report details if shard response has failed shards

time:
2013-06-05T20:27:18Z
class:
src/test/java/org/elasticsearch/benchmark/search/child/ChildSearchAndIndexingBenchmark.java
comments:
Added a benchmark for parent/child queries while indexing at the same time.

time:
2013-06-05T20:12:26Z
class:
src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java
comments:
Fixed `has_parent` query and filter returning no results with multi level child docs.

time:
2013-06-05T14:55:13Z
class:
comments:
prepare for next development iteration

time:
2013-06-05T14:53:10Z
class:
comments:
prepare release elasticsearch-lang-javascript-1.4.0

time:
2013-06-05T13:45:03Z
class:
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
src/test/java/org/elasticsearch/test/integration/AbstractSharedClusterTest.java
src/test/java/org/elasticsearch/test/integration/TestCluster.java
src/test/java/org/elasticsearch/test/integration/document/AliasedIndexDocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java
src/test/java/org/elasticsearch/test/integration/document/LocalDocumentActionsTests.java
comments:
More test cleanups

time:
2013-06-05T13:22:16Z
class:
comments:
Make log4j an optional dependency
...as it is in the main elasticsearch pom.xml. This is useful for people who want to use slf4j/logback instead of log4j.
Closes #2.

time:
2013-06-05T13:21:47Z
class:
comments:
Move to Elasticsearch 0.90.1
And update licence
Closes #5.

time:
2013-06-05T07:47:37Z
class:
src/test/java/org/elasticsearch/test/integration/search/stats/SearchStatsTests.java
comments:
Fix SearchStatsTest

Use actual node in test instead of the first node in the array

time:
2013-06-04T15:35:22Z
class:
comments:
cluster reroute filter_metadata description

time:
2013-06-04T15:30:01Z
class:
comments:
Only support one path path for node info

time:
2013-06-04T15:27:21Z
class:
comments:
node_hot_threads  descriptions

time:
2013-06-04T15:24:11Z
class:
comments:
cluster.node. -> cluster.node_

time:
2013-06-04T15:15:05Z
class:
comments:
Don't expose operation_threading

time:
2013-06-04T14:33:24Z
class:
comments:
Split scroll as separate endpoint

time:
2013-06-04T11:31:37Z
class:
comments:
Exists as separate endpoint

time:
2013-06-04T11:27:25Z
class:
comments:
Separate endpoint for op_type create

time:
2013-06-04T10:58:05Z
class:
comments:
Alias -> Aliases
