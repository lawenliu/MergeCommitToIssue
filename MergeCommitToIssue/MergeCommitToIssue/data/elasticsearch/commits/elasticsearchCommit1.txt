time:
2017-07-31T02:45:06Z
class:
core/src/main/java/org/elasticsearch/Version.java
core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/bootstrap/ElasticsearchCliTests.java
comments:
Version option should display if snapshot

We have a command-line flag -V or --version that can be used to display
the version of Elasticsearch. However, the version that we display does
not contain whether or not the version is a snapshot build. This commit
changes the behavior here so that if the build is a snapshot, that is
included in the version string.

Relates #25970

time:
2017-07-31T02:41:27Z
class:
comments:
Ignore JVM options before checking Java version

Today we strip some ignored JVM options before starting the main Java
process (e.g., we unset JAVA_TOOL_OPTIONS, and we ignore
JAVA_OPTS). However, there is another Java process that we start before
starting the main process: the Java version checker. We are currently
starting this before ignoring the undesired JVM options so the Java
version checker will pick up JAVA_TOOL_OPTIONS and it will silently
ignore JAVA_OPTS. Instead, we should ignore JAVA_TOOL_OPTIONS here too,
and not silently ignore JAVA_OPTS but instead warn before doing so (as
we already do for the main Java process). This commit rearranges the
execution of these steps so that we do the right thing here.

Relates #25969

time:
2017-07-31T01:00:31Z
class:
core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java
comments:
Remove dead code for checking exclusive options

Previously we manually checked if mutually exclusive options are passed
on the command line. Yet, after an upgrade to our option parser
dependency, we were able to use built-in functionality to establish
these mutually exclusive options and the parser would take care of
checking if such options are passed on the command line. However, the
previous manually checking code is now dead and was left behind. This
commit removes that dead code.

Relates #19278

time:
2017-07-31T00:56:47Z
class:
core/src/main/java/org/elasticsearch/bootstrap/Elasticsearch.java
comments:
Fix typo in Elasticsearch help

This commit fixes a small typo in the help output displayed by
Elasticsearch when the --help flag is passed.

time:
2017-07-30T23:55:31Z
class:
comments:
Add version command to issue template

This commit adds a hint to use the Elasticsearch --version flag to
produce the requested version information.

time:
2017-07-30T21:37:36Z
class:
comments:
Fix typo in Windows elasticsearch-env script

This commit fixes a simple typo in the Windows version of the
elasticsearch-env script; this typo is harmless as it appears in a
comment.

time:
2017-07-30T07:24:57Z
class:
comments:
Remove running outside of distribution check

This commit removes a legacy check against running bin/elasticsearch
that is not produced from a distribution. This check exists for legacy
reasons, namely when bin/elasticsearch previously sat in the root of the
Elasticsearch repository. In this old scenario, someone might clone the
repository, see the bin folder and try to run bin/elasticsearch without
first production a distribution. Today, this is unlikely since
bin/elasticsearch now sits in
distribution/src/main/resources/bin/elasticsearch so first, bin is no
longer in the root of the repository, and second, the src indicates this
is source and not already for production. Moreover, our README in the
root of the repository provides clear instructions for getting started:
either download a distribution or build one from source. In the name of
simplicity, we therefore remove this legacy check.

Relates #25960

time:
2017-07-30T03:01:03Z
class:
comments:
Remove busted rolling upgrade script test

This commit removes a rolling upgrade test for scripting that is totally
busted yet is preventing builds from succeeding. We elect to remove this
test as opposed to skipping the test as:
 - it has beeen being skipped for months with no apparent loss
 - it appears to need significant work to get to an unbusted state

time:
2017-07-30T00:49:55Z
class:
core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java
qa/evil-tests/src/test/java/org/elasticsearch/cli/EvilEnvironmentAwareCommandTests.java
comments:
Format CLI error message when es.path.conf not set

This commit adds some formatting to the message displayed when
es.path.conf is not set.

time:
2017-07-30T00:32:17Z
class:
comments:
Cleanup script packaging

This commit cleans up a few items with the script packaging:
 - remove the now dead elasticsearch.in.sh script
 - add assertions for the existence elasticsearch-env and
   elasticsearch-keystore

time:
2017-07-30T00:31:41Z
class:
comments:
Introduce elasticsearch-env for Windows

This commit introduces the elasticsearch-env.bat script for Windows to
simplify development and maintenance of scripts on Windows.

Relates #25958

time:
2017-07-28T17:02:58Z
class:
core/src/test/java/org/elasticsearch/index/query/functionscore/FunctionScoreTests.java
comments:
[Test] Make sure the same exception is thrown for every test run. Fixes #25952

time:
2017-07-28T16:28:02Z
class:
core/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java
core/src/main/java/org/elasticsearch/snapshots/SnapshotShardFailure.java
core/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
core/src/test/java/org/elasticsearch/cluster/SnapshotsInProgressTests.java
core/src/test/java/org/elasticsearch/snapshots/AbstractSnapshotIntegTestCase.java
core/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreIT.java
core/src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreIT.java
core/src/test/java/org/elasticsearch/snapshots/SnapshotsInProgressSerializationTests.java
core/src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java
comments:
Snapshot/Restore: Ensure that shard failure reasons are correctly stored in CS (#25941)

The failure reason for snapshot shard failures might not be propagated properly if the master node changes after the errors were reported by other data nodes. This commits ensures that the snapshot shard failure reason is preserved properly and adds workaround for reading old snapshot files where this information might not have been preserved.

Closes #25878

time:
2017-07-28T15:19:18Z
class:
comments:
Fix path.conf usage on Windows

This commit addresses a change in core Elasticsearch where the
command-line flag --path.conf is no longer respected. Instead, the
configuration path must be passed through the system property
es.path.conf. We adapt the Windows batch file and the service for this
change.

time:
2017-07-28T13:04:15Z
class:
comments:
docs: document work around for the percolator if query time text analysis is expensive.

time:
2017-07-28T10:24:10Z
class:
core/src/main/java/org/elasticsearch/index/IndexModule.java
core/src/main/java/org/elasticsearch/index/IndexService.java
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/indices/IndicesService.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/index/mapper/DateFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/mapper/RangeFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/query/QueryShardContextTests.java
core/src/test/java/org/elasticsearch/index/query/RangeQueryRewriteTests.java
core/src/test/java/org/elasticsearch/index/query/RewriteableTests.java
core/src/test/java/org/elasticsearch/index/query/SimpleQueryParserTests.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregatorFactoriesTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/ExtendedBoundsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/builder/SearchSourceBuilderTests.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightBuilderTests.java
core/src/test/java/org/elasticsearch/search/rescore/QueryRescoreBuilderTests.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/AbstractSuggestionBuilderTestCase.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/QueryBuilderStoreTests.java
qa/query-builder-bwc/src/test/java/org/elasticsearch/bwc/QueryBuilderBWCIT.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
test/framework/src/test/java/org/elasticsearch/search/MockSearchServiceTests.java
comments:
percolator: Store the QueryBuilder's Writable representation instead of its XContent representation.

The Writeble representation is less heavy to parse and that will benefit percolate performance and throughput.

The query builder's binary format has now the same bwc guarentees as the xcontent format.

Added a qa test that verifies that percolator queries written in older versions are still readable by the current version.

time:
2017-07-28T09:27:54Z
class:
comments:
Update plugin-related output in reference docs (#25897)

The example output for node info and cluster stats was outdated w.r.t.
to the information that is shown for plugins. With this commit we
updated the example output and update the explanation of the respective
fields.

time:
2017-07-28T09:23:50Z
class:
core/src/main/java/org/elasticsearch/cluster/ClusterModule.java
core/src/main/java/org/elasticsearch/cluster/MergableCustomMetaData.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java
core/src/main/java/org/elasticsearch/discovery/DiscoveryModule.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/plugins/ClusterPlugin.java
core/src/main/java/org/elasticsearch/plugins/Plugin.java
core/src/test/java/org/elasticsearch/cluster/metadata/TemplateUpgradeServiceIT.java
core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java
core/src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolIT.java
modules/tribe/src/main/java/org/elasticsearch/tribe/TribeDiscovery.java
modules/tribe/src/main/java/org/elasticsearch/tribe/TribePlugin.java
modules/tribe/src/main/java/org/elasticsearch/tribe/TribeService.java
modules/tribe/src/test/java/org/elasticsearch/tribe/TribeIntegrationTests.java
modules/tribe/src/test/java/org/elasticsearch/tribe/TribeServiceTests.java
plugins/discovery-file/src/main/java/org/elasticsearch/discovery/file/FileBasedDiscoveryPlugin.java
qa/evil-tests/src/test/java/org/elasticsearch/tribe/TribeUnitTests.java
test/framework/src/main/java/org/elasticsearch/node/MockNode.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java
test/framework/src/main/java/org/elasticsearch/test/discovery/TestZenDiscovery.java
comments:
Move tribe to a module (#25778)

This commit moves tribe to a module, stripping core from the tribe functionality.

time:
2017-07-28T08:53:47Z
class:
comments:
docs: Remove incorrect warning

Closes #25935

time:
2017-07-28T07:22:20Z
class:
core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java
core/src/main/java/org/apache/lucene/search/vectorhighlight/CustomFieldQuery.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/FunctionScoreQuery.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/ScoreFunction.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/WeightFactorFunction.java
core/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/CustomQueryScorer.java
core/src/test/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunctionTests.java
core/src/test/java/org/elasticsearch/index/query/ScoreModeTests.java
core/src/test/java/org/elasticsearch/index/query/functionscore/FunctionScoreEquivalenceTests.java
core/src/test/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/functionscore/FunctionScoreTests.java
core/src/test/java/org/elasticsearch/search/functionscore/DecayFunctionScoreIT.java
core/src/test/java/org/elasticsearch/search/functionscore/FunctionScoreFieldValueIT.java
core/src/test/java/org/elasticsearch/search/functionscore/FunctionScoreIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ChildQuerySearchIT.java
modules/percolator/src/test/java/org/elasticsearch/percolator/QueryAnalyzerTests.java
comments:
Merge FunctionScoreQuery and FiltersFunctionScoreQuery (#25889)

This change merges the functionality of the FiltersFunctionScoreQuery in the FunctionScoreQuery.
It also ensures that an exception is thrown when the computed score is equals to Float.NaN or Float.NEGATIVE_INFINITY.
These scores are invalid for TopDocsCollectors that relies on score comparison.

Fixes #15709
Fixes #23628

time:
2017-07-28T05:52:11Z
class:
distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/RemovePluginCommandTests.java
comments:
Fix checkstyle violation in remove plugin tests

This commit fixes a redundant modifier checkstyle violation in
RemovePluginCommandTests.java.

time:
2017-07-28T05:37:04Z
class:
core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java
core/src/test/java/org/elasticsearch/common/settings/AddFileKeyStoreCommandTests.java
core/src/test/java/org/elasticsearch/common/settings/AddStringKeyStoreCommandTests.java
core/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java
core/src/test/java/org/elasticsearch/common/settings/ListKeyStoreCommandTests.java
core/src/test/java/org/elasticsearch/common/settings/RemoveSettingKeyStoreCommandTests.java
distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/ListPluginsCommandTests.java
distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/RemovePluginCommandTests.java
qa/evil-tests/src/test/java/org/elasticsearch/cli/EvilEnvironmentAwareCommandTests.java
test/framework/src/main/java/org/elasticsearch/bootstrap/ESElasticsearchCliTestCase.java
comments:
Fix environment-aware command tests

This commit fixes tests for environment-aware commands. A previous
change added a check that es.path.conf is not null. The problem is that
this system property is not being set in tests so this check trips every
single time. To fix this, we move the check into a method that can be
overridden, and then override this method in relevant places in tests to
avoid having to set the property in tests. We also add a test that this
check works as expected.

time:
2017-07-28T03:29:24Z
class:
plugins/repository-azure/src/main/java/org/elasticsearch/cloud/azure/storage/AzureStorageServiceImpl.java
comments:
Make calls to CloudBlobContainer#exists privileged (#25937)

This is related to #25931. In CloudBlobContainer#exists it is possible
that a socket connection will be opened. This commit ensures that those
calls have the proper socket privileges.

time:
2017-07-28T03:28:47Z
class:
plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageRepository.java
plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStoreRepositoryTests.java
comments:
Ensure that gcs client creation is privileged (#25938)

This is related to #25932. Currently when we create the
`GoogleCloudStorageService` client we do not wrap that call in a
doPrivileged block. The call might open a connection. This commit
ensures that the creation is wrapped in a doPrivileged block.

time:
2017-07-28T03:20:18Z
class:
core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java
comments:
Remove unused imports from EnvironmentAwareCommand

This commit removes two unused imports from EnvironmentAwareCommand that
were left behind after a previous change.

time:
2017-07-28T03:15:22Z
class:
core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java
comments:
Pass config path as a system property

A previous change enabled it so that users could configure the
configuration path via a command-line option --path.conf. However, a
subsequent change has made it so that we expect users to set the
configuration path via the environment variable CONF_DIR. To enable
this, we now pass the value of CONF_DIR as the value for the
command-line option --path.conf. This has two problems:
 - the presence of --path.conf always being on the command line breaks
   other flags like --help for multi-commands
 - the scripts for which --help is not broken say that you can pass
   --path.conf but this is a lie since passing it will make it appear
   twice in the command-line arguments breaking the script

Since --path.conf is no longer the way that we want users to set the
configuration path, we should remove the --path.conf option. However, we
still need a way to get the configuration path from the scripts to the
running Java process. To do this, we now pass the configuration path as
a system property. This keeps it off the script command line fixing the
above problems.

The only remaining question (that I can see) is whether or not to
respect -Des.path.conf=<some path> if the user sets this in their
jvm.options or via ES_JAVA_OPTS. I think that we should not do this (as
has been our tradition), es.path.home and es.path.conf are special,
should be set by our scripts only so users should not be setting them at
all so we should not take any effort to respect these flags if the user
tries to otherwise use them.

Relates #25943

time:
2017-07-28T01:21:34Z
class:
comments:
Fix scripts when launching from bin

When running a script that depends on elasticsearch-env, the
elasticsearch-env script seeks backwards from the directory containing
the script to find Elasticsearch home. This is done by seeking backwards
in the path to find bin, and then going one directory above
that. Unfortunately, if the script is started relatively from the bin
directory, then bin will appear in the path since it is a relative
path. This commit fixes this by making the starting path absolute before
attempting to seek backwards.

time:
2017-07-27T15:20:53Z
class:
comments:
Fix eclipse issues related to rest client shading (#25874)

* A cycle was detected in eclipse, and was fixed in the same fashion as
  core and core-tests.
* The rest client deps jar was not properly exported in the generated
  eclipse classpath file for rest client.

Relates #25208

time:
2017-07-27T14:22:18Z
class:
comments:
Remove the shadow plugin apply in the rest client (#25921)

The low level rest client does not need the shadow plugin applied, it
only needs the plugin jar in the classpath, in order to create a
ShadowJar task.

Relates #25208

time:
2017-07-27T14:14:04Z
class:
comments:
Allow build to directly run under JDK 9 (#25859)

With Gradle 4.1 and newer JDK versions, we can finally invoke Gradle directly using a JDK9 JAVA_HOME without requiring a JDK8 to "bootstrap" the build. As the thirdPartyAudit task runs within the JVM that Gradle runs in, it needs to be adapted now to be JDK9 aware.

This commit also changes the `JavaCompile` tasks to only fork if necessary (i.e. when Gradle's JVM and JAVA_HOME's JVM differ).

time:
2017-07-27T13:55:52Z
class:
comments:
Fixed asciidoc formatting

time:
2017-07-27T12:36:51Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/PrimaryReplicaSyncer.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java
core/src/test/java/org/elasticsearch/indices/cluster/AbstractIndicesClusterStateServiceTestCase.java
comments:
Close translog view after primary-replica resync (#25862)

The translog view was being closed too early, possibly causing a failed resync. Note: The bug only affects unreleased code.

Relates to #24841

time:
2017-07-27T12:15:00Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java
comments:
Release operation permit on thread-pool rejection (#25930)

At the shard level we use an operation permit to coordinate between regular shard operations and special operations that need exclusive access. In ES versions < 6, the operation requiring exclusive access was invoked during primary relocation, but ES versions >= 6 this exclusive access is also used when a replica learns about a new primary or when a replica is promoted to primary.

These special operations requiring exclusive access delay regular operations from running, by adding them to a queue, and after finishing the exclusive access, release these operations which then need to be put back on the original thread-pool they were running on. In the presence of thread pool rejections, the current implementation had two issues:

- it would not properly release the operation permit when hitting a rejection (i.e. when calling ThreadedActionListener.onResponse from IndexShardOperationPermits.acquire).
- it would not invoke the onFailure method of the action listener when the shard was closed, and just log a warning instead (see ThreadedActionListener.onFailure), which would ultimately lead to the replication task never being cleaned up (see #25863).

This commit fixes both issues by introducing a custom threaded action listener that is permit-aware and properly deals with rejections.

Closes #25863

time:
2017-07-27T09:19:40Z
class:
comments:
[DOCS] update low level client artifact name

time:
2017-07-27T09:19:20Z
class:
core/src/main/java/org/apache/lucene/queries/MinDocQuery.java
core/src/test/java/org/apache/lucene/queries/MinDocQueryTests.java
comments:
Caching a MinDocQuery can lead to wrong results. (#25909)

Queries are supposed to be cacheable per segment, yet matches of this query
also depend on how many documents exist on previous segments.

time:
2017-07-27T09:17:56Z
class:
core/src/main/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunction.java
comments:
Fix random score generation when no seed is provided. (#25908)

It fixes random score generation to ensure that you will not always get the
same scores on a read-only index by integrating the seed into the score
computation when using doc ids. It also removes `ctx.docBase` from the formula
since it might change over time if deletes are compacted while scores are
supposed to be cacheable per segment.

time:
2017-07-26T19:25:45Z
class:
core/src/main/java/org/apache/lucene/document/BinaryRange.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQuery.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorHighlightSubFetchPhase.java
modules/percolator/src/main/java/org/elasticsearch/percolator/QueryAnalyzer.java
modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/QueryAnalyzerTests.java
comments:
Add support for selecting percolator query candidate matches containing range queries.

Extracts ranges from range queries on byte, short, integer, long, half_float, scaled_float, float, double, date and ip fields.
byte, short, integer and date ranges are normalized to Lucene's LongRange.
half_float and float are normalized to Lucene's DoubleRange.

When extracting range queries, the QueryAnalyzer computes the width of the range.  This width is used to determine
what range should be preferred in a conjunction query. The QueryAnalyzer prefers the smaller ranges, because these
ranges tend to match with less documents.

Closes #21040

time:
2017-07-26T18:03:42Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequest.java
core/src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java
core/src/main/java/org/elasticsearch/index/IndexService.java
core/src/main/java/org/elasticsearch/index/IndexWarmer.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/indices/IndicesService.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestClearIndicesCacheAction.java
core/src/main/java/org/elasticsearch/search/DefaultSearchContext.java
core/src/test/java/org/elasticsearch/action/IndicesRequestIT.java
core/src/test/java/org/elasticsearch/document/DocumentActionsIT.java
core/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTestCase.java
core/src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTestCase.java
core/src/test/java/org/elasticsearch/index/fielddata/FilterFieldDataTests.java
core/src/test/java/org/elasticsearch/index/fielddata/IndexFieldDataServiceTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/ExpressionTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
test/framework/src/main/java/org/elasticsearch/test/TestSearchContext.java
comments:
Cleanup IndexFieldData visibility (#25900)

Today we expose `IndexFieldDataService` outside of IndexService to do maintenance
or lookup field data in different ways. Yet, we have a streamlined way to access IndexFieldData
via `QueryShardContext` that should encapsulate all access to it. This also ensures that we control all other functionality like cache clearing etc.

This change also removes the `recycler` option from `ClearIndicesCacheRequest` this option is a no-op and should have been removed long ago.

time:
2017-07-26T15:27:15Z
class:
core/src/test/java/org/elasticsearch/client/transport/TransportClientHeadersTests.java
core/src/test/java/org/elasticsearch/client/transport/TransportClientIT.java
core/src/test/java/org/elasticsearch/client/transport/TransportClientRetryIT.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java
test/framework/src/main/java/org/elasticsearch/transport/MockTransportClient.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransportPlugin.java
test/framework/src/test/java/org/elasticsearch/test/test/InternalTestClusterTests.java
comments:
Support client-only mode for NioTransport (#25839)

Currently, NioTransport does start normal socket selectors and the
client when the network server setting is set to false. This commit
makes it so that the client will be started even when the network server
is not enabled.

Additionally, it randomly introduces the NioTransport as an option for
the MockTransportClient throughout tests.

time:
2017-07-26T15:02:42Z
class:
core/src/main/java/org/elasticsearch/cluster/MasterNodeChangePredicate.java
core/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java
comments:
MasterNodeChangePredicate should use the node instance to detect master change (#25877)

This predicate is used to deal with the intricacies of detecting when a master is reelected/nodes rejoins an existing master. The current implementation is based on nodeIds, which is fine if the master really change. If the nodeId is equal the code falls back to detecting an increment in the cluster state version which happens when a node is re-elected or when the node rejoins. Sadly this doesn't cover the case where the same node is elected after a full restart of all master nodes. In that case we recover the cluster state from disk but the version is reset back to 0. To fix this, the check should be done based on ephemeral IDs which are reset on restart.

Fixes #25471

time:
2017-07-26T14:00:59Z
class:
core/src/main/java/org/elasticsearch/common/Strings.java
core/src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java
core/src/test/java/org/elasticsearch/common/StringsTests.java
core/src/test/java/org/elasticsearch/search/SearchCancellationIT.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ESClientYamlSuiteTestCase.java
comments:
Remove XContentHelper#toString(ToXContent) in favour of Strings#toString(ToXContent) (#25866)

These two methods do do the same thing. The subtle difference between the two is that the former prints out pretty printed content by default while the latter doesn't. There are way more usages of the latter throughout the codebase hence I kept that variant although I do think that it would be much better to print out prettified content by default from a `toString`. That breaks quite some tests so I didn't make that change yet.

Also XContentHelper#toString was outdated as it didn't check the ToXContent#isFragment method to decide whether a new anonymous object has to be created or not. It would simply fail with any ToXContentObject.

time:
2017-07-26T12:29:06Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: Added a full cluster restart test for index shrinking

Relates to #24939

time:
2017-07-26T11:49:15Z
class:
core/src/test/java/org/elasticsearch/index/replication/RecoveryDuringReplicationTests.java
comments:
testWaitForPendingSeqNo didn't properly wait for all pending ops to "stuck"

The test only waited for one op to be stuck. In rare occasions the other ops were still in flight when recovery captured a translog snapshot throwing doc count off.

time:
2017-07-26T11:28:39Z
class:
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
comments:
Test: indexOnReplicaWithGaps should randomly add a gap at the end

This confuses assertion because if it's the only gap, it looks like one operation less is indexed and there are no gaps at all.

time:
2017-07-26T10:17:21Z
class:
comments:
[Docs] Update Java Low-Level documentation to reflect shaded deps (#25882)

Since #25208 the Java Low-Level Rest Client has shaded dependencies. This commit updates the documentation to reflect that.

time:
2017-07-26T09:25:25Z
class:
comments:
Fix rest client causing jarHell for gradle 3.5+ (#25892)

The configuration removed from the runtime configuration did not
properly remove the deps jar from gradle versions > 3.3. The rest client
now removes both the 3.3 and 3.3+ configurations so this works on both
versions of gradle.

Closes #25884
Relates #25208

time:
2017-07-26T08:31:46Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java
comments:
[Docs] Add profile section to the Search API documentation (#25880)

time:
2017-07-26T08:20:40Z
class:
core/src/main/java/org/elasticsearch/indices/IndicesService.java
core/src/main/java/org/elasticsearch/node/Node.java
comments:
Remove unused member in IndicesService

time:
2017-07-26T08:08:23Z
class:
core/src/main/java/org/elasticsearch/search/DefaultSearchContext.java
core/src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java
core/src/main/java/org/elasticsearch/search/internal/SearchContext.java
core/src/main/java/org/elasticsearch/search/lookup/DocLookup.java
core/src/main/java/org/elasticsearch/search/lookup/LeafDocLookup.java
core/src/main/java/org/elasticsearch/search/lookup/SearchLookup.java
comments:
Remove unnecessary imports

time:
2017-07-26T07:16:52Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java
core/src/main/java/org/elasticsearch/index/IndexService.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/ConstantIndexFieldData.java
core/src/main/java/org/elasticsearch/index/mapper/IndexFieldMapper.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/search/DefaultSearchContext.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/DocValueFieldsFetchSubPhase.java
core/src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java
core/src/main/java/org/elasticsearch/search/internal/SearchContext.java
core/src/main/java/org/elasticsearch/search/lookup/DocLookup.java
core/src/main/java/org/elasticsearch/search/lookup/LeafDocLookup.java
core/src/main/java/org/elasticsearch/search/lookup/SearchLookup.java
core/src/main/java/org/elasticsearch/search/query/QueryPhase.java
core/src/test/java/org/elasticsearch/index/mapper/DateFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/mapper/DoubleIndexingDocTests.java
core/src/test/java/org/elasticsearch/index/mapper/ExternalFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/FieldNamesFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/RangeFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/query/DisableGraphQueryTests.java
core/src/test/java/org/elasticsearch/index/query/QueryShardContextTests.java
core/src/test/java/org/elasticsearch/index/query/RangeQueryRewriteTests.java
core/src/test/java/org/elasticsearch/index/query/SimpleQueryParserTests.java
core/src/test/java/org/elasticsearch/index/query/plugin/CustomQueryParserIT.java
core/src/test/java/org/elasticsearch/index/search/MultiMatchQueryTests.java
core/src/test/java/org/elasticsearch/index/search/NestedHelperTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/ExtendedBoundsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfigTests.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/FetchSourceSubPhaseTests.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightBuilderTests.java
core/src/test/java/org/elasticsearch/search/rescore/QueryRescoreBuilderTests.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/AbstractSuggestionBuilderTestCase.java
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/support/MultiValuesSourceAggregationBuilder.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/ExpressionTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ChildrenAggregationBuilder.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java
plugins/mapper-murmur3/src/test/java/org/elasticsearch/index/mapper/murmur3/Murmur3FieldMapperTests.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
test/framework/src/main/java/org/elasticsearch/test/TestSearchContext.java
test/framework/src/test/java/org/elasticsearch/search/MockSearchServiceTests.java
comments:
Respect cluster alias in `_index` aggs and queries (#25885)

Today when we aggregate on the `_index` field the cross cluster search
alias is not taken into account. Neither is it respected when we search
on the field. This change adds support for cluster alias when the cluster
alias is present on the `_index` field.

Closes #25606

time:
2017-07-26T06:21:42Z
class:
core/src/main/java/org/elasticsearch/common/xcontent/support/AbstractXContentParser.java
core/src/main/java/org/elasticsearch/index/mapper/NumberFieldMapper.java
core/src/test/java/org/elasticsearch/index/mapper/AbstractNumericFieldMapperTestCase.java
core/src/test/java/org/elasticsearch/index/mapper/NumberFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/NumberFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/mapper/RangeFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/RangeFieldTypeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridParserTests.java
comments:
Coerce decimal strings for whole number types by truncating the decimal part (#25835)

This changes makes it so you can index a value like "1.0" or "1.1" into whole
number field types like byte and integer. Without this change then the above
values would have resulted in an error, even with coerce set to true.

Closes #25819

time:
2017-07-25T18:50:09Z
class:
comments:
Fix elvis operator documentation

time:
2017-07-25T16:58:39Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
Add 5.5.2 Version and 5.5.1 BWC indices

time:
2017-07-25T15:52:15Z
class:
test/framework/src/main/java/org/elasticsearch/transport/nio/ESSelector.java
comments:
Simplify selector close method (#25838)

Currently we have an option to interrupt the selector thread on close.
This option is not needed as we do not call this method and we should
not be blocking on the network thread. Instead we only need to ever call
wakeup() on the raw selector.

time:
2017-07-25T13:07:45Z
class:
core/src/main/java/org/elasticsearch/common/lucene/search/function/CombineFunction.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/FieldValueFactorFunction.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunction.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
core/src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionBuilder.java
comments:
Remove assertion about deviation when casting to a float. (#25806)

We cannot guarantee that the result of computations will be in the float range,
since it depends on the data and how scores are computed. We already use doubles
as intermediate representations and cast to a float as a final step, which is
the right thing to do. Small doubles will just be rounded to zero, there is not
much we can or should do about it.

Closes #25330

time:
2017-07-25T11:09:27Z
class:
comments:
Updated doc versions to 7.0.0-alpha1 unreleased

time:
2017-07-25T10:10:59Z
class:
core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsContext.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsFetchSubPhase.java
comments:
inner hits: Only access stored fields when needed

Stored fields were still being accessed for nested inner hits even if the _source was not requested.
This was done to figure out the id of the root document. However this is already known higher up the stack.
So instead this change adds the id to the nested search context, so that it is no longer required to be fetched via the stored fields.

In case the _source is large and no source is requested then hot threads like these ones would still appear:

```
100.3% (501.3ms out of 500ms) cpu usage by thread 'elasticsearch[AfXKKfq][search][T#6]'
     2/10 snapshots sharing following 22 elements
       org.apache.lucene.store.DataInput.skipBytes(DataInput.java:352)
       org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.skipField(CompressingStoredFieldsReader.java:246)
       org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.visitDocument(CompressingStoredFieldsReader.java:601)
       org.apache.lucene.index.CodecReader.document(CodecReader.java:88)
       org.apache.lucene.index.FilterLeafReader.document(FilterLeafReader.java:411)
       org.elasticsearch.search.fetch.FetchPhase.loadStoredFields(FetchPhase.java:347)
       org.elasticsearch.search.fetch.FetchPhase.createNestedSearchHit(FetchPhase.java:219)
       org.elasticsearch.search.fetch.FetchPhase.execute(FetchPhase.java:150)
       org.elasticsearch.search.fetch.subphase.InnerHitsFetchSubPhase.hitsExecute(InnerHitsFetchSubPhase.java:73)
       org.elasticsearch.search.fetch.FetchPhase.execute(FetchPhase.java:166)
       org.elasticsearch.search.fetch.subphase.InnerHitsFetchSubPhase.hitsExecute(InnerHitsFetchSubPhase.java:73)
       org.elasticsearch.search.fetch.FetchPhase.execute(FetchPhase.java:166)
       org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:422)
```

and:

```
8/10 snapshots sharing following 27 elements
       org.apache.lucene.codecs.compressing.LZ4.decompress(LZ4.java:135)
       org.apache.lucene.codecs.compressing.CompressionMode$4.decompress(CompressionMode.java:138)
       org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$BlockState$1.fillBuffer(CompressingStoredFieldsReader.java:531)
       org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader$BlockState$1.readBytes(CompressingStoredFieldsReader.java:550)
       org.apache.lucene.store.DataInput.readBytes(DataInput.java:87)
       org.apache.lucene.store.DataInput.skipBytes(DataInput.java:350)
       org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.skipField(CompressingStoredFieldsReader.java:246)
       org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.visitDocument(CompressingStoredFieldsReader.java:601)
       org.apache.lucene.index.CodecReader.document(CodecReader.java:88)
       org.apache.lucene.index.FilterLeafReader.document(FilterLeafReader.java:411)
       org.elasticsearch.search.fetch.FetchPhase.loadStoredFields(FetchPhase.java:347)
       org.elasticsearch.search.fetch.FetchPhase.createNestedSearchHit(FetchPhase.java:219)
       org.elasticsearch.search.fetch.FetchPhase.execute(FetchPhase.java:150)
       org.elasticsearch.search.fetch.subphase.InnerHitsFetchSubPhase.hitsExecute(InnerHitsFetchSubPhase.java:73)
       org.elasticsearch.search.fetch.FetchPhase.execute(FetchPhase.java:166)
       org.elasticsearch.search.fetch.subphase.InnerHitsFetchSubPhase.hitsExecute(InnerHitsFetchSubPhase.java:73)
       org.elasticsearch.search.fetch.FetchPhase.execute(FetchPhase.java:166)
       org.elasticsearch.search.SearchService.executeFetchPhase(SearchService.java:422)
```

time:
2017-07-25T08:11:06Z
class:
core/src/test/java/org/elasticsearch/cluster/serialization/ClusterSerializationTests.java
comments:
[TEST] Set proper version on InputStream

time:
2017-07-25T07:41:53Z
class:
comments:
[Docs] remove reference to the deprecated  in the  docs

time:
2017-07-25T06:08:44Z
class:
core/src/main/java/org/elasticsearch/index/engine/Engine.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/translog/TruncateTranslogIT.java
comments:
Engine.close should only return when resources are freed (#25852)

Currently Engine.close can return immediately if the engine is already at the process of shutting down (due to a concurrent close call or an engine failure). This is a shame because some of our testing infra wants to do things like checking the index. This commit changes the logic to make sure that all calls to close wait until resources are freed. Failing the engine is still non blocking.

Fixes #25817

time:
2017-07-24T17:55:43Z
class:
client/benchmark/src/main/java/org/elasticsearch/client/benchmark/rest/RestClientBenchmark.java
client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java
client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java
client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java
client/rest-high-level/src/test/java/org/elasticsearch/client/CustomRestHighLevelClientTests.java
client/rest-high-level/src/test/java/org/elasticsearch/client/ESRestHighLevelClientTestCase.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RequestTests.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientExtTests.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java
client/rest-high-level/src/test/java/org/elasticsearch/client/SearchIT.java
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java
client/rest/src/main/java/org/elasticsearch/client/HeapBufferedAsyncResponseConsumer.java
client/rest/src/main/java/org/elasticsearch/client/HttpAsyncResponseConsumerFactory.java
client/rest/src/main/java/org/elasticsearch/client/HttpDeleteWithEntity.java
client/rest/src/main/java/org/elasticsearch/client/HttpGetWithEntity.java
client/rest/src/main/java/org/elasticsearch/client/RequestLogger.java
client/rest/src/main/java/org/elasticsearch/client/Response.java
client/rest/src/main/java/org/elasticsearch/client/ResponseException.java
client/rest/src/main/java/org/elasticsearch/client/RestClient.java
client/rest/src/main/java/org/elasticsearch/client/RestClientBuilder.java
client/rest/src/test/java/org/elasticsearch/client/FailureTrackingResponseListenerTests.java
client/rest/src/test/java/org/elasticsearch/client/HeapBufferedAsyncResponseConsumerTests.java
client/rest/src/test/java/org/elasticsearch/client/HostsTrackingFailureListener.java
client/rest/src/test/java/org/elasticsearch/client/RequestLoggerTests.java
client/rest/src/test/java/org/elasticsearch/client/ResponseExceptionTests.java
client/rest/src/test/java/org/elasticsearch/client/RestClientBuilderIntegTests.java
client/rest/src/test/java/org/elasticsearch/client/RestClientBuilderTests.java
client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsIntegTests.java
client/rest/src/test/java/org/elasticsearch/client/RestClientMultipleHostsTests.java
client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostIntegTests.java
client/rest/src/test/java/org/elasticsearch/client/RestClientSingleHostTests.java
client/rest/src/test/java/org/elasticsearch/client/RestClientTests.java
client/rest/src/test/java/org/elasticsearch/client/SyncResponseListenerTests.java
client/rest/src/test/java/org/elasticsearch/client/documentation/RestClientDocumentation.java
client/sniffer/src/main/java/org/elasticsearch/client/sniff/ElasticsearchHostsSniffer.java
client/sniffer/src/main/java/org/elasticsearch/client/sniff/HostsSniffer.java
client/sniffer/src/main/java/org/elasticsearch/client/sniff/SniffOnFailureListener.java
client/sniffer/src/main/java/org/elasticsearch/client/sniff/Sniffer.java
client/sniffer/src/test/java/org/elasticsearch/client/sniff/ElasticsearchHostsSnifferTests.java
client/sniffer/src/test/java/org/elasticsearch/client/sniff/MockHostsSniffer.java
client/sniffer/src/test/java/org/elasticsearch/client/sniff/SniffOnFailureListenerTests.java
client/sniffer/src/test/java/org/elasticsearch/client/sniff/SnifferBuilderTests.java
client/sniffer/src/test/java/org/elasticsearch/client/sniff/documentation/SnifferDocumentation.java
client/test/src/main/java/org/elasticsearch/client/RestClientTestCase.java
client/test/src/main/java/org/elasticsearch/client/RestClientTestUtil.java
distribution/integ-test-zip/src/test/java/org/elasticsearch/test/rest/CreatedLocationHeaderIT.java
distribution/integ-test-zip/src/test/java/org/elasticsearch/test/rest/NodeRestUsageIT.java
distribution/integ-test-zip/src/test/java/org/elasticsearch/test/rest/WaitForRefreshAndCloseTests.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/TransportReindexAction.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteRequestBuilders.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSource.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/remote/RemoteRequestBuildersTests.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/remote/RemoteScrollableHitSourceTests.java
modules/transport-netty4/src/test/java/org/elasticsearch/rest/Netty4HeadBodyIsEmptyIT.java
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
qa/mixed-cluster/src/test/java/org/elasticsearch/backwards/IndexingIT.java
qa/reindex-from-old/src/test/java/org/elasticsearch/smoketest/ReindexFromOldRemoteIT.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/ContextAndHeaderTransportIT.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/CorsNotSetIT.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/CorsRegexIT.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/DeprecationHttpIT.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/DetailedErrorsDisabledIT.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/DetailedErrorsEnabledIT.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/HttpCompressionIT.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/ResponseHeaderPluginIT.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/RestHttpResponseHeadersIT.java
qa/wildfly/src/test/java/org/elasticsearch/wildfly/WildflyIT.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ClientYamlTestClient.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ClientYamlTestExecutionContext.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ClientYamlTestResponse.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ESClientYamlSuiteTestCase.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ObjectPath.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/restspec/ClientYamlSuiteRestApi.java
test/framework/src/test/java/org/elasticsearch/test/rest/yaml/ClientYamlTestExecutionContextTests.java
comments:
Shade external dependencies in the rest client jar

This commit removes all external dependencies from the rest client jar
and shades them in an 'org.elasticsearch.client' package within the jar
using shadowJar gradle plugin. All projects that depended on the
existing jar have been converted to using the 'org.elasticsearch.client'
package prefixes to interact with the rest client.

Closes #25208

time:
2017-07-24T16:42:15Z
class:
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/ShingleTokenFilterTests.java
comments:
Pre-configured shingle filter should disable graph analysis (#25853)

This change disables the graph analysis on default `shingle` filter.
The pre-configured shingle filter produces shingles of different size.
Graph analysis on such token stream is useless and dangerous as it may create too many paths.

Fixes #25555

time:
2017-07-24T16:36:16Z
class:
core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java
core/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java
comments:
[Docs]: Clarify query_string parser splits on operator

time:
2017-07-24T16:33:44Z
class:
core/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java
core/src/test/java/org/elasticsearch/cluster/SpecificMasterNodesIT.java
comments:
add debug logging to SpecificMasterNodesIT

Chasing https://github.com/elastic/elasticsearch/issues/25471

Also beefed up tests in TransportMasterNodeActionTests trying to simulate possible failures

time:
2017-07-24T15:45:01Z
class:
core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryContextMapping.java
core/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java
comments:
Context suggester should filter doc values field (#25858)

The context suggester extracts the context field values from the document but it does not filter doc values field coming from Keyword field.
This change filters doc values field when building the context values.

Fixes #25404

time:
2017-07-24T13:03:05Z
class:
core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java
comments:
#25851: Fix ParentFieldMapper.toXContent to print eager_global_ordinals only when it is set to false

time:
2017-07-24T11:24:29Z
class:
core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java
core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java
comments:
SpanNearQueryBuilder should return the inner clause when a single clause is provided (#25856)

This change handles the case where a SpanNearQueryBuilder tries to create a query with a single clause.
This is not allowed in the SpanNearQuery so instead of throwing an exception when the weight is built, this change builds and returns
the singleton inner clause on toQuery.

Fixes #25630

time:
2017-07-24T11:07:19Z
class:
core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java
core/src/test/java/org/elasticsearch/index/mapper/ParentFieldMapperTests.java
comments:
The default _parent field should not try to load global ordinals (#25851)

The default _parent field tries to load global ordinals because it is created with eager_global_ordinals=true.
This leads to an IllegalStateException because this field does not have doc_values.
This change explicitely sets eager_global_ordinals to false in order to avoid the ISE on startup.

Fixes #25849

time:
2017-07-22T18:55:33Z
class:
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/ChannelFactory.java
comments:
Close raw channel when bind / connect fails (#25840)

Currently we are failing to close socket channels when the initial bind
or connect operation fails. This leaves the file descriptor hanging
around. This closes the channel when an exception occurs during bind or
connect.

time:
2017-07-22T06:46:21Z
class:
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
comments:
adapt testDoubleDeliveryReplicaAppendingOnly to #25827

time:
2017-07-21T18:16:58Z
class:
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/indices/recovery/RecoveryTests.java
comments:
fix compilation

time:
2017-07-21T16:55:23Z
class:
test/framework/src/main/java/org/elasticsearch/transport/nio/AcceptingSelector.java
test/framework/src/main/java/org/elasticsearch/transport/nio/AcceptorEventHandler.java
test/framework/src/main/java/org/elasticsearch/transport/nio/ESSelector.java
test/framework/src/main/java/org/elasticsearch/transport/nio/EventHandler.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioClient.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java
test/framework/src/main/java/org/elasticsearch/transport/nio/OpenChannels.java
test/framework/src/main/java/org/elasticsearch/transport/nio/SocketSelector.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/AbstractNioChannel.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/ChannelFactory.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/CloseFuture.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/NioChannel.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/NioServerSocketChannel.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/NioSocketChannel.java
test/framework/src/test/java/org/elasticsearch/transport/nio/AcceptingSelectorTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/AcceptorEventHandlerTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/ESSelectorTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/NioClientTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/SimpleNioTransportTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/SocketEventHandlerTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/SocketSelectorTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/AbstractNioChannelTestCase.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/ChannelFactoryTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/DoNotRegisterChannel.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/DoNotRegisterServerChannel.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/NioServerSocketChannelTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/NioSocketChannelTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/TcpWriteContextTests.java
comments:
Simplify NioChannel creation and closing process (#25504)

Currently an NioChannel is created and it is UNREGISTERED. At some point
it is registered with a selector. From that point on, the channel can
only be closed by the selector. The fact that a channel might not be
associated with a selector has significant implications for concurrency
and the channel shutdown process. The only thing that is simplified by
allowing channels to be in a state independent of a selector is some
testing scenarios.

This PR modifies channels so that they are given a selector at creation
time and are always associated with that selector. Only that selector
can close that channel. This simplifies the channel lifecycle and
closing intricacies.

time:
2017-07-21T15:53:48Z
class:
comments:
[TEST] Move version skip to setup in Indices.GetMapping#70_legacy_multi_type (#25816)

Since the setup attempts to create an index with two types, and the setup runs before any test,
this will fail on versions 6.0+ before it has a chance to check the skip in each individual
test.  Moving to the setup resolves this issue.

time:
2017-07-21T15:19:54Z
class:
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/indices/recovery/RecoveryTests.java
comments:
Engine - do not index operations with seq# lower than the local checkpoint into lucene (#25827)

When a replica processes out of order operations, it can drop some due to version comparisons. In the past that would have resulted in a VersionConflictException being thrown and the operation was totally ignored. With the seq# push, we started storing these operations in the translog (but not indexing them into lucene) in order to have complete op histories to facilitate ops based recoveries. This in turn had the undesired effect that deleted docs may be resurrected during recovery in some extreme edge situation (see a complete explanation below). This PR contains a simple fix, which is also an optimization for the recovery process, incoming operation that have a seq# lower than the current local checkpoint (i.e., have already been processed) should not be indexed into lucene. Note that sometimes we can also skip storing them in the translog, but this is not required for the fix and is more complicated.

This is the equivalent of #25592

## More details on resurrected ops 

Consider two operations: 
 - Index d1, seq no 1
 - Delete d1, seq no 3

On a replica they come out of order:
 - Translog gen 1 contains:
    - delete (seqNo 3)
 - Translog gen 2 contains:
    - index (seqNo 1) (wasn't indexed into lucene, but put into the translog)
    - another operation (seqNo 10)
 - Translog gen 3 
    - another op (seqNo 9)
 - Engine commits with:
    - local checkpoint 9
    - refers to gen 2 

If this replica becomes a primary:
    - Local recovery will replay translog gen 2 and up, causing index #1 to be re-index. 
    - Even if recovery will start at gen 3, the translog retention policy will cause file based recovery to replay the entire translog. If it happens to start at gen 2 (but not 1), we will run into the same problem.

#### Some context - out of order delivery involving deletes:

On normal operations, this relies on the gc_deletes setting. We assume that the setting represents an upper bound on the time between the index and the delete operation. The index operation will be detected as stale based on the tombstone map in the LiveVersionMap.

Recovery presents a challenge as it can replay an old index operation that was in the translog and override a delete operation that was done when the engine was opened (and is not part of the replayed snapshot). To deal with this situation, we disable GC deletes (i.e. retain all deletes) for the duration of recoveries. This means that the delete operation will be remembered and the index operation ignored.

Both of the above scenarios (local recover + peer recovery) create a situation where the delete operation is never replayed. It this "lost" as lucene doesn't remember it happened and our LiveVersionMap is populated with it.

#### Solution:

Note that both local and peer recovery represent a scenario where we replay translog ops on top of an existing lucene index, potentially with ongoing indexing. Therefore we can treat them the same.

The local checkpoint in Lucene represent a marker indicating that all operations below it were performed on the index. This is the only form of "memory" that we have that relates to deletes. If we can achieve the following:
1) All ops below the local checkpoint are not indexed to lucene.
2) All ops above the local checkpoint are

It will mean that all  variants are covered: (i# == index op seq#, d# == delete op seq#, lc == local checkpoint in commit)
1) i# < d# <= lc - document is already deleted in lucene and stays that way.
2) i# <= lc < d# - delete is replayed on index - document is deleted
3) lc < i# < d# - index is replayed and then delete - document is deleted.

More formally - we want to make sure that for all ops that performed on the primary o1 and o2, if o2 is processed on a shard before o1, o1 will be dropped. We have the following scenarios

1) If both o1 or o2 are not included in the replayed snapshot and are above it (i.e., have a higher seq#), they fall under the gc deletes assumption.
2) If both o1 is part of the replayed snapshot but o2 is above it:
	- if o2 arrives first, o1 must arrive due to the recovery and potentially via replication as well. since gc deletes is disabled we are guaranteed to know of o2's existence.
3) If both o2 and o1 are part of the replayed snapshot:
	- we fall under the same scenarios as #2 - disabling GC deletes ensures we know of o2 if it arrives first.
4) If o1 falls before the snapshot and o2 is either part of the snapshot or higher:
	- Since the snapshot is guaranteed to contain all ops that are not part of lucene and are above the lc in the commit used, this means that o1 is part of lucene and o1 < local checkpoint. This means it won't be processed and we're not in the scenario we're discussing.
5) If o2 falls before the snapshot but o1 is part of it:
	- by the same reasoning above, o2 is < local checkpoint. Since o1 < o2, we also get o1 < local checkpoint and this will be dropped.


#### Implementation:

For local recovery, we can filter the ops we read of the translog and avoid replaying them. For peer recovery this is tricky as we do want to send the operations in order to have some history on the target shard. Filtering operations on the engine level (i.e., not indexing to lucene if op seq# <= lc) would work for both.

time:
2017-07-21T14:52:57Z
class:
core/src/main/java/org/elasticsearch/common/lucene/search/Queries.java
core/src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java
core/src/main/java/org/elasticsearch/index/search/ExistsFieldQueryExtension.java
core/src/main/java/org/elasticsearch/index/search/FieldQueryExtension.java
core/src/main/java/org/elasticsearch/index/search/MatchQuery.java
core/src/main/java/org/elasticsearch/index/search/MultiMatchQuery.java
core/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java
core/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/search/MultiMatchQueryTests.java
core/src/test/java/org/elasticsearch/search/query/QueryStringIT.java
core/src/test/java/org/elasticsearch/validate/SimpleValidateQueryIT.java
comments:
Refactor field expansion for match, multi_match and query_string query (#25726)

This commit changes the way we handle field expansion in `match`, `multi_match` and `query_string` query.
 The main changes are:

- For exact field name, the new behavior is to rewrite to a matchnodocs query when the field name is not found in the mapping.

- For partial field names (with `*` suffix), the expansion is done only on `keyword`, `text`, `date`, `ip` and `number` field types. Other field types are simply ignored.

- For all fields (`*`), the expansion is done on accepted field types only (see above) and metadata fields are also filtered.

- The `*` notation can also be used to set `default_field` option on`query_string` query. This should replace the needs for the extra option `use_all_fields` which is deprecated in this change.

This commit also rewrites simple `*` query to matchalldocs query when all fields are requested (Fixes #25556). 

The same change should be done on `simple_query_string` for completeness.

`use_all_fields` option in `query_string` is also deprecated in this change, `default_field` should be set to `*` instead.

Relates #25551

time:
2017-07-21T14:43:18Z
class:
core/src/test/java/org/elasticsearch/discovery/zen/NodeJoinControllerTests.java
comments:
testRejectingJoinWithIncompatibleVersion(WithUnrecoveredState) should use immediate priorities

That will prevent race conditions with the join task, causing failures.

time:
2017-07-21T14:36:50Z
class:
comments:
Reenable BWC tests

after merging #25822 & #25824

time:
2017-07-21T13:57:42Z
class:
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
core/src/main/java/org/elasticsearch/action/index/IndexRequest.java
core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java
core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java
core/src/main/java/org/elasticsearch/action/support/replication/ReplicationRequest.java
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/action/support/replication/TransportWriteAction.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/PrimaryReplicaSyncer.java
core/src/test/java/org/elasticsearch/action/bulk/TransportShardBulkActionTests.java
core/src/test/java/org/elasticsearch/action/index/IndexRequestTests.java
core/src/test/java/org/elasticsearch/action/support/replication/ReplicationOperationTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/replication/RecoveryDuringReplicationTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java
core/src/test/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetServiceTests.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
comments:
Move primary term from ReplicationRequest to ConcreteShardRequest (#25822)

Removes the primary term from the replication request and pushes it into the transport envelope. This makes it possible to remove the term from the ReplicationOperation universe. The primary term that is to be used for a replication operation is now determined in the reroute phase when the node decides to execute a primary action (and validated once the primary action gets to execute). This makes it possible to validate that the primary action was sent to the correct primary shard instance that it was meant to be sent to (currently we only validate primary actions using the allocation id, which can be reused for failed and reallocated primaries).

time:
2017-07-21T12:41:16Z
class:
comments:
Added a script to change the labels on github issues which match the search (#25828)

For instance:

    ./dev-tools/github_relabel.pl --state=open --labels=v5.5.1 --remove=v5.5.1 --add=v5.5.2

time:
2017-07-21T12:27:39Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
Make sure shard is not closed when updating local checkpoint

If a primary shard is relocated, and then subsequently closed, there is a short window where ReplicationOperation could access the
closed shard (engine is not shut down yet) and, because it does not know that the shard was relocated, try to update the local
checkpoint, tripping an assertion in GlobalCheckPointTracker that a local checkpoint cannot be updated if it's not in primary mode.

time:
2017-07-21T11:24:38Z
class:
comments:
[DOCS] improve explanation of dynamic mapping setting (#25829)

Closes #25825

time:
2017-07-21T11:02:33Z
class:
core/src/test/java/org/elasticsearch/search/SearchServiceTests.java
comments:
[TEST] Rename variable to make it less confusing

time:
2017-07-21T09:45:24Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
Make sure shard is not closed when accessing ReplicationGroup

time:
2017-07-21T09:24:46Z
class:
comments:
Reorganised setup docs into better order

time:
2017-07-21T09:15:21Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java
comments:
[TEST] SearchDocumentationIT#testSearch to sort on _uid instead of _id

time:
2017-07-21T08:46:06Z
class:
comments:
Enforce that bash is used when running `gradle run`.

Using `sh` means we used whatever default the system has, which is `dash` on
Ubuntu, even though our startup script is written for bash (see the shebang).

time:
2017-07-21T08:04:49Z
class:
comments:
Fix broken quotes in systemd unit file

The quoting for the ExecStart entry is broken as quotes must wrap an
entire argument, and arguments are separated by spaces. It turns out
that any quoting is unnecessary here, systemd will handle it correctly
either way.

time:
2017-07-21T07:38:38Z
class:
core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java
core/src/main/java/org/elasticsearch/indices/IndicesService.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/test/java/org/elasticsearch/search/SearchServiceTests.java
core/src/test/java/org/elasticsearch/search/geo/GeoShapeQueryTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchIT.java
comments:
Rewrite search requests on the coordinating nodes (#25814)

This change rewrites search requests on the coordinating node before
we send requests to the individual shards. This will reduce the rewrite load
and object creation for each rewrite on the executing nodes and will fetch
resources only once instead of N times once per shard for queries like `terms`
query with index lookups. (among percolator and geo-shape)

Relates to #25791

time:
2017-07-21T06:46:10Z
class:
core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java
comments:
First increment shard stats before notifing and potentially sending response (#25818)

When we skip a shard we should first increment the skip and successful shard
counters before we notify the super class about a skipped shard which could
send back the result before we increment the stats.

time:
2017-07-21T00:38:49Z
class:
comments:
Introduce elasticsearch-env

This commit introduces the elasticsearch-env script. The purpose of this
script is threefold:
 - vastly simplify the various scripts used in Elasticsearch
 - provide a script that can be included in other scripts in the
   Elasticsearch ecosystem (e.g., plugins)
 - correctly establish the environment for all scripts (e.g., so that
   users can run `elasticsearch-keystore` from a package distribution
   without having to worry about setting `CONF_DIR` first, otherwise the
   keystore would be created in the wrong location)

Relates #25815

time:
2017-07-20T20:02:07Z
class:
core/src/main/java/org/elasticsearch/Version.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/transport/TCPTransportTests.java
comments:
Bump the min compat version to 5.6.0 (#25805)

This commit increases the min compat version for 6.0 to 5.6.0. This is
already what is being tested by gradle, but the code was out of sync.

time:
2017-07-20T20:01:41Z
class:
core/src/main/java/org/elasticsearch/action/main/MainResponse.java
core/src/test/java/org/elasticsearch/action/main/MainActionTests.java
core/src/test/java/org/elasticsearch/action/main/MainResponseTests.java
comments:
Add compatibility versions to main action response (#25799)

This commit adds the min wire/index compat versions to the main action
output. Not only will this make the compatility expected more
transparent, but it also allows to test which version others think the
compat versions are, similar to how we test the lucene version.

time:
2017-07-20T18:11:29Z
class:
core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java
core/src/main/java/org/elasticsearch/discovery/zen/MembershipAction.java
core/src/main/java/org/elasticsearch/discovery/zen/NodeJoinController.java
core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/discovery/zen/MembershipActionTests.java
core/src/test/java/org/elasticsearch/discovery/zen/NodeJoinControllerTests.java
test/framework/src/main/java/org/elasticsearch/test/VersionUtils.java
comments:
Validate a joining node's version with version of existing cluster nodes (#25808)

When a node tries to join a cluster, it goes through a validation step to make sure the node is compatible with the cluster. Currently we validation that the node can read the cluster state and that it is compatible with the indexes of the cluster. This PR adds validation that the joining node's version is compatible with the versions of existing nodes. Concretely we check that:

1) The node's min compatible version is higher or equal to any node in the cluster (this prevents a too-new node from joining)
2) The node's version is higher or equal to the min compat version of all cluster nodes (this prevents a too old join where, for example, the master is on 5.6, there's another 6.0 node in the cluster and a 5.4 node tries to join).
3) The node's major version is at least as higher as the lowest node in the cluster. This is important as we use the minimum version in the cluster to stop executing bwc code for operations that require multiple nodes. If the nodes are already operating in "new cluster mode", we should prevent nodes from the previous major to join (even if they are wire level compatible). This does mean that if you have a very unlucky partition during the upgrade which partitions all old nodes which are also a minority / data nodes only, the may not be able to re-join the cluster. We feel this edge case risk is well worth the simplification it brings to BWC layers only going one way. This restriction only holds if the cluster state has been recovered (i.e., the cluster has properly formed).

 Also, the node join validation can now selectively fail specific nodes (previously the entire batch was failed). This is an important preparation for a follow up PR where we plan to have a rejected joining node die with dignity.

time:
2017-07-20T18:04:42Z
class:
core/src/test/java/org/elasticsearch/index/translog/TruncateTranslogIT.java
comments:
awaitFix testCorruptTranslogTruncationOfReplica

see https://github.com/elastic/elasticsearch/issues/25817

time:
2017-07-20T17:18:51Z
class:
comments:
Update removal_of_types.asciidoc

Fixed `include_in_type` -> `include_type_name`

time:
2017-07-20T15:51:08Z
class:
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/DeleteStoredScriptRequest.java
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/DeleteStoredScriptRequestBuilder.java
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/GetStoredScriptRequest.java
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/GetStoredScriptRequestBuilder.java
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/PutStoredScriptRequest.java
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/PutStoredScriptRequestBuilder.java
core/src/main/java/org/elasticsearch/client/ClusterAdminClient.java
core/src/main/java/org/elasticsearch/client/support/AbstractClient.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestDeleteStoredScriptAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestGetStoredScriptAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestPutStoredScriptAction.java
core/src/main/java/org/elasticsearch/script/ScriptMetaData.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/StoredScriptSource.java
core/src/test/java/org/elasticsearch/action/admin/cluster/storedscripts/GetStoredScriptRequestTests.java
core/src/test/java/org/elasticsearch/action/admin/cluster/storedscripts/PutStoredScriptRequestTests.java
core/src/test/java/org/elasticsearch/client/AbstractClientHeadersTestCase.java
core/src/test/java/org/elasticsearch/script/ScriptMetaDataTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/script/StoredScriptSourceTests.java
core/src/test/java/org/elasticsearch/script/StoredScriptTests.java
core/src/test/java/org/elasticsearch/script/StoredScriptsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketScriptIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketSelectorIT.java
core/src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreIT.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/StoredExpressionTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/SearchTemplateIT.java
comments:
remove lang url parameter from stored script requests (#25779)

Also has updates to ScriptMetaData for allowing the old namespace format to be loaded all the way back through 5.0; however, it will throw an exception if two scripts share the same id but different languages.

time:
2017-07-20T14:01:57Z
class:
comments:
Fix elasticsearch-keystore handling of path.conf

This commit fixes the elasticsearch-keystore script handling of
path.conf; the problem here is that the script is setting a system
property that is completely unobserved. Instead, we use the path.conf
command line flag.

Relates #25811

time:
2017-07-20T13:42:39Z
class:
core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java
comments:
Remove legacy checks for config file settings

This commit removes legacy checks for unsupported an environment
variable and unsupported system properties. This environment variable
and these system properties have not been supported since 1.x so it is
safe to stop checking for the existence of these settings.

Relates #25809

time:
2017-07-20T13:37:50Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java
core/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/index/query/Rewriteable.java
core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java
core/src/main/java/org/elasticsearch/indices/IndicesService.java
core/src/main/java/org/elasticsearch/search/DefaultSearchContext.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/AbstractHighlighterBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightBuilder.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java
core/src/main/java/org/elasticsearch/search/rescore/QueryRescorerBuilder.java
core/src/main/java/org/elasticsearch/search/rescore/RescoreBuilder.java
core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/ScoreSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/ScriptSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/SortBuilder.java
core/src/test/java/org/elasticsearch/action/search/AbstractSearchAsyncActionTests.java
core/src/test/java/org/elasticsearch/index/SearchSlowLogTests.java
core/src/test/java/org/elasticsearch/index/query/GeoShapeQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/RewriteableTests.java
core/src/test/java/org/elasticsearch/index/query/TermsQueryBuilderTests.java
core/src/test/java/org/elasticsearch/search/builder/SearchSourceBuilderTests.java
core/src/test/java/org/elasticsearch/search/internal/ShardSearchTransportRequestTests.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolateQueryBuilderTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
comments:
Ensure query resources are fetched asynchronously during rewrite (#25791)

The `QueryRewriteContext` used to provide a client object that can
be used to fetch geo-shapes, terms or documents for percolation. Unfortunately
all client calls used to be blocking calls which can have significant impact on the
rewrite phase since it occupies an entire search thread until the resource is
received. In the case that the index the resource is fetched from isn't on the local
node this can have significant impact on query throughput.

Note: this doesn't fix MLT since it fetches stuff in doQuery which is a different beast. Yet, it is a huge step in the right direction

time:
2017-07-20T13:36:56Z
class:
client/rest/src/main/java/org/elasticsearch/client/RestClientBuilder.java
client/rest/src/test/java/org/elasticsearch/client/RestClientBuilderIntegTests.java
comments:
RestClient uses system properties and system default SSLContext (#25757)

This commit calls the `useSystemProperties` method on the HttpAsyncClientBuilder so that the jvm
system properties are used. The primary reason for doing this is to ensure the builder uses the
system default SSLContext rather than the default instance created by the http client library.

Closes #23231

time:
2017-07-20T13:27:47Z
class:
comments:
Stop exporting HOSTNAME from scripts

Today we explicitly export the HOSTNAME variable from scripts. This is
probably a relic from the days when the scripts were not run on bash but
instead assume a POSIX-compliant shell only where HOSTNAME is not
guaranteed to exist. Yet, bash guarantees that HOSTNAME is set so we do
not need to set it in scripts. This commit removes this legacy.

Relates #25807

time:
2017-07-20T06:41:59Z
class:
comments:
Remove support for ES_INCLUDE

Today we enable users to customize the environment through the use of
ES_INCLUDE. This made sense for legacy reasons when we did not have
nicities like jvm.options (so dumped JVM options in the default include
script) and somewhat duplicates some of the functionality that we will
need from a dedicated environment script. This commit removes support
for ES_INCLUDE as a first step towards a dedicated include script.

Relates #25804

time:
2017-07-20T03:45:56Z
class:
comments:
Unzip quietly while provisioning virtual machines

When provisioning the virtual machines used for packaging, we download
the Gradle zip archive and unzip. This unzip is noisy produing a lot of
unnecessary output. This commit silences this output.

Relates #25803

time:
2017-07-19T15:34:53Z
class:
core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java
core/src/main/java/org/elasticsearch/discovery/zen/MembershipAction.java
core/src/main/java/org/elasticsearch/discovery/zen/NodeJoinController.java
core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/discovery/zen/MembershipActionTests.java
core/src/test/java/org/elasticsearch/discovery/zen/NodeJoinControllerTests.java
test/framework/src/main/java/org/elasticsearch/test/VersionUtils.java
comments:
Revert "Validate a joining node's version with version of existing cluster nodes (#25770)"

This reverts commit 1e1f8e63763561eeeb5b9be9756b22606eb71cb9.

time:
2017-07-19T13:06:49Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java
core/src/main/java/org/elasticsearch/index/query/QueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/index/query/Rewriteable.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FiltersAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightBuilder.java
core/src/main/java/org/elasticsearch/search/internal/AliasFilter.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java
core/src/main/java/org/elasticsearch/search/rescore/QueryRescorerBuilder.java
core/src/main/java/org/elasticsearch/search/sort/SortBuilder.java
core/src/test/java/org/elasticsearch/index/SearchSlowLogTests.java
core/src/test/java/org/elasticsearch/index/query/BoolQueryBuilderTests.java
core/src/test/java/org/elasticsearch/indices/IndicesServiceTests.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightBuilderTests.java
core/src/test/java/org/elasticsearch/search/rescore/QueryRescoreBuilderTests.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
comments:
Introduce a new Rewriteable interface to streamline rewriting (#25788)

Today we have duplicated code that is quite complicated to iterate
over rewriteable (`QueryBuilders` mainly) This change introduces a
`Rewriteable` interface that allow to share code to do the rewriting as
well as encapsulation and composition of queries.

time:
2017-07-19T12:57:55Z
class:
comments:
Fix list of unconverted snippets.

time:
2017-07-19T12:46:30Z
class:
core/src/main/java/org/elasticsearch/index/query/functionscore/RandomScoreFunctionBuilder.java
comments:
Fix compilation.

time:
2017-07-19T12:15:53Z
class:
core/src/main/java/org/elasticsearch/search/internal/CancellableBulkScorer.java
core/src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java
core/src/main/java/org/elasticsearch/search/query/CancellableCollector.java
core/src/main/java/org/elasticsearch/search/query/QueryCollectorContext.java
core/src/main/java/org/elasticsearch/search/query/QueryPhase.java
core/src/test/java/org/elasticsearch/indices/IndicesRequestCacheIT.java
core/src/test/java/org/elasticsearch/search/SearchCancellationTests.java
core/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
test/framework/src/main/java/org/elasticsearch/test/client/RandomizingClient.java
comments:
Reduce the overhead of timeouts and low-level search cancellation. (#25776)

Setting a timeout or enforcing low-level search cancellation used to make us
wrap the collector and check either the current time or whether the search
task was cancelled for every collected document. This can be significant
overhead on cheap queries that match many documents.

This commit changes the approach to wrap the bulk scorer rather than the
collector and exponentially increase the interval between two consecutive
checks in order to reduce the overhead of those checks.

time:
2017-07-19T12:12:54Z
class:
core/src/main/java/org/elasticsearch/index/mapper/RangeFieldMapper.java
core/src/test/java/org/elasticsearch/index/mapper/RangeFieldTypeTests.java
comments:
Fix parsing of ip range queries. (#25768)

Closes #25636

time:
2017-07-19T12:12:14Z
class:
core/src/main/java/org/elasticsearch/search/profile/AbstractProfileBreakdown.java
core/src/main/java/org/elasticsearch/search/profile/Timer.java
core/src/test/java/org/elasticsearch/search/profile/TimerTests.java
comments:
Reduce profiling overhead. (#25772)

Calling `System.nanoTime()` for each method call may have a significant
performance impact.

Closes #24799

time:
2017-07-19T12:11:15Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunction.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/index/query/functionscore/RandomScoreFunctionBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/ScoreFunctionBuilders.java
core/src/test/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/functionscore/FunctionScoreTests.java
core/src/test/java/org/elasticsearch/index/query/functionscore/ScoreFunctionBuilderTests.java
core/src/test/java/org/elasticsearch/search/functionscore/RandomScoreFunctionIT.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorHighlightSubFetchPhaseTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/QueryAnalyzerTests.java
comments:
Require a field when a `seed` is provided to the `random_score` function. (#25594)

We currently use fielddata on the `_id` field which is trappy, especially as we
do it implicitly. This changes the `random_score` function to use doc ids when
no seed is provided and to suggest a field when a seed is provided.

For now the change only emits a deprecation warning when no field is supplied
but this should be replaced by a strict check on 7.0.

Closes #25240

time:
2017-07-19T12:06:04Z
class:
comments:
NOCONSOLE -> NOTCONSOLE in removal-of-types

time:
2017-07-19T10:57:29Z
class:
core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java
core/src/main/java/org/elasticsearch/discovery/zen/MembershipAction.java
core/src/main/java/org/elasticsearch/discovery/zen/NodeJoinController.java
core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/discovery/zen/MembershipActionTests.java
core/src/test/java/org/elasticsearch/discovery/zen/NodeJoinControllerTests.java
test/framework/src/main/java/org/elasticsearch/test/VersionUtils.java
comments:
Validate a joining node's version with version of existing cluster nodes (#25770)

When a node tries to join a cluster, it goes through a validation step to make sure the node is compatible with the cluster. Currently we validation that the node can read the cluster state and that it is compatible with the indexes of the cluster. This PR adds validation that the joining node's version is compatible with the versions of existing nodes. Concretely we check that:

1) The node's min compatible version is higher or equal to any node in the cluster (this prevents a too-new node from joining)
2) The node's version is higher or equal to the min compat version of all cluster nodes (this prevents a too old join where, for example, the master is on 5.6, there's another 6.0 node in the cluster and a 5.4 node tries to join).
3) The node's major version is at least as higher as the lowest node in the cluster. This is important as we use the minimum version in the cluster to stop executing bwc code for operations that require multiple nodes. If the nodes are already operating in "new cluster mode", we should prevent nodes from the previous major to join (even if they are wire level compatible). This does mean that if you have a very unlucky partition during the upgrade which partitions all old nodes which are also a minority / data nodes only, the may not be able to re-join the cluster. We feel this edge case risk is well worth the simplification it brings to BWC layers only going one way.

 Also, the node join validation can now selectively fail specific nodes (previously the entire batch was failed). This is an important preparation for a follow up PR where we plan to have a rejected joining node die with dignity.

time:
2017-07-19T10:30:38Z
class:
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java
core/src/main/java/org/elasticsearch/search/internal/AliasFilter.java
core/src/test/java/org/elasticsearch/action/ExplainRequestTests.java
core/src/test/java/org/elasticsearch/action/ShardValidateQueryRequestTests.java
core/src/test/java/org/elasticsearch/index/mapper/DateFieldTypeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregatorFactoriesTests.java
core/src/test/java/org/elasticsearch/search/internal/ShardSearchTransportRequestTests.java
comments:
Reduce the scope of `QueryRewriteContext` (#25787)

Today we provide a lot of functionality on the `QueryRewriteContext` that
we potentially don't have ie. if we rewrite on a coordinating node or when
we percolating. This change moves most of the unnecessary shard level or
index level services and dependencies to `QueryShardContext` instead.

time:
2017-07-19T09:07:11Z
class:
core/src/main/java/org/elasticsearch/rest/RestController.java
comments:
Fix handling of invalid error trace parameter

If a request contains an invalid error trace parameter, we send a error
on the channel. This should immediately abort any additional processing
of the request but instead we march on, dispatch the request and
subsequently send another message on the channel. The problem here is
this means two writes on the channel which leads to the request being
released twice ultimately raising in illegal reference count
exception. This commit addresses this by performing an early return in
the case that the request contained an invalid error trace parameter.

Relates #25785

time:
2017-07-19T07:51:27Z
class:
core/src/test/java/org/elasticsearch/client/transport/TransportClientNodesServiceTests.java
comments:
Remove timed latch await in listeners test

This commit removes a timed latch await in a transport client listeners
test. The problem with a timed wait here is that on an overloaded
machine, the test can fail because the waiting thread was not unlatched
quickly enough. This makes the test unnecessarily flaky. Instead, we
should wait indefinitely and simply let the test fail by the test
timeout if the latch is not counted down for some reason.

Closes #25760

time:
2017-07-19T04:40:42Z
class:
comments:
Expand migration note regarding default paths

This commit expands on the migration note regarding the removal of
default.path.data and default.path.logs to include a note that users
that were relying on the defaults (the common case for path.logs), and
they carry over their previous elasticsearch.yml configruation file,
then they must add explicit values for path.data and path.logs.

time:
2017-07-18T20:52:38Z
class:
comments:
[DOCS] Changes xrefs to cross doc links to enable building GS "mini-docs"

time:
2017-07-18T20:44:08Z
class:
comments:
[DOCS] Adding index file for GS "mini book".

time:
2017-07-18T17:30:15Z
class:
core/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java
comments:
[Test] Make sure that QueryPhaseTests#testIndexSortScrollOptimization creates segments that can be early terminated

time:
2017-07-18T16:31:04Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/GeoDistanceAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregator.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/RangeTests.java
comments:
Add strict parsing of aggregation ranges (#25769)

Currently we ignore unknown field names when parsing RangeAggregator.Range and
GeoDistanceAggregationBuilder.Range from `range`, `date_range` or `geo_distance`
aggregations. This can hide subtle errors in the query. This change makes parsing `ranges`
stricter.

time:
2017-07-18T15:23:54Z
class:
core/src/main/java/org/elasticsearch/index/engine/CombinedDeletionPolicy.java
comments:
CombinedDeletionPolicy can't assert it has no commits when creating an index

This is an appealing assertion, but there scenarios where it can happen under normal operations. For example, when an index is created it may run into an exception when the lucene files have already been created. The master will try to assign the shard to another node (it's empty, so no need to look for data) but if there is no other node, it will reassign it to the same node. At that point the deletion will get a list of existing commits (which it will typically delete).

time:
2017-07-18T14:58:46Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java
comments:
[Docs] Add sorting and source filtering section to client docs (#25767)

time:
2017-07-18T13:40:17Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java
core/src/test/java/org/elasticsearch/aliases/IndexAliasesIT.java
core/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java
core/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java
comments:
Improve error message when aliases are not supported (#25728)

With #23997 and #25268 we have changed put alias, delete alias, update aliases and delete index to not accept aliases. Instead concrete indices should be provided as their index parameter.

This commit improves the error message in case aliases are provided, from an IndexNotFoundException (404 status code) with "no such index" message, to an IllegalArgumentException (400 status code) with "The provided expression [alias] matches an alias, specify the corresponding concrete indices instead." message.

Note that there is no specific error message for the case where wildcard expressions match one or more aliases. In fact, aliases are simply ignored when expanding wildcards for such APIs. An error is thrown only when the expression ends up matching no indices at all, and allow_no_indices is set to false. In that case the error is still the generic "404 - no such index".

time:
2017-07-18T12:06:22Z
class:
comments:
Update experimental labels in the docs (#25727)

Relates https://github.com/elastic/elasticsearch/issues/19798

Removed experimental label from:
* Painless
* Diversified Sampler Agg
* Sampler Agg
* Significant Terms Agg
* Terms Agg document count error and execution_hint
* Cardinality Agg precision_threshold
* Pipeline Aggregations
* index.shard.check_on_startup
* index.store.type (added warning)
* Preloading data into the file system cache
* foreach ingest processor
* Field caps API
* Profile API

Added experimental label to:
* Moving Average Agg Prediction


Changed experimental to beta for:
* Adjacency matrix agg
* Normalizers
* Tasks API
* Index sorting

Labelled experimental in Lucene:
* ICU plugin custom rules file
* Flatten graph token filter
* Synonym graph token filter
* Word delimiter graph token filter
* Simple pattern tokenizer
* Simple pattern split tokenizer

Replaced experimental label with warning that details may change in the future:
* Analysis explain output format
* Segments verbose output format
* Percentile Agg compression and HDR Histogram
* Percentile Rank Agg HDR Histogram

time:
2017-07-18T08:26:32Z
class:
core/src/main/java/org/elasticsearch/indices/IndexClosedException.java
comments:
IndexClosedException to return 400 rather than 403 (#25752)

403 can be confused with security. If an API doesn't support working against closed indices and closed indices are referred to in a request, that is a bad request, hence 400 is more appropriate.

time:
2017-07-18T08:17:39Z
class:
core/src/test/java/org/elasticsearch/index/translog/TruncateTranslogIT.java
comments:
TruncateTranslogIT.testCorruptTranslogTruncation should wait for replica to allocate

The test checks if a file based or ops based recovery happened, but if the replica shard never finished recovering expectations are not met.

Fixes #25761

time:
2017-07-18T07:45:28Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/DateRangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregator.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java
comments:
Change parsing of numeric `to` and `from` parameters in `date_range` aggregation (#25376)

Currently the `to` and `from` parameter in the `date_range` aggregation is not
parsed with the correct date field format from the mappings or the aggregation
if the argument is numeric, but always treated as a long value specifying
`epoch_millis`. This leads to problems e.g. when the format is `epoch_second`,
but the `to` and `from` are currently treated as millis.

With this change, we interpret these parameters according to the `format` of the target field.
If the `format` in the mappings is not compatible with numeric input values,
a compatible `format` (e.g. `epoch_millis`, `epoch_second`) must be specified in
the `date_range` aggregation itself, otherwise an error is thrown.

#Closes #17920

time:
2017-07-18T07:15:17Z
class:
core/src/test/java/org/elasticsearch/index/translog/TruncateTranslogIT.java
comments:
await fix testCorruptTranslogTruncation

time:
2017-07-18T06:16:52Z
class:
comments:
Stop disabling explicit GC

The problem here is simple: when using direct buffers as in NIO, the JDK
relies on explict GC invocataions to trigger cleaning up direct buffers;
if such GCs do not occur and the direct buffer limit is reached, the JVM
will throw an out of memory exception. With explicit GCs disabled, the
JVM is neutered from explicitly cleaning up direct buffers in the act of
reserving a new direct buffer and instead relies on a GC occurring for
another reason. If such a GC never occurs, the JVM will OOM. This commit
removes disabling of explicit GCs. Note that these explicit GCs only
occur as a last ditch effort before going OOM when the JVM is trying to
reserve more direct memory. This is a known issue, see for example:
JDK-8142537.

Relates #25759

time:
2017-07-17T17:46:42Z
class:
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/UnifiedHighlighter.java
comments:
#25747: Fix check of termVector with and without offsets

time:
2017-07-17T17:30:58Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java
comments:
[Docs] Adding highlighting section to high level client docs (#25751)

Adding a section about how to use highlighting in the SearchSourceBuilder and
how to retrieve highlighted fragments from the SearchResponse.

time:
2017-07-17T17:10:46Z
class:
core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/UnifiedHighlighter.java
core/src/test/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighterTests.java
comments:
Picks offset source for the unified highlighter directly from the es mapping (#25747)

This commit changes how the offset source is picked for each field using the es mapping rather than the underlying Lucene field infos.
It's mandatory for large mappings where field infos retrieval can be costly (the global field infos is merged for each highlighted field in every hit by the Lucene impl).

Fixes #25699

time:
2017-07-17T17:04:51Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchActionListener.java
core/src/main/java/org/elasticsearch/action/search/SearchExecutionStatsCollector.java
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
core/src/main/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutor.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/node/ResponseCollectorService.java
core/src/main/java/org/elasticsearch/search/DefaultSearchContext.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/query/QueryPhase.java
core/src/main/java/org/elasticsearch/search/query/QuerySearchResult.java
core/src/test/java/org/elasticsearch/action/search/AbstractSearchAsyncActionTests.java
core/src/test/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhaseTests.java
core/src/test/java/org/elasticsearch/action/search/ClearScrollControllerTests.java
core/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java
core/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
core/src/test/java/org/elasticsearch/action/search/FetchSearchPhaseTests.java
core/src/test/java/org/elasticsearch/action/search/SearchAsyncActionTests.java
core/src/test/java/org/elasticsearch/node/ResponseCollectorServiceTests.java
core/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
test/framework/src/main/java/org/elasticsearch/node/MockNode.java
test/framework/src/main/java/org/elasticsearch/search/MockSearchService.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
test/framework/src/main/java/org/elasticsearch/test/TestSearchContext.java
test/framework/src/main/java/org/elasticsearch/threadpool/TestThreadPool.java
comments:
Register data node stats from info carried back in search responses (#25430)

* Register data node stats from info carried back in search responses

This is part of #24915, where we now calculate the EWMA of service time for
tasks in the search threadpool, and send that as well as the current queue size
back to the coordinating node. The coordinating node now tracks this information
for each node in the cluster.

This information will be used in the future the determining the best replica a
search request should be routed to. This change has no user-visible difference.

* Move response time timing into ResponseListenerWrapper

* Move ResponseListenerWrapper to ActionListener instead of SearchActionListener

Also removes the logger

* Move `requestIndex` back to private

* De-guice-ify ResponseCollectorService \o/

* Undo all changes to SearchQueryThenFetchAsyncAction

* Remove unneeded response collector from TransportSearchAction

* Undo all changes to SearchDfsQueryThenFetchAsyncAction

* Completely rewrite the inside of ResponseCollectorService's record keeping

* Documentation and cleanups for ResponseCollectorService

* Add unit test for collection of queue size and service time

* Fix Guice construction error

* Add basic unit tests for ResponseCollectorService

* Fix version constant for the master merge

* Fix test compilation after master merge

* Add a test for node removal on cluster changed event

* Remove integration test as there are now unit tests

* Rename ResponseListenerWrapper -> SearchExecutionStatsCollector

* Fix line-length

* Make classes private and final where appropriate

* Pass nodeId into SearchExecutionStatsCollector and use only ActionListener

* Get nodeId from connection so searchShardTarget can be private

* Remove threadpool from SearchContext, get it from IndexShard instead

* Add missing import

* Use BiFunction for responseWrapper rather than passing in collector service

time:
2017-07-17T16:50:30Z
class:
core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java
core/src/main/java/org/elasticsearch/indices/TermsLookup.java
core/src/test/java/org/elasticsearch/index/query/TermsQueryBuilderTests.java
core/src/test/java/org/elasticsearch/indices/TermsLookupTests.java
comments:
Make `index` in TermsLookup mandatory (#25753)

This change removes the leniency of having a `null` index to fetch
terms from in 6.0 onwards. This feature will be deprecated in the 5.x series
and 6.0 nodes will require the index to be set.

Closes #25750

time:
2017-07-17T16:49:50Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
core/src/test/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhaseTests.java
comments:
Use concrete version for BWC checks in SearchTransportService (#25748)

We used to compare agaisnt the min compatible version which is misleading since
it might move over time and since we backported the `can_match` API entirely
it's better to compare against a version constant.

time:
2017-07-17T16:21:39Z
class:
comments:
Broke recipes into separate pages

time:
2017-07-17T15:18:05Z
class:
core/src/test/java/org/elasticsearch/index/translog/TruncateTranslogIT.java
comments:
deubg logging to TruncateTranslogIT

To see what data paths are used.

time:
2017-07-17T13:43:28Z
class:
core/src/test/java/org/elasticsearch/common/UUIDTests.java
comments:
Fix reproducibility of UUIDTests.

Closes #25714

time:
2017-07-17T13:39:01Z
class:
core/src/main/java/org/elasticsearch/index/mapper/IpFieldMapper.java
core/src/test/java/org/elasticsearch/index/mapper/IpFieldTypeTests.java
comments:
Optimize `terms` queries on `ip` addresses to use a `PointInSetQuery` whenever possible. (#25669)

We can't do it in the general case because of prefix queries, but I believe this
is mostly used in query strings and not in explicit `terms` queries.

Closes #25667

time:
2017-07-17T13:37:59Z
class:
core/src/main/java/org/elasticsearch/index/mapper/MapperService.java
core/src/test/java/org/elasticsearch/index/mapper/MapperServiceTests.java
core/src/test/java/org/elasticsearch/index/mapper/SourceFieldMapperTests.java
core/src/test/java/org/elasticsearch/indices/mapping/ConcurrentDynamicTemplateIT.java
core/src/test/java/org/elasticsearch/indices/mapping/SimpleGetMappingsIT.java
core/src/test/java/org/elasticsearch/indices/mapping/UpdateMappingIntegrationIT.java
core/src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceIT.java
core/src/test/java/org/elasticsearch/indices/stats/IndexStatsIT.java
core/src/test/java/org/elasticsearch/validate/SimpleValidateQueryIT.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
comments:
Deprecate the `_default_` mapping. (#25652)

Now that indices cannot have types anymore, this feature does not buy anything
anymore.

Closes #25500

time:
2017-07-17T11:32:18Z
class:
comments:
Skip shrink ignores template mapping in BWC tests

This commit reverts some changes to the shrink API ignore template
mapping REST test in favor of simply skipping the test for BWC
purposes. The complexity here is due to deprecations and lacking the
infrastructure to gracefully handle a situation like this.

time:
2017-07-17T11:24:07Z
class:
comments:
[TEST] skips shrink source mapping rest test

This change skips the rest test in `rest-api-spec/test/indices.shrink/20_source_mapping.yml` as it currently fails because if we don’t expect the deprecation warning the normal rest tests fail because they get a warning they don’t expect but if we do expect the deprecation warning the mixed cluster tests fail because they don’t get a warning which they expected.

time:
2017-07-17T09:25:37Z
class:
comments:
Fix warnings in shrink ignore templates test

This commit fixes an issue with the REST test that the shrink API
ignores templates. The problem is that we have to use a BWC version of
the API (for the BWC tests) but this raises deprecation warnings. This
commit adds an expectation for these deprecation warnings.

time:
2017-07-17T08:48:26Z
class:
core/src/test/java/org/elasticsearch/index/translog/TruncateTranslogIT.java
comments:
Add testing around recovery to TruncateTranslogIT

time:
2017-07-17T08:47:48Z
class:
core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointSyncAction.java
core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java
core/src/test/java/org/elasticsearch/index/seqno/GlobalCheckpointTrackerTests.java
comments:
Fix pre-6.0 response to unknown replication actions

When sending replica requests for replication operations, we skip
sending the request to pre-6.0 nodes for operations that such nodes
would not be aware of (e.g., the background global checkpoint sync, or
the primary/replica resync) since they would not know what to do with
these requests. Yet, we simulate that we received responses from these
nodes. Today, this is done by simulating that they sent us that their
local checkpoint is unassigned sequence number. However, for pre-6.0
nodes we have introduced a special local checkpoint used in the global
checkpoint tracker for such nodes and that is what we should use here
too. This commit fixes this issue.

Relates #25744

time:
2017-07-17T07:45:49Z
class:
comments:
[TEST] Use 5.x compatible API in shrink tests

time:
2017-07-17T07:28:09Z
class:
comments:
Fix comment on shrink indices test

This commit fixes a comment on a shrink indices test; the comment is
wrong because the fix in question was applied starting 5.6.0.

time:
2017-07-17T06:29:44Z
class:
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ArabicNormalizationFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CJKBigramFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CJKWidthFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/GermanNormalizationFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/HindiNormalizationFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/IndicNormalizationFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/PersianNormalizationFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ScandinavianNormalizationFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SerbianNormalizationFilterFactory.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CJKFilterFactoryTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
test/framework/src/main/java/org/elasticsearch/index/analysis/AnalysisTestsHelper.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
Move more token filters to analysis-common module

The following token filters were moved: arabic_normalization, german_normalization, hindi_normalization, indic_normalization, persian_normalization, scandinavian_normalization, serbian_normalization, sorani_normalization, cjk_width and cjk_width

Relates to #23658

time:
2017-07-17T06:17:42Z
class:
comments:
Fix another simulate example in ingest docs

When simulating an ingest pipeline against an existing pipeline, the
_source field is required to wrap each doc. This commit fixes another
example in the docs that is missing this.
    
Relates #25743, relates e3a0c11239c3923f876ecbb310346aadadf1d902

time:
2017-07-17T05:17:41Z
class:
comments:
Fix simulate example in ingest docs

When simulating an ingest pipeline against an existing pipeline, the
_source field is required to wrap each doc. This commit fixes an example
in the docs that is missing this.

Relates #25742

time:
2017-07-17T03:56:12Z
class:
comments:
Adjust skip version for shrink index test

This commit adjusts the skip version for a shrink index test that
ensures that a shrunken index ignores templates; the version can be
adjusted after the fix was backported targeting 5.6.0 and later.

Relates #25380

time:
2017-07-16T17:06:47Z
class:
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/test/java/org/elasticsearch/search/SearchServiceTests.java
comments:
Prevent skipping shards if a suggest builder is present (#25739)

Even if the query part can rewrite to match none we can't skip the
suggest execution since it might yield results.

Relates to #25658

time:
2017-07-15T09:34:16Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchRequest.java
core/src/main/java/org/elasticsearch/action/search/SearchResponse.java
comments:
Bump BWC versions after #25658 backport to 5.6

time:
2017-07-15T07:28:17Z
class:
test/framework/src/main/java/org/elasticsearch/transport/AbstractSimpleTransportTestCase.java
comments:
testMockFailToSendNoConnectRule should wait for connection close to bubble up and disconnect the node

#25521 changed channel closing to be handled async on anything but transport stop. This means it may take a while before
calling `connection.close()` and the node being removed from the `connectedNodes` list (but the connection is immediately unusuable).

Fixes #25686

time:
2017-07-15T06:12:05Z
class:
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustachePlugin.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestDeleteSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestGetSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestPutSearchTemplateAction.java
comments:
Scripting: Remove search template actions (#25717)

The dedicated search template put/get/delete actions are deprecated in
5.6. This commit removes them from 6.0.

time:
2017-07-15T05:50:25Z
class:
comments:
[DOCS] Added note to high level client docs on version

The alpha2 docs is built out of master which may make users think that the high level client was already released as part of alpha2 which it was not. This note should clarify that the client will be released with 6.0.0-beta1

time:
2017-07-14T16:38:08Z
class:
comments:
Setup: Change default heap to 1G (#25695)

This commit changes the default heap size to 1 GB. Experimenting with
elasticsearch is often done on laptops, and 1 GB is much friendlier to
laptop memory. It does put more pressure on the gc, but the tradeoff is
a smaller default footprint. Users running in production can (and
should) adjust the heap size as necessary for their usecase.

time:
2017-07-14T16:33:28Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java
comments:
[Docs] Adding suggestion sections to high level client docs (#25724)

This adds a section about how to add suggestions to the SearchSourceBuilder and
how to retrieve them from a SearchResponse.

time:
2017-07-14T11:52:53Z
class:
core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/cluster/routing/IndexShardRoutingTable.java
core/src/main/java/org/elasticsearch/cluster/routing/RoutingTable.java
core/src/main/java/org/elasticsearch/cluster/routing/ShardRouting.java
core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java
core/src/main/java/org/elasticsearch/index/seqno/SequenceNumbersService.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/ReplicationGroup.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/main/java/org/elasticsearch/indices/recovery/PeerRecoverySourceService.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/test/java/org/elasticsearch/action/support/replication/ReplicationOperationTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java
core/src/test/java/org/elasticsearch/cluster/action/shard/ShardFailedClusterStateTaskExecutorTests.java
core/src/test/java/org/elasticsearch/cluster/routing/ShardRoutingTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/seqno/GlobalCheckpointTrackerTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java
core/src/test/java/org/elasticsearch/indices/cluster/AbstractIndicesClusterStateServiceTestCase.java
core/src/test/java/org/elasticsearch/indices/recovery/PeerRecoverySourceServiceTests.java
core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java
core/src/test/java/org/elasticsearch/indices/store/IndicesStoreTests.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
comments:
Let primary own its replication group (#25692)

Currently replication and recovery are both coordinated through the latest cluster state available on the ClusterService as well as through the GlobalCheckpointTracker (to have consistent local/global checkpoint information), making it difficult to understand the relation between recovery and replication, and requiring some tricky checks in the recovery code to coordinate between the two. This commit makes the primary the single owner of its replication group, which simplifies the replication model and allows to clean up corner cases we have in our recovery code. It also reduces the dependencies in the code, so that neither RecoverySourceXXX nor ReplicationOperation need access to the latest state on ClusterService anymore. Finally, it gives us the property that in-sync shard copies won't receive global checkpoint updates which are above their local checkpoint (relates #25485).

time:
2017-07-14T10:47:47Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java
comments:
[Docs] Adding aggregation sections to high level client docs (#25707)

This adds a section about how to add aggregations to the SearchSourceBuilder and how
to retrieve them from a SearchRepsonse to the documentation for the high level rest client.

time:
2017-07-14T09:45:21Z
class:
comments:
Mark filtered query example as not to be used (#25661)

The Filtered Query has been deprecated in favour of the Bool Query with a filter context. However, this deleted page for the Filtered Query is often ranked highly in search results when searching for documentation on "filtered queries". Often people just copy the first code snippet they see, which in this case is the INCORRECT syntax (the correct syntax follows). I think reordering the examples would help avoid a lot of confusion (I have seen people make this same mistake 3 times now)

Adding a comment to indicate that the first example shouldn't be used

time:
2017-07-14T09:07:46Z
class:
comments:
docs: Updated reference docs that `document_type` is deprecated

time:
2017-07-14T08:39:44Z
class:
core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java
core/src/test/java/org/elasticsearch/action/support/IndicesOptionsTests.java
comments:
Fix indices options parsing from REST in delete index API (#25709)

When parsing indices options from REST, we parse the optional parameters that are supported at REST (ignore_unavailable, allow_no_indices and expand_wildcards) and we provide the API default values for all the other (internal) options so that they are set to the new indices options while parsing. The `ignoreAliases` option was forgotten though, which means that whenever you pass in any index option at REST to the delete index API, you get to delete aliases like it was supported before (as ignoreAliases gets set to false like in all the other APIs).

Added unit tests for IndicesOptions parsing from REST parameters, and yaml tests for the delete index API.

time:
2017-07-14T07:47:41Z
class:
comments:
[DOCS] Explain mapping explosion (#25654)

time:
2017-07-13T19:49:37Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: wait for index to be green before running all checks

time:
2017-07-13T16:43:48Z
class:
comments:
[Docs] Fix typo in pattern-tokenizer.asciidoc (#25626)

time:
2017-07-13T13:38:58Z
class:
comments:
More clarifications on the unified highlighter being the new default (#25668)

* More clarifications on the unified highlighter being the new default

time:
2017-07-13T13:32:17Z
class:
core/src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java
core/src/main/java/org/apache/lucene/queryparser/classic/XQueryParser.java
core/src/main/java/org/elasticsearch/index/query/MatchPhrasePrefixQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/MatchPhraseQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/MatchQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryBuilders.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java
core/src/main/java/org/elasticsearch/index/search/ExistsFieldQueryExtension.java
core/src/main/java/org/elasticsearch/index/search/FieldQueryExtension.java
core/src/main/java/org/elasticsearch/index/search/MatchQuery.java
core/src/main/java/org/elasticsearch/index/search/MultiMatchQuery.java
core/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java
core/src/test/java/org/elasticsearch/index/query/DisableGraphQueryTests.java
core/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java
core/src/test/java/org/elasticsearch/search/query/QueryStringIT.java
core/src/test/java/org/elasticsearch/search/query/SearchQueryIT.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/QueryStringWithAnalyzersTests.java
comments:
Refactor QueryStringQuery for 6.0 (#25646)

This change refactors the query_string query to analyze the query text around logical operators of the query string the same way than a match_query/multi_match_query.
It also adds a type parameter that can be used to change the way multi fields query are built the same way than a multi_match query does.

Now that these queries share the same behavior regarding text analysis, some parameters are obsolete and have been deprecated:

split_on_whitespace: This setting is now ignored with a deprecation notice
if it is used explicitely. With this PR The query_string always splits on logical operator.
It simplifies the understanding of the other parameters that can have different meanings
depending on the value of split_on_whitespace.

auto_generate_phrase_queries: This setting is now ignored with a deprecation notice
if it is used explicitely. This setting only makes sense when the parser splits on whitespace.

use_dismax: This setting is now ignored with a deprecation notice
if it is used explicitely. The tie_breaker parameter is sufficient to handle best_fields/most_fields.

Fixes #25574

time:
2017-07-13T13:27:37Z
class:
core/src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java
core/src/test/java/org/elasticsearch/mget/SimpleMgetIT.java
comments:
mget with an alias shouldn't ignore alias routing (#25697)

Closes #25696

time:
2017-07-13T12:59:41Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
core/src/test/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhaseTests.java
comments:
Prevent `can_match` requests from sending to incompatible nodes (#25705)

With cross cluster search we can potentially proxy `can_match` requests
to nodes that don't have the endpoint. This might not cause any problem
from a functional perspecitve but will cause ugly error messages on
the target node. This commit will cause an IAE if we try to talk to an
incompatible node via a proxy.

Relates to #25704

time:
2017-07-13T10:56:46Z
class:
core/src/main/java/org/elasticsearch/action/ActionModule.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStats.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsAction.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsRequest.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsRequestBuilder.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsResponse.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardRequest.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardResponse.java
core/src/main/java/org/elasticsearch/action/fieldstats/IndexConstraint.java
core/src/main/java/org/elasticsearch/action/fieldstats/TransportFieldStatsAction.java
core/src/main/java/org/elasticsearch/client/Client.java
core/src/main/java/org/elasticsearch/client/support/AbstractClient.java
core/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/GeoPointFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/GeoShapeFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/IpFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/MappedFieldType.java
core/src/main/java/org/elasticsearch/index/mapper/NumberFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/ScaledFloatFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/SeqNoFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java
core/src/main/java/org/elasticsearch/indices/IndicesService.java
core/src/main/java/org/elasticsearch/rest/action/RestFieldStatsAction.java
core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TasksIT.java
core/src/test/java/org/elasticsearch/action/fieldstats/FieldStatsRequestTests.java
core/src/test/java/org/elasticsearch/fieldstats/FieldStatsIntegrationIT.java
core/src/test/java/org/elasticsearch/fieldstats/FieldStatsTests.java
core/src/test/java/org/elasticsearch/index/mapper/ScaledFloatFieldTypeTests.java
comments:
Removes FieldStats API (#25628)

* Removes FieldStats API

* iter

* iter

time:
2017-07-13T09:39:53Z
class:
comments:
test: put template api is deprecated, so take warnings into account

Relates to #25702

time:
2017-07-13T09:24:22Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java
comments:
docs:  updated java client api to take this into account too to take into account the p/c queries are in parent-join module

Closes #25624

time:
2017-07-13T07:44:25Z
class:
comments:
Rename client artifacts (#25693)

It was brought up that our current client artifacts have generic names like 'rest' that may cause conflicts with other artifacts.

This commit renames:

- rest -> elasticsearch-rest-client
- sniffer -> elasticsearch-rest-client-sniffer
- rest-high-level -> elasticsearch-rest-high-level-client

A couple of small changes are also preparing the high level client for its first release.

Closes #20248

time:
2017-07-13T07:21:49Z
class:
core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java
core/src/test/java/org/elasticsearch/index/query/SpanNearQueryBuilderTests.java
comments:
Make slop optional when parsing `span_near` query (#25677)

The slop parameter defaults to 0 in the Lucene SpanNearQuery, so we can set it
to this default value also and don't have to require it being specified in the
query when using the Rest API. Leaving `slop` a ctro arg in the Java API as it
should normally be specified and we can keep it `final` that way.

Closes #25642

time:
2017-07-13T06:33:56Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
comments:
Register correct response for `can_match` proxy response

Relates to #25658
Closes #25698

time:
2017-07-12T23:36:33Z
class:
comments:
[DOCS] Incorporated feedback on the highlighting changes.

time:
2017-07-12T23:07:28Z
class:
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestDeleteSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestGetSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestPutSearchTemplateAction.java
comments:
Scripting: Deprecate stored search template apis (#25437)

This commit deprecates the PUT, GET and DELETE search template apis.
Instead, the stored script api should be used.

closes #24596

time:
2017-07-12T22:27:38Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
core/src/test/java/org/elasticsearch/routing/PartitionedRoutingIT.java
comments:
Shrunk indices should ignore templates

A shrunk index should ignore anything from templates and instead take
its mappings, aliases, and settings from the original index, plus any
new settings and aliases passed in with the shrink request. This commit
causes this to be the case.

Relates #25380

time:
2017-07-12T20:29:21Z
class:
test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java
comments:
Use a non default port range in MockTransportService

We already use a per JVM port range in MockTransportService. Yet,
it's possible that if we are executing in the JVM with ordinal 0 that
other clusters reuse ports from the mock transport service and some tests
try to simulate disconnects etc. By using a non-defautl port range (starting at 10300)
we prevent internal test clusters from reusing any of the mock impls ports

Relates to #25301

time:
2017-07-12T20:19:20Z
class:
client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/TransportNoopSearchAction.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java
core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhase.java
core/src/main/java/org/elasticsearch/action/search/DfsQueryPhase.java
core/src/main/java/org/elasticsearch/action/search/FetchSearchPhase.java
core/src/main/java/org/elasticsearch/action/search/InitialSearchPhase.java
core/src/main/java/org/elasticsearch/action/search/SearchDfsQueryThenFetchAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java
core/src/main/java/org/elasticsearch/action/search/SearchRequest.java
core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
core/src/main/java/org/elasticsearch/action/search/SearchResponse.java
core/src/main/java/org/elasticsearch/action/search/SearchScrollAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/SearchShardIterator.java
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
core/src/main/java/org/elasticsearch/action/search/TransportMultiSearchAction.java
core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java
core/src/main/java/org/elasticsearch/rest/action/RestActions.java
core/src/main/java/org/elasticsearch/rest/action/document/RestCountAction.java
core/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java
core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TasksIT.java
core/src/test/java/org/elasticsearch/action/search/AbstractSearchAsyncActionTests.java
core/src/test/java/org/elasticsearch/action/search/CanMatchPreFilterSearchPhaseTests.java
core/src/test/java/org/elasticsearch/action/search/FetchSearchPhaseTests.java
core/src/test/java/org/elasticsearch/action/search/MockSearchPhaseContext.java
core/src/test/java/org/elasticsearch/action/search/SearchAsyncActionTests.java
core/src/test/java/org/elasticsearch/action/search/SearchPhaseControllerTests.java
core/src/test/java/org/elasticsearch/action/search/SearchResponseTests.java
core/src/test/java/org/elasticsearch/broadcast/BroadcastActionsIT.java
core/src/test/java/org/elasticsearch/indices/IndicesRequestCacheIT.java
core/src/test/java/org/elasticsearch/search/SearchServiceTests.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java
test/framework/src/main/java/org/elasticsearch/test/client/RandomizingClient.java
comments:
Add a shard filter search phase to pre-filter shards based on query rewriting (#25658)

Today if we search across a large amount of shards we hit every shard. Yet, it's quite
common to search across an index pattern for time based indices but filtering will exclude
all results outside a certain time range ie. `now-3d`. While the search can potentially hit
hundreds of shards the majority of the shards might yield 0 results since there is not document
that is within this date range. Kibana for instance does this regularly but used `_field_stats`
to optimize the indexes they need to query. Now with the deprecation of `_field_stats` and it's upcoming removal a single dashboard in kibana can potentially turn into searches hitting hundreds or thousands of shards and that can easily cause search rejections even though the most of the requests are very likely super cheap and only need a query rewriting to early terminate with 0 results.

This change adds a pre-filter phase for searches that can, if the number of shards are higher than a the `pre_filter_shard_size` threshold (defaults to 128 shards), fan out to the shards
and check if the query can potentially match any documents at all. While false positives are possible, a negative response means that no matches are possible. These requests are not subject to rejection and can greatly reduce the number of shards a request needs to hit. The approach here is preferable to the kibana approach with field stats since it correctly handles aliases and uses the correct threadpools to execute these requests. Further it's completely transparent to the user and improves scalability of elasticsearch in general on large clusters.

time:
2017-07-12T19:52:00Z
class:
comments:
Prevent excessive disk consumption by log files

This commit enables management of the main Elasticsearch log files
out-of-the-box by the following changes:
 - compress rolled logs
 - roll logs every 128 MB
 - maintain a sliding window of logs
 - remove the oldest logs maintaining no more than 2 GB of compressed
   logs on disk

Relates #25660

time:
2017-07-12T19:42:50Z
class:
qa/smoke-test-http/src/test/java/org/elasticsearch/http/RestHttpResponseHeadersIT.java
comments:
Migrate RestHttpResponseHeadersIT to ESRestTestCase (#25675)

Closes #25611

time:
2017-07-12T19:29:13Z
class:
comments:
Use config directory to find jvm.options

This commit removes the environment variable ES_JVM_OPTIONS that allows
the jvm.options file to sit separately from the rest of the config
directory. Instead, we use the CONF_DIR environment variable for custom
configuration location just as we do for the other configuration files.

Relates #25679

time:
2017-07-12T19:02:51Z
class:
comments:
Fix inadvertent rename of systemd tests

This commit reverts a rename of the systemd packaging tests. The rename
was done locally to speed up iteration of testing some changes against
systemd but was not reverted before pushing. This commit reverts this
change.

time:
2017-07-12T15:06:46Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java
core/src/main/java/org/elasticsearch/search/SearchHit.java
comments:
Adding basic search request documentation for high level client (#25651)

time:
2017-07-12T14:55:57Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java
core/src/main/java/org/elasticsearch/script/Script.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketScriptIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketSelectorIT.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorFactoryTests.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/StoredExpressionTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportSearchTemplateAction.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/SearchTemplateIT.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/RoundTripTests.java
comments:
Disallow lang to be used with Stored Scripts (#25610)

Requests that execute a stored script will no longer be allowed to specify the lang of the script. This information is stored in the cluster state making only an id necessary to execute against. Putting a stored script will still require a lang.

time:
2017-07-12T14:17:55Z
class:
core/src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java
comments:
Fix typo in ScriptDocValues deprecation warnings (#25672)

time:
2017-07-12T12:03:49Z
class:
core/src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/DocValueFieldsFetchSubPhase.java
comments:
Changes DocValueFieldsFetchSubPhase to reuse doc values iterators for multiple hits (#25644)

* Changes DocValueFieldsFetchSubPhase to reuse doc values iterators for multiple hits

Closes #24986

* iter

* Update ScriptDocValues to not reuse GeoPoint and Date objects

* added Javadoc about script value re-use

time:
2017-07-12T11:04:14Z
class:
core/src/main/java/org/apache/lucene/queries/BinaryDocValuesRangeQuery.java
core/src/main/java/org/elasticsearch/index/mapper/BinaryRangeUtil.java
core/src/main/java/org/elasticsearch/index/mapper/RangeFieldMapper.java
core/src/test/java/org/apache/lucene/queries/BaseRandomBinaryDocValuesRangeQueryTestCase.java
core/src/test/java/org/apache/lucene/queries/BinaryDocValuesRangeQueryTests.java
core/src/test/java/org/apache/lucene/queries/DoubleRandomBinaryDocValuesRangeQueryTests.java
core/src/test/java/org/apache/lucene/queries/FloatRandomBinaryDocValuesRangeQueryTests.java
core/src/test/java/org/apache/lucene/queries/InetAddressRandomBinaryDocValuesRangeQueryTests.java
core/src/test/java/org/apache/lucene/queries/IntegerRandomBinaryDocValuesRangeQueryTests.java
core/src/test/java/org/apache/lucene/queries/LongRandomBinaryDocValuesRangeQueryTests.java
core/src/test/java/org/elasticsearch/index/mapper/BinaryRangeUtilTests.java
core/src/test/java/org/elasticsearch/index/mapper/RangeFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/RangeFieldTypeTests.java
comments:
Query range fields by doc values when they are expected to be more efficient than points.

* Enable doc values for range fields by default.
* Store ranges in a binary format that support multi field fields.
* Added BinaryDocValuesRangeQuery that can query ranges that have been encoded into a binary doc values field.
* Wrap range queries on a range field in IndexOrDocValuesQuery query.

Closes #24314

time:
2017-07-12T08:01:18Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java
core/src/main/java/org/elasticsearch/search/SearchHits.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsFetchSubPhase.java
core/src/test/java/org/elasticsearch/action/search/FetchSearchPhaseTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHitsTests.java
comments:
Remove SearchHit#internalHits (#25653)

This method does exactly what getHits() does and is used in only a few places,
so it can safely be removed. It seems to be a left-over from when
InternalSearchHits was folded into the SearchHits interface, which didn't
contain this method.

time:
2017-07-12T04:16:14Z
class:
comments:
[DOCS] Reorganized the highlighting topic so it's less confusing.
Should we make the highlighter names headings so that they show up in page nav and in the search autocomplete?
@debadair this section should have its own heading
@debadair this para should move up to the previous section, under the choice of highlighters
@debadair missing a `
@debadair Would be nice to have these in the on-this-page menu.  Can be achieved by using:

```
[float]
=== Controlling ....
```
... which renders as a normal `====`
The second sentence comes across to me as a passive recommendation to set `store` to `true` which highlighting. It'd be better to flip it and say something like "Normally elasticsearch gets the contents by loading the `_source` and extracting the field from that. This is usually a good choice because most search requests already load the `_source`. If the field is configured with `"store": true` then Elasticsearch will load the field value from the stored field. This is most useful when highlighting a field when `_source` is disabled."

Or something like that.
I don't think the `_all` field is worth mentioning in 6.0+ because it is deprecated.
This one is new to me and I didn't find it when searching. What is up with it?
I do not think it is faster than the unified highlighter for large fields.
I think this should be moved into the unified highlighter section. Then you can reference it from the other highlighters to explain the data that they use.
Missing a \` after `matched_fields`.

time:
2017-07-12T02:02:00Z
class:
core/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java
core/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettings.java
comments:
Add an underscore to flood stage setting

This is a minor nitty bikeshedding change that renames the suffix of the
disk flood stage setting to "flood_stage" from "floodstage".

Relates #25659

time:
2017-07-11T21:38:50Z
class:
comments:
Avoid failing install if system-sysctl is masked

On Debian-based systems the install scripts are run with set -e meaning
that if there is an error in executing one of these scripts then the
script fails. If systemd-sysctl is masked then trying to restart the
systemd-sysctl service to pick up the changes to vm.max_map_count will
fail leading to the post-install script failing. Instead, we should
account for the possbility of failure here by not letting the command to
restart this service exit with non-zero status code. This commit does
this, and adds a test for this situation.

Relates #25657

time:
2017-07-11T19:36:59Z
class:
comments:
Add another parent value option to join documentation (#25609)

Indexing a join field on a document requires a value of type "object" and two sub fields "name" 
and "parent". The "parent" field is only required on child documents, but the "name" field which 
denotes the name of the relation is always needed. Previously, only the short-hand version of the 
join field was documented. This adds documentation for the long-hand join field data, and 
explicitly points out that just specifying the name of the relation for the field value is a 
convenience shortcut.

time:
2017-07-11T19:19:14Z
class:
core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java
core/src/test/java/org/elasticsearch/index/query/BoolQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/ConstantScoreQueryBuilderTests.java
comments:
Ensure we rewrite common queries to `match_none` if possible (#25650)

In certain situations we can early terminate and just skip the entire
query phase or make the lucene level rewrite very cheap if we can already
tell that a query won't match any documents. For instance if there is a single
`match_none` ie. due to some range rewrite in a filter or must clause of a boolean
query it can just drop all it's other queries since it will never match.

time:
2017-07-11T16:38:25Z
class:
comments:
Remove reference to field-stats docs.

time:
2017-07-11T15:28:23Z
class:
core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/action/index/IndexRequest.java
core/src/main/java/org/elasticsearch/common/LegacyTimeBasedUUIDGenerator.java
core/src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java
core/src/main/java/org/elasticsearch/common/UUIDs.java
core/src/main/java/org/elasticsearch/indices/flush/SyncedFlushService.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
core/src/test/java/org/elasticsearch/action/index/IndexRequestTests.java
core/src/test/java/org/elasticsearch/common/UUIDTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/indices/flush/SyncedFlushSingleNodeTests.java
core/src/test/java/org/elasticsearch/indices/recovery/StartRecoveryRequestTests.java
comments:
Optimize the order of bytes in uuids for better compression. (#24615)

Flake ids organize bytes in such a way that ids are ordered. However, we do not
need that property and could reorganize bytes in an order that would better suit
Lucene's terms dict instead.

Some synthetic tests suggest that this change decreases the disk footprint of
the `_id` field by about 50% in many cases (see `UUIDTests.testCompression`).
For instance, when simulating the indexing of 10M docs at a rate of 10k docs
per second, the current uid generator used 20.2 bytes per document on average,
while this new generator which only puts bytes in a different order uses 9.6
bytes per document on average.

We had already explored this idea in #18209 but the attempt to share long common
prefixes had had a bad impact on indexing speed. This time I have been more
careful about putting discriminant bytes early in the `_id` in a way that
preserves indexing speed on par with today, while still allowing for better
compression.

time:
2017-07-11T14:54:29Z
class:
core/src/main/java/org/elasticsearch/common/bytes/BytesReferenceStreamInput.java
core/src/test/java/org/elasticsearch/common/bytes/BytesArrayTests.java
core/src/test/java/org/elasticsearch/common/bytes/CompositeBytesReferenceTests.java
core/src/test/java/org/elasticsearch/common/bytes/PagedBytesReferenceTests.java
modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/ByteBufBytesReferenceTests.java
test/framework/src/main/java/org/elasticsearch/common/bytes/AbstractBytesReferenceTestCase.java
comments:
Fix BytesReferenceStreamInput#skip with offset (#25634)

There is a bug when a call to `BytesReferenceStreamInput` skip is made
on a `BytesReference` that has an initial offset. The offset for the
current slice is added to the current index and then subtracted from the
length. This introduces the possibility of a negative number of bytes to
skip. This happens inside a loop, which leads to an infinte loop.

This commit correctly subtracts the current slice index from the
slice.length. Additionally, the `BytesArrayTests` are modified to test
instances that include an offset.

time:
2017-07-11T14:23:10Z
class:
core/src/main/java/org/elasticsearch/action/search/InitialSearchPhase.java
core/src/main/java/org/elasticsearch/action/search/SearchRequest.java
core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java
core/src/main/java/org/elasticsearch/cluster/routing/GroupShardsIterator.java
core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
core/src/test/java/org/elasticsearch/action/search/SearchAsyncActionTests.java
test/framework/src/main/java/org/elasticsearch/test/client/RandomizingClient.java
comments:
Limit the number of concurrent shard requests per search request (#25632)

This is a protection mechanism to prevent a single search request from
hitting a large number of shards in the cluster concurrently. If a search is
executed against all indices in the cluster this can easily overload the cluster
causing rejections etc. which is not necessarily desirable. Instead this PR adds
a per request limit of `max_concurrent_shard_requests` that throttles the number of
concurrent initial phase requests to `256` by default. This limit can be increased per request
and protects single search requests from overloading the cluster. Subsequent PRs can introduces
addiontional improvemetns ie. limiting this on a `_msearch` level, making defaults a factor of
the number of nodes or sort shards iters such that we gain the best concurrency across nodes.

time:
2017-07-11T13:15:25Z
class:
comments:
Removed field-stats docs

time:
2017-07-11T11:58:55Z
class:
core/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/NumberFieldMapper.java
core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java
core/src/test/java/org/elasticsearch/index/mapper/DateFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/mapper/NumberFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/GeoDistanceQueryBuilderTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/MaxAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/avg/AvgAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/hdr/HDRPercentilesAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/TDigestPercentilesAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/sum/SumAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregatorTests.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ReplaceableConstDoubleValueSource.java
comments:
Upgrade to lucene-7.0.0-snapshot-00142c9. (#25641)

Lucene 7.0 is feature-frozen now, so there should not be many changes until GA.

time:
2017-07-11T10:47:52Z
class:
comments:
Fixed bad asciidoc file name

time:
2017-07-11T10:40:14Z
class:
comments:
Tidied up the breaking changes docs

time:
2017-07-11T09:39:08Z
class:
core/src/main/java/org/elasticsearch/search/SearchShardTarget.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
comments:
Change compatibility version to 5.6 after backport

time:
2017-07-11T09:34:06Z
class:
core/src/main/java/org/elasticsearch/action/search/AbstractSearchAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java
core/src/main/java/org/elasticsearch/search/SearchHit.java
core/src/main/java/org/elasticsearch/search/SearchHits.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/SearchShardTarget.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java
core/src/main/java/org/elasticsearch/transport/RemoteClusterAware.java
core/src/test/java/org/elasticsearch/ElasticsearchExceptionTests.java
core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java
core/src/test/java/org/elasticsearch/action/search/CountedCollectorTests.java
core/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java
core/src/test/java/org/elasticsearch/action/search/FetchSearchPhaseTests.java
core/src/test/java/org/elasticsearch/action/search/SearchPhaseControllerTests.java
core/src/test/java/org/elasticsearch/action/search/SearchPhaseExecutionExceptionTests.java
core/src/test/java/org/elasticsearch/action/search/SearchScrollAsyncActionTests.java
core/src/test/java/org/elasticsearch/action/search/TransportSearchActionTests.java
core/src/test/java/org/elasticsearch/index/SearchSlowLogTests.java
core/src/test/java/org/elasticsearch/rest/BytesRestResponseTests.java
core/src/test/java/org/elasticsearch/search/SearchHitTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificanceHeuristicTests.java
core/src/test/java/org/elasticsearch/search/internal/ShardSearchTransportRequestTests.java
test/framework/src/test/java/org/elasticsearch/search/MockSearchServiceTests.java
comments:
Ensure remote cluster alias is preserved in inner hits aggs (#25627)

We lost the cluster alias due to some special caseing in inner hits
and due to the fact that we didn't pass on the alias to the shard request.
This change ensures that we have the cluster alias present on the shard to
ensure all SearchShardTarget reads preserve the alias.

Relates to #25606

time:
2017-07-11T09:25:49Z
class:
comments:
Change small typo in shards_allocation.asciidoc (#25643)

time:
2017-07-10T20:07:50Z
class:
core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java
core/src/main/java/org/elasticsearch/action/ingest/WriteableIngestDocument.java
core/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
core/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/ingest/IngestDocument.java
core/src/main/java/org/elasticsearch/ingest/IngestService.java
core/src/main/java/org/elasticsearch/ingest/PipelineExecutionService.java
core/src/main/java/org/elasticsearch/ingest/PipelineStore.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/test/java/org/elasticsearch/ingest/IngestDocumentTests.java
core/src/test/java/org/elasticsearch/ingest/IngestServiceTests.java
core/src/test/java/org/elasticsearch/ingest/PipelineStoreTests.java
comments:
remove ingest.new_date_format (#25583)

time:
2017-07-10T15:50:51Z
class:
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
core/src/test/java/org/elasticsearch/transport/TCPTransportTests.java
modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java
test/framework/src/main/java/org/elasticsearch/transport/MockTcpTransport.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java
comments:
Avoid blocking on channel close on network thread (#25521)

Currently when we close a channel in Netty4Utils.closeChannels we
block until the closing is complete. This introduces the possibility
that a network selector thread will block while waiting until a
separate network selector thread closes a channel.

For instance: T1 closes channel 1 (which is assigned to a T1 selector).
Channel 1's close listener executes the closing of the node. That
means that T1 now tries to close channel 2. However, channel 2 is
assigned to a selector that is running on T2. T1 now must wait until T2
closes that channel at some point in the future.

This commit addresses this by adding a boolean to closeChannels
indicating if we should block on close. We only set this boolean to true
if we are closing down the server channels at shutdown. This call is
never made from a network thread. When we call the closeChannels method
with that boolean set to false, we do not block on close.

time:
2017-07-10T15:43:11Z
class:
comments:
update ingest-user-agent regexes.yml (#25608)

This new regexes are from:

https://github.com/ua-parser/uap-core/blob/3153c2f2ae72cf52cb79fa5374373e7af3aec717/regexes.yaml

time:
2017-07-10T14:25:11Z
class:
core/src/main/java/org/elasticsearch/tribe/TribeService.java
core/src/test/java/org/elasticsearch/tribe/TribeIT.java
comments:
Fix tribe node cluster state version increments (#25629)

With #24236, tribe nodes submit cluster state changes to their MasterService, making it unnecessary to explicitly update the cluster state version. This PR fixes the double-incrementing of cluster state versions on tribe nodes, which are not harmful, but unnecessary.

time:
2017-07-10T14:08:15Z
class:
client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java
core/src/main/java/org/elasticsearch/search/SearchModule.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/Filters.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FiltersAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FiltersAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FiltersAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/InternalFilters.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/ParsedFilters.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/DateRangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/DateRangeAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/GeoDistanceAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/GeoDistanceRangeAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalBinaryRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalDateRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalGeoDistance.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/IpRangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ParsedBinaryRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ParsedDateRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ParsedGeoDistance.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/BucketPriorityQueue.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/IncludeExclude.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/FiltersAggsRewriteIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/FilterTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/IpRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/MinDocCountIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/MissingTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTextTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/TermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FiltersAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/InternalFiltersTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalDateRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalGeoDistanceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/IpRangeAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/AvgBucketIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/ExtendedStatsBucketIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/MaxBucketIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/MinBucketIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/StatsBucketIT.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/SumBucketIT.java
core/src/test/java/org/elasticsearch/search/aggregations/support/IncludeExcludeTests.java
core/src/test/java/org/elasticsearch/search/geo/GeoDistanceIT.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
comments:
Collapses package structure for some bucket aggs (#25579)

This change collapses some of the packages for the bucket aggregations into their parent packages. This was done for the following aggregations:
* The variants of the range aggregation (geo_distance, date and ip) were moved into the `o.e.s.a.bucket.range` package
* The `o.e.s.a.bucket.terms.support` package was removed and the classes were moved to `o.e.s.a.bucket.terms`
* The filter aggregation was moved to `o.e.s.a.bucket.filter`

Since this PR is already relatively large with only the above changes subsequent PRs will do similar operations on relevant metric and pipeline aggregations

Relates to #22868

time:
2017-07-10T12:40:23Z
class:
core/src/main/java/org/elasticsearch/index/IndexService.java
comments:
Close Translog trimming task when IndexService is closed

Relates to https://github.com/elastic/elasticsearch/pull/25622

time:
2017-07-10T12:03:12Z
class:
core/src/test/java/org/elasticsearch/cluster/serialization/ClusterSerializationTests.java
comments:
[TEST] Use correct StreamInput version to deserialize in testSnapshotDeletionsInProgressSerialization

The test is currently serializing the cluster state using an older ES version format, but then deserializes those same bytes by
assuming they are of the current ES version.

time:
2017-07-10T10:04:05Z
class:
comments:
Update cross-cluster-search.asciidoc

Increased the required min version of CCS in the docs to 5.5

time:
2017-07-10T09:06:57Z
class:
comments:
Run Translog retention yaml tests with no replicas

Initializing replicas change the translog retention logic and confuses the test.

Switch to the solution suggested in https://github.com/elastic/elasticsearch/issues/25623, if implemented

time:
2017-07-10T08:58:00Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java
core/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java
comments:
Treat aliases as unavailable indices in delete index and update aliases api (#25524)

When resolving wildcards, aliases should be treated as unavailable indices when the `ignoreAliases` option is set to `true` (currently enabled with delete index api and update aliases api). This way the `allow_no_indices` and `ignore_unavailable` options can be honoured, otherwise WildcardExpressionResolver ends up treating aliases differently and there is no way to control when an error is thrown.

The default behaviour for the delete index api, which has `ignore_unavailable` set to `false` and `allow_no_indices` set to `true` by default, is to throw an error when executed against an alias, same as when it's executed against an index that does not exist.

time:
2017-07-10T08:28:39Z
class:
core/src/main/java/org/elasticsearch/index/IndexService.java
core/src/main/java/org/elasticsearch/index/engine/Engine.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/test/java/org/elasticsearch/index/IndexServiceTests.java
test/framework/src/main/java/org/elasticsearch/test/InternalSettingsPlugin.java
comments:
Add a scheduled translog retention check (#25622)

We currently check whether translog files can be trimmed whenever we create a new translog generation or close a view. However #25294 added a long translog retention period (12h, max 512MB by default), which means translog files should potentially be cleaned up long after there isn't any indexing activity to trigger flushes/the creation of new translog files. We therefore need a scheduled background check to clean up those files once they are no longer needed.

Relates to #10708

time:
2017-07-09T22:12:50Z
class:
core/src/main/java/org/elasticsearch/Version.java
core/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java
core/src/main/java/org/elasticsearch/index/analysis/SynonymTokenFilterFactory.java
core/src/main/java/org/elasticsearch/index/mapper/IdFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/MapperService.java
core/src/main/java/org/elasticsearch/index/mapper/UidFieldMapper.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/translog/Translog.java
core/src/main/java/org/elasticsearch/index/translog/TranslogStats.java
core/src/main/java/org/elasticsearch/search/SearchHits.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequestTests.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java
test/framework/src/test/java/org/elasticsearch/test/VersionUtilsTests.java
comments:
Bump version to 6.0.0-beta1

This commit does two things:
 - bumps the version from 6.0.0-alpha3 to 6.0.0-beta1
 - renames the 6.0.0-alpha3 version constant to 6.0.0-beta1

Relates #25621

time:
2017-07-09T12:00:27Z
class:
core/src/test/java/org/elasticsearch/threadpool/ScalingThreadPoolTests.java
comments:
Fix scaling thread pool test bug

This commit adjusts the expectation for the max number of threads in the
scaling thread pool configuration test. The reason that this expectation
is incorrect is because we removed the limitation that the number of
processors maxes out at 32, instead letting it be the true number of
logical processors on the machine. However, when we removed this
limitation, this test was never adjusted to reflect the new reality yet
it never arose since our tests were not running on machines with
incredibly high core counts.

Relates #20874

time:
2017-07-09T10:26:54Z
class:
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
testConcurrentWriteViewsAndSnapshot: writers should expose the local checkpoint to readers before trimming the translog

time:
2017-07-08T21:05:24Z
class:
core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java
core/src/main/java/org/elasticsearch/index/seqno/SequenceNumbersService.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
comments:
Add reason to global checkpoint updates on replica

Updating the global checkpoint on a replica can occur for a few
different reasons:
 - from inlined global checkpoint updates
 - from a primary term transition
 - from finalizing recovery

Yet, the trace logging for a global checkpoint update does not present
this information that can be useful when tracing test failures. This
commit adds a reason for the global checkpoint update on a replica so
that we can trace these updates.

Relates #25612

time:
2017-07-08T11:59:35Z
class:
comments:
Add console appender to deprecated settings test

This commit enables the console appender for the settings deprecation
logger used in the deprecated settings logging test. This output will be
useful if this test fails again (it failed once mysteriously).

time:
2017-07-08T09:57:22Z
class:
comments:
Enable bwc testing

#25512 & #25511 have been merged

time:
2017-07-08T09:42:57Z
class:
core/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java
comments:
Move `BulkItemRequest` BWC to 5.x (#25511)

The current BWC code in `BulkItemRequest` mutates the underlying `DocWriteRequests` which causes test failures and unexpected state (our test infra checks bwc serialization on the fly). This PR removes this logic from master. Another PR will add a BWC layer to 5.x only.

This PR contains the logic in https://github.com/elastic/elasticsearch/pull/25510 , which is needed to run the tests.

time:
2017-07-08T08:05:05Z
class:
core/src/test/java/org/elasticsearch/index/replication/RecoveryDuringReplicationTests.java
comments:
testRecoveryAfterPrimaryPromotion: seqNo recovery doesn't require some initial indexing

Previously the primary didn't update it's own local checkpoint (and thus the global checkpoint) before some indexing occurred. With recent changes the primary now properly initializes it self and thus ops recovery is possible even if no indexing has occurred.

time:
2017-07-08T07:25:43Z
class:
comments:
Disable bwc tests in preparation of merging #25512 & #25511

time:
2017-07-08T03:40:44Z
class:
comments:
[DOCS] Fix link (#25616)

time:
2017-07-08T03:15:42Z
class:
comments:
Fix attribute reference on redirects page (#25614)

time:
2017-07-08T02:11:09Z
class:
comments:
Fix disk allocator docs

This commit fixes the disk allocator docs which were broken due to the
inadvertent removal of some docs snippet markup.

time:
2017-07-07T23:54:36Z
class:
core/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettings.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettingsTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/MockDiskUsagesIT.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Add disk threshold settings validation

This commit adds cross-settings validation for the low/high/flood stage
disk watermark settings. This validation was enabled by the introduction
of multiple settings validation.

Relates #25600

time:
2017-07-07T19:59:57Z
class:
test/framework/src/main/java/org/elasticsearch/test/VersionUtils.java
test/framework/src/test/java/org/elasticsearch/test/VersionUtilsTests.java
comments:
Drop current from the list of released versions (#25187)

It hasn't been released....

time:
2017-07-07T18:38:35Z
class:
core/src/main/java/org/elasticsearch/index/engine/Engine.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
comments:
Restore local checkpoint tracker on promotion

When a shard is promoted to replica, it's possible that it was
previously a replica that started following a new primary. When it
started following this new primary, the state of its local checkpoint
tracker was reset. Upon promotion, it's possible that the state of the
local checkpoint tracker has not yet restored from a successful
primary-replica re-sync. To account for this, we must restore the state
of the local checkpoint tracker when a replica shard is promoted to
primary. To do this, we stream the operations in the translog, marking
the operations that are in the translog as completed. We do this before
we fill the gaps on the newly promoted primary, ensuring that we have a
primary shard with a complete history up to the largest maximum sequence
number it has ever seen.

Relates #25553

time:
2017-07-07T18:16:53Z
class:
comments:
Document aggregating by day of the week (#25602)

Add documentation for aggregating by day of the week.

Closes #24660

time:
2017-07-07T18:04:28Z
class:
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java
core/src/main/java/org/elasticsearch/index/seqno/SequenceNumbersService.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/PrimaryContext.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryHandoffPrimaryContextRequest.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTargetHandler.java
core/src/main/java/org/elasticsearch/indices/recovery/RemoteRecoveryTargetHandler.java
core/src/test/java/org/elasticsearch/cluster/MinimumMasterNodesIT.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/replication/IndexLevelReplicationTests.java
core/src/test/java/org/elasticsearch/index/replication/RecoveryDuringReplicationTests.java
core/src/test/java/org/elasticsearch/index/seqno/GlobalCheckpointTrackerTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java
core/src/test/java/org/elasticsearch/indices/cluster/AbstractIndicesClusterStateServiceTestCase.java
core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java
core/src/test/java/org/elasticsearch/recovery/FullRollingRestartIT.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
comments:
Harden global checkpoint tracker

This commit refactors the global checkpont tracker to make it more
resilient. The main idea is to make it more explicit what state is
actually captured and how that state is updated through
replication/cluster state updates etc. It also fixes the issue where the
local checkpoint information is not being updated when a shard becomes
primary. The primary relocation handoff becomes very simple too, we can
just verbatim copy over the internal state.

Relates #25468

time:
2017-07-07T17:58:46Z
class:
core/src/main/java/org/elasticsearch/action/delete/DeleteResponse.java
core/src/main/java/org/elasticsearch/action/index/IndexResponse.java
core/src/test/java/org/elasticsearch/action/delete/DeleteResponseTests.java
core/src/test/java/org/elasticsearch/action/index/IndexResponseTests.java
comments:
Remove deprecated created and found from index, delete and bulk (#25516)

The created and found fields in index and delete responses became obsolete after the introduction of the result field in index, update and delete responses (#19566).

After deprecating the created and found fields in 5.x (#19633), now they are removed.

Fixes #19630

time:
2017-07-07T17:04:12Z
class:
core/src/test/java/org/elasticsearch/transport/TCPTransportTests.java
comments:
fix testEnsureVersionCompatibility for 5.5.0 release

time:
2017-07-07T17:04:12Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
fix Version.v6_0_0 min compatibility version to 5.5.0

time:
2017-07-07T17:04:12Z
class:
comments:
Add bwc indices for 5.5.0

time:
2017-07-07T17:04:12Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
Add v5_5_1 constant

time:
2017-07-07T15:48:58Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java
comments:
[DOCS] revise high level client Search Scroll API docs (#25599)

Moved the full example at the end of the page, reduced the number of bullet points for it, and added smaller examples at the beginning of the page.

time:
2017-07-07T15:01:23Z
class:
core/src/main/java/org/elasticsearch/rest/RestController.java
core/src/test/java/org/elasticsearch/rest/RestControllerTests.java
core/src/test/java/org/elasticsearch/rest/RestHttpResponseHeadersTests.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/RestHttpResponseHeadersIT.java
test/framework/src/main/java/org/elasticsearch/test/rest/FakeRestChannel.java
comments:
Improve REST error handling when endpoint does not support HTTP verb, add OPTIONS support (#24437)

* Improved REST endpoint exception handling, see #15335

Also improved OPTIONS http method handling to better conform with the
http spec.

* Tidied up formatting and comments

See #15335

* Tests for #15335

* Cleaned up comments, added section number

* Swapped out tab indents for space indents

* Test class now extends ESSingleNodeTestCase

* Capture RestResponse so it can be examined in test cases

Simple addition to surface the RestResponse object so we can run tests
against it (see issue #15335).

* Refactored class name, included feedback

See #15335.

* Unit test for REST error handling enhancements

Randomizing unit test for enhanced REST response error handling. See
issue #15335 for more details.

* Cleaned up formatting

* New constructor to set HTTP method

Constructor added to support RestController test cases.

* Refactored FakeRestRequest, streamlined test case.

* Cleaned up conflicts

* Tests for #15335

* Added functionality to ignore or include path wildcards

See #15335

* Further enhancements to request handling

Refactored executeHandler to prioritize explicit path matches. See
#15335 for more information.

* Cosmetic fixes

* Refactored method handlers

* Removed redundant import

* Updated integration tests

* Refactoring to address issue #17853

* Cleaned up test assertions

* Fixed edge case if OPTIONS method randomly selected as invalid method

In this test, an OPTIONS method request is valid, and should not return
a 405 error.

* Remove redundant static modifier

* Hook the multiple PathTrie attempts into RestHandler.dispatchRequest

* Add missing space

* Correctly retrieve new handler for each Trie strategy

* Only copy headers to threadcontext once

* Fix test after REST header copying moved higher up

* Restore original params when trying the next trie candidate

* Remove OPTIONS for invalidHttpMethodArray so a 405 is guaranteed in tests

* Re-add the fix I already added and got removed during merge :-/

* Add missing GET method to test

* Add documentation to migration guide about breaking 404 -> 405 changes

* Explain boolean response, pull into local var

* fixup! Explain boolean response, pull into local var

* Encapsulate multiple HTTP methods into PathTrie<MethodHandlers>

* Add PathTrie.retrieveAll where all matching modes can be retrieved

Then TrieMatchingMode can be package private and not leak into RestController

* Include body of error with 405 responses to give hint about valid methods

* Fix missing usageService handler addition

I accidentally removed this :X

* Initialize PathTrieIterator modes with Arrays.asList

* Use "== false" instead of !

* Missing paren :-/

time:
2017-07-07T14:26:50Z
class:
plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/DefaultS3OutputStream.java
plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3BlobContainer.java
plugins/repository-s3/src/test/java/org/elasticsearch/repositories/s3/MockAmazonS3.java
plugins/repository-s3/src/test/java/org/elasticsearch/repositories/s3/S3BlobStoreContainerTests.java
comments:
Avoid SecurityException in repository-S3 on DefaultS3OutputStream.flush() (#25254)

Moved SocketAccess.doPrivileged up the stack to DefaultS3OutputStream in repository-S3 plugin to avoid SecurityException by Streams.copy(). A plugin is only allowed to use its own jars when performing privileged operations. The S3 client might open a new Socket on close(). #25192

time:
2017-07-07T14:18:25Z
class:
core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionBuilder.java
core/src/test/java/org/elasticsearch/search/suggest/AbstractSuggestionBuilderTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/completion/CompletionSuggesterBuilderTests.java
core/src/test/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilderTests.java
core/src/test/java/org/elasticsearch/search/suggest/term/TermSuggestionBuilderTests.java
comments:
[Tests] Add tests for CompletionSuggestionBuilder#build() (#25575)

This adds a unit test that checks the CompletionSuggestionContext that is 
the output of CompletionSuggestionBuilder#build.

time:
2017-07-07T14:15:52Z
class:
core/src/main/java/org/elasticsearch/common/settings/Setting.java
core/src/test/java/org/elasticsearch/common/settings/ScopedSettingsTests.java
core/src/test/java/org/elasticsearch/common/settings/SettingTests.java
core/src/test/java/org/elasticsearch/index/IndexingSlowLogTests.java
core/src/test/java/org/elasticsearch/index/SearchSlowLogTests.java
comments:
Enable cross-setting validation

This commit introduces a framework for settings validation and enables
cross-setting validation.

Relates #25560

time:
2017-07-07T13:37:40Z
class:
comments:
[Docs] Fix typo in bootstrap-checks.asciidoc (#25597)

time:
2017-07-07T12:22:47Z
class:
core/src/main/java/org/elasticsearch/index/fielddata/UidIndexFieldData.java
core/src/main/java/org/elasticsearch/index/fieldvisitor/FieldsVisitor.java
core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java
core/src/main/java/org/elasticsearch/index/mapper/IdFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/MapperService.java
core/src/main/java/org/elasticsearch/index/mapper/Uid.java
core/src/main/java/org/elasticsearch/index/mapper/UidFieldMapper.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/translog/Translog.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/fielddata/UidFieldDataTests.java
core/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java
core/src/test/java/org/elasticsearch/index/mapper/IdFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/IdFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/mapper/UidFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/mapper/UidTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
comments:
Index ids in binary form. (#25352)

Indexing ids in binary form should help with indexing speed since we would
have to compare fewer bytes upon sorting, should help with memory usage of
the live version map since keys will be shorter, and might help with disk
usage depending on how efficient the terms dictionary is at compressing
terms.

Since we can only expect base64 ids in the auto-generated case, this PR tries
to use an encoding that makes the binary id equal to the base64-decoded id in
the majority of cases (253 out of 256). It also specializes numeric ids, since
this seems to be common when content that is stored in Elasticsearch comes
from another database that uses eg. auto-increment ids.

Another option could be to require base64 ids all the time. It would make things
simpler but I'm not sure users would welcome this requirement.

This PR should bring some benefits, but I expect it to be mostly useful when
coupled with something like #24615.

Closes #18154

time:
2017-07-07T11:39:24Z
class:
comments:
bwc checkout should fetch from all remotes

This is a regression introduced in #25510, which removed the explicit fetching of upstream. Sadly this doesn't work if you don't have any local branch referring to `upstream` as an upstream branch.
thanks for fixing this @bleskes !

time:
2017-07-07T10:55:42Z
class:
qa/mixed-cluster/src/test/java/org/elasticsearch/backwards/IndexingIT.java
comments:
IndexingIT should check for global checkpoints regardless of master version

In the past global checkpoint syncing was done in the background based an interval set by an index setting. In order to set that setting something reasonable for a test, the master needed to know about the setting. Therefore the test didn't check global checkpoints if the master was old. These days the global checkpoint sync is inlined with indexing operations and that restriction is not needed.

time:
2017-07-07T10:53:06Z
class:
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java
core/src/test/java/org/elasticsearch/search/suggest/AbstractSuggestionBuilderTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/completion/CompletionSuggesterBuilderTests.java
core/src/test/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilderTests.java
comments:
[Tests] Add tests for PhraseSuggestionBuilder#build() (#25571)

This adds a unit test that checks the PhraseSuggestionContext output 
of PhraseSuggestionBuilder#build.

time:
2017-07-07T10:51:38Z
class:
core/src/main/java/org/elasticsearch/common/util/MinimalMap.java
comments:
Remove unused class MinimalMap (#25590)

time:
2017-07-07T10:19:33Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/SearchDocumentationIT.java
comments:
[Docs] Document Scroll API for Java High Level REST Client (#25554)

This commit adds documentation for _search/scroll and clear scroll methods of the high level Java REST client

time:
2017-07-07T09:49:09Z
class:
core/src/main/java/org/elasticsearch/index/mapper/DateFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java
core/src/test/java/org/elasticsearch/index/mapper/DateFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/DateFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/mapper/DocumentMapperMergeTests.java
comments:
Disable date field mapping changing (#25285)

Make date field mapping unchangeable.

Closes #25271

time:
2017-07-07T09:18:03Z
class:
comments:
Allow BWC Testing against a specific branch (#25510)

Some times we need a fix / change to have two parts in two different branches (corresponding to two different ES releases). In order to be able to test these cases you need to run the BWC tests against a local branch rather than then using a branch from `github.com/elastic/elasticsearch`.

This commit adds a system property called `tests.bwc.refspec` that allows you to do it. Note that I've chosen to go with the simplest code change for now, at the expense of some user friendliness.

time:
2017-07-07T09:03:07Z
class:
core/src/test/java/org/elasticsearch/transport/RemoteClusterServiceTests.java
comments:
[TEST] Remove test trace logging

time:
2017-07-07T08:39:58Z
class:
core/src/test/java/org/elasticsearch/search/suggest/AbstractSuggestionBuilderTestCase.java
comments:
[Tests] Fixing test failure in CompletionSuggesterBuilderTests

time:
2017-07-07T08:18:13Z
class:
comments:
test: re-enable `Reindex from remote with parent join field` test no that join field type no longer always emits its fields inside search hits.

Closes #25363

time:
2017-07-07T08:02:52Z
class:
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/AbstractCompoundWordTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonGramsTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/LimitTokenCountFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/PatternCaptureGroupTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/PatternReplaceCharFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/PatternReplaceTokenFilterFactory.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonGramsTokenFilterFactoryTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/LimitTokenCountFilterFactoryTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/PatternCaptureTokenFilterTests.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
Move more token filters to analysis-common module

The following token filters were moved: common grams, limit token, pattern capture and pattern raplace.

Relates to #23658

time:
2017-07-07T07:47:21Z
class:
core/src/test/java/org/elasticsearch/search/suggest/AbstractSuggestionBuilderTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/completion/CompletionSuggesterBuilderTests.java
core/src/test/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilderTests.java
core/src/test/java/org/elasticsearch/search/suggest/term/TermSuggestionBuilderTests.java
comments:
[Tests] Add tests for TermSuggestionBuilder#build() (#25558)

Adds a unit test that checks the TermSuggestionContext contents that is the result 
of TermSuggestionBuilder#build vs. the values the original builder contains.

time:
2017-07-07T07:40:59Z
class:
core/src/main/java/org/elasticsearch/bootstrap/Security.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
core/src/test/java/org/elasticsearch/transport/PublishPortTests.java
modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java
modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/NettyTransportMultiPortTests.java
test/framework/src/main/java/org/elasticsearch/transport/AbstractSimpleTransportTestCase.java
test/framework/src/main/java/org/elasticsearch/transport/MockTcpTransport.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/ChannelFactory.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/AbstractNioChannelTestCase.java
comments:
Validate `transport.profiles.*` settings (#25508)

Transport profiles unfortunately have never been validated. Yet, it's very
easy to make a mistake when configuring profiles which will most likely stay
undetected since we don't validate the settings but allow almost everything
based on the wildcard in `transport.profiles.*`. This change removes the
settings subset based parsing of profiles but rather uses concrete affix settings
for the profiles which makes it easier to fall back to higher level settings since
the fallback settings are present when the profile setting is parsed. Previously, it was
unclear in the code which setting is used ie. if the profiles settings (with removed
prefixes) or the global node setting. There is no distinction anymore since we don't pull
prefix based settings.

time:
2017-07-06T19:37:00Z
class:
comments:
Upgrade to Netty 4.1.13.Final

This commit upgrades the Netty dependency from version 4.1.11.Final to
4.1.13.Final.

Relates #25581

time:
2017-07-06T18:35:07Z
class:
comments:
Fix cluster health wait conditions in rolling restart tests

In the rolling upgrade tests, there is a test to create an index with
replica shards and ensure that in the mixed cluster environment, the
cluster health is green before any other tests are executed.  However,
there were two problems with this.  First, if the replica shard was
residing on the restarted node, then delayed allocation will kick in and
cause the cluster health request to timeout after 1m.  The fix to this
was to drastically lower the delayed allocation setting.  Second, if the
primary exists on the higher version node, then the replica cannot be
assigned to the lower version node because recovery cannot happen from
lower lucene versions.  The fix here was to wait for the cluster health
to be yellow instead of green in the mixed cluster environment.  In the
fully upgraded cluster, the cluster health check waits for a green
cluster as before.

Closes #25185

time:
2017-07-06T17:18:10Z
class:
core/src/main/java/org/elasticsearch/transport/RemoteClusterConnection.java
core/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java
comments:
Add cluster name validation to RemoteClusterConnection (#25568)

This change adds validation to the RemoteClusterConnection to ensure
we always use seed nodes from the same cluster. While we still allow to use
an arbitrary cluster alias we ensure that we, once we connected to a cluster the first time,
we always check against that initial cluster name when we execute a seed node handshake.

time:
2017-07-06T16:00:00Z
class:
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
comments:
Removes deprecated usage of the FieldStats API in a test that verifies
sequence number data in Lucene commit points.  Instead, the test
retrieves the _seq_no value from the commit point directly and converts
it to a Long value.

time:
2017-07-06T15:32:34Z
class:
core/src/main/java/org/elasticsearch/index/mapper/MapperService.java
core/src/main/java/org/elasticsearch/search/suggest/SuggestionBuilder.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGeneratorBuilder.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java
core/src/test/java/org/elasticsearch/search/suggest/AbstractSuggestionBuilderTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/completion/CompletionSuggesterBuilderTests.java
core/src/test/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilderTests.java
core/src/test/java/org/elasticsearch/search/suggest/term/TermSuggestionBuilderTests.java
comments:
[Tests] Check output of SuggestionBuilder#build method (#25549)

This change adds a basic unit test for the SuggestionSearchContext that is
created as output of SuggestionBuilder#build. The current test only adds checks
for the common fields (like text, prefix, fieldName etc...).

Relates to #17118

time:
2017-07-06T15:05:10Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java
comments:
[Docs] Document Bulk Processor for Java High Level REST Client (#25572)

time:
2017-07-06T14:52:17Z
class:
comments:
Update REST client deps license and notice files (#25573)

We previously grouped all the license and notice files for httpcore, httpcore-nio, httpclient and httpasyncclient under the same license and notice file. There were though subtle differences between those which we didn't keep track of. For instance the httpcore license file has slightly changed since 4.4 which we have missed to track.

This commit goes back to having one license and notice file for each jar, to be completely sure that each dependency is associated with exactly the right licene and notice file.

 Closes #25567

time:
2017-07-06T11:15:02Z
class:
modules/parent-join/src/main/java/org/elasticsearch/join/ParentJoinPlugin.java
modules/parent-join/src/main/java/org/elasticsearch/join/fetch/ParentJoinFieldSubFetchPhase.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/ParentChildInnerHitContextBuilder.java
modules/parent-join/src/test/java/org/elasticsearch/join/fetch/ParentJoinFieldSubFetchPhaseTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ChildQuerySearchIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/InnerHitsIT.java
comments:
parent/child: Removed ParentJoinFieldSubFetchPhase

time:
2017-07-06T11:02:28Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java
core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/test/java/org/elasticsearch/search/fields/SearchFieldsIT.java
comments:
Remove deprecated fielddata_fields from search request (#25566)

... and inner_hits

time:
2017-07-06T10:16:53Z
class:
comments:
Tidied up the disk allocator docs

time:
2017-07-06T09:48:57Z
class:
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentJoinFieldMapper.java
modules/parent-join/src/test/java/org/elasticsearch/join/mapper/ParentJoinFieldMapperTests.java
comments:
parent/child: Support parent id being specified as number in the _source

time:
2017-07-06T08:05:50Z
class:
client/rest/src/test/java/org/elasticsearch/client/documentation/RestClientDocumentation.java
client/sniffer/src/test/java/org/elasticsearch/client/sniff/documentation/SnifferDocumentation.java
comments:
[DOCS] Rewrite low-level REST client docs and verify snippets compile (#25559)

Using the infra that we now have in place, we can convert the low-level REST client docs so that they extract code snippets from real Java classes. This way we make sure that all the snippets properly compile. Compared to the high level REST client docs, in this case we don't run the tests themselves, as that would require depending on test-framework which requires java 8 while the low-level REST client is compatible with java 7. I think that compiling snippets is enough for now.

time:
2017-07-06T07:14:52Z
class:
test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java
comments:
Use a port range per JVM in MockTransportService (#25565)

Some tests use MockTransportService to do network based testing.
Yet, we run tests in multiple JVMs that means
concurrent tests could claim port that another JVM just released
and if that test tries to simulate a disconnect it might be smart
enough to re-connect depending on what is tested. To reduce the risk,
since this is very hard to debug we use a different default
port range per JVM unless the incoming settings overriding it.

Closes #25301

time:
2017-07-05T23:28:10Z
class:
core/src/main/java/org/elasticsearch/common/path/PathTrie.java
core/src/main/java/org/elasticsearch/rest/MethodHandlers.java
core/src/main/java/org/elasticsearch/rest/RestController.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestGetTaskAction.java
core/src/test/java/org/elasticsearch/action/ActionModuleTests.java
core/src/test/java/org/elasticsearch/common/path/PathTrieTests.java
core/src/test/java/org/elasticsearch/rest/RestControllerTests.java
comments:
Refactor PathTrie and RestController to use a single trie for all methods (#25459)

* Refactor PathTrie and RestController to use a single trie for all methods

This changes `PathTrie` and `RestController` to use a single `PathTrie` for all
endpoints, it also allows retrieving the endpoints' supported HTTP methods more
easily.

This is a spin-off and prerequisite of #24437

* Use EnumSet instead of multiple if conditions

* Make MethodHandlers package-private and final

* Remove duplicate registerHandler method

* Remove public modifier

time:
2017-07-05T20:18:23Z
class:
core/src/main/java/org/elasticsearch/cluster/ClusterInfoService.java
core/src/main/java/org/elasticsearch/cluster/EmptyClusterInfoService.java
core/src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java
core/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java
core/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdSettings.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/node/NodeModule.java
core/src/main/java/org/elasticsearch/node/NodeService.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitorTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/ExpectedShardSizeAllocationTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/RebalanceAfterActiveTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/MockDiskUsagesIT.java
test/framework/src/main/java/org/elasticsearch/cluster/MockInternalClusterInfoService.java
test/framework/src/main/java/org/elasticsearch/node/MockNode.java
comments:
Switch indices read-only if a node runs out of disk space (#25541)

Today when we run out of disk all kinds of crazy things can happen
and nodes are becoming hard to maintain once out of disk is hit.
While we try to move shards away if we hit watermarks this might not
be possible in many situations. Based on the discussion in #24299
this change monitors disk utilization and adds a flood-stage watermark
that causes all indices that are allocated on a node hitting the flood-stage
mark to be switched read-only (with the option to be deleted). This allows users to react on the low disk
situation while subsequent write requests will be rejected. Users can switch
individual indices read-write once the situation is sorted out. There is no
automatic read-write switch once the node has enough space. This requires
user interaction.

The flood-stage watermark is set to `95%` utilization by default.

Closes #24299

time:
2017-07-05T14:09:31Z
class:
comments:
Fix the documentation to state that the `_id` field is indexed. (#25540)

time:
2017-07-05T13:17:16Z
class:
core/src/main/java/org/elasticsearch/index/seqno/LocalCheckpointTracker.java
core/src/main/java/org/elasticsearch/index/seqno/SequenceNumbersService.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/test/java/org/elasticsearch/index/seqno/LocalCheckpointTrackerTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
comments:
Throw back replica local checkpoint on new primary

This commit causes a replica to throwback its local checkpoint to the
global checkpoint when learning of a new primary through a replica
operation.

Relates #25452

time:
2017-07-05T13:16:40Z
class:
core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java
core/src/main/java/org/elasticsearch/index/IndexSettings.java
core/src/main/java/org/elasticsearch/index/mapper/MapperService.java
core/src/main/java/org/elasticsearch/index/mapper/TypeFieldMapper.java
core/src/test/java/org/elasticsearch/index/IndexSettingsTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
comments:
Ensure `index.mapping.single_type` can only be set on 5.x indices (#25375)

In 6.x we prevent multiple types and default to `index.mapping.single_type: false`
This change removes the registered setting and ensures that it's preserved for
5.x indices.

Relates to #24961

time:
2017-07-05T10:30:19Z
class:
comments:
Remove usage of multi-types from the docs and added a page explaining type removal (#25543)

Closes #25401

time:
2017-07-05T10:16:42Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java
comments:
[Docs] Document Update API for Java High Level REST Client (#25536)

This commit adds documentation for Java High Level REST Client's Update API.

time:
2017-07-05T10:07:09Z
class:
comments:
[DOCS] High Level Client: fix index items order

Also group APIs under single document, multi-document and search

time:
2017-07-05T09:57:57Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java
comments:
[DOCS] add docs for high level client get method (#25538)

Document high level client get method

time:
2017-07-05T09:38:21Z
class:
comments:
Important note for MSI upgrade from command line (#25544)

Add an Important admonition for upgrading via the command line
using the Windows MSI Installer. This calls out the need to pass
the same command line options for an upgrade as were used for
the initial installation.

time:
2017-07-05T09:32:59Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java
comments:
[DOCS] update index, type and id for indexed documents in high level client docs (#25546)

Especially the type change is convenient as it becomes `doc`

time:
2017-07-05T09:23:14Z
class:
core/src/test/java/org/elasticsearch/transport/RemoteClusterServiceTests.java
comments:
[TEST] Enable transport tracer for RemoteClusterServiceTests#testCollectNodes #25301

time:
2017-07-05T09:23:14Z
class:
core/src/test/java/org/elasticsearch/transport/RemoteClusterServiceTests.java
comments:
[TEST] Add another valid exception that can occure with concurrent disconnects

time:
2017-07-05T09:16:17Z
class:
comments:
[Docs] Fix some errors in the index aliases docs (#25449)

time:
2017-07-05T07:50:10Z
class:
core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryBuilder.java
core/src/test/java/org/elasticsearch/index/query/ConstantScoreQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/WrapperQueryBuilderTests.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
comments:
QueryBuilders should implement ToXContentObject (#25530)

All query builders written as self contained xContent objects, to we should mark
them accordingly using ToXContentObject. This also makes it possible to use
things like XContentHelper#toXContent to render query builders in tests.

time:
2017-07-05T07:26:26Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java
comments:
[Docs] Document Bulk API for Java High Level REST Client (#25532)

This commit adds documentation for Java High Level REST Client's Bulk API.

time:
2017-07-04T18:33:02Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: avoid NPE

time:
2017-07-04T16:35:51Z
class:
core/src/main/java/org/apache/lucene/search/grouping/CollapseTopFieldDocs.java
core/src/main/java/org/elasticsearch/common/lucene/Lucene.java
comments:
Make totalHits a long in CollapseTopFieldDocs.

Relates to #25349.

time:
2017-07-04T16:06:00Z
class:
comments:
[Doc] Remove mention of generated fields in get/mget docs (#25492)

This option has been removed in #20102.

time:
2017-07-04T15:47:48Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/test/java/org/elasticsearch/indices/IndicesRequestCacheIT.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregatorFactoriesTests.java
comments:
Adds rewrite phase to aggregations (#25495)

* Adds rewrite phase to aggregations

This change adds aggregations to the rewrite performed by the `SearchSourceBuilder`. This means that `AggregationBuilder`s are able to implement a `rewrite()` method where they can return a new `AggregationBuilder` which is functionally the same but in a more primitive form. This is exactly analogous to the rewrite done by the `QueryBuilder`s.

The first aggregation to implement the rewrite are the filter and filters aggregations so they can rewrite the filters they contain.

Closes #17676

* Removes rewrite from PipelineAggregationBuilder

Rewrite is based on shard level information. Since pipeline aggregation are run in the reduce phase it doesn’t make sense to rewrite them on the shards. In fact eventually we shouldn’t be transporting them to the shards at all and should be retaining them on the coordinating node for execution in the reduce phase

* Addresses review comments

* addresses more review comments

* Fixed imports

time:
2017-07-04T14:48:11Z
class:
comments:
Upgrade randomizedrunner to 2.5.2 (#25533)

An issue causing confusing error messages during test execution
has been fixed randomizedtesting/randomizedtesting#250

time:
2017-07-04T10:16:56Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java
core/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequestBuilder.java
core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestAnalyzeAction.java
core/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java
core/src/test/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequestTests.java
core/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java
core/src/test/java/org/elasticsearch/rest/action/admin/indices/RestAnalyzeActionTests.java
comments:
[Analysis] Support normalizer in request param (#24767)

* [Analysis] Support normalizer in request param

Support normalizer param
Support custom normalizer with char_filter/filter param

Closes #23347

time:
2017-07-04T09:59:48Z
class:
core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java
comments:
Remove deprecated IdsQueryBuilder constructor (#25529)

The constructor using `types` has been deprecated for a while now (starting with
ES 5.1.). It can be removed in the next mayor version. Since types are optional
they should be added with the #types() setter.

time:
2017-07-04T09:51:38Z
class:
core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/test/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequestTestCase.java
core/src/test/java/org/elasticsearch/search/builder/SearchSourceBuilderTests.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByQueryRestHandler.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/RoundTripTests.java
comments:
Adds check for negative search request size (#25397)

* Adds check for negative search request size

This change adds a check to `SearchSourceBuilder` to throw and exception if the size set on it is set to a negative value.

Closes #22530

* fix error in reindex

* update re-index tests

* Addresses review comment

* Fixed tests

* Added random negative size test

* Fixes test

time:
2017-07-04T09:43:50Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: also inspect the upgrade api response to check whether the upgrade really ran

Relates to #25311

time:
2017-07-04T08:58:57Z
class:
comments:
[DOCS] restructure java clients docs pages (#25517)

This commit converts the low level client and high level client chapters into two parts, which allows each high level client supported api to be on a separate page and show up in the index on the right.

time:
2017-07-03T16:17:34Z
class:
comments:
Include shared/attributes.asciidoc from docs master

time:
2017-07-03T15:49:28Z
class:
comments:
Fixed page breaks for ICU Collation Keyword Fields

time:
2017-07-03T15:30:40Z
class:
core/src/main/java/org/elasticsearch/common/ParsingException.java
core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java
core/src/main/java/org/elasticsearch/index/query/MatchAllQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java
core/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java
core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
core/src/main/java/org/elasticsearch/search/SearchModule.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/Aggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
core/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoGridAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/global/GlobalAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/missing/MissingAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/DateRangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistanceAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ip/IpRangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/sampler/DiversifiedAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/sampler/SamplerAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/GND.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/JLHScore.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/NXYSignificanceHeuristic.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/PercentageScore.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/ScriptHeuristic.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/SignificanceHeuristicParser.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/avg/AvgAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/geocentroid/GeoCentroidAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/max/MaxAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/min/MinAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/StatsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/sum/SumAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/BucketHelpers.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/PipelineAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/BucketMetricsParser.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/percentile/PercentilesBucketPipelineAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/stats/extended/ExtendedStatsBucketParser.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketscript/BucketScriptPipelineAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketselector/BucketSelectorPipelineAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/cumulativesum/CumulativeSumPipelineAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/derivative/DerivativePipelineAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/MovAvgPipelineAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/serialdiff/SerialDiffPipelineAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParserHelper.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/StoredFieldsContext.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/AbstractHighlighterBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightBuilder.java
core/src/main/java/org/elasticsearch/search/rescore/QueryRescorerBuilder.java
core/src/main/java/org/elasticsearch/search/rescore/RescoreBuilder.java
core/src/main/java/org/elasticsearch/search/slice/SliceBuilder.java
core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/ScoreSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/ScriptSortBuilder.java
core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionBuilder.java
core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryContextMapping.java
core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryQueryContext.java
core/src/main/java/org/elasticsearch/search/suggest/completion/context/ContextMapping.java
core/src/main/java/org/elasticsearch/search/suggest/completion/context/GeoContextMapping.java
core/src/main/java/org/elasticsearch/search/suggest/completion/context/GeoQueryContext.java
core/src/test/java/org/elasticsearch/index/query/AbstractQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/RangeQueryBuilderTests.java
core/src/test/java/org/elasticsearch/search/SearchModuleTests.java
core/src/test/java/org/elasticsearch/search/SearchServiceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationCollectorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregatorFactoriesTests.java
core/src/test/java/org/elasticsearch/search/aggregations/BasePipelineAggregationTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/InternalOrderTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridParserTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificanceHeuristicTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/FiltersTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/TopHitsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/support/IncludeExcludeTests.java
core/src/test/java/org/elasticsearch/search/builder/SearchSourceBuilderTests.java
core/src/test/java/org/elasticsearch/search/collapse/CollapseBuilderTests.java
core/src/test/java/org/elasticsearch/search/rescore/QueryRescoreBuilderTests.java
core/src/test/java/org/elasticsearch/search/slice/SliceBuilderTests.java
core/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java
core/src/test/java/org/elasticsearch/search/suggest/completion/CategoryQueryContextTests.java
core/src/test/java/org/elasticsearch/search/suggest/completion/GeoContextMappingTests.java
core/src/test/java/org/elasticsearch/search/suggest/completion/GeoQueryContextTests.java
core/src/test/java/org/elasticsearch/search/suggest/completion/QueryContextTestCase.java
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/support/MultiValuesSourceParser.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportSearchTemplateAction.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ChildrenAggregationBuilder.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestReindexAction.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/BaseAggregationTestCase.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
comments:
Remove QueryParseContext (#25486)

QueryParseContext is currently only used as a wrapper for an XContentParser, so
this change removes it entirely and changes the appropriate APIs that use it so
far to only accept a parser instead.

time:
2017-07-03T12:45:26Z
class:
core/src/test/java/org/elasticsearch/common/xcontent/XContentParserTests.java
core/src/test/java/org/elasticsearch/common/xcontent/support/AbstractFilteringTestCase.java
core/src/test/java/org/elasticsearch/common/xcontent/support/XContentMapValuesTests.java
core/src/test/java/org/elasticsearch/common/xcontent/support/filtering/AbstractXContentFilteringTestCase.java
core/src/test/java/org/elasticsearch/common/xcontent/support/filtering/CborXContentFilteringTests.java
core/src/test/java/org/elasticsearch/common/xcontent/support/filtering/JsonXContentFilteringTests.java
core/src/test/java/org/elasticsearch/common/xcontent/support/filtering/SmileFilteringGeneratorTests.java
core/src/test/java/org/elasticsearch/common/xcontent/support/filtering/YamlFilteringGeneratorTests.java
comments:
[Test] Use a common testing class for all XContent filtering tests (#25491)

We have two ways to filter XContent:

- The first method is to parse the XContent as a map and use
XContentMapValues.filter(). This method filters the content of the map
using an automaton. It is used for source filtering, both at search and
indexing time. It performs well but can generate a lot of objects and
garbage collections when large XContent are filtered. It also returns
empty objects (see f2710c16ebd918f646be9d0ab64b4871c25be4c2) when all
the sub fields have been filtered out and handle dots in field names as
if they were sub fields.

- The second method is to parse the XContent and copy the XContentParser
 structure to a XContentBuilder initialized with includes/excludes
 filters. This method uses the Jackson streaming filter feature. It is
 used by the Response Filtering ('filter_path') feature. It does not
 generate a lot of objects, and does not return empty objects and also
 does not handle dots in field names explicitely.

 Both methods have similar goals but different tests. This commit changes
 the current XContentBuilder test class so that it becomes a more generic
 testing class and we can now ensure that filtering methods generate the
 same results.

 It also removes some tests from the XContentMapValuesTests class that
 should be in XContentParserTests.

time:
2017-07-03T08:52:23Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregatorTests.java
comments:
Tests fix - Significant terms/text aggs  (#25499)

The significance aggs return Lucene index-level statistics that when merged are assumed to be from different shards. The Aggregator unit tests assume segments can be treated as shards and thus break the significance stats and introduce double-counting of background doc frequencies. This change addresses this problem by ensuring test indexes have only one shard.
Closes #25429

time:
2017-07-03T08:48:16Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/CRUDDocumentationIT.java
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/DeleteDocumentationIT.java
comments:
[DOCS] add docs for REST high level client index method (#25501)

This commit restructures the existing high level client docs, adapts the existing delete method docs and adds docs for the index method.

time:
2017-07-03T08:02:17Z
class:
comments:
Tests: Add Debian 9 (Stretch) to the packaging tests

Debian 9 aka Stretch is the current stable[1].

Add Debian-9 to the packaging tests.

[1] https://wiki.debian.org/DebianStretch

Relates #25494

time:
2017-07-03T07:49:06Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: Run flush before upgrade and refresh after upgrade.

Relates to #25311

time:
2017-07-02T20:14:05Z
class:
comments:
Fix third party audit for repository-hdfs

This commit fixes the third party audit check for the repository-hdfs
plugin; a class was excluded on JDK 9 that does not need to be.

time:
2017-07-02T20:12:35Z
class:
core/src/test/java/org/elasticsearch/transport/RemoteClusterServiceTests.java
comments:
[TEST] Expect nodes getting disconnected quickly

If all nodes get disconnected before we can send the request we might
try to reconnect and that will fail with an ISE instead of the a transport
exception.

Closes #25301

time:
2017-07-02T19:19:51Z
class:
core/src/test/java/org/elasticsearch/cluster/routing/allocation/ShardStateIT.java
comments:
testPrimaryFailureIncreasesTerm should use assertBusy to wait for yellow

ensureYellow ensures at least yellow.

Also, since we only have 1 replica, we don't need to index for it to know about the primary term promotion

Closes #25287

time:
2017-07-02T08:16:50Z
class:
core/src/main/java/org/elasticsearch/bootstrap/Security.java
core/src/main/java/org/elasticsearch/client/transport/TransportClient.java
core/src/main/java/org/elasticsearch/common/network/NetworkService.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
core/src/main/java/org/elasticsearch/transport/TransportSettings.java
core/src/main/java/org/elasticsearch/tribe/TribeService.java
core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TaskManagerTestCase.java
core/src/test/java/org/elasticsearch/action/support/replication/BroadcastReplicationTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/common/network/NetworkServiceTests.java
core/src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
core/src/test/java/org/elasticsearch/discovery/zen/UnicastZenPingTests.java
core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingDisabledTests.java
core/src/test/java/org/elasticsearch/transport/PublishPortTests.java
core/src/test/java/org/elasticsearch/transport/TransportServiceHandshakeTests.java
modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java
modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java
modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpChannelTests.java
modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpServerPipeliningTests.java
modules/transport-netty4/src/test/java/org/elasticsearch/http/netty4/Netty4HttpServerTransportTests.java
modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4ScheduledPingTests.java
modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4SizeHeaderFrameDecoderTests.java
modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4TransportIT.java
modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/NettyTransportMultiPortTests.java
modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/SimpleNetty4TransportTests.java
plugins/discovery-azure-classic/src/main/java/org/elasticsearch/discovery/azure/classic/AzureUnicastHostsProvider.java
plugins/discovery-azure-classic/src/test/java/org/elasticsearch/discovery/azure/classic/AzureDiscoveryClusterFormationTests.java
plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryTests.java
plugins/discovery-ec2/src/test/java/org/elasticsearch/discovery/ec2/Ec2NetworkTests.java
plugins/discovery-file/src/test/java/org/elasticsearch/discovery/file/FileBasedUnicastHostsProviderTests.java
plugins/discovery-gce/src/main/java/org/elasticsearch/discovery/gce/GceUnicastHostsProvider.java
plugins/discovery-gce/src/test/java/org/elasticsearch/discovery/gce/GceDiscoveryTests.java
plugins/discovery-gce/src/test/java/org/elasticsearch/discovery/gce/GceNetworkTests.java
test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java
test/framework/src/main/java/org/elasticsearch/test/discovery/ClusterDiscoveryConfiguration.java
test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java
test/framework/src/main/java/org/elasticsearch/transport/AbstractSimpleTransportTestCase.java
test/framework/src/main/java/org/elasticsearch/transport/MockTcpTransport.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java
test/framework/src/test/java/org/elasticsearch/test/test/InternalTestClusterTests.java
test/framework/src/test/java/org/elasticsearch/transport/MockTcpTransportTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/SimpleNioTransportTests.java
comments:
Cleanup network / transport related settings (#25489)

This commit makes the use of the global network settings explicit instead
of implicit within NetworkService. It cleans up several places where we fall
back to the global settings while we should have used tcp or http ones.

In addition this change also removes unnecessary settings classes

time:
2017-07-01T19:36:18Z
class:
comments:
Fix repository-hdfs plugin packaging test

This commit fixes the repository-hdfs packaging test by fixing the
expected name of two dependencies.

time:
2017-07-01T09:36:45Z
class:
core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java
core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointSyncAction.java
core/src/test/java/org/elasticsearch/action/support/replication/ReplicationOperationTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
comments:
Remove allocation id from replica replication response (#25488)

The replica replication response object has an extra allocationId field that contains the allocation id of the replica on which the request was executed. As we are sending the allocation id with the actual replica replication request, and check when executing the replica replication action that the allocation id of the replica shard is what we expect, there is no need to communicate back the allocation id as part of the response object.

time:
2017-06-30T22:05:58Z
class:
comments:
Adjust BWC version on bad allocation request test

This commit adjusts the BWC version on the bad cluster allocation
explain request test as changing the API to respond with a bad request
status instead of an internal server error status was backported to 5.x
to be included in 5.6.0.

Relates #25503

time:
2017-06-30T21:57:56Z
class:
plugins/repository-hdfs/src/main/java/org/elasticsearch/repositories/hdfs/HdfsPlugin.java
plugins/repository-hdfs/src/test/java/org/elasticsearch/repositories/hdfs/HdfsBlobStoreContainerTests.java
plugins/repository-hdfs/src/test/java/org/elasticsearch/repositories/hdfs/HdfsClientThreadLeakFilter.java
plugins/repository-hdfs/src/test/java/org/elasticsearch/repositories/hdfs/HdfsTests.java
test/fixtures/hdfs-fixture/src/main/java/hdfs/MiniHDFS.java
comments:
Upgrading HDFS Repository Plugin to use HDFS 2.8.1 Client (#25497)

Hadoop 2.7.x libraries fail when running on JDK9 due to the version string changing to a single 
character. On Hadoop 2.8, this is no longer a problem, and it is unclear on whether the fix will be 
backported to the 2.7 branch. This commit upgrades our dependency of Hadoop for the HDFS 
Repository to 2.8.1.

time:
2017-06-30T21:50:20Z
class:
core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/TransportClusterAllocationExplainAction.java
core/src/test/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainActionTests.java
comments:
Adjust status on bad allocation explain requests

When a user requests a cluster allocation explain in a situation where
it does not make sense (for example, there are no unassigned shards), we
should consider this a bad request instead of a server error. Yet, today
by throwing an illegal state exception, these are treated as server
errors. This commit adjusts these so that they throw illegal argument
exceptions and are treated as bad requests.

Relates #25503

time:
2017-06-30T18:22:20Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/SearchIT.java
core/src/main/java/org/elasticsearch/bootstrap/SystemCallFilter.java
comments:
Preliminary support for ARM

This commit adds preliminary support for 64-bit ARM architectures.

Relates #25318

time:
2017-06-30T16:59:02Z
class:
comments:
Add doc note regarding explicit publish host

This commit adds a note to the docs regarding explicilty setting a
publish host if the network.host setting results in multiple bind
addresses.

Relates #25496

time:
2017-06-30T16:51:37Z
class:
comments:
Fix typo in name of test

This commit fixes a typo in the name of a REST test.

Relates #25451

time:
2017-06-30T14:59:03Z
class:
core/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java
core/src/test/java/org/elasticsearch/index/replication/RecoveryDuringReplicationTests.java
comments:
Add additional test for sequence-number recovery

This commit adds a test for a scenario where a replica receives an extra
document that the promoted replica does not receive, misses the
primary/replica re-sync, and the recovers from the newly-promoted
primary.

Relates #25493

time:
2017-06-30T11:48:18Z
class:
core/src/main/java/org/elasticsearch/index/query/WrapperQueryBuilder.java
core/src/test/java/org/elasticsearch/index/query/BoolQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/WrapperQueryBuilderTests.java
comments:
WrapperQueryBuilder should also rewrite the parsed query.

Failing to do so can cause other errors later on during query execution.
For example if  `WrapperQueryBuilder` wraps a `GeoShapeQueryBuilder` that fetches the shape from an index then it will skip the shape fetching
and fail later with the error that no shapes have been fetched.

time:
2017-06-30T10:25:56Z
class:
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
comments:
Remove dead code and stale Javadoc

time:
2017-06-30T06:24:53Z
class:
comments:
Update defaults in documentation (#25483)

Following internal discussion

Relates: https://github.com/elastic/windows-installers/pull/49

time:
2017-06-29T23:31:54Z
class:
comments:
[DOCS] Add docs-dir to Painless (#25482)

time:
2017-06-29T22:44:06Z
class:
qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerTests.java
comments:
Add concurrent deprecation logger test

Since deprecation logging involves concurrency, this commit adds a test
that the concurrency here is handled safely.

Relates #25481

time:
2017-06-29T20:48:58Z
class:
comments:
[DOCS] Update shared attributes for Elasticsearch (#25479)

* [DOCS] Update shared attributes for Elasticsearch

* [DOCS] Moved shared attributes to Versions.asciidoc

* [DOCS] More more book URLs to shared attributes

time:
2017-06-29T20:36:43Z
class:
core/src/main/java/org/elasticsearch/common/logging/DeprecationLogger.java
core/src/main/java/org/elasticsearch/common/settings/Setting.java
core/src/main/java/org/elasticsearch/common/settings/Settings.java
core/src/test/java/org/elasticsearch/common/settings/SettingTests.java
qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerTests.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/DeprecationHttpIT.java
comments:
Use LRU set to reduce repeat deprecation messages

This commit adds an LRU set to used to determine if a keyed deprecation
message should be written to the deprecation logs, or only added to the
response headers on the thread context.

Relates #25474

time:
2017-06-29T20:16:07Z
class:
core/src/main/java/org/elasticsearch/transport/Transports.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/AbstractNioChannel.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/ConnectFuture.java
comments:
Add NioTransport threads to thread name checks (#25477)

We have various assertions that check we never block on transport
threads. This commit adds the thread names for the NioTransport to
these assertions.

With this change I had to fix two places where we were calling blocking
methods from the transport threads.

time:
2017-06-29T19:45:02Z
class:
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
comments:
Add shortcut for AbstractQueryBuilder.parseInnerQueryBuilder to QueryShardContext

time:
2017-06-29T19:02:50Z
class:
test/framework/src/main/java/org/elasticsearch/transport/nio/AcceptingSelector.java
test/framework/src/main/java/org/elasticsearch/transport/nio/ESSelector.java
test/framework/src/main/java/org/elasticsearch/transport/nio/SocketSelector.java
comments:
Prevent channel enqueue after selector close (#25478)

This commit adds additional protection to `ESSelector` and its
implementations to ensure that channels are not enqueued after the
selector is closed.

After a channel has been added to the queue, we check that the selector
is open. If it is not, then we remove the channel from the queue. If the
channel is removed successfully, we throw an `IllegalStateException`.

time:
2017-06-29T18:57:22Z
class:
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
comments:
Fix Java 9 compilation issue

My IDE ate a cast that seems required to make Java 9 happy.

time:
2017-06-29T18:56:18Z
class:
modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java
comments:
Remove unregistered `transport.netty.*` settings (#25476)

These settings have not be working for a full major version since they
are not registered. Given that they are simply duplicates we can just remove
them.

time:
2017-06-29T16:03:51Z
class:
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/TcpReadContext.java
comments:
Handle ping correctly in NioTransport (#25462)

Our current TCPTransport logic assumes that we do not pass pings to
the TCPTransport level.

This commit fixes an issue where NioTransport was passing pings to
TCPTransport and leading to exceptions.

time:
2017-06-29T15:32:51Z
class:
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/NioSocketChannelTests.java
comments:
Tests: Remove platform specific assertion in NioSocketChannelTests

This check depends on the language settings on the system the
test runs on, e.g. it fails on Ubuntu with LANG=de_DE.UTF-8.

time:
2017-06-29T15:10:20Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java
core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/DisMaxQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/ExistsQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/FieldMaskingSpanQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/FuzzyQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/GeoBoundingBoxQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/GeoDistanceQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/GeoPolygonQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/IdsQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java
core/src/main/java/org/elasticsearch/index/query/MatchAllQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/MatchNoneQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/MatchPhrasePrefixQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/MatchPhraseQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/MatchQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/MultiMatchQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/PrefixQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryParseContext.java
core/src/main/java/org/elasticsearch/index/query/QueryParser.java
core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/RegexpQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java
core/src/main/java/org/elasticsearch/index/query/SpanContainingQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SpanFirstQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SpanMultiTermQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SpanNearQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SpanNotQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SpanOrQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SpanTermQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SpanWithinQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/TermQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/TypeQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/WildcardQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/WrapperQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionParser.java
core/src/main/java/org/elasticsearch/index/query/functionscore/FieldValueFactorFunctionBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/RandomScoreFunctionBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/ScoreFunctionParser.java
core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java
core/src/main/java/org/elasticsearch/indices/IndicesService.java
core/src/main/java/org/elasticsearch/rest/action/RestActions.java
core/src/main/java/org/elasticsearch/search/SearchModule.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregatorFactories.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/AbstractHighlighterBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightBuilder.java
core/src/main/java/org/elasticsearch/search/internal/AliasFilter.java
core/src/main/java/org/elasticsearch/search/rescore/QueryRescorerBuilder.java
core/src/main/java/org/elasticsearch/search/sort/FieldSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/GeoDistanceSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/ScoreSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/ScriptSortBuilder.java
core/src/main/java/org/elasticsearch/search/sort/SortBuilder.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggester.java
core/src/test/java/org/elasticsearch/action/search/MultiSearchRequestTests.java
core/src/test/java/org/elasticsearch/index/query/InnerHitBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/QueryParseContextTests.java
core/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/plugin/DummyQueryBuilder.java
core/src/test/java/org/elasticsearch/rest/action/RestActionsTests.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightBuilderTests.java
core/src/test/java/org/elasticsearch/search/internal/ShardSearchTransportRequestTests.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
core/src/test/java/org/elasticsearch/search/sort/FieldSortBuilderTests.java
core/src/test/java/org/elasticsearch/search/sort/GeoDistanceSortBuilderTests.java
core/src/test/java/org/elasticsearch/search/sort/ScoreSortBuilderTests.java
core/src/test/java/org/elasticsearch/search/sort/ScriptSortBuilderTests.java
core/src/test/java/org/elasticsearch/search/sort/SortBuilderTests.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/ParentIdQueryBuilder.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/TestDeprecatedQueryBuilder.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
comments:
Remove QueryParseContext from parsing QueryBuilders (#25448)

Currently QueryParseContext is only a thin wrapper around an XContentParser that
adds little functionality of its own. I provides helpers for long deprecated
field names which can be removed and two helper methods that can be made static
and moved to other classes. This is a first step in helping to remove
QueryParseContext entirely.

time:
2017-06-29T14:56:34Z
class:
core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/FailedNodeRoutingTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/FailedShardsRoutingTests.java
comments:
Promote replica on the highest version node (#25277)

* Promote replica on the highest version node

This changes the replica selection to prefer to return replicas on the highest
version when choosing a replacement to promote when the primary shard fails.

Consider this situation:

- A replica on a 5.6 node
- Another replica on a 6.0 node
- The primary on a 6.0 node

The primary shard is sending sequence numbers to the replica on the 6.0 node and
skipping sending them for the 5.6 node. Now assume that the primary shard fails
and (prior to this change) the replica on 5.6 node gets promoted to primary, it
now has no knowledge of sequence numbers and the replica on the 6.0 node will be
expecting sequence numbers but will never receive them.

Relates to #10708

* Switch from map of node to version to retrieving the version from the node

* Remove uneeded null check

* You can pretend you're a functional language Java, but you're not fooling me.

* Randomize node versions

* Add test with random cluster state with multiple versions that fails shards

* Re-add comment and remove extra import

* Remove unneeded stuff, randomly start replicas a few more times

* Move test into FailedNodeRoutingTests

* Make assertions actually test replica version promotion

* Rewrite test, taking Yannick's feedback into account

time:
2017-06-29T11:54:52Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: added not null assertion

Relates to #25311

time:
2017-06-29T11:43:39Z
class:
core/src/main/java/org/elasticsearch/common/cache/CacheBuilder.java
comments:
use diamond operator

time:
2017-06-29T11:32:13Z
class:
core/src/main/java/org/elasticsearch/search/SearchHit.java
comments:
Use DocumentField#toXContent and parsing in SearchHit (#25469)

As a small follow-up to #25361, we can use DocumentFields toXContent/fromXContent
in SearchHit now.

time:
2017-06-29T09:35:28Z
class:
core/src/main/java/org/elasticsearch/action/get/GetResponse.java
core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java
core/src/main/java/org/elasticsearch/common/document/DocumentField.java
core/src/main/java/org/elasticsearch/index/get/GetResult.java
core/src/main/java/org/elasticsearch/index/get/ShardGetService.java
core/src/main/java/org/elasticsearch/index/reindex/ClientScrollableHitSource.java
core/src/main/java/org/elasticsearch/index/termvectors/TermVectorsService.java
core/src/main/java/org/elasticsearch/search/SearchHit.java
core/src/main/java/org/elasticsearch/search/SearchHitField.java
core/src/main/java/org/elasticsearch/search/fetch/FetchPhase.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/DocValueFieldsFetchSubPhase.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/ParentFieldSubFetchPhase.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/ScriptFieldsFetchSubPhase.java
core/src/test/java/org/elasticsearch/action/get/GetResponseTests.java
core/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/action/update/UpdateResponseTests.java
core/src/test/java/org/elasticsearch/index/get/DocumentFieldTests.java
core/src/test/java/org/elasticsearch/index/get/GetResultTests.java
core/src/test/java/org/elasticsearch/search/SearchHitTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/AbstractGeoTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/TopHitsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHitsTests.java
core/src/test/java/org/elasticsearch/search/fetch/FetchSubPhasePluginIT.java
core/src/test/java/org/elasticsearch/search/fields/SearchFieldsIT.java
modules/parent-join/src/main/java/org/elasticsearch/join/fetch/ParentJoinFieldSubFetchPhase.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/ParentChildInnerHitContextBuilder.java
plugins/mapper-size/src/test/java/org/elasticsearch/index/mapper/size/SizeMappingIT.java
comments:
Unify the result interfaces from get and search in Java client (#25361)

As GetField and SearchHitField have the same members, they have been unified into
DocumentField.

Closes #16440

time:
2017-06-29T02:18:46Z
class:
core/src/main/java/org/elasticsearch/common/settings/Setting.java
core/src/main/java/org/elasticsearch/common/settings/Settings.java
core/src/test/java/org/elasticsearch/common/settings/SettingTests.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/DeprecationHttpIT.java
comments:
Emit settings deprecation logging at most once

When a setting is deprecated, if that setting is used repeatedly we
currently emit a deprecation warning every time the setting is used. In
cases like hitting settings endpoints over and over against a node with
a lot of deprecated settings, this can lead to excessive deprecation
warnings which can crush a node. This commit ensures that a given
setting only sees deprecation logging at most once.

Relates #25457

time:
2017-06-28T23:28:15Z
class:
comments:
[Docs] Add link to grok debugger docs (#25461)

time:
2017-06-28T23:14:16Z
class:
comments:
[Docs] Add link to grok debugger docs (#25412)

time:
2017-06-28T22:37:56Z
class:
core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/get/GetSnapshotsRequest.java
core/src/main/java/org/elasticsearch/snapshots/SnapshotInfo.java
comments:
Output all empty snapshot info fields if in verbose mode (#25455)

In #24477, a less verbose option was added to retrieve snapshot info via
GET /_snapshot/{repo}/{snapshots}.  The point of adding this less
verbose option was so that if the repository is a cloud based one, and
there are many snapshots for which the snapshot info needed to be
retrieved, then each snapshot would require reading a separate snapshot
metadata file to pull out the necessary information.  This can be costly
(performance and cost) on cloud based repositories, so a less verbose
option was added that only retrieves very basic information about each
snapshot that is all available in the index-N blob - requiring only one
read!

In order to display this less verbose snapshot info appropriately, logic
was added to not display those fields which could not be populated.
However, this broke integrators (e.g. ECE) that required these fields to
be present, even if empty.  This commit is to return these fields in the
response, even if empty, if the verbose option is set.

time:
2017-06-28T21:50:24Z
class:
core/src/main/java/org/elasticsearch/transport/RemoteClusterConnection.java
core/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java
comments:
Fix race condition in RemoteClusterConnection node supplier (#25432)

This commit fixes a race condition in the node supplier used by the RemoteClusterConnection. The
node supplier stores an iterator over a set backed by a ConcurrentHashMap, but the get operation
of the supplier uses multiple methods of the iterator and is suceptible to a race between the
calls to hasNext() and next(). The test in this commit fails under the old implementation with a
NoSuchElementException. This commit adds a wrapper object over a set and a iterator, with all methods
being synchronized to avoid races. Modifications to the set result in the iterator being set to null
and the next retrieval creates a new iterator.

time:
2017-06-28T19:16:04Z
class:
test/framework/src/test/java/org/elasticsearch/transport/nio/SimpleNioTransportTests.java
comments:
Remove finicky exception message assertion

In SimpleNioTransportTests we assert that an IOException has a certain
message. This message appears that it is not dependible (and might
change based on platform).

Our other transport tests (mock and netty) do not make this assertion.
Instead they only assert on our application exception message. This
commit removes the IOException message assertion. And retains the
ConnectTransportException message assertion.

time:
2017-06-28T18:41:37Z
class:
core/src/main/java/org/elasticsearch/action/search/TransportSearchAction.java
comments:
Do not search locally if remote index pattern resolves to no indices (#25436)

This commit changes how we determine if there were any remote indices that a search should have
been executed against. Previously, we used the list of remote shard iterators but if the remote
index pattern resolved to no indices there would be no remote shard iterators even though the
request specified remote indices. The map of remote cluster names to the original indices is used
instead so that we can determine if there were remote indices even when there are no remote shard
iterators.

Closes #25426

time:
2017-06-28T16:20:20Z
class:
core/src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
comments:
Expand `/_cat/nodes` to return information about hard drive (#21775)

Expand `/_cat/nodes` with already present information about available disk space `diskAvail` (alias: `d`, `disk`) by:

    * `diskTotal` (alias `dt`): total disk space
    * `diskUsed` (alias `du`): used disk space (`diskTotal - diskAvail`)
    * `diskUsedPercent` (alias `dup`): used disk space percentage

Note: The available disk space is the number of bytes available to the node's Java virtual machine. The size might be smaller than the real one. That means the used disk space (percentage) is larger.

Closes #21679

time:
2017-06-28T15:51:20Z
class:
test/framework/src/main/java/org/elasticsearch/transport/nio/AcceptingSelector.java
test/framework/src/main/java/org/elasticsearch/transport/nio/AcceptorEventHandler.java
test/framework/src/main/java/org/elasticsearch/transport/nio/ESSelector.java
test/framework/src/main/java/org/elasticsearch/transport/nio/EventHandler.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NetworkBytesReference.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioClient.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioShutdown.java
test/framework/src/main/java/org/elasticsearch/transport/nio/NioTransport.java
test/framework/src/main/java/org/elasticsearch/transport/nio/OpenChannels.java
test/framework/src/main/java/org/elasticsearch/transport/nio/RoundRobinSelectorSupplier.java
test/framework/src/main/java/org/elasticsearch/transport/nio/SocketEventHandler.java
test/framework/src/main/java/org/elasticsearch/transport/nio/SocketSelector.java
test/framework/src/main/java/org/elasticsearch/transport/nio/TcpReadHandler.java
test/framework/src/main/java/org/elasticsearch/transport/nio/WriteOperation.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/AbstractNioChannel.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/ChannelFactory.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/CloseFuture.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/ConnectFuture.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/NioChannel.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/NioServerSocketChannel.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/NioSocketChannel.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/ReadContext.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/SelectionKeyUtils.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/TcpFrameDecoder.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/TcpReadContext.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/TcpWriteContext.java
test/framework/src/main/java/org/elasticsearch/transport/nio/channel/WriteContext.java
test/framework/src/test/java/org/elasticsearch/transport/nio/AcceptingSelectorTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/AcceptorEventHandlerTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/ByteBufferReferenceTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/ESSelectorTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/NioClientTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/SimpleNioTransportTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/SocketEventHandlerTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/SocketSelectorTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/TestingSocketEventHandler.java
test/framework/src/test/java/org/elasticsearch/transport/nio/WriteOperationTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/AbstractNioChannelTestCase.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/DoNotRegisterChannel.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/DoNotRegisterServerChannel.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/NioServerSocketChannelTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/NioSocketChannelTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/TcpFrameDecoderTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/TcpReadContextTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/channel/TcpWriteContextTests.java
test/framework/src/test/java/org/elasticsearch/transport/nio/utils/TestSelectionKey.java
comments:
Introduce NioTransport into framework for testing (#24262)

This commit introduces a nio based tcp transport into framework for
testing.

Currently Elasticsearch uses a simple blocking tcp transport for
testing purposes (MockTcpTransport). This diverges from production
where our current transport (netty) is non-blocking.

The point of this commit is to introduce a testing variant that more
closely matches the behavior of production instances.

time:
2017-06-28T15:10:30Z
class:
comments:
docs: added percolator script query limitation

time:
2017-06-28T14:08:45Z
class:
core/src/main/java/org/elasticsearch/indices/IndicesService.java
core/src/test/java/org/elasticsearch/indices/IndicesServiceTests.java
comments:
_nodes/stats should not fail due to concurrent AlreadyClosedException (#25016)

This catches `AlreadyClosedException` during `stats` calls to avoid failing a `_nodes/stats` request because of the ignorable, concurrent index closure.

time:
2017-06-28T13:48:47Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java
core/src/test/java/org/elasticsearch/indices/IndexingMemoryControllerTests.java
core/src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerSingleNodeTests.java
core/src/test/java/org/elasticsearch/indices/cluster/AbstractIndicesClusterStateServiceTestCase.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
comments:
Use a single method to update shard state

This commit refactors index shard to provide a single method for
updating the shard state on an incoming cluster state update.

Relates #25431

time:
2017-06-28T12:42:13Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
Do not swallow exception when relocating

When relocating a shard before changing the state to relocated, we
verify that a relocation is a still taking place. Yet, this can throw an
exception if the relocation is in fact no longer valid. Sadly, we were
swallowing the exception in this situation. This commit allows such an
exception to bubble up after safely releasing resources.

time:
2017-06-28T12:31:03Z
class:
comments:
Docs: Fix typo for request cache (#25444)

time:
2017-06-28T12:24:33Z
class:
core/src/main/java/org/elasticsearch/bootstrap/SystemCallFilter.java
comments:
Remove implicit 32-bit support

We previously tried to maintain (while not formally supporting) 32-bit
support, although we never tested this anywhere in CI. Since we do not
formally support this, and 32-bit usage is very low, we have elected to
no longer maintain 32-bit support. This commit removes any implication
of 32-bit support.

Relates #25435

time:
2017-06-28T10:48:31Z
class:
comments:
[DOCS] reworded to prevent code span rendering glitch (#25442)

Changed `rescore`s to `rescore` requests as an backtick followed by the s character appears to be interpreted as an apostrophe  which then leads to an unbalanced backtick for the next code span in the remainder of the paragraph

Closes #25443

time:
2017-06-28T08:41:16Z
class:
core/src/main/java/org/elasticsearch/indices/recovery/PeerRecoverySourceService.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java
core/src/test/java/org/elasticsearch/indices/recovery/PeerRecoverySourceServiceTests.java
comments:
Disallow multiple concurrent recovery attempts for same target shard (#25428)

The primary shard uses the GlobalCheckPointTracker to track local checkpoint information of recovering and started replicas in order to calculate the global checkpoint. As the tracker is updated through recoveries as well, it is easier to reason about the tracker if we can ensure that there are no concurrent recovery attempts for the same target shard (which can happen in case of network disconnects).

time:
2017-06-28T08:38:22Z
class:
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
comments:
Update global checkpoint when increasing primary term on replica (#25422)

When a replica shard increases its primary term under the mandate of a new primary, it should also update its global checkpoint; this gives us the guarantee that its global checkpoint is at least as high as the new primary and gives a starting point for the primary/replica resync.

Relates to #25355, #10708

time:
2017-06-28T08:00:01Z
class:
comments:
Add backwards compatibility indices for 5.4.3

time:
2017-06-28T07:59:54Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
Add version 5.4.3 after release

time:
2017-06-27T23:04:23Z
class:
comments:
Update MSI installer images (#25414)

Slight updating to styling

time:
2017-06-27T21:28:41Z
class:
core/src/test/java/org/elasticsearch/common/util/set/SetsTests.java
comments:
Add missing newline at end of SetsTests.java

This commit adds a missing newline to the end of SetsTests.java after
the closing curly brace.

time:
2017-06-27T19:08:58Z
class:
core/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java
comments:
Rename handoff primary context transport handler

This commit renames this handler from "hand_off" to "handoff" since
"handoff" is an actual word in the English language.

time:
2017-06-27T15:55:24Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java
core/src/test/java/org/elasticsearch/indices/state/RareClusterStateIT.java
comments:
correct expected thrown exception in mappingMetaData to ElasticsearchParseException (#25410)

time:
2017-06-27T15:44:30Z
class:
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchIT.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchTests.java
comments:
test: Make many percolator integration tests real integration tests

time:
2017-06-27T15:33:28Z
class:
comments:
[DOCS] Update docs to use shared attribute file (#25403)

* [DOCS] Update docs to use shared attribute file

* [DOCS] Add shared attributes to Versions.asciidoc

time:
2017-06-27T15:29:35Z
class:
core/src/main/java/org/elasticsearch/common/util/set/Sets.java
core/src/test/java/org/elasticsearch/common/util/set/SetsTests.java
comments:
Add Javadocs and tests for set difference methods

This commit adds Javadocs and tests for some set difference utility
methods in core.

time:
2017-06-27T15:02:15Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
comments:
Tests: Add parsing test for AggregationsTests (#25396)

We already have these tests in InternalAggregationTestCase to check random insertions into the response xContent so that we don't fail on future changes in the response format. This change adds the same to AggregationsTests and runs on a whole aggregations tree. Unfortunately we need to exclude many places in the xContent from random insertion, but I added a long comment trying to explaine those.

time:
2017-06-27T14:56:48Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: get upgrade status for all indices

Relates to #25311

time:
2017-06-27T13:58:22Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorTests.java
comments:
Mute SignificantTermsAggregatorTests#testSignificance()

Relates #25429

time:
2017-06-27T08:54:37Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: added extra log line

Relates to #25311

time:
2017-06-27T08:41:48Z
class:
core/src/test/java/org/elasticsearch/recovery/FullRollingRestartIT.java
comments:
Mute FullRollingRestartIT#testFullRollingRestart()

Relates #25420

time:
2017-06-27T08:25:40Z
class:
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
comments:
Mute IndexShardTests#testRelocatedShardCanNotBeRevivedConcurrently

time:
2017-06-27T02:48:04Z
class:
core/src/test/java/org/elasticsearch/cluster/MinimumMasterNodesIT.java
comments:
Mark shutdown non-master nodes test as awaits fix

This commit marks a failing test as awaits fix. The test is failing due
to a primary shard not knowing its own local checkpoint in the global
checkpoint tracker after recovery. If such a shard becomes primary after
promotion, and is then subsequently relocated, it can lead to a
violation of an assertion that when the primary context is transferred
the knowledge of all in-sync local checkpoints is consistent with the
global checkpoint on the relocation target.

Relates #25415

time:
2017-06-27T01:43:20Z
class:
core/src/main/java/org/elasticsearch/bootstrap/Security.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/env/Environment.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/test/java/org/elasticsearch/env/EnvironmentTests.java
core/src/test/java/org/elasticsearch/node/NodeTests.java
qa/evil-tests/src/test/java/org/elasticsearch/node/EvilNodeTests.java
comments:
Remove default path settings

This commit removes the default path settings for data and logs. With
this change, we now ship the packages with these settings set in the
elasticsearch.yml configuration file rather than going through the
default.path.data and default.path.logs dance that we went through in
the past.

Relates #25408

time:
2017-06-27T01:42:53Z
class:
core/src/main/java/org/elasticsearch/plugins/PluginsService.java
core/src/test/java/org/elasticsearch/plugins/PluginsServiceTests.java
comments:
Make plugin loading stricter

Today we load plugins reflectively, looking for constructors that
conform to specific signatures. This commit tightens the reflective
operations here, not allowing plugins to have ambiguous constructors.

Relates #25405

time:
2017-06-27T00:48:56Z
class:
comments:
[DOCS] Fixed broken cross doc links to security settings.

time:
2017-06-27T00:32:13Z
class:
comments:
Remove hacky node version check in NodeInfo

This commit removes a hacky way of checking that a node is running
Elasticsearch 5.x when starting standalone nodes in tests.

Relates #25406

time:
2017-06-26T22:45:13Z
class:
comments:
Fix docs lucene version check error message

time:
2017-06-26T21:22:54Z
class:
comments:
Build: Add check on lucene version in docs (#25407)

This commit adds a version verifica†ion to ensure the lucene version in
the docs is up to date.

time:
2017-06-26T19:18:29Z
class:
core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java
core/src/main/java/org/elasticsearch/bootstrap/Security.java
core/src/main/java/org/elasticsearch/cli/EnvironmentAwareCommand.java
core/src/main/java/org/elasticsearch/client/transport/TransportClient.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/env/Environment.java
core/src/main/java/org/elasticsearch/node/InternalSettingsPreparer.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/plugins/PluginsService.java
core/src/main/java/org/elasticsearch/tribe/TribeService.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/common/settings/AddFileKeyStoreCommandTests.java
core/src/test/java/org/elasticsearch/common/settings/AddStringKeyStoreCommandTests.java
core/src/test/java/org/elasticsearch/common/settings/CreateKeyStoreCommandTests.java
core/src/test/java/org/elasticsearch/common/settings/ListKeyStoreCommandTests.java
core/src/test/java/org/elasticsearch/common/settings/RemoveSettingKeyStoreCommandTests.java
core/src/test/java/org/elasticsearch/discovery/single/SingleNodeDiscoveryIT.java
core/src/test/java/org/elasticsearch/env/EnvironmentTests.java
core/src/test/java/org/elasticsearch/index/analysis/HunspellTokenFilterFactoryTests.java
core/src/test/java/org/elasticsearch/indices/analyze/HunspellServiceTests.java
core/src/test/java/org/elasticsearch/node/InternalSettingsPreparerTests.java
core/src/test/java/org/elasticsearch/plugins/PluginsServiceTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricIT.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
core/src/test/java/org/elasticsearch/tribe/TribeServiceTests.java
plugins/discovery-azure-classic/src/test/java/org/elasticsearch/discovery/azure/classic/AzureDiscoveryClusterFormationTests.java
plugins/jvm-example/src/main/java/org/elasticsearch/plugin/example/JvmExamplePlugin.java
qa/evil-tests/src/test/java/org/elasticsearch/bootstrap/EvilSecurityTests.java
qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerConfigurationTests.java
qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerTests.java
qa/evil-tests/src/test/java/org/elasticsearch/tribe/TribeUnitTests.java
test/framework/src/main/java/org/elasticsearch/bootstrap/ESElasticsearchCliTestCase.java
test/framework/src/main/java/org/elasticsearch/index/analysis/AnalysisTestsHelper.java
test/framework/src/main/java/org/elasticsearch/node/MockNode.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/BaseAggregationTestCase.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java
test/framework/src/main/java/org/elasticsearch/test/NodeConfigurationSource.java
test/framework/src/main/java/org/elasticsearch/test/discovery/ClusterDiscoveryConfiguration.java
test/framework/src/test/java/org/elasticsearch/test/test/InternalTestClusterTests.java
comments:
Remove path.conf setting

This commit removes path.conf as a valid setting and replaces it with a
command-line flag for specifying a non-default path for configuration.

Relates #25392

time:
2017-06-26T19:14:23Z
class:
comments:
Fix documentation for script processor (#25299)

time:
2017-06-26T18:46:06Z
class:
core/src/main/java/org/elasticsearch/common/collect/LongTuple.java
core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java
comments:
Remove LongTuple

This commit removes an abstraction that was introduced when introducing
the primary context. As this abstraction is used in exactly one place,
we simply make that abstraction local to its usage so that we do not
accumulate yet another general abstraction with exactly one usage.

Relates #25402

time:
2017-06-26T18:17:33Z
class:
core/src/test/java/org/elasticsearch/index/seqno/GlobalCheckpointTrackerTests.java
comments:
Fix primary context sealing test

This commit updates some assertions in the primary context sealing test
after the restriction on updating allocation IDs from master and
updating global checkpoint on replica while sealed were removed.

time:
2017-06-26T18:09:15Z
class:
core/src/main/java/org/elasticsearch/common/collect/LongTuple.java
core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointTracker.java
core/src/main/java/org/elasticsearch/index/seqno/SequenceNumbersService.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/PrimaryContext.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryHandoffPrimaryContextRequest.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTargetHandler.java
core/src/main/java/org/elasticsearch/indices/recovery/RemoteRecoveryTargetHandler.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/seqno/GlobalCheckpointTrackerTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java
core/src/test/java/org/elasticsearch/indices/cluster/AbstractIndicesClusterStateServiceTestCase.java
core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java
core/src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadIT.java
core/src/test/java/org/elasticsearch/recovery/RelocationIT.java
comments:
Introduce primary context (#25122)

* Introduce primary context

The target of a primary relocation is not aware of the state of the
replication group. In particular, it is not tracking in-sync and
initializing shards and their checkpoints. This means that after the
target shard is started, its knowledge of the replication group could
differ from that of the relocation source. In particular, this differing
view can lead to it computing a global checkpoint that moves backwards
after it becomes aware of the state of the entire replication
group. This commit addresses this issue by transferring a primary
context during relocation handoff.

* Fix test

* Add assertion messages

* Javadocs

* Barrier between marking a shard in sync and relocating

* Fix misplaced call

* Paranoia

* Better latch countdown

* Catch any exception

* Fix comment

* Fix wait for cluster state relocation test

* Update knowledge via upate local checkpoint API

* toString

* Visibility

* Refactor permit

* Push down

* Imports

* Docs

* Fix compilation

* Remove assertion

* Fix compilation

* Remove context wrapper

* Move PrimaryContext to new package

* Piping for cluster state version

This commit adds piping for the cluster state version to the global
checkpoint tracker. We do not use it yet.

* Remove unused import

* Implement versioning in tracker

* Fix test

* Unneeded public

* Imports

* Promote on our own

* Add tests

* Import

* Newline

* Update comment

* Serialization

* Assertion message

* Update stale comment

* Remove newline

* Less verbose

* Remove redundant assertion

* Tracking -> in-sync

* Assertions

* Just say no

Friends do not let friends block the cluster state update thread on
network operations.

* Extra newline

* Add allocation ID to assertion

* Rename method

* Another rename

* Introduce sealing

* Sealing tests

* One more assertion

* Fix imports

* Safer sealing

* Remove check

* Remove another sealed check

time:
2017-06-26T15:52:16Z
class:
comments:
Throw useful error on bad docs snippets (#25389)

You can continue a test started in a previous snippet by marking the
next snippet with `// TEST[continued]`. The trouble is, if you mark the
first snippet in a file with `// TEST[continued]` you'd get difficult
to predict behavior because you'd continue the test started in another
file. This will usually create a test that fails the build but it isn't
easy to track down what you did wrong. This commit catches this
scenario up front and fails the build with a useful error message.

Similarly, if you put `// TEST[continued]` directly after a
`// TESTSETUP` section then the docs tests will fail to run but the
error message did not point you to the `// TEST[continued]` snippet.
This commit catches this scenario up front as well and fails the build
with a useful error message.

time:
2017-06-26T15:33:07Z
class:
comments:
Remove `mapping.single_type` from parent join test (#25391)

This removes the remaining usage of `mapping.single_type` from the parent join
module and moves it's bwc test to the mixed cluster tests

Relates to #24961
Relates to #20257

time:
2017-06-26T13:14:05Z
class:
core/src/test/java/org/elasticsearch/cluster/metadata/TemplateUpgradeServiceIT.java
comments:
Tests: Fix array out of bounds exception in TemplateUpgradeServiceIT

time:
2017-06-26T07:02:16Z
class:
core/src/main/java/org/elasticsearch/analysis/common/AbstractCompoundWordTokenFilterFactory.java
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
core/src/test/java/org/elasticsearch/indices/analysis/AnalysisModuleTests.java
core/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/DictionaryCompoundWordTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ElisionTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/HyphenationCompoundWordTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/KStemTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/ReverseTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/StemmerOverrideTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/StemmerTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/TruncateTokenFilterFactory.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CompoundAnalysisTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/StemmerTokenFilterFactoryTests.java
test/framework/src/main/java/org/elasticsearch/index/analysis/MyFilterTokenFilterFactory.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
Move more token filters to analysis-common module

The following token filters were moved: stemmer, stemmer_override, kstem, dictionary_decompounder, hyphenation_decompounder, reverse, elision and truncate.

Relates to #23658

time:
2017-06-25T17:19:51Z
class:
core/src/main/java/org/elasticsearch/common/settings/Settings.java
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
test/framework/src/main/java/org/elasticsearch/common/settings/MockSecureSettings.java
comments:
Test: Allow merging mock secure settings (#25387)

While real secure settings (ie an ES keystore) cannot be merged
together, mocked secure settings can and need to be sometimes merged.
This commit adds a merge method to allow tests to merge together
multiple instances of secure settings.

time:
2017-06-25T10:25:41Z
class:
core/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTestCase.java
core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java
core/src/test/java/org/elasticsearch/index/mapper/NestedObjectMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/ParentFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/UpdateMappingTests.java
comments:
Remove remaining `index.mapper.single_type` setting usage from tests (#25388)

This change removes the remaining explicitly specified `index.mapper.single_type`
settings from tests in order to allow the removal of the setting.
This is the already approved part of #25375 broken out to simplfiy reviews on

time:
2017-06-24T12:16:59Z
class:
core/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java
comments:
Remove dead logger prefix code

When Log4j 2 was introduced, we removed support for the system property
es.logger.prefix. Yet, some code was left behind. This commit removes
that dead code.

Relates #25377

time:
2017-06-23T21:31:21Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/TemplateUpgradeService.java
core/src/test/java/org/elasticsearch/cluster/metadata/TemplateUpgradeServiceIT.java
comments:
Tests: Improve stability and logging of TemplateUpgradeServiceIT tests (#25386)

Relates to #25382

time:
2017-06-23T21:14:59Z
class:
modules/reindex/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryBasicTests.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexParentChildTests.java
comments:
Remove `index.mapping.single_type=false` from reindex tests (#25365)

* Remove the setting from the yml tests and replace with tests using
`join` field. We can't use the setting in yml tests without lots of
backflips but we have `ReindexParentChildTests` for the coverage.
There weren't tests for `join` field with reindex before this. Adding
these tests discovered #25363.
* Remove the setting from `ReindexParentChildTests` and replace with
`index.version.created=V_5_6_0`. This test can be entirely removed
when legacy parent/child support is dropped from core.
* Port the yml tests that set _parent into integ tests so they
can set the index created version. These tests can be removed
when we drop support for _parent in core.
* Port a delete-by-query test for filtering based on type to an
`ESIntegTestCase` so it can use `index.version.created=5.6.0` to
setup documents of multiple types. This whole feature can be dropped
when we no longer support multiple types per index.

Relates to #24961

time:
2017-06-23T17:50:56Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/SearchIT.java
comments:
Adapt `SearchIT#testSearchWithParentJoin` to new join field (#25379)

In order to remove changing the "index.mapping.single_type" setting in this test
we need to change it to use the new join field.

Closes #25372

time:
2017-06-23T14:34:38Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificanceHeuristicTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorTests.java
comments:
Added unit test coverage for SignificantTerms (#24904)

Added unit test coverage for GlobalOrdinalsSignificantTermsAggregator, GlobalOrdinalsSignificantTermsAggregator.WithHash, SignificantLongTermsAggregator and SignificantStringTermsAggregator.
Removed integration test.

Relates #22278

time:
2017-06-23T10:14:39Z
class:
core/src/test/java/org/elasticsearch/action/admin/indices/create/ShrinkIndexIT.java
comments:
testCreateShrinkIndex: removed left over debugging log line that violated linting

time:
2017-06-23T09:05:59Z
class:
core/src/test/java/org/elasticsearch/action/admin/indices/create/ShrinkIndexIT.java
comments:
testCreateShrinkIndex should make sure to use the right source stats when testing shrunk target

time:
2017-06-23T08:54:26Z
class:
core/src/test/java/org/elasticsearch/common/xcontent/XContentParserUtilsTests.java
comments:
[Test] Add unit test for XContentParserUtilsTests.parseStoredFieldsValue (#25288)

time:
2017-06-23T08:39:57Z
class:
comments:
Update percolate-query.asciidoc (#25364)

time:
2017-06-23T08:26:06Z
class:
core/src/test/java/org/elasticsearch/get/GetActionIT.java
core/src/test/java/org/elasticsearch/index/mapper/TypeFieldMapperTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/InnerHitsIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/LegacyHasChildQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/LegacyHasParentQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/LegacyParentIdQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ParentChildTestCase.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexParentChildTests.java
comments:
Remove remaining `index.mapping.single_type=false` (#25369)

This change cleans up remaining tests  to not use index.mapping.single_type=false
but instead where applicable use a single type or markt the index as created
with a pre 6.x version.

Yet, there is still on leftover in the client tests that needs special attention.
See `org.elasticsearch.client.SearchIT`

Relates to #24961

time:
2017-06-23T07:54:05Z
class:
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
test/framework/src/main/java/org/elasticsearch/test/OldIndexUtils.java
comments:
test: Replace OldIndexBackwardsCompatibilityIT#testOldClusterStates with a full cluster restart qa test

OldIndexBackwardsCompatibilityIT#testOldClusterStates tested whether global and index metadata could be read from data directory,
 this can also be tested in full cluster qa test that checks cluster state via api.

 Relates to #24939

time:
2017-06-23T01:55:31Z
class:
comments:
Fix use of spaces on Windows if JAVA_HOME not set

When JAVA_HOME is not set we try to detect the location of Java. If its
location contains a space, due to a lack of quoting we will be
unsuccessful in invoking Java. This commit adds the necessary quoting to
handle this case.

Relates #23822

time:
2017-06-22T21:37:08Z
class:
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
comments:
ESIndexLevelReplicationTestCase.ReplicationAction#execute should send exceptions to it's listener rather than bubble them up

This is how TRA works as well.

time:
2017-06-22T21:24:43Z
class:
core/src/test/java/org/elasticsearch/index/replication/RecoveryDuringReplicationTests.java
comments:
testRecoveryAfterPrimaryPromotion shouldn't flush the replica with extra operations

We don't yet have lucene rollbacks, so we can't bake those in

time:
2017-06-22T20:14:18Z
class:
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/AbstractStringProcessorTestCase.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SortProcessorTests.java
comments:
fix sort and string processor tests around targetField (#25358)

Tests were randomly assigning `targetField` to an existing field that was an array,
causing path resolution issues. This PR fixes those tests

Closes #25346 & #25348

time:
2017-06-22T19:50:11Z
class:
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
comments:
Ensure `InternalEngineTests.testConcurrentWritesAndCommits` doesn't pile up commits (#25367)

`InternalEngineTests.testConcurrentWritesAndCommits` can be very heavy on disks
if threads are slow and the main thread keeps on pulling commit points holding on
to many many segments. This commit adds some quadratic backoff to not pile up too many
commits and to make sure indexing threads can make progress. This also now doesn't do
busy waiting but waits on a latch with a timeout.

Closes #25110

time:
2017-06-22T19:19:39Z
class:
core/src/test/java/org/elasticsearch/transport/RemoteClusterServiceTests.java
comments:
[TEST] Add debug logging if an unexpected exception is thrown

time:
2017-06-22T19:16:46Z
class:
modules/lang-painless/src/main/java/org/elasticsearch/painless/Definition.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/FeatureTestAugmentation.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/FunctionRef.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SFunction.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/AugmentationTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/PainlessDocGenerator.java
comments:
Update Painless to Allow Augmentation from Any Class (#25360)

Custom whitelists in Painless will need to allow classes to be augmented beyond the currently hard-coded Augmentation class tied to Painless directly. This change allows any class to specify an augmentation on a Painless struct using an appropriate static method. Changes to loading the whitelist have also been created to allow for this specification of a different class for augmentation.

time:
2017-06-22T18:55:28Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/template/delete/DeleteIndexTemplateResponse.java
core/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java
core/src/main/java/org/elasticsearch/cluster/metadata/TemplateUpgradeService.java
core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/test/java/org/elasticsearch/cluster/metadata/TemplateUpgradeServiceIT.java
core/src/test/java/org/elasticsearch/cluster/metadata/TemplateUpgradeServiceTests.java
comments:
TemplateUpgraders should be called during rolling restart (#25263)

In #24379 we added ability to upgrade templates on full cluster startup. This PR invokes the same update procedure also when a new node first joins the cluster allowing to update templates on a rolling cluster restart as well.

Closes #24680

time:
2017-06-22T15:14:25Z
class:
core/src/main/java/org/elasticsearch/index/shard/LocalShardSnapshot.java
core/src/main/java/org/elasticsearch/index/shard/StoreRecovery.java
core/src/test/java/org/elasticsearch/action/admin/indices/create/ShrinkIndexIT.java
core/src/test/java/org/elasticsearch/index/shard/StoreRecoveryTests.java
comments:
Initialize max unsafe auto ID timestamp on shrink

When shrinking an index we initialize its max unsafe auto ID timestamp
to the maximum of the max unsafe auto ID timestamps on the source
shards.

Relates #25356

time:
2017-06-22T15:08:14Z
class:
core/src/main/java/org/elasticsearch/index/IndexSettings.java
core/src/main/java/org/elasticsearch/index/engine/Engine.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/PrimaryReplicaSyncer.java
core/src/main/java/org/elasticsearch/index/translog/Translog.java
core/src/main/java/org/elasticsearch/index/translog/TranslogDeletionPolicy.java
core/src/main/java/org/elasticsearch/index/translog/TranslogSnapshot.java
core/src/main/java/org/elasticsearch/index/translog/TranslogStats.java
core/src/main/java/org/elasticsearch/index/translog/TranslogWriter.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
core/src/main/java/org/elasticsearch/indices/recovery/RemoteRecoveryTargetHandler.java
core/src/test/java/org/elasticsearch/gateway/RecoveryFromGatewayIT.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/replication/IndexLevelReplicationTests.java
core/src/test/java/org/elasticsearch/index/replication/RecoveryDuringReplicationTests.java
core/src/test/java/org/elasticsearch/index/seqno/LocalCheckpointTrackerTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java
core/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java
core/src/test/java/org/elasticsearch/index/translog/TranslogDeletionPolicyTests.java
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java
core/src/test/java/org/elasticsearch/indices/recovery/RecoveryTests.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
comments:
Enable a long translog retention policy by default (#25294)

#25147  added the translog deletion policy but didn't enable it by default. This PR enables a default retention of 512MB (same maximum size of the current translog) and an age of 12 hours (i.e., after 12 hours all translog files will be deleted). This increases to chance to have an ops based recovery, even if the primary flushed or the replica was offline for a few hours.

In order to see which parts of the translog are committed into lucene the translog stats are extended to include information about uncommitted operations.

Views now include all translog ops and guarantee, as before, that those will not go away. Snapshotting a view allows to filter out generations that are not relevant based on a specific sequence number.

Relates to #10708

time:
2017-06-22T14:48:16Z
class:
core/src/test/java/org/elasticsearch/action/bulk/BulkWithUpdatesIT.java
core/src/test/java/org/elasticsearch/cluster/metadata/MetaDataMappingServiceTests.java
core/src/test/java/org/elasticsearch/gateway/RecoveryFromGatewayIT.java
core/src/test/java/org/elasticsearch/get/GetActionIT.java
core/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java
core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingIT.java
core/src/test/java/org/elasticsearch/index/mapper/IdFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/IdFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/mapper/MapperServiceTests.java
core/src/test/java/org/elasticsearch/index/mapper/TypeFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/TypeFieldTypeTests.java
core/src/test/java/org/elasticsearch/index/mapper/UidFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/mapper/UidFieldTypeTests.java
core/src/test/java/org/elasticsearch/indices/IndicesOptionsIntegrationIT.java
core/src/test/java/org/elasticsearch/indices/exists/types/TypesExistsIT.java
core/src/test/java/org/elasticsearch/indices/mapping/SimpleGetFieldMappingsIT.java
core/src/test/java/org/elasticsearch/indices/mapping/SimpleGetMappingsIT.java
core/src/test/java/org/elasticsearch/indices/mapping/UpdateMappingIntegrationIT.java
core/src/test/java/org/elasticsearch/indices/stats/IndexStatsIT.java
core/src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateIT.java
core/src/test/java/org/elasticsearch/search/child/ParentFieldLoadingIT.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/InnerHitsIT.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java
core/src/test/java/org/elasticsearch/search/fields/SearchFieldsIT.java
core/src/test/java/org/elasticsearch/search/morelikethis/MoreLikeThisIT.java
core/src/test/java/org/elasticsearch/search/query/SearchQueryIT.java
core/src/test/java/org/elasticsearch/tribe/TribeIT.java
core/src/test/java/org/elasticsearch/update/UpdateIT.java
comments:
Remove `index.mapping.single_type=false` from core/tests (#25331)

This change cleans up core tests to not use `index.mapping.single_type=false`
but instead where applicable use a single type or markt the index as created
with a pre 6.x version.

Relates to #24961

time:
2017-06-22T14:31:15Z
class:
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolateQueryBuilderTests.java
comments:
test: single type defaults to true since alpha1 and not alpha3

Closes #25354

time:
2017-06-22T11:59:58Z
class:
core/src/main/java/org/elasticsearch/bootstrap/JNAKernel32Library.java
core/src/main/java/org/elasticsearch/bootstrap/JNANatives.java
core/src/main/java/org/elasticsearch/bootstrap/Natives.java
core/src/main/java/org/elasticsearch/bootstrap/Spawner.java
comments:
Get short path name for native controllers

Due to limitations with CreateProcessW on Windows (ultimately used by
ProcessBuilder) with respect to maximum path lengths, we need to get the
short path name for any native controllers before trying to start them
in case the absolute path exceeds the maximum path length. This commit
uses JNA to invoke the necessary Windows API for this to start the
native controller using the short path.

To be precise about the limitation here, the MSDN docs for
CreateProcessW say for the command line parameter:

>The command line to be executed. The maximum length of this string is
>32,768 characters, including the Unicode terminating null character. If
>lpApplicationName is NULL, the module name portionof lpCommandLine is
>limited to MAX_PATH characters.

This is exactly how the Windows implementation of Process in the JDK
invokes CreateProcessW: with the executable name (lpApplicationName) set
to NULL.

Relates #25344

time:
2017-06-22T11:35:34Z
class:
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/action/resync/ResyncReplicationRequest.java
core/src/main/java/org/elasticsearch/action/resync/ResyncReplicationResponse.java
core/src/main/java/org/elasticsearch/action/resync/TransportResyncReplicationAction.java
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/action/support/replication/TransportWriteAction.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/PrimaryReplicaSyncer.java
core/src/main/java/org/elasticsearch/indices/IndicesModule.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
core/src/main/java/org/elasticsearch/transport/TransportService.java
core/src/test/java/org/elasticsearch/action/bulk/TransportBulkActionIngestTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/replication/RecoveryDuringReplicationTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/shard/PrimaryReplicaSyncerTests.java
core/src/test/java/org/elasticsearch/indices/cluster/AbstractIndicesClusterStateServiceTestCase.java
core/src/test/java/org/elasticsearch/indices/cluster/IndicesClusterStateServiceRandomUpdatesTests.java
comments:
Live primary-replica resync (no rollback) (#24841)

Adds a replication task that streams all operations from the primary's global checkpoint to all replicas.

time:
2017-06-22T10:35:33Z
class:
core/src/main/java/org/elasticsearch/common/lucene/Lucene.java
core/src/main/java/org/elasticsearch/common/lucene/uid/PerThreadIDVersionAndSeqNoLookup.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHits.java
core/src/main/java/org/elasticsearch/search/internal/ScrollContext.java
core/src/main/java/org/elasticsearch/search/query/QuerySearchResult.java
core/src/main/java/org/elasticsearch/search/suggest/completion/CompletionFieldStats.java
core/src/test/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighterTests.java
core/src/test/java/org/elasticsearch/common/lucene/all/SimpleAllTests.java
core/src/test/java/org/elasticsearch/deps/lucene/VectorHighlighterTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataImplTestCase.java
core/src/test/java/org/elasticsearch/index/mapper/DoubleIndexingDocTests.java
core/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/search/nested/AbstractNumberNestedSortingTestCase.java
core/src/test/java/org/elasticsearch/index/search/nested/DoubleNestedSortingTests.java
core/src/test/java/org/elasticsearch/index/search/nested/FloatNestedSortingTests.java
core/src/test/java/org/elasticsearch/index/search/nested/NestedSortingTests.java
core/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolateQueryTests.java
test/framework/src/main/java/org/elasticsearch/test/engine/ThrowingLeafReaderWrapper.java
comments:
Upgrade to lucene-7.0.0-snapshot-ad2cb77. (#25349)

Most notable changes:
 - better update concurrency: LUCENE-7868
 - TopDocs.totalHits is now a long: LUCENE-7872
 - QueryBuilder does not remove the boolean query around multi-term synonyms:
   LUCENE-7878
 - removal of Fields: LUCENE-7500

For the `TopDocs.totalHits` change, this PR relies on the fact that the encoding
of vInts and vLongs are compatible: you can write and read with any of them as
long as the value can be represented by a positive int.

time:
2017-06-22T07:55:06Z
class:
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQuery.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorHighlightSubFetchPhase.java
modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolateQueryBuilderTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolateQueryTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorHighlightSubFetchPhaseTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchIT.java
comments:
percolator: Deprecate `document_type` parameter.

The `document_type` parameter is no longer required to be specified,
because by default from 6.0 only a single type is allowed. (`index.mapping.single_type` defaults to `true`)

time:
2017-06-21T21:27:30Z
class:
comments:
[DOCS] Fixed typo.

time:
2017-06-21T20:44:27Z
class:
comments:
[rest-api-spec/indices.refresh] Remove old params

Fixes #25234

time:
2017-06-21T19:41:17Z
class:
plugins/repository-s3/src/main/java/org/elasticsearch/repositories/s3/DefaultS3OutputStream.java
plugins/repository-s3/src/test/java/org/elasticsearch/repositories/s3/MockAmazonS3.java
comments:
Remove redundant and broken MD5 checksum from repository-s3 (#25270)

Remove redundant and not resettable (fails on retries) check-summing. Checksums are calculated and compared by the S3 client already. 

Closes #25269

time:
2017-06-21T17:40:45Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
core/src/main/java/org/elasticsearch/index/shard/LocalShardSnapshot.java
core/src/main/java/org/elasticsearch/index/shard/StoreRecovery.java
core/src/test/java/org/elasticsearch/action/admin/indices/create/ShrinkIndexIT.java
core/src/test/java/org/elasticsearch/index/shard/StoreRecoveryTests.java
comments:
Initialize sequence numbers on a shrunken index

Bringing together shards in a shrunken index means that we need to
address the start of history for the shrunken index. The problem here is
that sequence numbers before the maximum of the maximum sequence numbers
on the source shards can collide in the target shards in the shrunken
index. To address this, we set the maximum sequence number and the local
checkpoint on the target shards to this maximum of the maximum sequence
numbers. This enables correct document-level semantics for documents
indexed before the shrink, and history on the shrunken index will
effectively start from here.

Relates #25321

time:
2017-06-21T17:26:03Z
class:
core/src/test/java/org/elasticsearch/bwcompat/RepositoryUpgradabilityIT.java
core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
Port most snapshot/restore static bwc tests to qa:full-cluster-restart (#25296)

Ports all of RepositoryUpgradabilityIT to qa:full-cluster-restart and ports as much of RestoreBackwardsCompatIT as possible into qa:full-cluster-restart.

time:
2017-06-21T16:21:48Z
class:
core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java
comments:
Javadoc: ThreadPool doesn't reject while shutdown (#23678)

It caught me offguard yesterday that our executors won't always
reject when the ThreadPool is shutdown.

time:
2017-06-21T11:45:46Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: verify `size_to_upgrade_in_bytes` in assertBusy(...)

Relates to #25311

time:
2017-06-21T08:47:19Z
class:
comments:
Docs: Removed duplicated line in mapping docs

time:
2017-06-21T08:42:26Z
class:
comments:
Add backward compatibility indices for 5.4.2

time:
2017-06-21T08:27:57Z
class:
test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java
test/framework/src/main/java/org/elasticsearch/transport/AbstractSimpleTransportTestCase.java
comments:
Update MockTransportService to the age of Transport.Connection (#25320)

MockTransportServices allows us to simulate network disruptions in our testing infra. Sadly it wasn't updated to the state of the art in Transport land. This PR brings it up to speed. Specifically:

1) Opening a connection is now also blocked (before only node connections were blocked)
2) Simplifies things using the latest connection based notification between TcpTransport and TransportService for when a disconnect happens.
3) By 2, it fixes a race condition where we may fail to respond to a sent request when it is sent concurrently with the closing of a connection. The old code relied on a node based bridge between tcp transport and transport service. Sadly, the following doesn't work any more:

```
   if (transport.nodeConnected(node)) {
            // this a connected node, disconnecting from it will be up the exception
            transport.disconnectFromNode(node); <-- this may now be a noop and it doesn't mean that the transport service was notified of the disconnect between the nodeConnected check and here.
   } else {
            throw new ConnectTransportException(node, reason, e);
   }
```

time:
2017-06-21T08:23:32Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
Add version v5.4.2 after release

time:
2017-06-21T07:30:46Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java
core/src/test/java/org/elasticsearch/cluster/metadata/IndexMetaDataTests.java
comments:
IndexMetaData: Add internal format index setting (#25292)

This setting is supposed to ease index upgrades as it allows you
to check for a new setting called `index.internal.version` which
can be used to check before upgrading indices.

time:
2017-06-21T06:14:38Z
class:
core/src/main/java/org/elasticsearch/common/settings/SecureSettings.java
test/framework/src/main/java/org/elasticsearch/common/settings/MockSecureSettings.java
test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Ensure we never read from a closed MockSecureSettings object (#25322)

If secure settings are closed after the node has been constructed
no key-store access is permitted. We should also try to be as close as possible
to the real behavior if we mock secure settings. This change also adds
the same behavior as bootstrap has to InternalTestCluster to ensure we fail
if we try to read from secure settings after the node has been constructed.

time:
2017-06-21T06:13:56Z
class:
core/src/main/java/org/elasticsearch/common/settings/Settings.java
core/src/test/java/org/elasticsearch/common/settings/SettingsTests.java
comments:
Fix settings serialization to not serialize secure settings or not take the total size into account (#25323)

time:
2017-06-20T20:06:58Z
class:
modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java
comments:
Fix reindex test when log level is debug

When log level is debug we'd dereference null because the test
was being cute and cutting corners.

Relates to #25256

time:
2017-06-20T19:12:39Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
core/src/test/java/org/elasticsearch/action/admin/indices/create/ShrinkIndexIT.java
comments:
Initialize primary term for shrunk indices

Today when an index is shrunk, the primary terms for its shards start
from one. Yet, this is a problem as the index will already contain
assigned sequence numbers across primary terms. To ensure document-level
sequence number semantics, the primary terms of the target shards must
start from the maximum of all the shards in the source index. This
commit causes this to be the case.

Relates #25307

time:
2017-06-20T15:25:03Z
class:
comments:
[TEST] Add skip for 5.x BWC tests for custom filter in analyze API

Resolves #25316

time:
2017-06-20T13:44:19Z
class:
test/framework/src/main/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
Use IndexMetaData settings as a basis for new index settings (#25310)

In MockFSDirectory we should use the actual indexes settings to build
a new IndexMetaData settings object instead of the node settings.

Relates to #25297

time:
2017-06-20T13:17:52Z
class:
core/src/test/java/org/elasticsearch/node/NodeTests.java
comments:
Tests: Refactor NodeTests settings (#25309)

This pull request aims to use the method baseSettings already present in the class.

time:
2017-06-20T12:50:33Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
core/src/main/java/org/elasticsearch/index/analysis/AnalysisRegistry.java
core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzerProvider.java
core/src/main/java/org/elasticsearch/index/analysis/SynonymGraphTokenFilterFactory.java
core/src/main/java/org/elasticsearch/index/analysis/SynonymTokenFilterFactory.java
core/src/test/java/org/elasticsearch/index/analysis/synonyms/SynonymsAnalysisTests.java
core/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java
comments:
Parse synonyms with the same analysis chain (#8049)

* [Analysis] Parse synonyms with the same analysis chain

Synonym Token Filter / Synonym Graph Filter tokenize synonyms with whatever tokenizer and token filters appear before it in the chain.

Close #7199

time:
2017-06-19T22:46:42Z
class:
core/src/main/java/org/elasticsearch/index/reindex/WorkingBulkByScrollTask.java
core/src/main/java/org/elasticsearch/tasks/CancellableTask.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/AsyncBulkByScrollActionTests.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/CancelTests.java
test/framework/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollActionTestCase.java
comments:
Tweak reindex cancel logic and add many debug logs (#25256)

I'm still trying to hunt down rare failures in the cancelation tests
for reindex and friends. Here is the latest:
https://elasticsearch-ci.elastic.co/job/elastic+elasticsearch+5.x+multijob-unix-compatibility/os=ubuntu/876/console

It doesn't show much, other than that one of the tasks didn't kill
itself when asked to cancel.

So I'm going a bit crazy with debug logging so that the next time this
comes up I can trace exactly what happened.

Additionally, this tweaks the logic around how rethrottles were
performed around cancel. Previously we set the `requestsPerSecond`
to `0` when we cancelled the task. That was the "old way" to set them
to inifity which was the intent. This switches that from `0` to
`Float.MAX_VALUE` which is the "new way" to set the `requestsPerSecond`
to infinity. I don't know that this is much better, but it feels better.

time:
2017-06-19T22:14:53Z
class:
comments:
[DOCS] Split index-shared.asciidoc into multiple smaller files (#25302)

time:
2017-06-19T20:52:32Z
class:
test/framework/src/main/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
Test: do not copy secure settings when creating random directory service (#25297)

In tests, we sometimes create a random directory service and as part of that the IndexSettings get
built again. When we build them again, we need to make sure we do not set the secure settings on
the new IndexMetaData object that gets created as the node settings already have the secure
settings and the index settings and node settings will be combined. If both have secure settings,
the settings builder will throw an AlreadySetException.
this is wrong IMO I think you should not use `IndexSettings#getSettings` since it contains node settings that should not be mixed here?! I opened #25310

time:
2017-06-19T20:48:43Z
class:
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
comments:
Rename simple pattern tokenizers (#25300)

Changed names to be snake case for consistency

Related to #25159, original issue #23363

time:
2017-06-19T18:43:26Z
class:
core/src/main/java/org/elasticsearch/common/settings/KeyStoreCli.java
comments:
Keystore CLI should use the AddFileKeyStoreCommand for files (#25298)

This commit fixes a typo in the KeyStoreCli class. The add-file command was incorrectly set to use
the AddStringKeyStoreCommand instead of the AddFileKeyStoreCommand.

time:
2017-06-19T18:20:30Z
class:
comments:
Fix artifact location

Fix the location of the rpm and deb used for the packaging upgrade
tests when upgrading from -SNAPSHOT version.

time:
2017-06-19T18:11:54Z
class:
core/src/main/java/org/elasticsearch/action/bulk/MappingUpdatePerformer.java
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/TranslogOpToEngineOpConverter.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryState.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
core/src/test/java/org/elasticsearch/action/bulk/TransportShardBulkActionTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/mapper/DynamicMappingIT.java
core/src/test/java/org/elasticsearch/index/mapper/TextFieldMapperTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetServiceTests.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
comments:
Simplify IndexShard indexing and deletion methods (#25249)

Indexing or deleting documents through the IndexShard interface is quite complex and error-prone. It requires multiple calls, e.g. first prepareIndexOnPrimary, then do some checks if mapping updates have occurred, then do the actual indexing using index(...) etc. Currently each consumer of the interface (local recovery, peer recovery, replication) has additional custom checks built around it to deal with mapping updates, some of which are even inconsistent. This commit aims at reducing the complexity by exposing a simpler interface on IndexShard. There are no more prepare*** methods and the mapping complexity is also hidden, but still giving callers a possibility to implement custom logic to deal with mapping updates.

time:
2017-06-19T15:37:21Z
class:
core/src/main/java/org/elasticsearch/action/support/tasks/BaseTasksResponse.java
core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TestTaskPlugin.java
core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TransportTasksActionTests.java
comments:
Initialise empty lists in BaseTaskResponse constructor (#25290)

* Initialise empty lists in BaseTaskResponse constructor

* Remove little used default constructor which leaves uninitialised members

time:
2017-06-19T14:53:55Z
class:
comments:
[DOCS] replace '+' with `+`

time:
2017-06-19T13:19:17Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java
core/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java
core/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java
comments:
Remove (deprecated) support for '+' in index expressions (#25274)

Relates to #24515

time:
2017-06-19T11:19:09Z
class:
client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java
core/src/main/java/org/elasticsearch/action/DocWriteResponse.java
core/src/main/java/org/elasticsearch/action/get/GetResponse.java
core/src/main/java/org/elasticsearch/action/support/replication/ReplicationResponse.java
core/src/main/java/org/elasticsearch/index/get/GetResult.java
core/src/test/java/org/elasticsearch/action/bulk/BulkItemResponseTests.java
core/src/test/java/org/elasticsearch/action/delete/DeleteResponseTests.java
core/src/test/java/org/elasticsearch/action/get/GetResponseTests.java
core/src/test/java/org/elasticsearch/action/index/IndexResponseTests.java
core/src/test/java/org/elasticsearch/action/update/UpdateResponseTests.java
comments:
[Test] Extend parsing checks for DocWriteResponses (#25257)

This commit changes the parsing logic of DocWriteResponse, ReplicationResponse
and GetResult so that it skips any unknown additional fields (for forward compatibility 
reasons). This affects the IndexResponse, UpdateResponse,DeleteResponse and 
GetResponse objects.

time:
2017-06-19T10:27:24Z
class:
core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
test/framework/src/main/java/org/elasticsearch/test/OldIndexUtils.java
comments:
test: Port the remaining old indices search tests to full cluster restart qa module

Also tweaked the qa module's gradle file to actually run bwc tests against all index compat versions.

Relates to #24939

time:
2017-06-19T08:30:05Z
class:
comments:
[DOCS] delete index no longer supports specifying aliases

time:
2017-06-19T07:19:45Z
class:
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
test/framework/src/main/java/org/elasticsearch/transport/AbstractSimpleTransportTestCase.java
comments:
Simplify connection closing and cleanups in TcpTransport (#25250)

Today we maintain a map of open connections in order to close them when
a low level channel gets closed or handles a failure. We also spawn a thread due to some
tricky concurrency issues especially with respect to netty since they listener might
be called on a transport / boss thread. Executions on those threads must not be blocking
since otherwise we will likely deadlock the event processing which adds to the
complexity of the concurrency model in this class.

This change associates the connection with the close callback that every channel invokes
once it's closed which allows us to remove the connections map. A relaxed non-blocking
concurrency model in the connection close listener allows cleaning up connected nodes without
blocking on any lock.

time:
2017-06-19T04:52:47Z
class:
comments:
Add MSI installation to documentation (#25213)

* Add MSI installation to documentation

Move installation documentation for Windows with the .zip archive into the zip and tar installation documentation, and clearly indicate any differences for installing on macOS/Linux and Windows.

* Separate out installation with .zip on Windows

time:
2017-06-18T20:40:13Z
class:
core/src/test/java/org/elasticsearch/action/support/master/IndexingMasterFailoverIT.java
comments:
enable debug logging for testMasterFailoverDuringIndexingWithMappingChanges

time:
2017-06-18T19:32:43Z
class:
core/src/test/java/org/elasticsearch/action/IndicesRequestIT.java
comments:
Fix failing delete index test

This test is failing because delete /{index} requests no longer support
index matching an alias. This commit removes testing such requests again
aliases.

Closes #25284
thanks for fixing @jasontedor this was a silly mistake of mine :)

time:
2017-06-18T16:56:41Z
class:
core/src/test/java/org/elasticsearch/action/IndicesRequestIT.java
comments:
Add AwaitsFix on IndicesRequestIT due to #25284

time:
2017-06-17T22:08:34Z
class:
test/framework/src/main/java/org/elasticsearch/transport/AbstractSimpleTransportTestCase.java
comments:
[TEST] assertBusy on transport stats since some implementations invoke listeners concurrently

time:
2017-06-17T12:04:23Z
class:
modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpChannel.java
comments:
Replace deprecated API usage in Netty4HttpChannel

time:
2017-06-17T11:06:31Z
class:
core/src/main/java/org/elasticsearch/common/xcontent/XContentParserUtils.java
core/src/main/java/org/elasticsearch/search/aggregations/Aggregations.java
core/src/main/java/org/elasticsearch/search/aggregations/ParsedMultiBucketAggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/ParsedSingleBucketAggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/ParsedFilters.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ParsedBinaryRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ParsedRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/ParsedTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/ParsedPercentiles.java
core/src/main/java/org/elasticsearch/search/suggest/Suggest.java
core/src/test/java/org/elasticsearch/common/xcontent/XContentParserUtilsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractPercentilesTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentilesTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/hdr/InternalHDRPercentilesRanksTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/percentile/InternalPercentilesBucketTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestionTests.java
modules/aggs-matrix-stats/src/test/java/org/elasticsearch/search/aggregations/matrix/stats/InternalMatrixStatsTests.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
test/framework/src/main/java/org/elasticsearch/test/XContentTestUtils.java
test/framework/src/test/java/org/elasticsearch/test/XContentTestUtilsTests.java
comments:
[Tests] Check that parsing aggregations works in a forward compatible way (#25219)

This change adds tests for the aggregation parsing that try to simulate that we
can parse existing aggregations in a forward compatible way in the future,
ignoring potential newly added fields or substructures to the xContent response.

time:
2017-06-17T01:15:35Z
class:
comments:
Fix queries in cross-cluster search docs

This commit fixes two queries in the cross-cluster search docs; they
were missing the query object wrapping the actual query.

Relates #25282

time:
2017-06-16T21:19:14Z
class:
comments:
Remove assemble from build task when assemble removed

Removes the `assemble` task from the `build` task when we have
removed `assemble` from the project. We removed `assemble` from
projects that aren't published so our releases will be faster. But
That broke CI because CI builds with `gradle precommit build` and,
it turns out, that `build` includes `check` and `assemble`. With
this change CI will only run `check` for projects without an
`assemble`.

time:
2017-06-16T20:57:01Z
class:
core/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreIT.java
comments:
Adds AwaitsFix on snapshot test failing due to #25281

time:
2017-06-16T20:34:11Z
class:
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
core/src/main/java/org/elasticsearch/transport/Transport.java
core/src/main/java/org/elasticsearch/transport/TransportService.java
core/src/main/java/org/elasticsearch/transport/TransportServiceAdapter.java
core/src/test/java/org/elasticsearch/client/transport/FailAndRetryMockTransport.java
core/src/test/java/org/elasticsearch/cluster/NodeConnectionsServiceTests.java
core/src/test/java/org/elasticsearch/transport/TCPTransportTests.java
modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4MessageChannelHandler.java
modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java
test/framework/src/main/java/org/elasticsearch/test/transport/CapturingTransport.java
test/framework/src/main/java/org/elasticsearch/test/transport/MockTransportService.java
test/framework/src/main/java/org/elasticsearch/transport/AbstractSimpleTransportTestCase.java
test/framework/src/main/java/org/elasticsearch/transport/MockTcpTransport.java
comments:
Move TransportStats accounting into TcpTransport (#25251)

Today TcpTransport is the de-facto base-class for transport implementations.
The need for all the callbacks we have in TransportServiceAdaptor are not necessary
anymore since we can simply have the logic inside the base class itself. This change
moves the stats metrics directly into TcpTransport removing the need for low level
bytes send / received callbacks.

time:
2017-06-16T15:48:15Z
class:
core/src/main/java/org/elasticsearch/index/analysis/AnalysisRegistry.java
core/src/main/java/org/elasticsearch/index/analysis/CustomNormalizerProvider.java
core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltTokenizers.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
comments:
Move pre-configured "keyword" tokenizer to the analysis-common module (#24863)

Moves the keyword tokenizer to the analysis-common module. The keyword tokenizer is special because it is used by CustomNormalizerProvider so I pulled it out into its own PR. To get the move to work I've reworked the lookup from static to one using the AnalysisRegistry. This seems safe enough.

Part of #23658.

time:
2017-06-16T15:46:34Z
class:
comments:
Remove assemble task when not used for publishing (#25228)

Removes the `assemble` task from projects that are not published.
This should speed up `gradle assemble` by skipping projects that
don't need to be built. Which is useful because `gradle assemble`
is how we cut releases.

time:
2017-06-16T15:46:01Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequest.java
core/src/test/java/org/elasticsearch/action/IndicesRequestIT.java
core/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java
comments:
Delete index API to work only against concrete indices (#25268)

With #23997 we have introduced a new internal index option that allows to resolve index expressions only against concrete indices while ignoring aliases. Such index option was applied to IndicesAliasesRequest, so that the index part of alias actions would only be resolved against concrete indices.

Same is done in this commit with delete index request. Deleting aliases has always been confusing as some users expect it to only remove the alias from the index (which has its own specific API). Even worse, in case of filtered aliases, deleting an alias may leave users with the expectation that only the documents that match the filter are deleted, which was never the case. To address all this confusion, delete index api works now only against concrete indices. WIldcard expressions will be only resolved against concrete index, as if aliases didn't exist. If one tries to delete against an alias, an IndexNotFoundException will be thrown regardless of whether the alias exists or not, as a concrete index with such a name doesn't exist.

Closes #2318

time:
2017-06-16T13:47:44Z
class:
comments:
[DOCS] Clarify expected availability of HDFS for the HDFS Repository (#25220)

If a cluster is configured with an HDFS repository and a node is started, that node must be able 
to reach HDFS, or else when it attempts to add the repository from the cluster state at start up 
it will fail to connect and the repository will be left in an inconsistent state. Adding a blurb in the 
docs to outline the expected availability for HDFS when using the repository plugin.

time:
2017-06-16T11:58:22Z
class:
comments:
Remove some redundant 140 character checkstyle suppressions

time:
2017-06-16T10:49:16Z
class:
comments:
[Docs] more fix for the parent-join docs

time:
2017-06-16T09:53:16Z
class:
comments:
[Docs] Fix cross reference for parent-join field

time:
2017-06-16T09:23:40Z
class:
comments:
More advices around search speed and disk usage. (#25252)

It adds notes about:
 - how preference can help optimize cache usage
 - the fact that too many replicas can hurt search performance due to lower
   utilization of the filesystem cache
 - how index sorting can improve _source compression
 - how always putting fields in the same order in documents can improve _source
   compression

time:
2017-06-16T09:13:23Z
class:
comments:
Add documentation for the new parent-join field (#25227)

* Add documentation for the new parent-join field

This commit adds the docs for the new parent-join field.
It explains how to define, index and query this new field.

Relates #20257

time:
2017-06-16T09:08:39Z
class:
plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuFoldingTokenFilterFactory.java
plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuNormalizerCharFilterFactory.java
plugins/analysis-icu/src/main/java/org/elasticsearch/index/analysis/IcuNormalizerTokenFilterFactory.java
comments:
[analysis-icu] Allow setting unicodeSetFilter (#20814)

UnicodeSetFilter was only allowed in the icu_folding token filter.
It seems useful to expose this setting in icu_normalizer token filter
and char filter.

time:
2017-06-16T07:09:51Z
class:
core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java
core/src/main/java/org/elasticsearch/index/IndexSettings.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/translog/BaseTranslogReader.java
core/src/main/java/org/elasticsearch/index/translog/Translog.java
core/src/main/java/org/elasticsearch/index/translog/TranslogDeletionPolicy.java
core/src/main/java/org/elasticsearch/index/translog/TranslogReader.java
core/src/main/java/org/elasticsearch/index/translog/TranslogWriter.java
core/src/test/java/org/elasticsearch/index/engine/CombinedDeletionPolicyTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/translog/TranslogDeletionPolicyTests.java
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
Introduce translog size and age based retention policies (#25147)

This PR extends the TranslogDeletionPolicy to allow keeping the translog files longer than what is needed for recovery from lucene. Specifically, we allow specifying the total size of the files and their maximum age (i.e., keep up to 512MB but no longer than 12 hours). This will allow making ops based recoveries more common. 

Note that the default size and age still set to 0, maintaining current behavior. This is needed as the other components in the system are not yet ready for a longer translog retention. I will adapt those in follow up PRs.

Relates to #10708

time:
2017-06-16T00:00:33Z
class:
modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/antlr/Walker.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/FactoryTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptTestCase.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/node/NodeToStringTests.java
comments:
Add needs methods for specific variables to Painless script context factories. (#25267)

time:
2017-06-15T23:43:19Z
class:
core/src/main/java/org/elasticsearch/repositories/RepositoryData.java
core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
core/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
comments:
Improves snapshot logging and snapshoth deletion error handling (#25264)

This commit does two things:
  1. Adds logging at the DEBUG level for when the index-N blob is
  updated.
  2. When attempting to delete a snapshot, if the snapshot was not found
  in the repository data, an exception is now thrown instead of silently
  ignoring the lack of presence of the snapshot in the repository data.

time:
2017-06-15T17:18:33Z
class:
core/src/test/java/org/elasticsearch/index/analysis/PathHierarchyTokenizerFactoryTests.java
test/framework/src/main/java/org/elasticsearch/test/ESTokenStreamTestCase.java
comments:
Add unit test for PathHierarchyTokenizerFactory (#24984)

time:
2017-06-15T16:41:05Z
class:
core/src/main/java/org/elasticsearch/tribe/TribeService.java
core/src/test/java/org/elasticsearch/tribe/TribeServiceTests.java
qa/evil-tests/src/test/java/org/elasticsearch/tribe/TribeUnitTests.java
comments:
Deprecate tribe service

This commit deprecates the tribe service so that deprecation log
messages are delivered if a tribe node is configured.

Relates #24598

time:
2017-06-15T16:28:31Z
class:
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java
core/src/test/java/org/elasticsearch/search/query/QueryStringIT.java
core/src/test/java/org/elasticsearch/search/query/SimpleQueryStringIT.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/EdgeNGramTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/FlattenGraphTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/LengthTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/LowerCaseTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/NGramTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/UniqueTokenFilter.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/UniqueTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/UpperCaseTokenFilterFactory.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/FlattenGraphTokenFilterFactoryTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/NGramTokenizerFactoryTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/UniqueTokenFilterTests.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
Moved more token filters to analysis-common module.

The following token filters were moved: `edge_ngram`, `ngram`, `uppercase`, `lowercase`, `length`, `flatten_graph` and `unique`.

Relates to #23658

time:
2017-06-15T16:13:38Z
class:
core/src/test/java/org/apache/lucene/queries/SearchAfterSortedDocQueryTests.java
comments:
[Test] Make sure that SearchAfterSortedDocQueryTests uses a single threaded searcher

time:
2017-06-15T15:54:10Z
class:
comments:
[DOCS] Defined es-test-dir and plugins-examples-dir in index.asciidoc.  (#25232)

Use these attributes when specifying the location of included tests.

time:
2017-06-15T15:29:25Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregatorTests.java
comments:
Test fix - removed superfluous assertion (#25247)

Closes #25245

time:
2017-06-15T13:15:48Z
class:
comments:
[Test] restore BWC for parent-join now that the new mapping format is in 5.x

time:
2017-06-15T12:56:20Z
class:
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentJoinFieldMapper.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/fetch/ParentJoinFieldSubFetchPhaseTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/mapper/ParentJoinFieldMapperTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ChildQuerySearchIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/InnerHitsIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ParentChildTestCase.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ParentIdQueryBuilderTests.java
comments:
Add a section named "relations" in the ParentJoinFieldMapper (#25248)

* Add a section named "relation" in the ParentJoinFieldMapper

This commit puts the parent/child definition in an inner section named "relation".
Mapping for the parent-join will look like this:

```
"join_field": {
  "type": "join"
  "relations":
    "parent": "child"
  }
}
```

time:
2017-06-15T12:48:06Z
class:
core/src/main/java/org/elasticsearch/common/xcontent/support/XContentMapValues.java
core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: Ported more OldIndexBackwardsCompatibilityIT tests to full cluster restart qa tests. (#25173)

Relates to #24939

time:
2017-06-15T12:28:54Z
class:
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SortProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SortProcessorTests.java
comments:
fix: Sort Processor does not have proper behavior with targetField (#25237)

to specify a `targetField`. This results in some interesting behavior that was missed in the review.
This processor sorts in-place, so there is a side-effect in both the original field and the target field.
Another bug was that the targetField was not being set if the list being sorted was fewer than two elements.

The new behavior works like this: If targetField and fieldName are not the same, we copy the list.

time:
2017-06-15T11:51:46Z
class:
core/src/main/java/org/elasticsearch/common/lucene/uid/PerThreadIDVersionAndSeqNoLookup.java
core/src/main/java/org/elasticsearch/common/lucene/uid/VersionsAndSeqNoResolver.java
core/src/test/java/org/elasticsearch/common/lucene/uid/VersionLookupTests.java
comments:
Allow reader wrappers to have different live docs but the same cache key.

Relates to #19856

time:
2017-06-15T11:26:48Z
class:
comments:
Upgrade icu4j for the ICU analysis plugin to 59.1 (#25243)

* Upgrade icu4j for the ICU analysis plugin to 59.1

Lucene upgraded to 59.1 so we should use the same.

Closes #21425

* Add breaking change for the icu upgrade

time:
2017-06-15T11:24:07Z
class:
core/src/test/java/org/elasticsearch/action/bulk/BulkIntegrationIT.java
core/src/test/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationActionTests.java
core/src/test/java/org/elasticsearch/cluster/MinimumMasterNodesIT.java
core/src/test/java/org/elasticsearch/cluster/routing/DelayedAllocationIT.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/MockDiskUsagesIT.java
core/src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java
core/src/test/java/org/elasticsearch/common/util/concurrent/PrioritizedExecutorsTests.java
core/src/test/java/org/elasticsearch/discovery/AbstractDisruptionTestCase.java
core/src/test/java/org/elasticsearch/document/ShardInfoIT.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardIT.java
core/src/test/java/org/elasticsearch/indices/IndexingMemoryControllerTests.java
core/src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceIT.java
core/src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryIT.java
core/src/test/java/org/elasticsearch/indices/recovery/RecoveryTargetTests.java
core/src/test/java/org/elasticsearch/indices/state/RareClusterStateIT.java
core/src/test/java/org/elasticsearch/indices/stats/IndexStatsIT.java
core/src/test/java/org/elasticsearch/indices/store/IndicesStoreIntegrationIT.java
core/src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadIT.java
core/src/test/java/org/elasticsearch/search/child/ParentFieldLoadingIT.java
core/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreIT.java
modules/transport-netty4/src/test/java/org/elasticsearch/transport/netty4/Netty4ScheduledPingTests.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
test/framework/src/main/java/org/elasticsearch/test/InternalTestCluster.java
comments:
move assertBusy to use CheckException (#25246)

We use assertBusy in many places where the underlying code throw exceptions. Currently we need to wrap those exceptions in a RuntimeException which is ugly.

time:
2017-06-15T10:50:02Z
class:
client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java
core/src/main/java/org/elasticsearch/plugins/spi/NamedXContentProvider.java
core/src/main/java/org/elasticsearch/plugins/spi/package-info.java
core/src/test/java/org/elasticsearch/plugins/spi/NamedXContentProviderTests.java
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/spi/MatrixStatsNamedXContentProvider.java
modules/parent-join/src/main/java/org/elasticsearch/join/spi/ParentJoinNamedXContentProvider.java
comments:
Use SPI in High Level Rest Client to load XContent parsers (#25098)

This commit adds a NamedXContentProvider interface that can 
be implemented by plugins or modules using Java's SPI feature 
in order to provide additional NamedXContent parsers to external
applications like the Java High Level Rest Client.

time:
2017-06-15T09:32:26Z
class:
client/rest/src/main/java/org/elasticsearch/client/RestClient.java
client/rest/src/test/java/org/elasticsearch/client/RestClientTests.java
comments:
[TEST] test that low level REST client leaves path untouched (#25193)

Relates to #24987

time:
2017-06-15T08:17:42Z
class:
core/src/main/java/org/elasticsearch/common/lucene/uid/PerThreadIDVersionAndSeqNoLookup.java
core/src/main/java/org/elasticsearch/common/lucene/uid/VersionsAndSeqNoResolver.java
core/src/test/java/org/elasticsearch/common/lucene/uid/VersionLookupTests.java
comments:
Speed up PK lookups at index time. (#19856)

At index time Elasticsearch needs to look up the version associated with the
`_id` of the document that is being indexed, which is often the bottleneck for
indexing.

While reviewing the output of the `jfr` telemetry from a Rally benchmark, I saw
that significant time was spent in `ConcurrentHashMap#get` and `ThreadLocal#get`.
The reason is that we cache lookup objects per thread and segment, and for every
indexed document, we first need to look up the cache associated with this
segment (`ConcurrentHashMap#get`) and then get a state that is local to the
current thread (`ThreadLocal#get`). So if you are indexing N documents per
second and have S segments, both these methods will be called N*S times per
second.

This commit changes version lookup to use a cache per index reader rather than
per segment. While this makes cache entries live for less long, we now only need
to do one call to `ConcurrentHashMap#get` and `ThreadLocal#get` per indexed
document.

time:
2017-06-15T08:16:32Z
class:
comments:
[Docs] Fix documentation for percentiles bucket aggregation (#25229)

time:
2017-06-15T07:52:07Z
class:
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/UnifiedHighlighter.java
core/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java
core/src/test/java/org/elasticsearch/search/basic/TransportTwoNodesSearchIT.java
core/src/test/java/org/elasticsearch/search/functionscore/DecayFunctionScoreIT.java
core/src/test/java/org/elasticsearch/search/functionscore/QueryRescorerIT.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
test/framework/src/test/java/org/elasticsearch/test/test/ESTestCaseTests.java
comments:
Upgrade to lucene-7.0.0-snapshot-92b1783. (#25222)

This snapshot has faster range queries on range fields (LUCENE-7828), more
accurate norms (LUCENE-7730) and the ability to use fake term frequencies
(LUCENE-7854).

time:
2017-06-15T05:01:49Z
class:
comments:
Build: Add master flag for disabling bwc tests (#25230)

This commit adds a gradle project, set inside the root build.gradle,
which controls all our bwc tests. This allows for seamless (ie no errant
CI failures) backporting of behavior.

time:
2017-06-15T05:01:19Z
class:
core/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
core/src/main/java/org/elasticsearch/script/ScriptContext.java
core/src/main/java/org/elasticsearch/script/SearchScript.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
core/src/test/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunctionTests.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionSearchScript.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/ExpressionTests.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Scripting: Rename SearchScript.needsScores to needs_score (#25235)

This commit renames the needsScores method so as to make it
automatically generatable, based on the name of the `_score` variable
which is available in search scripts. It also adds documentation to
ScriptContext to explain the naming and signature of such methods.

time:
2017-06-14T23:44:41Z
class:
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/FactoryTests.java
comments:
Support script context stateful factory in Painless. (#25233)

time:
2017-06-14T22:33:01Z
class:
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/FastVectorHighlighter.java
comments:
FastVectorHighlighter should not cache the field query globally (#25197)

This commit removes the global caching of the field query and replaces it with
a caching per field. Each field can use a different `highlight_query` and the rewriting of
some queries (prefix, automaton, ...) depends on the targeted field so the query used for highlighting
must be unique per field.
There might be a small performance penalty when highlighting multiple fields since the query needs to be rewritten
once per highlighted field with this change.

Fixes #25171

time:
2017-06-14T21:42:29Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
comments:
Remove QUERY_AND_FETCH BWC for pre-5.3.0 nodes (#25223)

* Remove QUERY_AND_FETCH BWC for pre-5.3.0 nodes

This was a BWC layer where we expicitly set the `search_type` to
"query_and_fetch" when a single node is queried on pre-5.3 nodes. Since 6.0 no
longer needs to be compatible with 5.3 nodes, this can be removed.

* Fix indentation

* Remove unused QUERY_FETCH_ACTION_NAME constant

time:
2017-06-14T18:31:01Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/sum/InternalSum.java
comments:
Add more missing AggregationBuilder getters (#25198)

* Add more missing AggregationBuilder getters

- getMetadata for all aggs
- various getters on TermsAggBuilder (without "get" prefix to maintain convention)
- Also makes InternalSum's ctor public, to follow suit of other metrics (min/max/avg/etc)

time:
2017-06-14T17:03:59Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java
comments:
Extract the snapshot/restore full cluster restart tests from the translog full cluster restart tests (#25204)

Extract the snapshot/restore full cluster restart tests from the translog full cluster restart tests. That way they are easier to read.

time:
2017-06-14T15:27:58Z
class:
core/src/main/java/org/elasticsearch/action/bulk/BulkItemResultHolder.java
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java
core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java
core/src/test/java/org/elasticsearch/action/bulk/TransportShardBulkActionTests.java
comments:
Refactor TransportShardBulkAction.executeUpdateRequest and add tests

This splits `executeUpdateRequest` into separate parts and adds some unit tests
for the behavior in it. The actual behavior has not been changed.

time:
2017-06-14T14:31:16Z
class:
core/src/main/java/org/elasticsearch/search/profile/query/ProfileWeight.java
core/src/test/java/org/elasticsearch/search/profile/query/QueryProfilerTests.java
comments:
Make sure range queries are correctly profiled. (#25108)

We introduced a new API for ranges in order to be able to decide whether points
or doc values would be more appropriate to execute a query, but since
`ProfileWeight` does not implement this API, the optimization is disabled when
profiling is enabled.

time:
2017-06-14T14:21:56Z
class:
qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/UpgradeClusterClientYamlTestSuiteIT.java
test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java
comments:
Test: allow setting socket timeout for rest client (#25221)

In #25201, a setting was added to allow setting the retry timeout for the rest client under the
impression that this would allow requests to go longer than 30s. However, there is also a socket
timeout that needs to be set to greater than 30s, which this change adds a setting for.

time:
2017-06-14T12:06:53Z
class:
comments:
Migration docs for #25080 (#25218)

time:
2017-06-14T11:52:48Z
class:
plugins/discovery-azure-classic/src/main/java/org/elasticsearch/plugin/discovery/azure/classic/AzureDiscoveryPlugin.java
plugins/discovery-azure-classic/src/test/java/org/elasticsearch/cloud/azure/classic/AbstractAzureComputeServiceTestCase.java
plugins/discovery-azure-classic/src/test/java/org/elasticsearch/discovery/azure/classic/AzureDiscoveryClusterFormationTests.java
plugins/discovery-ec2/src/main/java/org/elasticsearch/discovery/ec2/Ec2DiscoveryPlugin.java
plugins/discovery-gce/src/main/java/org/elasticsearch/plugin/discovery/gce/GceDiscoveryPlugin.java
plugins/discovery-gce/src/test/java/org/elasticsearch/discovery/gce/GceDiscoverTests.java
comments:
Remove `discovery.type` BWC layer from the EC2/Azure/GCE plugins #25080

Those plugins don't replace the discovery logic but rather only provide a custom unicast host provider for their respective platforms. in 5.1 we introduced the  `discovery.zen.hosts_provider` setting to better reflect it. This PR removes BWC code in those plugins as it is not needed anymore

Fixes #24543

time:
2017-06-14T08:23:41Z
class:
comments:
When stopping via systemd only kill the JVM, not its control group (#25195)

This prevents possible race conditions between the Elasticsearch JVM and
plugin native controller processes that can cause the Elasticsearch shutdown
to hang.  The problem can happen when the JVM and the controller process
receive a SIGTERM at almost the same time.

(There's an assumption here that Elasticsearch will continue to use other
mechanisms to kill native controller processes.)

time:
2017-06-14T06:59:10Z
class:
core/src/main/java/org/apache/lucene/analysis/PrefixAnalyzer.java
comments:
Remove PrefixAnalyzer, because it is no longer used.

time:
2017-06-14T04:09:45Z
class:
core/src/main/java/org/elasticsearch/common/Strings.java
core/src/main/java/org/elasticsearch/env/Environment.java
core/src/main/java/org/elasticsearch/node/InternalSettingsPreparer.java
comments:
Internal: Remove Strings.cleanPath (#25209)

This commit removes the cleanPath method, in favor of using java's
Path.normalize().

time:
2017-06-14T04:04:16Z
class:
comments:
Docs: Add note about which secure settings are valid (#25212)

This commit adds a note to the docs to clarify that only some settings
can be used with the keystore.

time:
2017-06-13T21:37:15Z
class:
comments:
Indices.rollover/10_basic should refresh to make the doc visible in lucene stats

time:
2017-06-13T21:20:01Z
class:
plugins/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/GeoIpProcessor.java
comments:
Port support for commercial GeoIP2 databases from Logstash. (#24889)

* Port support for commercial GeoIP2 databases from Logstash.

* Match GeoIP databases according to the database name suffix.

* Rename CITY/COUNTRY_DB_TYPE, since they are suffixes now.

time:
2017-06-13T21:03:42Z
class:
comments:
[DOCS] Add ML node to node.asciidoc (#24495)

* [DOCS] Add ML node to node.asciidoc

* [DOCS] Clarify ML node in node.asciidoc

* [DOCS] Add X-Pack icon for admonition blocks

* [DOCS] Formatting X-Pack blocks in node.asciidoc

* [DOCS] Add xpack icon images to node.asciidoc

* [DOCS] Add final xpack role attributes

* [DOCS] Remove unnecssary xpackicon image

* [DOCS] Add link to X-Pack node settings

* [DOCS] Fix path to X-Pack repository

* [DOCS] Add links to X-Pack node settings

* [DOCS] Fixed text for links to X-Pack node settings

* [DOCS] Change standalone node to dedicated node

time:
2017-06-13T19:46:59Z
class:
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SimplePatternSplitTokenizerFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SimplePatternTokenizerFactory.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
expose simple pattern tokenizers (#25159)

Expose the experimental simplepattern and 
simplepatternsplit tokenizers in the common 
analysis plugin. They provide tokenization based 
on regular expressions, using Lucene's 
deterministic regex implementation that is usually 
faster than Java's and has protections against 
creating too-deep stacks during matching.

Both have a not-very-useful default pattern of the 
empty string because all tokenizer factories must 
be able to be instantiated at index creation time. 
They should always be configured by the user 
in practice.

time:
2017-06-13T18:19:17Z
class:
qa/rolling-upgrade/src/test/java/org/elasticsearch/upgrades/UpgradeClusterClientYamlTestSuiteIT.java
test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java
comments:
Test: add setting to change request timeout for rest client (#25201)

This commit adds a setting to change the request timeout for the rest client. This is useful as the
default timeout is 30s, which is also the same default for calls like cluster health. If both are
the same then the response from the cluster health api will not be received as the client usually
times out first making test failures harder to debug.

Relates #25185

time:
2017-06-13T17:26:48Z
class:
comments:
Fix secure repository-hdfs tests on JDK 9

The secure repository-hdfs tests fail on JDK 9 because some Hadoop code
reaches into sun.security.krb5. This commit adds the necessary flags to
open the java.security.jgss module. Note that these flags are actually
needed at runtime as well when using secure repository-hdfs. For now we
will punt on how best to help users obtain this when running on JDK 9
with this plugin.

Relates #25205

time:
2017-06-13T16:40:44Z
class:
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/AbstractStringProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GsubProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/JoinProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/LowercaseProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SortProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SplitProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/TrimProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/UppercaseProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/AbstractStringProcessorFactoryTestCase.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/AbstractStringProcessorTestCase.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/GsubProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/GsubProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/JoinProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/JoinProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/LowercaseProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/LowercaseProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SortProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SortProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SplitProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SplitProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/TrimProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/TrimProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/UppercaseProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/UppercaseProcessorTests.java
comments:
Add target_field parameter to gsub, join, lowercase, sort, split, trim, uppercase (#24133)

Closes #23682 #23228

time:
2017-06-13T15:22:49Z
class:
core/src/main/java/org/elasticsearch/action/search/ClearScrollController.java
core/src/main/java/org/elasticsearch/action/search/ScrollIdForNode.java
core/src/main/java/org/elasticsearch/action/search/SearchScrollAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryAndFetchAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
core/src/main/java/org/elasticsearch/action/search/TransportSearchHelper.java
core/src/test/java/org/elasticsearch/action/search/SearchScrollAsyncActionTests.java
core/src/test/java/org/elasticsearch/action/search/TransportSearchHelperTests.java
comments:
Add Cross Cluster Search support for scroll searches (#25094)

To complete the cross cluster search capabilities for all search types and
function this change adds cross cluster search support for scroll searches.

time:
2017-06-13T12:46:15Z
class:
comments:
Adapt skip version in rest-api-spec/test/indices.rollover/20_max_doc_condition.yml

The relevant change was backported.

time:
2017-06-13T12:30:46Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverAction.java
core/src/test/java/org/elasticsearch/action/admin/indices/rollover/TransportRolloverActionTests.java
comments:
Rollover max docs should only count primaries (#24977)

max_doc condition for index rollover should use document count only from primary shards 

Fixes #24217

time:
2017-06-13T12:23:56Z
class:
core/src/main/java/org/elasticsearch/transport/RemoteClusterConnection.java
core/src/main/java/org/elasticsearch/transport/RemoteClusterService.java
core/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java
core/src/test/java/org/elasticsearch/transport/RemoteClusterServiceTests.java
comments:
Add remote cluster infrastructure to fetch discovery nodes. (#25123)

In order to add scroll support for cross cluster search we need
to resolve the nodes encoded in the scroll ID to send requests to the
corresponding nodes. This change adds the low level connection infrastructure
that also ensures that connections are re-established if the cluster is
disconnected due to a network failure or restarts.

Relates to #25094

time:
2017-06-13T07:37:05Z
class:
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
core/src/test/java/org/elasticsearch/transport/TCPTransportTests.java
modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java
test/framework/src/main/java/org/elasticsearch/transport/AbstractSimpleTransportTestCase.java
test/framework/src/main/java/org/elasticsearch/transport/MockTcpTransport.java
comments:
Ensure pending transport handlers are invoked for all channel failures (#25150)

Today if a channel gets closed due to a disconnect we notify the response
handler that the connection is closed and the node is disconnected. Unfortunately
this is not a complete solution since it only works for published connections.
Connections that are unpublished ie. for discovery can indefinitely hang since we
never invoke their handers when we get a failure while a user is waiting for
the response. This change adds connection tracking to TcpTransport that ensures
we are notifying the corresponding connection if there is a failure on a channel.

time:
2017-06-13T01:38:58Z
class:
comments:
Use synchronized Wildfly shutdown

We need to use the variant of shutdown that blocks until the connection
to Wildfly is closed or we can get spurious build failures.

time:
2017-06-13T00:03:18Z
class:
comments:
Supported Azure Storage account types (#25167)

* Supported Azure Storage account types

Add important note for Azure Storage account types

Relates #20844

time:
2017-06-12T23:54:44Z
class:
comments:
Add half_float and scaled float (#22988)

to numeric datatypes
(cherry picked from commit 67ea06145a80d5ec52ba55d1f2e1e8287e1882b1)

time:
2017-06-12T20:43:06Z
class:
comments:
[DOC] Add X-Pack links to Elasticsearch Reference (#25164)

* [DOC] Add X-Pack links to Elasticsearch Reference

* [DOCS] Address alignment of attributes in Versions.asciidoc

time:
2017-06-12T19:33:56Z
class:
comments:
[docs] include two cluster doc pages missing from index (#25180)

* [docs] include two cluster doc pages missing from index

* [rest-api-spec] update link to remote-info docs

time:
2017-06-12T18:55:50Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/AggregatorBase.java
comments:
Tweak AggregatorBase.addRequestCircuitBreakerBytes

This modifies a method Mark added to the AggregatorBase that allows aggregations
to add additional memory tracking for datastructures used during execution. If
an aggregation would like to reclaim circuit breaker reserved bytes by adding a
negative number, `addWithoutBreaking` should be used instead of
`addEstimateBytesAndMaybeBreak`.

Resolves #24511

time:
2017-06-12T16:55:19Z
class:
core/src/main/java/org/elasticsearch/bootstrap/Security.java
qa/evil-tests/src/test/java/org/elasticsearch/bootstrap/EvilSecurityTests.java
comments:
Explicitly reject duplicate data paths

Duplicate data paths already fail to work because we would attempt to
take out a node lock on the directory a second time which will fail
after the first lock attempt succeeds. However, how this failure
manifests is not apparent at all and is quite difficult to
debug. Instead, we should explicitly reject duplicate data paths to make
the failure cause more obvious.

Relates #25178

time:
2017-06-12T15:42:45Z
class:
core/src/main/java/org/elasticsearch/env/NodeEnvironment.java
comments:
Do not swallow node lock failed exception

When attempting to obtain the node lock, if an exception is thrown it is
not logged. This makes debugging difficult. This commit causes such an
exception to be logged.

Relates #25176

time:
2017-06-12T13:41:35Z
class:
comments:
Revert "Revert "Sense for VirtualBox and $HOME when deciding to turn on vagrant testing. (#24636)""

This reverts commit b9e2a1f9890e12948c7e6a2fb57c30ca2b1fa76a.

time:
2017-06-12T13:02:54Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregator.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregatorTests.java
comments:
Aggregations bug: Significant_text fails on arrays of text. (#25030)

* Aggregations bug: Significant_text fails on arrays of text.
The set of previously-seen tokens in a doc was allocated per-JSON-field string value rather than once per JSON document meaning the number of docs containing a term could be over-counted leading to exceptions from the checks in significance heuristics. Added unit test for this scenario

Closes #25029

time:
2017-06-12T07:33:30Z
class:
core/src/main/java/org/apache/lucene/queries/MinDocQuery.java
core/src/main/java/org/apache/lucene/queries/SearchAfterSortedDocQuery.java
core/src/main/java/org/elasticsearch/search/query/QueryPhase.java
core/src/test/java/org/apache/lucene/queries/SearchAfterSortedDocQueryTests.java
core/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java
comments:
Speed up sorted scroll when the index sort matches the search sort (#25138)

Sorted scroll search can use early termination when the index sort matches the scroll search sort.
The optimization can be done after the first query (which still needs to collect all documents)
by applying a query that only matches documents that are greater than the last doc retrieved in the previous request.
Since the index is sorted, retrieving the list of documents that are greater than the last doc
only requires a binary search on each segment.
This change introduces this new query called `SortedSearchAfterDocQuery` and apply it when possible.
Scrolls with this optimization will search all documents on the first request and then will early terminate each segment
after $size doc for any subsequent requests.

Relates #6720

time:
2017-06-12T06:32:55Z
class:
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
TranslogTests.testWithRandomException ignored a possible simulated OOM when trimming files

time:
2017-06-11T21:17:10Z
class:
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
Adapt TranslogTests.testWithRandomException to checkpoint syncing on trim

#25005 changed the translog dynamic to fsync the checkpoint before trimming a file. This changed the dynamics of potential failure modes which requires a change to testWithRandomException - it's now possible that we had an exception but the translog was trimmed.

Closes #25133

time:
2017-06-11T20:59:12Z
class:
comments:
Change BWC versions on get mapping 404s

This commit changes the BWC versions on the get mapping 404s now that
this API returning 404s when a type is missing is supported since 5.5.0.

Relates #23192

time:
2017-06-11T18:58:56Z
class:
core/src/main/java/org/elasticsearch/action/ActionModule.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestTypesExistsAction.java
modules/transport-netty4/src/test/java/org/elasticsearch/rest/Netty4HeadBodyIsEmptyIT.java
comments:
Fix get mappings HEAD requests

Get mappings HEAD requests incorrectly return a content-length header of
0. This commit addresses this by removing the special handling for get
mappings HEAD requests, and just relying on the general mechanism that
exists for handling HEAD requests in the REST layer.

Relates #23192

time:
2017-06-11T17:09:01Z
class:
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
TranslogTests#commit didn't allow for a concurrent closing of a view

The view closing will trim unneeded files but there is a small window where they may still be around.

time:
2017-06-11T03:44:18Z
class:
core/src/main/java/org/elasticsearch/rest/BytesRestResponse.java
modules/transport-netty4/src/test/java/org/elasticsearch/rest/Netty4HeadBodyIsEmptyIT.java
comments:
Fix handling of exceptions thrown on HEAD requests

Today when an exception is thrown handling a HEAD request, the body is
swallowed before the channel has a chance to see it. Yet, the channel is
where we compute the content length that would be returned as a header
in the response. This is a violation of the HTTP specification. This
commit addresses the issue. To address this issue, we remove the special
handling in bytes rest response for HEAD requests when an exception is
thrown. Instead, we let the upstream channel handle the special case, as
we already do today for the non-exceptional case.

Relates #25172

time:
2017-06-10T17:25:44Z
class:
qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerTests.java
comments:
Fix comment formatting in EvilLoggerTests

The comments here were formatted inconsistently so this commit fixes
them.

time:
2017-06-10T17:20:45Z
class:
core/src/main/java/org/elasticsearch/common/logging/PrefixLogger.java
qa/evil-tests/src/test/java/org/elasticsearch/common/logging/EvilLoggerTests.java
comments:
Remove unneeded weak reference from prefix logger

We have a custom logger implementation known as a prefix logger that is
used to write every message by the logger with a given prefix. This is
useful for node-level, index-level, and shard-level messages where we
want to log the node name, index name, and shard ID, respectively, if
possible. The mechanism that we employ is that of a marker. Log4j has a
built-in facility for managing these markers, but its effectively a
memory leak because these markers are held in a map and can never be
released. This is problematic for us since indices and shards do not
necessarily have infinite life spans and so on a node where there are
many indices being creted and destroyed, this infinite lifespan can be a
problem indeed. To solve this, we use our own cache of markers. This is
necessary to prevent too many instances of the marker for the same
prefix from being created (just think of all the shard-level components
that exist in the system), and to workaround the effective leak in
Log4j. These markers are stored as weak references in a weak hash
map. It is these weak references that are unneeded. When a key is
removed from a weak hash map, the corresponding entry is placed on a
reference queue that is eventually cleared. This commit simplifies
prefix logger by removing this unnecessary weak reference wrapper.

Relates #22460

time:
2017-06-10T09:55:41Z
class:
comments:
Test: remove faling test that relies on merge order

time:
2017-06-10T02:06:51Z
class:
comments:
Log checkout so SHA is known

This commit changes the task type of the checkoutBwcBranch task to Exec
from LoggedExec so that the output of the checkout command is
shown. This enables us to see the SHA used for the checkout which can be
useful when debugging a BWC break.

Relates #25166

time:
2017-06-09T21:50:51Z
class:
comments:
Add link to community Rust Client (#22897)

fix Flummi link

time:
2017-06-09T18:52:42Z
class:
core/src/main/java/org/elasticsearch/cluster/action/shard/ShardStateAction.java
comments:
"shard started" should show index and shard ID (#25157)

When the cluster state is updated with Shard Started entries, it simply adds "shard-started" as the source of the change.

This adds the index name and shard ID so that we can see who/what is spamming the changes when the index creation step has already left the cluster state.

time:
2017-06-09T18:31:39Z
class:
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
await fix testWithRandomException

time:
2017-06-09T17:52:08Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexResponse.java
comments:
Change BWC versions on create index response

This commit changes the BWC versions on the create index response now
that the index name in the response is supported since 5.6.0.

Relates #25139

time:
2017-06-09T17:47:47Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexResponse.java
core/src/main/java/org/elasticsearch/action/admin/indices/create/TransportCreateIndexAction.java
core/src/main/java/org/elasticsearch/action/admin/indices/shrink/ShrinkResponse.java
core/src/main/java/org/elasticsearch/action/admin/indices/shrink/TransportShrinkAction.java
core/src/test/java/org/elasticsearch/action/admin/indices/create/CreateIndexIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/create/CreateIndexResponseTests.java
core/src/test/java/org/elasticsearch/action/bulk/TransportBulkActionIndicesThatCannotBeCreatedTests.java
comments:
Return the index name on a create index response

This commit modifies the create index response so that it includes the
index name.

Relates #25139

time:
2017-06-09T15:47:06Z
class:
comments:
Remove incorrect bwc branch logic from master

Commit bf007e8d936d82ed2d28c70da1a7366cfa862342 was a forward port of logic needed in 5.x to get
the correct bwc branch. However, other changes on master meant that this forward port was not
needed and actually broke the bwc tests. This change removes the incorrect if statement.

Relates #25134

time:
2017-06-09T15:45:07Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/sampler/SamplerAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
comments:
Correctly format arrays in output

There are a few places where arrays are output in messages yet the
output would merely use the default toString implementation rather than
actually putting the content of the array in the message. This commit
fixes the issue.

Relates #24340

time:
2017-06-09T15:33:44Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchResponse.java
core/src/test/java/org/elasticsearch/action/search/SearchResponseTests.java
comments:
[Test] Extending parsing checks for SearchResponse (#25148)

This change extends the tests and parsing of SearchResponse to make sure we can
skip additional fields the parser doesn't know for forward compatibility
reasons.

time:
2017-06-09T15:29:25Z
class:
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/GetStoredScriptResponse.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestGetStoredScriptAction.java
core/src/main/java/org/elasticsearch/script/Script.java
core/src/main/java/org/elasticsearch/script/ScriptMetaData.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/ScriptType.java
core/src/main/java/org/elasticsearch/script/StoredScriptSource.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/index/query/ScriptQueryBuilderTests.java
core/src/test/java/org/elasticsearch/script/ScriptMetaDataTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/script/StoredScriptTests.java
core/src/test/java/org/elasticsearch/script/StoredScriptsIT.java
core/src/test/java/org/elasticsearch/search/sort/ScriptSortBuilderTests.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorFactoryTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestGetSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestSearchTemplateAction.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MultiSearchTemplateRequestTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheScriptEngineTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/SearchTemplateIT.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/SearchTemplateRequestTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java
comments:
Scripting: Change keys for inline/stored scripts to source/id (#25127)

This commit adds back "id" as the key within a script to specify a
stored script (which with file scripts now gone is no longer ambiguous).
It also adds "source" as a replacement for "code". This is in an attempt
to normalize how scripts are specified across both put stored scripts and script usages, including search template requests. This also deprecates the old inline/stored keys.

time:
2017-06-09T15:03:57Z
class:
client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java
client/rest-high-level/src/test/java/org/elasticsearch/client/CustomRestHighLevelClientTests.java
comments:
[Test] Add test for custom requests in High Level Rest Client (#25106)

This commit adds a test that tests and demonstrates how
{@link RestHighLevelClient} can be extended to support
custom endpoint.

time:
2017-06-09T12:57:11Z
class:
core/src/main/java/org/elasticsearch/index/mapper/DocumentParser.java
core/src/main/java/org/elasticsearch/index/mapper/IdFieldMapper.java
core/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java
core/src/test/java/org/elasticsearch/search/nested/SimpleNestedIT.java
comments:
nested: In case of a single type the _id field should be added to the nested document instead of _uid field.

When `index.mapping.single_type` is `true` the `_uid` field is not used and instead `_id` field is used.
Prior to this change nested documents would in this case still use the `_uid` field to mark to what root
document they belong to. In case of deleting documents this could lead to only the root  Lucene document
to be deleted and not the nested Lucene documents. This broke the docid block ordering the block join
relies on in order to work correctly and thus causing the `nested` query, `nested` aggregation, nested sorting
and nested inner hits to either fail or yield incorrect results.

This bug only manifests in 6.0.0-ALPHA2 release and snaphots (5.5.0-SNAPSHOT, 5.6.0-SNAPSHOT, 6.0.0-SNAPSHOT).

time:
2017-06-09T12:56:23Z
class:
core/src/main/java/org/elasticsearch/index/engine/Engine.java
core/src/main/java/org/elasticsearch/index/translog/Translog.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
`type` and `id` are lost upon serialization of `Translog.Delete`. (#24586)

This was introduced in #24460: the constructor of `Translog.Delete` that takes
a `StreamInput` does not set the type and id. To make it a bit more robust, I
made fields final so that forgetting to set them would make the compiler
complain.

time:
2017-06-09T12:42:08Z
class:
comments:
fix highlighting docs

time:
2017-06-09T12:13:05Z
class:
core/src/main/java/org/elasticsearch/index/mapper/TokenCountFieldMapper.java
core/src/test/java/org/elasticsearch/index/mapper/TokenCountFieldMapperTests.java
comments:
Fix NPE in token_count datatype with null value (#25046)

Fixes an issue with the handling of null values for the token_count data type.

Closes #24928

time:
2017-06-09T12:09:57Z
class:
core/src/main/java/org/apache/lucene/search/postingshighlight/CustomPassageFormatter.java
core/src/main/java/org/apache/lucene/search/postingshighlight/CustomPostingsHighlighter.java
core/src/main/java/org/apache/lucene/search/uhighlight/CustomPassageFormatter.java
core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java
core/src/main/java/org/apache/lucene/search/uhighlight/Snippet.java
core/src/main/java/org/elasticsearch/search/SearchModule.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/AbstractHighlighterBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/FastVectorHighlighter.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightPhase.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/HighlightUtils.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/PlainHighlighter.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/PostingsHighlighter.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/UnifiedHighlighter.java
core/src/test/java/org/apache/lucene/search/postingshighlight/CustomPassageFormatterTests.java
core/src/test/java/org/apache/lucene/search/postingshighlight/CustomPostingsHighlighterTests.java
core/src/test/java/org/apache/lucene/search/postingshighlight/CustomSeparatorBreakIteratorTests.java
core/src/test/java/org/apache/lucene/search/uhighlight/CustomPassageFormatterTests.java
core/src/test/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighterTests.java
core/src/test/java/org/elasticsearch/search/SearchModuleTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/TopHitsIT.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/HighlighterWithAnalyzersTests.java
comments:
Remove the postings highlighter and make unified the default highlighter choice (#25028)

This change removes the `postings` highlighter. This highlighter has been removed from Lucene master (7.x) because it behaves
exactly like the `unified` highlighter when index_options is set to `offsets`:
https://issues.apache.org/jira/browse/LUCENE-7815

It also makes the `unified` highlighter the default choice for highlighting a field (if `type` is not provided).
The strategy used internally by this highlighter remain the same as before, it checks `term_vectors` first, then `postings` and ultimately it re-analyzes the text.
Ultimately it rewrites the docs so that the options that the `unified` highlighter cannot handle are clearly marked as such.
There are few features that the `unified` highlighter is not able to handle which is why the other highlighters (`plain` and `fvh`) are still available.
I'll open separate issues for these features and we'll deprecate the `fvh` and `plain` highlighters when full support for these features have been added to the `unified`.

time:
2017-06-09T10:46:09Z
class:
core/src/main/java/org/elasticsearch/action/search/ShardSearchFailure.java
core/src/test/java/org/elasticsearch/action/search/ShardSearchFailureTests.java
comments:
[Test] Adding test for parsing SearchShardFailure leniently (#25144)

This change extends the tests and parsing of SearchShardFailure to make sure we
can skip fields the parser doesn't know for forward compatibility reasons.

time:
2017-06-09T10:45:43Z
class:
comments:
Fix typo in shards.asciidoc (#25143)

time:
2017-06-09T10:05:53Z
class:
comments:
List Hibernate Search (#25145)

among the community framework integrations

time:
2017-06-09T09:20:50Z
class:
comments:
[DOCS] update maxRetryTimeout in java REST client usage page

time:
2017-06-09T08:11:08Z
class:
core/src/test/java/org/elasticsearch/search/suggest/CompletionSuggestionOptionTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestionEntryTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestionOptionTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestionTests.java
core/src/test/java/org/elasticsearch/search/suggest/TermSuggestionOptionTests.java
comments:
[Test] Extending checks for Suggestion parsing (#25132)

When parsing responses we should be ignoring any new unknown fields or inner
objects in most cases to be forward compatible with changes in core on the
client side. This change adds test for this for Suggestions and its various
subclasses to check if we are able to ignore new fields and objects in the
xContent.

time:
2017-06-09T07:50:43Z
class:
comments:
Made the same length of opening and closing lines (#23583)

time:
2017-06-09T07:44:57Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/SearchIT.java
comments:
[Test] Remove redundant assertions in SearchIT

The SearchResponse's took time is already checked by the assertSearchHeader()
method so it does not need to be checked twice.

time:
2017-06-09T07:22:48Z
class:
comments:
update docs that claim that classic is the default similarity

time:
2017-06-09T02:09:51Z
class:
comments:
[DOCS] Removing duplicate attribute definition.

time:
2017-06-09T01:41:27Z
class:
comments:
[DOCS] Everything should match now in the doc-tests attribute.

time:
2017-06-09T01:30:17Z
class:
comments:
[DOCS] Added the actual file name to the doctests attribute.

time:
2017-06-09T01:13:51Z
class:
comments:
[DOCS] Fixed doctests attribute name to match.

time:
2017-06-09T00:54:26Z
class:
comments:
[DOCS] Added missing  attribute to specify the location of the included tests.

time:
2017-06-08T23:47:13Z
class:
comments:
[DOCS] Fixed callout reference error.

time:
2017-06-08T22:24:35Z
class:
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/GrokProcessorGetAction.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/GrokProcessorGetActionTests.java
comments:
Add Ingest-Processor specific Rest Endpoints & Add Grok endpoint (#25059)

This PR enables Ingest plugins to leverage processor-scoped REST
endpoints. First of which being the Grok endpoint that retrieves
Grok Patterns for users to retrieve all the built-in patterns.
Example usage: Kibana Grok Autocomplete!

time:
2017-06-08T22:24:03Z
class:
core/src/main/java/org/elasticsearch/ingest/ConfigurationUtils.java
core/src/main/java/org/elasticsearch/ingest/IngestDocument.java
core/src/main/java/org/elasticsearch/ingest/IngestService.java
core/src/main/java/org/elasticsearch/ingest/InternalTemplateService.java
core/src/main/java/org/elasticsearch/ingest/Processor.java
core/src/main/java/org/elasticsearch/ingest/TemplateService.java
core/src/main/java/org/elasticsearch/ingest/ValueSource.java
core/src/test/java/org/elasticsearch/ingest/ValueSourceTests.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/AppendProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/FailProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/IngestCommonPlugin.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RemoveProcessor.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/SetProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/AppendProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/AppendProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/FailProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/FailProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ForEachProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/RemoveProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/RemoveProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorTests.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/AbstractScriptTestCase.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/IngestDocumentMustacheIT.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/TemplateServiceIT.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/ValueSourceMustacheIT.java
test/framework/src/main/java/org/elasticsearch/ingest/TestTemplateService.java
comments:
remove Ingest's Internal Template Service (#25085)

Ingest was using it's own wrapper around TemplateScripts and the ScriptService.
This commit removes that abstraction

time:
2017-06-08T20:37:44Z
class:
core/src/main/java/org/elasticsearch/index/mapper/AllFieldMapper.java
core/src/test/java/org/elasticsearch/index/mapper/AllFieldIT.java
core/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/SimpleQueryStringBuilderTests.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
comments:
Correctly enable _all for older 5.x indices

When we disabled `_all` by default for indices created in 6.0, we missed adding
a layer that would handle the situation where `_all` was not enabled in 5.x and
then the cluster was updated to 6.0, this means that when the cluster was
updated the `_all` field would be disabled for 5.x indices and field values
would not be added to the `_all` field.

This adds a compatibility layer for 5.x indices where we treat the default
enabled value for the `_all` field to be `true` if unset on 5.x indices.

Resolves #25068

time:
2017-06-08T20:17:44Z
class:
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/RemoveProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/RemoveProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/RemoveProcessorTests.java
comments:
Allow removing multiple fields in ingest processor (#24750)

* Allow removing multiple fields in ingest processor

* Iteration 2

* Few fixes

time:
2017-06-08T20:09:34Z
class:
comments:
Mark Log4j API dependency as non-optional

The Log4j dependency is separated into two artifacts, the API and the
core implementation. This is to enable replacing Log4j on the backend
through the SLF4J bridge with another logging implementation. For this
reason, the dependencies are marked as optional. This causes confusion
amongst users as to use the bridge, the API should be non-optional since
it is needed for the bridge to function correctly. While they could pull
it into their application directly, it would be clearer if we simply
marked this depdendency as non-optional. Note that this does not mean
that users have to use Log4j for logging in their application, so we are
not marking core as required, it only clarifies what they need to be
able to plug in a different logging implementation.

Relates #25136

time:
2017-06-08T17:39:29Z
class:
comments:
Fix branch logic for bwc tests in the same major version (#25134)

When testing against the previous 5.x release, the bwc project incorrectly would checkout the 5.x
branch instead of the 5.5 branch as it still had the logic that applies for major versions bwc. This change adds
a check to compare the major version when making the decision on the branch to use.

time:
2017-06-08T16:57:04Z
class:
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java
comments:
Include empty mappings in GET /{index}/_mappings requests (#25118)

Previously this would output:

```
GET /test-1/_mappings

{ }
```

And after this change:

```
GET /test-1/_mappings

{
  "test-1": {
    "mappings": {}
  }
}
```

To bring parity back to the REST output after #24723.

Relates to #25090

time:
2017-06-08T16:03:03Z
class:
core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetAliasesAction.java
core/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexIT.java
core/src/test/java/org/elasticsearch/aliases/IndexAliasesIT.java
comments:
Return index name and empty map for /{index}/_alias with no aliases

Previously in #24723 we changed the `_alias` API to not go through the
`RestGetIndicesAction` endpoint, instead creating a `RestGetAliasesAction` that
did the same thing.

This changes the formatting so that it matches the old formatting of the
endpoint, before:

```
GET /test-1/_alias

{ }
```

And after this change:

```
GET /test-1/_alias

{
  "test-1": {
    "aliases": {}
  }
}
```

This is related to #25090

time:
2017-06-08T15:23:22Z
class:
core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java
comments:
Fix typo in GeoUtils#isValidLongitude (#25121)

GeoUtils#isValidLongitude is inconsistent with GeoUtils#isValidLatitude. 
Neither technically need the isInfinite() check because they then compare 
against min and max values.

time:
2017-06-08T14:40:00Z
class:
core/src/main/java/org/elasticsearch/search/profile/ProfileResult.java
core/src/main/java/org/elasticsearch/search/profile/SearchProfileShardResults.java
core/src/main/java/org/elasticsearch/search/profile/query/CollectorResult.java
core/src/main/java/org/elasticsearch/search/profile/query/QueryProfileShardResult.java
core/src/test/java/org/elasticsearch/search/profile/ProfileResultTests.java
core/src/test/java/org/elasticsearch/search/profile/SearchProfileShardResultsTests.java
core/src/test/java/org/elasticsearch/search/profile/query/CollectorResultTests.java
comments:
[Tests] Check QueryProfileShardResult parser robustness for new fields (#25130)

When parsing resonses we should be ignoring any new unknown fields or inner
objects in most cases to be forward compatible with changes in core on the
client side. This change adds test for this for QueryProfileShardResult and
nested substructures and changes the parsing code where necessary to be able to
ignore new fields and objects in the xContent.

time:
2017-06-08T14:19:06Z
class:
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java
core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java
test/framework/src/main/java/org/elasticsearch/test/VersionUtils.java
test/framework/src/test/java/org/elasticsearch/test/VersionUtilsTests.java
comments:
Make randomVersionBetween work with unreleased versions (#25042)

Test: randomVersionBetween works with unreleased

Modifies randomVersionBetween so that it works with unreleased
versions. This should make switching a version from unreleased
to released much simpler.

time:
2017-06-08T14:06:39Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/SearchIT.java
comments:
[Test] Fix high-level-rest SearchIT so that quick responses don't fail the test

time:
2017-06-08T12:20:26Z
class:
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/test/java/org/elasticsearch/action/bulk/TransportShardBulkActionTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/replication/IndexLevelReplicationTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
comments:
Use correct primary term for replicating NOOPs (#25128)

NOOPs should be, same as for indexing operations, written on the replica using the original operation term instead of the current term of the replica.

time:
2017-06-08T11:20:35Z
class:
core/src/main/java/org/elasticsearch/index/fielddata/ScriptDocValues.java
core/src/test/java/org/elasticsearch/index/fielddata/BinaryDVFieldDataTests.java
comments:
fielddata: Binary script doc values should make a deep copy of the BytesRef before populating it in the values array.

Added common base class for ScriptDocValues.Strings and ScriptDocValues.BytesRefs now that these classes are very similar.

Also cleaned up the BinaryDVFieldDataTests:
* Use junit assertions instead of hamcrest
* Use BytesRef directly instead of byte[]

Closes #24785

time:
2017-06-08T10:27:11Z
class:
core/src/main/java/org/elasticsearch/common/lucene/search/MultiPhrasePrefixQuery.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java
core/src/test/java/org/elasticsearch/validate/SimpleValidateQueryIT.java
comments:
Fix Fast Vector Highlighter NPE on match phrase prefix (#25116)

The FVH fails with an NPE when a match phrase prefix is rewritten in an empty phrase query.
This change makes sure that the multi match query rewrites to a MatchNoDocsQuery (instead of an empty phrase query) when there is
a single term and that term does not expand to any term in the index.

Fixes #25088

time:
2017-06-08T10:10:46Z
class:
core/src/main/java/org/apache/lucene/search/grouping/CollapsingDocValuesSource.java
core/src/main/java/org/apache/lucene/search/grouping/CollapsingTopDocsCollector.java
core/src/main/java/org/elasticsearch/ElasticsearchException.java
core/src/main/java/org/elasticsearch/action/search/SearchPhaseController.java
core/src/main/java/org/elasticsearch/action/search/SearchRequest.java
core/src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
core/src/main/java/org/elasticsearch/common/lucene/Lucene.java
core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
core/src/main/java/org/elasticsearch/search/DefaultSearchContext.java
core/src/main/java/org/elasticsearch/search/SearchHits.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseContext.java
core/src/main/java/org/elasticsearch/search/internal/FilteredSearchContext.java
core/src/main/java/org/elasticsearch/search/internal/SearchContext.java
core/src/main/java/org/elasticsearch/search/query/EarlyTerminatingCollector.java
core/src/main/java/org/elasticsearch/search/query/QueryCollectorContext.java
core/src/main/java/org/elasticsearch/search/query/QueryPhase.java
core/src/main/java/org/elasticsearch/search/query/TopDocsCollectorContext.java
core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java
core/src/test/java/org/elasticsearch/action/search/SearchPhaseControllerTests.java
core/src/test/java/org/elasticsearch/search/SearchHitsTests.java
core/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java
core/src/test/java/org/elasticsearch/search/simple/SimpleSearchIT.java
test/framework/src/main/java/org/elasticsearch/search/RandomSearchRequestGenerator.java
test/framework/src/main/java/org/elasticsearch/test/TestSearchContext.java
comments:
Automatically early terminate search query based on index sorting (#24864)

This commit refactors the query phase in order to be able
to automatically detect queries that can be early terminated.
If the index sort matches the query sort, the top docs collection is early terminated
on each segment and the computing of the total number of hits that match the query is delegated to a simple TotalHitCountCollector.
This change also adds a new parameter to the search request called `track_total_hits`.
It indicates if the total number of hits that match the query should be tracked.
If false, queries sorted by the index sort will not try to compute this information and 
and will limit the collection to the first N documents per segment.
Aggregations are not impacted and will continue to see every document
even when the index sort matches the query sort and `track_total_hits` is false.

Relates #6720

time:
2017-06-08T09:18:17Z
class:
core/src/main/java/org/apache/lucene/queries/BlendedTermQuery.java
core/src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java
core/src/main/java/org/elasticsearch/index/query/SimpleQueryParser.java
core/src/main/java/org/elasticsearch/index/search/MultiMatchQuery.java
core/src/test/java/org/apache/lucene/queries/BlendedTermQueryTests.java
core/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/SimpleQueryStringBuilderTests.java
core/src/test/java/org/elasticsearch/index/search/MultiMatchQueryTests.java
core/src/test/java/org/elasticsearch/search/query/SimpleQueryStringIT.java
modules/percolator/src/test/java/org/elasticsearch/percolator/CandidateQueryTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/QueryAnalyzerTests.java
test/framework/src/main/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Always use DisjunctionMaxQuery to build cross fields disjunction (#25115)

This commit modifies query_string, simple_query_string and multi_match queries to always use a DisjunctionMaxQuery when a disjunction over multiple fields is built. The tiebreaker is set to 1 in order to behave like the boolean query in terms of scoring.
The removal of the coord factor in Lucene 7 made this change mandatory to correctly handle minimum_should_match.

Closes #23966

time:
2017-06-08T09:13:08Z
class:
core/src/main/java/org/elasticsearch/action/search/ClearScrollController.java
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
core/src/main/java/org/elasticsearch/action/search/TransportClearScrollAction.java
core/src/test/java/org/elasticsearch/action/search/ClearScrollControllerTests.java
core/src/test/java/org/elasticsearch/action/search/SearchAsyncActionTests.java
comments:
Break out clear scroll logic from TransportClearScrollAction (#25125)

This change extracts the main logic from `TransportClearScrollAction`
into a new class `ClearScrollController` and adds a corresponding unit test.

Relates to #25094

time:
2017-06-08T08:21:15Z
class:
core/src/main/java/org/elasticsearch/action/support/GroupedActionListener.java
comments:
Fix naminig in GroupedActionListener

GroupedActionListener still had some members named from it's specialization
before it was factored out in a general purpose class.

time:
2017-06-08T08:19:38Z
class:
core/src/main/java/org/elasticsearch/common/lucene/Lucene.java
core/src/main/java/org/elasticsearch/common/lucene/search/FilteredCollector.java
core/src/main/java/org/elasticsearch/common/lucene/search/function/FiltersFunctionScoreQuery.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/AdjacencyMatrixAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/MatchedQueriesFetchSubPhase.java
core/src/test/java/org/elasticsearch/common/lucene/LuceneTests.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ParentToChildrenAggregator.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQuery.java
comments:
Leverage scorerSupplier when applicable. (#25109)

The `scorerSupplier` API allows to give a hint to queries in order to let them
know that they will be consumed in a random-access fashion. We should use this
for aggregations, function_score and matched queries.

time:
2017-06-08T08:06:42Z
class:
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ESClientYamlSuiteTestCase.java
comments:
[TEST] Move test skip/blacklist assumptions out of @Before method (#25100)

This commit moves the assumeFalse() calls that implement test skipping
and blacklisting out of the @Before method of ESClientYamlSuiteTestCase.
The problem with having them in the @Before method is that if an
assumption triggers then the @Before methods of classes that extend
ESClientYamlSuiteTestCase will not run, but their @After methods will.
This can lead to inconsistencies that cause assertions in the @After
methods and fail the test even though it was skipped/blacklisted.

Instead the assumeFalse() calls are now at the beginning of the test()
method, which runs after all @Before methods (including those in classes
that extend ESClientYamlSuiteTestCase) have completed.  The only side
effect is that overridden test() methods in classes that extend
ESClientYamlSuiteTestCase which call super.test() and also do other things
must now be designed not to consume any InternalAssumptionViolatedException
that may be thrown by the super.test() call.

Relates elastic/x-pack-elasticsearch#1650

time:
2017-06-08T07:21:28Z
class:
core/src/main/java/org/elasticsearch/index/engine/CombinedDeletionPolicy.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/translog/Checkpoint.java
core/src/main/java/org/elasticsearch/index/translog/Translog.java
core/src/main/java/org/elasticsearch/index/translog/TranslogWriter.java
core/src/main/java/org/elasticsearch/index/translog/TruncateTranslogCommand.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
core/src/test/java/org/elasticsearch/index/translog/TranslogVersionTests.java
core/src/test/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetServiceTests.java
comments:
Translog file recovery should not rely on lucene commits (#25005)

When we open a translog, we rely on the `translog.ckp` file to tell us what the maximum generation file should be and on the information stored in the last lucene commit to know the first file we need to recover. This requires coordination and is currently subject to a race condition: if a node dies after a lucene commit is made but before we remove the translog generations that were unneeded by it, the next time we open the translog we will ignore those files and never delete them (I have added tests for this).

This PR changes the approach to have the translog store both of those numbers in the `translog.ckp`. This means it's more self contained and easier to control. 

This change also decouples the translog recovery logic from the specific commit we're opening. This prepares the ground to fully utilize the deletion policy introduced in #24950 and store more translog data that's needed for Lucene, keep multiple lucene commits around and be free to recover from any of them.

time:
2017-06-08T07:07:22Z
class:
core/src/main/java/org/elasticsearch/transport/TransportActionProxy.java
core/src/test/java/org/elasticsearch/transport/TransportActionProxyTests.java
comments:
Add helper methods to TransportActionProxy to identify proxy actions and requests (#25124)

Downstream users of out network intercept infrastructure need this information which is
hidden due to member and class visibility.

time:
2017-06-07T23:06:11Z
class:
core/src/main/java/org/elasticsearch/script/TemplateScript.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/FactoryTests.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Generate Painless Factory for Creating Script Instances (#25120)

time:
2017-06-07T19:16:46Z
class:
comments:
Fix formatting of random testing seed

The whitespace is not aligned correctly and it might be crazy-making to
some developers.

time:
2017-06-07T19:01:20Z
class:
core/src/main/java/org/elasticsearch/search/SearchHit.java
core/src/main/java/org/elasticsearch/search/SearchHits.java
core/src/test/java/org/elasticsearch/action/main/MainResponseTests.java
core/src/test/java/org/elasticsearch/search/SearchHitTests.java
core/src/test/java/org/elasticsearch/search/SearchHitsTests.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
test/framework/src/main/java/org/elasticsearch/test/XContentTestUtils.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ObjectPath.java
test/framework/src/test/java/org/elasticsearch/test/XContentTestUtilsTests.java
test/framework/src/test/java/org/elasticsearch/test/test/ESTestCaseTests.java
comments:
Tests: Add ability to generate random new fields for xContent parsing test (#23437)

For the response parsing we want to be lenient when it comes to parsing
new xContent fields. In order to ensure this in our testing, this change
adds a utility method to XContentTestUtils that takes xContent bytes
representation as input and recursively a random field on each object
level.

Sometimes we also want to exclude a whole subtree from this treatment 
(e.g. skipping "_source"), other times an element (e.g. "fields", "highlight" 
in SearchHit) can have arbitraryly named objects. Those cases can be 
specified as exceptions.

time:
2017-06-07T17:32:13Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
bump the Lucene version for Version 5.5 and 5.6 after the upgrade to Lucene 6.6.0

time:
2017-06-07T17:29:01Z
class:
comments:
Add BWC rest test for parent-join after the backport to 5.x

time:
2017-06-07T15:36:29Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/SearchIT.java
comments:
Fix compilation in eclipse (#25107)

It looks like eclipse blows up when you take a method reference to
varargs method in a finally method:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=517951

time:
2017-06-07T15:24:18Z
class:
core/src/main/java/org/elasticsearch/index/query/InnerHitContextBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/ScriptHeuristic.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java
core/src/main/java/org/elasticsearch/search/sort/ScriptSortBuilder.java
comments:
Scripting: Remove unnecessary intermediate script compilation methods on QueryShardContext (#25093)

This commit removes wrapper methods on QueryShardContext used to compile
scripts. Instead, the script service is made accessible in the context,
and calls to compile can be made directly. This will ease transition to
each of those location becoming their own context, since they would no
longer be able to expect the same script class type.

time:
2017-06-07T15:11:27Z
class:
core/src/main/java/org/elasticsearch/ElasticsearchException.java
core/src/main/java/org/elasticsearch/index/engine/Engine.java
core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/TranslogOpToEngineOpConverter.java
core/src/main/java/org/elasticsearch/index/shard/TranslogRecoveryPerformer.java
core/src/main/java/org/elasticsearch/index/translog/Translog.java
core/src/main/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetService.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTargetHandler.java
core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/replication/RecoveryDuringReplicationTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/shard/RefreshListenersTests.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
comments:
Remove TranslogRecoveryPerformer (#24858)

Splits TranslogRecoveryPerformer into three parts:
- the translog operation to engine operation converter
- the operation perfomer (that indexes the operation into the engine)
- the translog statistics (for which there is already RecoveryState.Translog)
This makes it possible for peer recovery to use the same IndexShard interface as bulk shard requests (i.e. Engine operations instead of Translog operations). It also pushes the "fail on bad mapping" logic outside of IndexShard. Future pull requests could unify the BulkShard and peer recovery path even more.

time:
2017-06-07T14:14:28Z
class:
core/src/main/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighter.java
core/src/test/java/org/apache/lucene/search/uhighlight/CustomUnifiedHighlighterTests.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java
comments:
Higlighters: Fix MultiPhrasePrefixQuery rewriting (#25103)

The unified highlighter rewrites MultiPhrasePrefixQuery to SpanNearQuer even when there is a single term in the phrase.
Though SpanNearQuery throws an exception when the number of clauses is less than 2.
This change returns a simple PrefixQuery when there is a single term and builds the SpanNearQuery otherwise.

Relates #25088

time:
2017-06-07T13:59:27Z
class:
core/src/main/java/org/elasticsearch/Version.java
test/framework/src/test/java/org/elasticsearch/test/VersionUtilsTests.java
comments:
Add version 5.6 to versions (#25084)

* Add version 5.6 to versions

* Fix test

* Remove 5.4.2 constant

time:
2017-06-07T13:18:43Z
class:
comments:
Build: Pin the random seed at startup (#24990)

Pins the random testing seed at build start rather than letting
it vary with every randomized testing invocation. This is useful
for projects where random decisions in one randomized testing run
can effect the outcome of a second randomized testing run such as
the full cluster restart tests.

The goal isn't for tests to be able to assume that random decision
will be the same in both tests. It is more to make sure that the
seed printed when a test fails reproduces the appropriate random
decisions. And pinning the seed at startup should do just that.

This works by taking the key passed as a system property if one
is passed, otherwise picking a random long and getting it into
appropriate key format. The build just calls
`new Random().nextLong()` to get the seed while randomized testing
uses a Murmur3 hash of `System.nanoTime`.

time:
2017-06-07T13:00:17Z
class:
comments:
Skip rest tests that use mutiple types in pure 6.x clusters (#24965)

This change skips rest tests that use mutlitple types if the cluster
is a pure 6.x cluster. This allows all indics to be created with a version
less than 6.0 and that means we can safely use the `mapping.single_type` setting.

Relates to #24961

time:
2017-06-07T08:54:10Z
class:
core/src/main/java/org/elasticsearch/index/engine/Engine.java
core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/shard/RefreshListenersTests.java
comments:
Update `IndexShard#refreshMetric` via a `ReferenceManager.RefreshListener` (#25083)

The PR takes a different approach to solve #24806 than currently implemented via #25052. The `refreshMetric` that IndexShard maintains is updated using the refresh listeners infrastructure in lucene. This means that we truly count all refreshes that lucene makes and not have to worry about each individual caller (like `IndexShard@refresh` and `Engine#get()`)

time:
2017-06-07T08:52:49Z
class:
core/src/test/java/org/elasticsearch/search/fetch/subphase/InnerHitsIT.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/ParentChildInnerHitContextBuilder.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/LegacyChildrenIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ChildQuerySearchIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/InnerHitsIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/LegacyChildQuerySearchIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/LegacyHasChildQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/LegacyHasParentQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/LegacyInnerHitsIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ParentChildTestCase.java
comments:
Changed inner_hits to work with the new join field type and
at the same time maintaining support for the `_parent` meta field type/

Relates to #20257

time:
2017-06-07T08:51:21Z
class:
core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java
core/src/test/java/org/elasticsearch/index/mapper/DocumentMapperMergeTests.java
comments:
keep _parent field while updating child type mapping (#24407)

parent/child: Allow updating mapping without specifying `_parent` field on each update.

Prior to this change when a mapping has a `_parent` field then any update (also updates that didn't modify the `_parent` field) to the mapping involved specifying the `_parent` field again. With this change specifying the `_parent` field on each mapping update is no longer required.

Closes #23381

time:
2017-06-07T00:50:03Z
class:
core/src/main/java/org/elasticsearch/common/io/Streams.java
core/src/main/java/org/elasticsearch/common/util/Callback.java
core/src/main/java/org/elasticsearch/index/IndexService.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/store/Store.java
core/src/main/java/org/elasticsearch/indices/IndicesService.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
core/src/test/java/org/elasticsearch/indices/cluster/AbstractIndicesClusterStateServiceTestCase.java
plugins/discovery-gce/src/test/java/org/elasticsearch/discovery/gce/GceMockUtils.java
plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/MockHttpTransport.java
comments:
Remove unnecessary callback interface

We have a callback interface that is not needed because it is
effectively the same as java.util.function.Consumer. This commit removes
it.

Relates #25089

time:
2017-06-06T20:47:23Z
class:
core/src/main/java/org/elasticsearch/Version.java
core/src/test/java/org/elasticsearch/VersionTests.java
test/framework/src/test/java/org/elasticsearch/test/VersionUtilsTests.java
comments:
Bumping version to v6.0.0-alpha3 (#25077)

time:
2017-06-06T20:29:10Z
class:
core/src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
comments:
Modify cluster state callback in recovery land

We use a callback in recovery land during primary relocation to ensure
the relocation target is on at least the same version as the relocation
source. This callback is typed as a Callback<Long> which is an
unnecessary custom type (we can use Consumer<T> or the appropriate
primitive callbacks). Here, we can use LongConsumer.

Relates #25081

time:
2017-06-06T19:35:30Z
class:
comments:
Modify skips for get missing alises tests

Previous work modified the status code on the get aliases API when an
alias is missing so that these requests 404 now. This change was also
backported to 5.5 so we can adjust the skips to skip everything before
5.5.0.

time:
2017-06-06T18:37:29Z
class:
core/src/main/java/org/elasticsearch/common/util/set/Sets.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetAliasesAction.java
modules/transport-netty4/src/test/java/org/elasticsearch/rest/Netty4HeadBodyIsEmptyIT.java
comments:
GET aliases should 404 if aliases are missing

Previously the HEAD and GET aliases endpoints were misaigned in
behavior. The HEAD verb would 404 if any aliases are missing while the
GET verb would not if any aliases existed. When HEAD was aligned with
GET, this broke the previous usage of HEAD to serve as an existence
check for aliases. It is the behavior of GET that is problematic here
though, if any alias is missing the request should 404. This commit
addresses this by modifying the behavior of GET to behave in this
way. This fixes the behavior for HEAD to also 404 when aliases are
missing.

Relates #25043

time:
2017-06-06T17:35:14Z
class:
core/src/main/java/org/elasticsearch/index/query/QueryBuilders.java
core/src/main/java/org/elasticsearch/search/SearchModule.java
core/src/test/java/org/elasticsearch/index/query/MatchQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/NestedQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/SpanTermQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/TypeQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/WildcardQueryBuilderTests.java
core/src/test/java/org/elasticsearch/search/SearchModuleTests.java
modules/parent-join/src/main/java/org/elasticsearch/join/ParentJoinPlugin.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/JoinQueryBuilders.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/ParentIdQueryBuilder.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ChildQuerySearchIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/LegacyParentIdQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ParentIdQueryBuilderTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolateQueryBuilderTests.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
comments:
Move parent_id query to the parent-join module (#25072)

This change moves the parent_id query to the parent-join module and handles the case when only the parent-join field can be declared on an index (index with single type on).
If single type is off it uses the legacy parent join field mapper and switch to the new one otherwise (default in 6).

Relates #20257

time:
2017-06-06T17:13:10Z
class:
core/src/main/java/org/elasticsearch/common/settings/Settings.java
core/src/test/java/org/elasticsearch/common/settings/SettingsTests.java
comments:
Settings: Fix setting groups to include secure settings (#25076)

This commit fixes the group methdos of Settings to properly include
grouped secure settings. Previously the secure settings were included
but without the group prefix being removed.

closes #25069

time:
2017-06-06T16:39:02Z
class:
core/src/main/java/org/elasticsearch/index/engine/Engine.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/shard/RefreshListenersTests.java
comments:
Add refresh stats tracking for realtime get (#25052)

Passes a `LongConsumer` into the `Engine` during GETs which the engine
calls if it refreshed to perform the get.

Closes #24806

time:
2017-06-06T15:07:53Z
class:
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/Grok.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/GrokProcessorTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/GrokTests.java
comments:
fix grok's pattern parsing to validate pattern names in expression (#25063)

Unknown patterns used to silently be ignored. This was a problem because users did not know they were providing an invalid pattern name, and maybe thought the rest of their regexes were invalid.

Fixes #22831.

time:
2017-06-06T14:49:54Z
class:
comments:
Bumped the docs version to 6.0.0-alpha2

time:
2017-06-06T14:44:41Z
class:
comments:
Honor masking of systemd-sysctl.service

During package install on systemd-based systems, some sysctl settings
should be set (e.g. vm.max_map_count).

In some environments, changing sysctl settings plainly does not work;
previously a global environment variable named
ES_SKIP_SET_KERNEL_PARAMETERS was introduced to skip calling sysctl, but
this causes trouble for:
 - configuration management systems, which usually cannot apply an env
   var when running a package manager
 - package upgrades, which will not have the env var set any more, and
   thus leaving the package management system in a bad state (possibly
   half-way upgraded, can be very hard to recover)

This removes the env var again and instead of calling systemd-sysctl
manually, tells systemd to restart the wrapper unit - which itself can
be masked by system administrators or management tools if it is known
that sysctl does not work in a given environment.

The restart is not silent on systems in their default configuration, but
is ignored if the unit is masked.

Relates #24234

time:
2017-06-06T12:30:42Z
class:
client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java
client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RequestTests.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java
client/rest-high-level/src/test/java/org/elasticsearch/client/SearchIT.java
comments:
Add support for clear scroll to high level REST client (#25038)

time:
2017-06-06T11:26:37Z
class:
comments:
Tiny correction in inner-hits.asciidoc (#25066)

time:
2017-06-06T09:52:18Z
class:
comments:
Added release notes for 6.0.0-alpha2

time:
2017-06-06T09:01:38Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java
core/src/main/java/org/elasticsearch/action/support/IndicesOptions.java
core/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java
core/src/test/java/org/elasticsearch/action/support/IndicesOptionsTests.java
core/src/test/java/org/elasticsearch/aliases/IndexAliasesIT.java
core/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java
core/src/test/java/org/elasticsearch/cluster/metadata/WildcardExpressionResolverTests.java
comments:
Expand index expressions against indices only when managing aliases (#23997)

The index parameter in the update-aliases, put-alias, and delete-alias APIs no longer accepts alias names. Instead, it accepts only index names (or wildcards which will expand to matching indices).

Closes #23960

time:
2017-06-06T07:33:56Z
class:
comments:
Collapse inner hits rest test should not skip 5.x

Relates https://github.com/elastic/elasticsearch/pull/24517

time:
2017-06-06T07:11:33Z
class:
core/src/main/java/org/elasticsearch/common/settings/Settings.java
core/src/test/java/org/elasticsearch/common/settings/SettingsTests.java
comments:
Settings: Fix secure settings by prefix (#25064)

This commit fixes a bug in retrieving a sub Settings object for a given
prefix with secure settings. Before this commit the returned Settings
would be filtered by the prefix, but the found setting names would not
have the prefix removed.

time:
2017-06-05T21:12:48Z
class:
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/KeyValueProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/KeyValueProcessorFactoryTests.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/KeyValueProcessorTests.java
comments:
add `exclude_keys` option to KeyValueProcessor (#24876)

and modify data-structure of `include_keys` and `exclude_keys` to be
backed by a HashSet

time:
2017-06-05T20:26:07Z
class:
comments:
Test: update missing body tests to run against versions >= 5.5.0

This updates the missing body tests to run against versions >= 5.5.0 after backporting the change
to the 5.x branch.

See #23497

time:
2017-06-05T16:09:41Z
class:
core/src/main/java/org/elasticsearch/common/ExponentiallyWeightedMovingAverage.java
core/src/main/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutor.java
core/src/main/java/org/elasticsearch/common/util/concurrent/TimedRunnable.java
core/src/test/java/org/elasticsearch/common/ExponentiallyWeightedMovingAverageTests.java
core/src/test/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutorTests.java
comments:
Track EWMA[1] of task execution time in search threadpool executor

This is the first step towards adaptive replica selection (#24915). This PR
tracks the execution time, also known as the "service time" of a task in the
threadpool. The `QueueResizingEsThreadPoolExecutor` then stores a moving average
of these task times which can be retrieved from the executor.

Currently there is no functionality using the EWMA yet (other than tests), this
is only a bite-sized building block so that it's easier to review.

[1]: EWMA = Exponentially Weighted Moving Average

time:
2017-06-05T15:49:06Z
class:
core/src/main/java/org/elasticsearch/common/util/BigArrays.java
comments:
Removes an invalid assert in resizing big arrays which does not always
hold (resizing can result in a smaller size than the current size, while
the assert attempted to verify the new size is always greater than the
current).

time:
2017-06-05T15:08:14Z
class:
client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java
core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
core/src/main/java/org/elasticsearch/rest/RestRequest.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestPutStoredScriptAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestPutIndexTemplateAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestPutMappingAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpdateSettingsAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestBulkAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestIndexAction.java
core/src/test/java/org/elasticsearch/action/bulk/BulkRequestTests.java
core/src/test/java/org/elasticsearch/rest/RestRequestTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestMultiSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestPutSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestSearchTemplateAction.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByQueryRestHandler.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryAction.java
comments:
Fixed NPEs caused by requests without content. (#23497)

REST handlers that require a body will throw an an ElasticsearchParseException "request body required".
REST handlers that require a body OR source param will throw an ElasticsearchParseException "request body or source param required".
Replaced asserts in BulkRequest parsing code with a more descriptive IllegalArgumentException if the line contains an empty object.
Updated bulk REST test to verify an empty action line is rejected properly.
Updated BulkRequestTests with randomized testing for an empty action line.
Used try-with-resouces for XContentParser in AbstractBulkByQueryRestHandler.

time:
2017-06-05T13:25:15Z
class:
core/src/main/java/org/elasticsearch/index/analysis/AnalysisRegistry.java
core/src/main/java/org/elasticsearch/index/analysis/PreBuiltCharFilterFactoryFactory.java
core/src/main/java/org/elasticsearch/index/analysis/PreConfiguredCharFilter.java
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltCharFilters.java
core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java
core/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/index/analysis/AnalysisRegistryTests.java
core/src/test/java/org/elasticsearch/index/analysis/CustomNormalizerTests.java
core/src/test/java/org/elasticsearch/indices/analysis/AnalysisModuleTests.java
core/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
Plugins can register pre-configured char filters (#25000)

Fixes the plumbing so plugins can register char filters and moves
the `html_strip` char filter into analysis-common.

Relates to #23658

time:
2017-06-05T00:40:25Z
class:
comments:
Build: Allow preserving shared dir (#24962)

This adds an option to `ClusterConfiguration` to preserve the
`shared` directory when starting up a new cluster and switches
the `qa:full-cluster-restart` tests to use it rather than
disable the clean shared task.

Relates to #24846

time:
2017-06-03T23:55:34Z
class:
core/src/main/java/org/elasticsearch/common/settings/Settings.java
comments:
Tests: Make secure settings available from settings builder for tests (#25037)

This commit exposes the secure settings in Settings.Builder, so that
the current secure settings can be retrieved and added to when creating
settings for tests. This is necessary since secure settings can only be
added once to a builder, so chains of methods using settings builders
must reuse the already set mock secure settings.

time:
2017-06-03T02:48:52Z
class:
comments:
[TEST] Skip wildcard expansion test due to breaking change

Relates to #24723

time:
2017-06-03T01:30:47Z
class:
test/framework/src/test/java/org/elasticsearch/test/VersionUtilsTests.java
comments:
Test that gradle and Java version types match (#24943)

Both gradle and java code attempt to infer the type of a each
Version constant in Version.java. It is super important that
they infer that each constant has the same type. If they disagree
we might accidentally not be testing backwards compatibility for
some version.

This adds a test to make sure that they agree, modulo known and
accepted differences (mostly around alphas). It also changes the
minimum wire compatible version from the released 5.4.0 to the
unreleased 5.5.0 as that lines up with the gradle logic.

Relates to #24798 

Note that the gradle and java version logic doesn't actually match so
this contains a hack to make it *look* like it matches. Since this is a
start, I'm merging it and going to work on some followups to make the
logic actually match.....

time:
2017-06-02T22:22:01Z
class:
core/src/main/java/org/elasticsearch/bootstrap/JarHell.java
comments:
Include duplicate jar when jarhell check fails

When the jarhell check fails due to a duplicate jar on the classpath,
the exception message includes the full classpath but not the duplicated
jar. For a long classpath, this can make it difficult to find the jar
that is duplicated. This commit changes the exception message to include
the duplicated jar.

Relates #24953

time:
2017-06-02T21:50:51Z
class:
modules/lang-painless/src/main/java/org/elasticsearch/painless/GenericElasticsearchScript.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptClassInfo.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptImpl.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/WriterConstants.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SSource.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/BaseClassTests.java
comments:
Change ScriptContexts to use needs instead of uses$. (#25036)

time:
2017-06-02T21:27:16Z
class:
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ChildrenAggregationBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/MetaJoinFieldMapper.java
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentIdFieldMapper.java
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentJoinFieldMapper.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/LegacyChildrenIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ParentToChildrenAggregatorTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ChildQuerySearchIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/InnerHitsIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/LegacyChildQuerySearchIT.java
comments:
Change `has_child`, `has_parent` queries and `childen` aggregation to work with the new join field type and
at the same time maintaining support for the `_parent` meta field type.

Relates to #20257

time:
2017-06-02T20:43:38Z
class:
core/src/main/java/org/elasticsearch/action/ActionModule.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetAliasesAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetAllAliasesAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetAllMappingsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetAllSettingsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetIndicesAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetSettingsAction.java
comments:
Remove comma-separated feature parsing for GetIndicesAction

This removes the parsing of things like `GET /idx/_aliases,_mappings`, instead,
a user must choose between retriving all index metadata with `GET /idx`, or only
a specific form such as `GET /idx/_settings`.

Relates to (and is a prerequisite of) #24437

time:
2017-06-02T20:42:52Z
class:
comments:
Revert "Sense for VirtualBox and $HOME when deciding to turn on vagrant testing. (#24636)"

This reverts commit 4ed0abe72d79c2cf6f29b375f376be8c045c91f4.

time:
2017-06-02T20:41:26Z
class:
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/ingest/InternalTemplateService.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/TemplateScript.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggester.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionContext.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestPutSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportSearchTemplateAction.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/CustomMustacheFactoryTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheScriptEngineTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheTests.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Scripting: Convert CompiledTemplate to a ScriptContext (#25032)

This commit creates TemplateScript and associated classes so that
templates no longer need a special ScriptService.compileTemplate method.
The execute() method is equivalent to the old run() method.

relates #20426

time:
2017-06-02T20:36:45Z
class:
modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/GenericElasticsearchScript.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/Locals.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptClassInfo.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/WriterConstants.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/antlr/Walker.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SSource.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/BaseClassTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptTestCase.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/node/NodeToStringTests.java
comments:
Update Painless to Use New Script Contexts (#25015)

*  All public methods starting with get will be added as local variables
to the execute method.
* The execute method on a ScriptContext must be both public and
abstract.  This method will be implemented by the Painless compiler.
* A static list of parameter names for the execute method must be
provided since the names will be eliminated at runtime.
* The uses$ methods will still be implemented as before.
* A single constructor may be provided by the ScriptContext.  This
constructor will be overridden by the Painless compiler to include the
exact same arguments.  This allows instances of a Painless script to
potentially contain state.  If a constructor is not provided it is
assumed the default constructor with no arguments will be used.

time:
2017-06-02T20:26:11Z
class:
comments:
Sense for VirtualBox and $HOME when deciding to turn on vagrant testing. (#24636)

We're using Vagrant in more places now than before. This commit includes a plugin that verifies
the Vagrant and Virtualbox installations for projects that depend on them. This shared code
should fix up the errors we've seen from CI builds relating to the new Kerberos fixture.

time:
2017-06-02T19:16:22Z
class:
core/src/main/java/org/elasticsearch/common/util/AbstractArray.java
core/src/main/java/org/elasticsearch/common/util/AbstractBigArray.java
core/src/main/java/org/elasticsearch/common/util/BigArrays.java
core/src/main/java/org/elasticsearch/common/util/BigByteArray.java
core/src/main/java/org/elasticsearch/common/util/BigDoubleArray.java
core/src/main/java/org/elasticsearch/common/util/BigFloatArray.java
core/src/main/java/org/elasticsearch/common/util/BigIntArray.java
core/src/main/java/org/elasticsearch/common/util/BigLongArray.java
core/src/main/java/org/elasticsearch/common/util/BigObjectArray.java
core/src/test/java/org/elasticsearch/common/util/BigArraysTests.java
test/framework/src/main/java/org/elasticsearch/common/util/MockBigArrays.java
comments:
Checks the circuit breaker before allocating bytes for a new big array (#25010)

Previously, when allocating bytes for a BigArray, the array was created
(or attempted to be created) and only then would the array be checked
for the amount of RAM used to see if the circuit breaker should trip.

This is problematic because for very large arrays, if creating or
resizing the array, it is possible to attempt to create/resize and get
an OOM error before the circuit breaker trips, because the allocation
happens before checking with the circuit breaker.

This commit ensures that the circuit breaker is checked before all big
array allocations (note, this does not effect the array allocations that
are less than 16kb which use the [Type]ArrayWrapper classes found in
BigArrays.java).  If such an allocation or resizing would cause the
circuit breaker to trip, then the breaker trips before attempting to
allocate and potentially running into an OOM error from the JVM.

Closes #24790

time:
2017-06-02T18:51:13Z
class:
core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
core/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
core/src/test/java/org/elasticsearch/snapshots/AbstractSnapshotIntegTestCase.java
core/src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreIT.java
core/src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java
comments:
Consolidates the logic for cleaning up snapshots on master election (#24894)

In #24605, logic was implemented to ensure that completed snapshots were
properly removed from the cluster state upon a change in master nodes.
This commit removes redundant logic that also attempted to clean up
completed snapshots from the cluster state on master election, but only
covered a limited case that was remedied in #24605.

This commit also adds a test to ensure cleaning up of completed
snapshots at the right moment in time when a master election happens
before finalizing a snapshot, as well as adds a check to handle the case
where the old master and new master could attempt to finalize the
snapshot and write the same blob to the repository simultaneously.

time:
2017-06-02T17:06:58Z
class:
test/framework/src/test/java/org/elasticsearch/test/disruption/LongGCDisruptionTests.java
comments:
reduce the number of threads used by testNotBlockingUnsafeStackTraces

It times out some times.

Fixes #24936

time:
2017-06-02T16:28:03Z
class:
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentJoinFieldMapper.java
comments:
Disallow the new parent join field on indices with multiple types

Relates https://github.com/elastic/elasticsearch/pull/24978

time:
2017-06-02T15:02:44Z
class:
test/framework/src/main/java/org/elasticsearch/test/rest/ESRestTestCase.java
comments:
Test: improve error message on leftover tasks

After every REST test we wait for the list of pending cluster tasks
to empty before moving on to the next task. If the list doesn't
empty in 10 second we fail the test. This improves the error message
when we fail the test to include the list of running tasks.

time:
2017-06-02T14:19:17Z
class:
core/src/main/java/org/elasticsearch/action/admin/cluster/node/usage/TransportNodesUsageAction.java
comments:
Remove @Override that doesn't exist in parent anymore from new TransportNodesUsageAction

time:
2017-06-02T14:01:42Z
class:
core/src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/TransportNodesHotThreadsAction.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/stats/TransportNodesStatsAction.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/cancel/TransportCancelTasksAction.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java
core/src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportNodesSnapshotsStatus.java
core/src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java
core/src/main/java/org/elasticsearch/action/support/nodes/TransportNodesAction.java
core/src/main/java/org/elasticsearch/action/support/tasks/TransportTasksAction.java
core/src/main/java/org/elasticsearch/gateway/TransportNodesListGatewayMetaState.java
core/src/main/java/org/elasticsearch/gateway/TransportNodesListGatewayStartedShards.java
core/src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TaskManagerTestCase.java
core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TestTaskPlugin.java
core/src/test/java/org/elasticsearch/action/admin/cluster/node/tasks/TransportTasksActionTests.java
core/src/test/java/org/elasticsearch/action/support/nodes/TransportNodesActionTests.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/TransportRethrottleAction.java
comments:
Always Accumulate Transport Exceptions (#25017)

This removes the `accumulateExceptions()` method (and its usage) from `TransportNodesAction` and `TransportTasksAction`, forcing both transport actions to always accumulate exceptions.

Without this change, some transport actions, like `TransportNodesStatsAction` would respond in very unexpected ways by returning no response due to some failure, but instead of returning an
error the response would simply be empty: no response and no error.

This results in a very trappy response structure where users can check for an error, then attempt to blindly use the response when no error is returned.

time:
2017-06-02T13:59:25Z
class:
core/src/test/java/org/elasticsearch/action/search/SearchResponseTests.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrixTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFiltersTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGridTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogramTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogramTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalBinaryRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/date/InternalDateRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/InternalGeoDistanceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTermsTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsTests.java
comments:
[Test] Reduce number of buckets in SearchResponseTests and AggregationsTests (#24964)

This commit reduces the number of buckets that are generated for multi
 bucket aggregations in AggregationsTests and SearchResponseTests.

 The number of buckets are now limited to a maximum of 3 but before some
 aggregations could generate up to 10 buckets.

time:
2017-06-02T13:34:22Z
class:
core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentIdFieldMapper.java
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentJoinFieldMapper.java
modules/parent-join/src/test/java/org/elasticsearch/join/mapper/ParentJoinFieldMapperTests.java
comments:
Add the ability to set eager_global_ordinals in the new parent-join field (#25019)

Defaults to true

time:
2017-06-02T12:05:33Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
Handle already closed while filling gaps

We can hit an already closed exception when filling the gaps after
blocking operations when updating the primary term on a promoted replica
shard. We should catch this and suppress it as it is an expected outcome
instead of letting it bubble up which leads to trying to fail the shard
which throws yet another already closed exception.

Relates #25021

time:
2017-06-02T10:00:27Z
class:
comments:
[DOCS] Clarify behaviour of scripted-metric arg with empty parent buckets

time:
2017-06-02T09:13:47Z
class:
comments:
[DOCS] Clarify connections and gateway nodes selection in cross cluster search docs (#24859)

Closes #24836

time:
2017-06-02T09:11:05Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java
core/src/main/java/org/elasticsearch/action/bulk/BulkResponse.java
core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
core/src/main/java/org/elasticsearch/action/search/SearchResponse.java
core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsResponse.java
core/src/test/java/org/elasticsearch/action/bulk/BulkResponseTests.java
core/src/test/java/org/elasticsearch/index/termvectors/TermVectorsServiceTests.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/highlight/HighlighterSearchIT.java
comments:
Java api: Remove unneeded getTookInMillis method (#23923)

Some response classes in the java api expose both `getTook()` which returns a `TimeValue` and `getTookInMillis` which returns a `long` value. `getTook()` is enough as one can do `getTook().millis()` to obtain the same result as `getTookInMillis()`, which can be removed.

time:
2017-06-02T07:46:38Z
class:
client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/bulk/RestNoopBulkAction.java
client/client-benchmark-noop-api-plugin/src/main/java/org/elasticsearch/plugin/noop/action/search/RestNoopSearchAction.java
core/src/main/java/org/elasticsearch/action/ActionModule.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/usage/NodeUsage.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/usage/NodesUsageAction.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/usage/NodesUsageRequest.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/usage/NodesUsageRequestBuilder.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/usage/NodesUsageResponse.java
core/src/main/java/org/elasticsearch/action/admin/cluster/node/usage/TransportNodesUsageAction.java
core/src/main/java/org/elasticsearch/client/ClusterAdminClient.java
core/src/main/java/org/elasticsearch/client/Requests.java
core/src/main/java/org/elasticsearch/client/support/AbstractClient.java
core/src/main/java/org/elasticsearch/client/transport/TransportClient.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/rest/BaseRestHandler.java
core/src/main/java/org/elasticsearch/rest/RestController.java
core/src/main/java/org/elasticsearch/rest/action/RestFieldCapabilitiesAction.java
core/src/main/java/org/elasticsearch/rest/action/RestFieldStatsAction.java
core/src/main/java/org/elasticsearch/rest/action/RestMainAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestCancelTasksAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestClusterAllocationExplainAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestClusterGetSettingsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestClusterHealthAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestClusterRerouteAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestClusterSearchShardsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestClusterStateAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestClusterStatsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestClusterUpdateSettingsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestCreateSnapshotAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestDeleteRepositoryAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestDeleteSnapshotAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestDeleteStoredScriptAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestGetRepositoriesAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestGetSnapshotsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestGetStoredScriptAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestGetTaskAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestListTasksAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestNodesHotThreadsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestNodesInfoAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestNodesStatsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestNodesUsageAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestPendingClusterTasksAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestPutRepositoryAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestPutStoredScriptAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestRemoteClusterInfoAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestRestoreSnapshotAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestSnapshotsStatusAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestVerifyRepositoryAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestAnalyzeAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestClearIndicesCacheAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestCloseIndexAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestCreateIndexAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestDeleteIndexAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestDeleteIndexTemplateAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestFlushAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestForceMergeAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetAliasesAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetFieldMappingAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetIndexTemplateAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetIndicesAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetSettingsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestIndexDeleteAliasesAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestIndexPutAliasAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestIndicesAliasesAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestIndicesSegmentsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestIndicesShardStoresAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestIndicesStatsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestOpenIndexAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestPutIndexTemplateAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestPutMappingAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestRecoveryAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestRefreshAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestRolloverIndexAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestShrinkIndexAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestSyncedFlushAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestTypesExistsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpdateSettingsAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestUpgradeAction.java
core/src/main/java/org/elasticsearch/rest/action/admin/indices/RestValidateQueryAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestAliasAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestAllocationAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestCatAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestFielddataAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestHealthAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestMasterAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestNodeAttrsAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestPendingClusterTasksAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestPluginsAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestRecoveryAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestRepositoriesAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestSegmentsAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestSnapshotAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestTasksAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestTemplatesAction.java
core/src/main/java/org/elasticsearch/rest/action/cat/RestThreadPoolAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestBulkAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestCountAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestDeleteAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestGetAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestGetSourceAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestIndexAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestMultiGetAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestMultiTermVectorsAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestTermVectorsAction.java
core/src/main/java/org/elasticsearch/rest/action/document/RestUpdateAction.java
core/src/main/java/org/elasticsearch/rest/action/ingest/RestDeletePipelineAction.java
core/src/main/java/org/elasticsearch/rest/action/ingest/RestGetPipelineAction.java
core/src/main/java/org/elasticsearch/rest/action/ingest/RestPutPipelineAction.java
core/src/main/java/org/elasticsearch/rest/action/ingest/RestSimulatePipelineAction.java
core/src/main/java/org/elasticsearch/rest/action/search/RestClearScrollAction.java
core/src/main/java/org/elasticsearch/rest/action/search/RestExplainAction.java
core/src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java
core/src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
core/src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java
core/src/main/java/org/elasticsearch/usage/UsageService.java
core/src/test/java/org/elasticsearch/action/ActionModuleTests.java
core/src/test/java/org/elasticsearch/common/network/NetworkModuleTests.java
core/src/test/java/org/elasticsearch/rest/BaseRestHandlerTests.java
core/src/test/java/org/elasticsearch/rest/RestControllerTests.java
core/src/test/java/org/elasticsearch/rest/action/admin/cluster/RestNodesStatsActionTests.java
core/src/test/java/org/elasticsearch/rest/action/admin/indices/RestIndicesStatsActionTests.java
core/src/test/java/org/elasticsearch/rest/action/cat/RestIndicesActionTests.java
core/src/test/java/org/elasticsearch/rest/action/cat/RestRecoveryActionTests.java
core/src/test/java/org/elasticsearch/usage/UsageServiceTests.java
distribution/integ-test-zip/src/test/java/org/elasticsearch/test/rest/NodeRestUsageIT.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestDeleteSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestGetSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestMultiSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestPutSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestRenderSearchTemplateAction.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestSearchTemplateAction.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestDeleteByQueryAction.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestReindexAction.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestRethrottleAction.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java
plugins/jvm-example/src/main/java/org/elasticsearch/plugin/example/ExampleCatAction.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/TestDeprecationHeaderRestAction.java
qa/smoke-test-http/src/test/java/org/elasticsearch/http/TestResponseHeaderRestAction.java
comments:
Adds nodes usage API to monitor usages of actions (#24169)

* Adds nodes usage API to monitor usages of actions

The nodes usage API has 2 main endpoints

/_nodes/usage and /_nodes/{nodeIds}/usage return the usage statistics
for all nodes and the specified node(s) respectively.

At the moment only one type of usage statistics is available, the REST
actions usage. This records the number of times each REST action class is
called and when the nodes usage api is called will return a map of rest
action class name to long representing the number of times each of the action
classes has been called.

Still to do:

* [x] Create usage service to store usage statistics
* [x] Record usage in REST layer
* [x] Add Transport Actions
* [x] Add REST Actions
* [x] Tests
* [x] Documentation

* Rafactors UsageService so counts are done by the handlers

* Fixing up docs tests

* Adds a name to all rest actions

* Addresses review comments

time:
2017-06-02T07:45:15Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalMappedSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantLongTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantStringTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTerms.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTermsTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsTests.java
comments:
Add superset size to Significant Term REST response (#24865)

This commit adds a new bg_count field to the REST response of
SignificantTerms aggregations. Similarly to the bg_count that already
exists in significant terms buckets, this new bg_count field is set at
the aggregation level and is populated with the superset size value.

time:
2017-06-02T07:21:15Z
class:
modules/parent-join/src/main/java/org/elasticsearch/join/fetch/ParentJoinFieldSubFetchPhase.java
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/MetaJoinFieldMapper.java
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentJoinFieldMapper.java
modules/parent-join/src/test/java/org/elasticsearch/join/mapper/ParentJoinFieldMapperTests.java
comments:
Disallow multiple parent-join fields per mapping (#25002)

This change ensures that there is a single parent-join field defined per mapping.
The verification is done through the addition of a special field mapper (MetaJoinFieldMapper) with a unique name (_parent_join) that is registered to the mapping service
when the first parent-join field is defined. If a new parent-join is added, this field mapper will clash with the new one and the update will fail.
This change also simplifies the parent join fetch sub phase by retrieving the parent-join field without iterating on all fields in the mapping.

time:
2017-06-02T07:08:51Z
class:
core/src/test/java/org/elasticsearch/index/mapper/MultiFieldTests.java
comments:
[Test] Remove unused test resources in core (#25011)

It looks like many unnecessary files remain in the core test resources directory. This commit removes them.

time:
2017-06-02T00:53:48Z
class:
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/PutStoredScriptRequest.java
core/src/main/java/org/elasticsearch/rest/action/admin/cluster/RestPutStoredScriptAction.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/test/java/org/elasticsearch/action/admin/cluster/storedscripts/PutStoredScriptRequestTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestPutSearchTemplateAction.java
comments:
Scripting: Add optional context parameter to put stored script requests (#25014)

This commit adds an optional `context` url parameter to the put stored
script request. When a context is specified, the script is compiled
against that context before storing, as a validation the script will
work when used in that context.

time:
2017-06-01T20:23:41Z
class:
core/src/main/java/org/elasticsearch/action/search/AbstractAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/SearchScrollAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryAndFetchAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/SearchScrollQueryThenFetchAsyncAction.java
core/src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java
core/src/test/java/org/elasticsearch/action/search/SearchScrollAsyncActionTests.java
comments:
Extract a common base class for scroll executions (#24979)

Today there is a lot of code duplication and different handling of errors
in the two different scroll modes. Yet, it's not clear if we keep both of
them but this simplification will help to further refactor this code to also
add cross cluster search capabilities.

This refactoring also fixes bugs when shards failed due to the node dropped out of the cluster in between scroll requests and failures during the fetch phase of the scroll. Both places where simply ignoring the failure and logging to debug. This can cause issues like #16555

time:
2017-06-01T18:53:08Z
class:
comments:
Build: fix version sorting

Prevents us from incorrectly thinking the current version is
the bwc version.

time:
2017-06-01T17:29:51Z
class:
comments:
Build: Move verifyVersions to new branchConsistency task (#25009)

This commit adds a new `branchConsistency` task which will run in CI
once a day, instead of on every commit. This allows `verifyVersions` to
not break immediately once a new version is released in maven.

time:
2017-06-01T16:34:03Z
class:
comments:
Add backwards compatibility indices

Adds backwards compatiblity indices and repos for the 5.4.1
and 5.3.3 release.

time:
2017-06-01T15:55:23Z
class:
comments:
Build: improve verifyVersions error message (#25006)

The error message was confusing because it doesn't
include unreleased versions like CURRENT.

time:
2017-06-01T15:25:19Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
Add version 5.4.2 constant

This commit adds the version 5.4.2 constant to master.

time:
2017-06-01T15:23:22Z
class:
comments:
Docs: More search speed advices. (#24802)

time:
2017-06-01T15:18:25Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
Add version 5.3.3 constant

This commit adds the version 5.3.3 constant to master.

time:
2017-06-01T14:47:44Z
class:
comments:
Reorganize docs of global ordinals. (#24982)

Currently global ordinals are documented under `fielddata`. It moves them to
their own file since they also work with doc values and fielddata is on the way
out.

Closes #23101

time:
2017-06-01T13:49:58Z
class:
core/src/main/java/org/elasticsearch/index/shard/SearchOperationListener.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/test/java/org/elasticsearch/index/shard/SearchOperationListenerTests.java
comments:
Provide the TransportRequest during validation of a search context (#24985)

This commit provides the TransportRequest that caused the retrieval of a search context to the
SearchOperationListener#validateSearchContext method so that implementers have access to the
request.

time:
2017-06-01T13:29:48Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/SearchIT.java
comments:
[TEST] fix SearchIT assertion to also accept took set to 0

Closes #24997

time:
2017-06-01T12:56:25Z
class:
distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java
comments:
Remove import from InstallPluginCommandTests

This commit removes an unused import from
InstallPluginCommandTests.java.

time:
2017-06-01T12:53:39Z
class:
core/src/main/java/org/elasticsearch/plugins/PluginsService.java
core/src/test/java/org/elasticsearch/plugins/PluginsServiceTests.java
distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/InstallPluginCommand.java
distribution/tools/plugin-cli/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java
distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java
distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/RemovePluginCommandTests.java
comments:
Add purge option to remove plugin CLI

By default, the remove plugin CLI command preserves configuration
files. This is so that if a user is upgrading the plugin (which is done
by first removing the old version and then installing the new version)
they do not lose their configuration file. Yet, there are circumstances
where preserving the configuration file is not desired. This commit adds
a purge option to the remove plugin CLI command.

Relates #24981

time:
2017-06-01T12:40:47Z
class:
comments:
Tests: Switch to openSUSE 42 (Leap) for packaging tests

openSUSE-13 has reached [EOL](https://en.opensuse.org/Lifetime).

Replace openSUSE-13 with openSUSE-42 (Leap) for packaging tests and
update docs.

Relates #25001

time:
2017-06-01T12:12:26Z
class:
test/framework/src/main/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
test/framework/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertionsTests.java
comments:
[Tests] Improve error message for failed xContentEquivalent() tests (#24828)

For comparing actual and parsed object equality for the response parsing we
currently rely on comparing the original xContent and the output of the parsed 
object. Currently we only have cryptic error messages if this comparison fails 
which are hard to read also because we recursively compare lists and maps of 
the xContent structures we compare.

This commits leverages the existing NotEqualMessageBuilder for providing error 
messages  that are more detailed and useful for debugging if an error occurs.

time:
2017-06-01T12:04:21Z
class:
core/src/main/java/org/elasticsearch/index/engine/CombinedDeletionPolicy.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/translog/Translog.java
core/src/main/java/org/elasticsearch/index/translog/TranslogDeletionPolicy.java
core/src/test/java/org/elasticsearch/index/engine/CombinedDeletionPolicyTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/shard/RefreshListenersTests.java
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
Introducing a translog deletion policy (#24950)

Currently, the decisions regarding which translog generation files to delete are hard coded in the interaction between the `InternalEngine` and the `Translog` classes. This PR extracts it to a dedicated class called `TranslogDeletionPolicy`, for two main reasons:

1) Simplicity - the code is easier to read and understand (no more two phase commit on the translog, the Engine can just commit and the translog will respond)
2) Preparing for future plans to extend the logic we need - i.e., retain multiple lucene commit and also introduce a size based retention logic, allowing people to always keep a certain amount of translog files around. The latter is useful to increase the chance of an ops based recovery.

time:
2017-06-01T10:54:16Z
class:
core/src/main/java/org/elasticsearch/index/analysis/PathHierarchyTokenizerFactory.java
comments:
Enforce validation for PathHierarchy tokenizer (#23510)

If delimiter or replacement parameter are an empty string, the error is not clear enough to indicate how to fix it.
With this change, the user knows these parameter must be a non empty string.

time:
2017-06-01T10:11:21Z
class:
comments:
Documented the level parameter to nodes stats

Closes #24999

time:
2017-06-01T08:56:17Z
class:
client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java
client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RequestTests.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java
comments:
Add searchScroll method to high level REST client (#24938)

time:
2017-06-01T08:20:44Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
test: Always issue a refresh after we have indexed, otherwise subsequent searches may return different results.

time:
2017-05-31T22:33:11Z
class:
core/src/test/java/org/elasticsearch/transport/CompressibleBytesOutputStreamTests.java
comments:
Fix broken build from stream with zero bytes (#24993)

This is related to #24927. There was a small possibility that a test
was attempting to compress a stream with zero bytes. This was causing
a failure.

This test now requires at least one byte.

time:
2017-05-31T17:42:47Z
class:
comments:
Docs: Fix typo in docker docs (#24988)

`boostrap.memory_lock` -> `bootstrap.memory_lock`

time:
2017-05-31T17:25:33Z
class:
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
Test: be more careful while flushing

We don't actually want to flush all the indices in the full cluster
restart tests. Never. *Sometimes* we want to flush certain indices
though.

time:
2017-05-31T16:07:21Z
class:
modules/parent-join/src/main/java/org/elasticsearch/join/ParentJoinPlugin.java
modules/parent-join/src/main/java/org/elasticsearch/join/fetch/ParentJoinFieldSubFetchPhase.java
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentIdFieldMapper.java
modules/parent-join/src/main/java/org/elasticsearch/join/mapper/ParentJoinFieldMapper.java
modules/parent-join/src/test/java/org/elasticsearch/join/fetch/ParentJoinFieldSubFetchPhaseTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/mapper/ParentJoinFieldMapperTests.java
comments:
Introduce ParentJoinFieldMapper, a field mapper that creates parent/child relation within documents of the same index (#24978)

* Introduce ParentJoinFieldMapper, a field mapper that creates parent/child relation within documents of the same index

This change adds a new field mapper named ParentJoinFieldMapper. This mapper is a replacement for the ParentFieldMapper but instead of using the types in the mapping
it uses an internal field to materialize parent/child relation within a single index.
This change also adds a fetch sub phase that automatically retrieves the join name (parent or child name) and the parent id for child documents in the response hit fields.
The compatibility with `has_parent`, `has_child` queries and `children` agg will be added in a follow up.

Relates #20257

time:
2017-05-31T16:00:40Z
class:
core/src/main/java/org/elasticsearch/transport/CompressibleBytesOutputStream.java
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
core/src/test/java/org/elasticsearch/transport/CompressibleBytesOutputStreamTests.java
comments:
Add CompressibleBytesOutputStream for compression (#24927)

This is a follow-up to #23941. Currently there are a number of
complexities related to compression. The raw DeflaterOutputStream must
be closed prior to sending bytes to ensure that EOS bytes are written.
But the underlying ReleasableBytesStreamOutput cannot be closed until
the bytes are sent to ensure that the bytes are not reused.

Right now we have three different stream references hanging around in
TCPTransport to handle this complexity. This commit introduces
CompressibleBytesOutputStream to be one stream implemenation that will
behave properly with or without compression enabled.

time:
2017-05-31T15:05:22Z
class:
core/src/main/java/org/elasticsearch/common/metrics/EWMA.java
core/src/main/java/org/elasticsearch/common/metrics/MeterMetric.java
comments:
Remove unused MeterMetric and specialized EWMA (#24975)

This metric is not used in the ES codebase at all. It's also not as likely to be
used since it relies on a periodic "tick", which we don't currently use.

time:
2017-05-31T10:42:05Z
class:
core/src/main/java/org/elasticsearch/action/search/ExpandSearchPhase.java
core/src/main/java/org/elasticsearch/action/search/FetchSearchPhase.java
core/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
core/src/test/java/org/elasticsearch/action/search/FetchSearchPhaseTests.java
comments:
Compute the took time of the query after the expand phase (#24902)

The took time computed for search requests does not take in account the expand search phase.
This change delays the computation to after the expand phase finishes.

Relates #24900

time:
2017-05-31T09:35:01Z
class:
core/src/main/java/org/elasticsearch/search/suggest/completion/context/CategoryContextMapping.java
core/src/test/java/org/elasticsearch/search/suggest/ContextCompletionSuggestSearchIT.java
comments:
Fix context suggester to read values from keyword type field (#24200)

Closes #24129

time:
2017-05-31T07:34:08Z
class:
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
core/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/KeywordMarkerTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/PorterStemTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SnowballTokenFilterFactory.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/TrimTokenFilterFactory.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/KeywordMarkerFilterFactoryTests.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
Moved `keyword_marker`, `trim`, `snowball` and `porter_stemmer` tokenfilter factories from core to common-analysis module.

Relates to #23658

time:
2017-05-31T07:30:10Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/BucketOrder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/IpTermsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java
comments:
Added more unit test coverage for terms aggregation and
 removed terms agg integration tests that were replaced by unit tests.

time:
2017-05-31T07:27:41Z
class:
core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
Move OldIndexBackwardsCompatibilityIT#assertBasicSearchWorks over to full cluster restart qa module.

Relates to #24939

time:
2017-05-31T07:16:23Z
class:
core/src/test/java/org/elasticsearch/action/search/SearchResponseTests.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
comments:
[Test] Mute SearchResponseTests.testFromXContent()

And also AggregationsTests.testFromXContent() until
https://github.com/elastic/elasticsearch/pull/24964 is merged.

time:
2017-05-31T07:11:33Z
class:
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorFieldMapperTests.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchIT.java
comments:
test: Stop using the `mapping.single_type` setting in percolator tests.

Closes #24958

time:
2017-05-31T07:11:00Z
class:
core/src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java
core/src/main/java/org/elasticsearch/search/profile/AbstractProfileBreakdown.java
core/src/main/java/org/elasticsearch/search/profile/Timer.java
core/src/main/java/org/elasticsearch/search/profile/aggregation/AggregationProfileBreakdown.java
core/src/main/java/org/elasticsearch/search/profile/aggregation/ProfilingAggregator.java
core/src/main/java/org/elasticsearch/search/profile/aggregation/ProfilingLeafBucketCollector.java
core/src/main/java/org/elasticsearch/search/profile/query/ProfileScorer.java
core/src/main/java/org/elasticsearch/search/profile/query/ProfileWeight.java
core/src/main/java/org/elasticsearch/search/profile/query/QueryProfileBreakdown.java
comments:
Eliminate array access in tight loops when profiling is enabled. (#24959)

This makes profiling classes acquire a timer up-front that can be then reused
across all calls, in order to save bound checks for methods that are called in
tight loops.

time:
2017-05-31T07:09:53Z
class:
core/src/main/java/org/elasticsearch/index/analysis/PatternAnalyzer.java
core/src/test/java/org/elasticsearch/index/analysis/PatternAnalyzerTests.java
comments:
PatternAnalyzer should lowercase wildcard queries when `lowercase` is true. (#24967)

time:
2017-05-30T23:32:14Z
class:
core/src/main/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunction.java
core/src/main/java/org/elasticsearch/index/query/InnerHitContextBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java
core/src/main/java/org/elasticsearch/script/ExplainableSearchScript.java
core/src/main/java/org/elasticsearch/script/LeafSearchScript.java
core/src/main/java/org/elasticsearch/script/ScriptContext.java
core/src/main/java/org/elasticsearch/script/SearchScript.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java
core/src/main/java/org/elasticsearch/search/aggregations/support/values/ScriptBytesValues.java
core/src/main/java/org/elasticsearch/search/aggregations/support/values/ScriptDoubleValues.java
core/src/main/java/org/elasticsearch/search/aggregations/support/values/ScriptLongValues.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/ScriptFieldsContext.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/ScriptFieldsFetchSubPhase.java
core/src/main/java/org/elasticsearch/search/sort/ScriptSortBuilder.java
core/src/test/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunctionTests.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/search/aggregations/support/ScriptValuesTests.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionSearchScript.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/ExpressionTests.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/ScriptImpl.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Scripting: Add StatefulFactoryType as optional intermediate factory in script contexts (#24974)

ScriptContexts currently understand a FactoryType that can produce
instances of the script InstanceType. However, for search scripts, this
does not work as we have the concept of LeafSearchScript that is created
per lucene segment. This commit effectively renames the existing
SearchScript class into SearchScript.LeafFactory, which is a new,
optional, class that can be defined within a ScriptContext.
LeafSearchScript is effectively renamed back into SearchScript. This
change allows the model of stateless factory -> stateful factory ->
script instance to continue, but in a generic way that any script
context may take advantage of.

relates #20426

time:
2017-05-30T21:30:48Z
class:
modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/Debugger.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ImplementInterfacesTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptTestCase.java
comments:
Make Painless Compiler Use an Instance Per Context (#24972)

Allows for easier management of compilation of individual interfaces on a per script context basis.

time:
2017-05-30T20:22:17Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java
comments:
Clarify acquiring index shard permit

In previous work, we refactored the delay mechanism in index shard
operation permits to allow for async delaying of acquisition. This
refactoring made explicit when permit acquisition is disabled whereas
previously we were relying on an implicit condition, namely that all
permits were acquired by the thread trying to delay acquisition. When
using the implicit mechanism, we tried to acquire a permit and if this
failed, we returned a null releasable as an indication that our
operation should be queued. Yet, now we know when we are delayed and we
should not even try to acquire a permit. If we try to acquire a permit
and one is not available, we know that we are not delayed, and so
acquisition should be successful. If it is not successful, something is
deeply wrong. This commit takes advantage of this refactoring to
simplify the internal implementation.

Relates #24971

time:
2017-05-30T19:34:20Z
class:
comments:
Set number of processes in systemd unit file

This commit sets the number of processes in the systemd unit file for
Elasticsearch to meet the bootstrap checks.

Relates #24970

time:
2017-05-30T17:19:44Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
comments:
Fill gaps on primary promotion

When a primary is promoted, it could have gaps in its history due to
concurrency and in-flight operations when it was serving as a
replica. This commit fills the gaps in the history of the promoted shard
after all operations from the previous term have drained, and future
operations are blocked. This commit does not handle replicating the
no-ops that fill the gaps to any remaining replicas, that is the
responsibility of the primary/replica sync that we are laying the ground
work for.

Relates #24945

time:
2017-05-30T17:13:07Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/GlobalOrdinalsSignificantTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactoryTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java
core/src/test/java/org/elasticsearch/search/profile/aggregation/AggregationProfilerIT.java
comments:
Terms aggregation should remap global ordinal buckets when a sub-aggregator is used to sort the terms (#24941)

`terms` aggregations at the root level use the `global_ordinals` execution hint by default.
When all sub-aggregators can be run in `breadth_first` mode the collected buckets for these sub-aggs are dense (remapped after the initial pruning).
But if a sub-aggregator is not deferrable and needs to collect all buckets before pruning we don't remap global ords and the aggregator needs to deal with sparse buckets.
Most (if not all) aggregators expect dense buckets and uses this information to allocate memories.
This change forces the remap of the global ordinals but only when there is at least one sub-aggregator that cannot be deferred.

Relates #24788

time:
2017-05-30T16:42:26Z
class:
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/DateFormat.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateFormatTests.java
comments:
Fix floating-point error when DateProcessor parses UNIX (#24947)

DateProcessor's DateFormat UNIX format parser resulted in
a floating point rounding error when parsing certain stringed
epoch times. Now Double.parseDouble is used, preserving the
intented input.

time:
2017-05-30T16:03:46Z
class:
modules/lang-painless/src/main/java/org/elasticsearch/painless/Compiler.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScript.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/WriterConstants.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/node/SSource.java
comments:
Make PainlessScript an interface (#24966)

Allows more flexibility for the specified script context interface if we want to allow script contexts to specify an abstract class instead.

time:
2017-05-30T15:39:36Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
comments:
Introduce clean transition on primary promotion

This commit introduces a clean transition from the old primary term to
the new primary term when a replica is promoted primary. To accomplish
this, we delay all operations before incrementing the primary term. The
delay is guaranteed to be in place before we increment the term, and
then all operations that are delayed are executed after the delay is
removed which asynchronously happens on another thread. This thread does
not progress until in-flight operations that were executing are
completed, and after these operations drain, the delayed operations
re-acquire permits and are executed.

Relates #24925

time:
2017-05-30T15:16:32Z
class:
core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java
comments:
Fix typo in comment in ReplicationOperation.java

Within two lines of each other appears "fallthrough" and "fall through",
both typed by the same person who should have been paying better
attention and only one of these is correct and the inconsistency is
bothersome. This commit fixes the errant one.

time:
2017-05-30T14:48:35Z
class:
core/src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
core/src/main/java/org/elasticsearch/action/index/IndexRequest.java
comments:
Prevent Index & Delete request primaryTerm getter/setter, setShardId setter

time:
2017-05-30T14:39:22Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
core/src/main/java/org/elasticsearch/index/analysis/AbstractTokenizerFactory.java
core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzer.java
core/src/main/java/org/elasticsearch/index/analysis/CustomAnalyzerProvider.java
core/src/main/java/org/elasticsearch/index/analysis/CustomNormalizerProvider.java
core/src/main/java/org/elasticsearch/index/analysis/PreConfiguredTokenizer.java
core/src/main/java/org/elasticsearch/index/analysis/TokenizerFactory.java
core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltTokenizers.java
core/src/test/java/org/elasticsearch/indices/analysis/DummyAnalysisPlugin.java
core/src/test/java/org/elasticsearch/indices/analysis/DummyAnalyzer.java
core/src/test/java/org/elasticsearch/indices/analysis/DummyAnalyzerProvider.java
core/src/test/java/org/elasticsearch/indices/analysis/DummyCharFilterFactory.java
core/src/test/java/org/elasticsearch/indices/analysis/DummyTokenFilterFactory.java
core/src/test/java/org/elasticsearch/indices/analysis/DummyTokenizerFactory.java
core/src/test/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzerIntegrationIT.java
comments:
Drop name from TokenizerFactory (#24869)

Drops `TokenizerFactory#name`, replacing it with
`CustomAnalyzer#getTokenizerName` which is much better targeted at
its single use case inside the analysis API.

Drops a test that I would have had to refactor which is duplicated by
`AnalysisModuleTests`.

To keep this change from blowing up in size I've left two mostly
mechanical changes to be done in followups:
1. `TokenizerFactory` can now be entirely dropped and replaced with
`Supplier<Tokenizer>`.
2. `AbstractTokenizerFactory`'s ctor still takes a `String` parameter
where the name once was.

time:
2017-05-30T14:36:22Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/movavg/MovAvgPipelineAggregator.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/moving/avg/MovAvgIT.java
comments:
Correctly set doc_count when MovAvg "predicts" values on existing buckets (#24892)

If the bucket already exists, due to non-overlapping series or missing data, the
MovAvg creates a merged bucket with the existing aggs + the new prediction.  This
fixes a small bug where the doc_count was not being set correctly.

Relates to #24327

time:
2017-05-30T14:05:11Z
class:
core/src/main/java/org/elasticsearch/action/support/replication/ReplicationOperation.java
core/src/test/java/org/elasticsearch/action/support/replication/ReplicationOperationTests.java
comments:
Handle primary failure handling replica response

Today if the primary throws an exception while handling the replica
response (e.g., because it is already closed while updating the local
checkpoint for the replica), or because of a bug that causes an
exception to be thrown in the replica operation listener, this exception
is caught by the underlying transport handler plumbing and is translated
into a response handler failure transport exception that is passed to
the onFailure method of the replica operation listener. This causes the
primary to turn around and fail the replica which is a disastrous and
incorrect outcome as there's nothing wrong with the replica, it is the
primary that is broken and deserves a paddlin'. This commit handles this
situation by failing the primary.

Relates #24926

time:
2017-05-30T13:42:07Z
class:
comments:
Add missing word to terms-query.asciidoc (#24960)

time:
2017-05-30T13:02:01Z
class:
comments:
Correct some spelling in match-phrase-prefix docs (#24956)

time:
2017-05-30T12:22:23Z
class:
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
testConcurrentWriteViewsAndSnapshot shouldn't flush concurrently

Fixes #24933

time:
2017-05-30T09:06:54Z
class:
core/src/test/java/org/elasticsearch/search/sort/FieldSortIT.java
comments:
[TEST] Fix FieldSortIT failures

time:
2017-05-30T08:16:08Z
class:
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/ParsedMatrixStats.java
modules/aggs-matrix-stats/src/test/java/org/elasticsearch/search/aggregations/matrix/stats/InternalMatrixStatsTests.java
comments:
Add doc_count to ParsedMatrixStats (#24952)

This commit adds support in ParsedMatrixStats for parsing the doc_count
field.

Related to #24776

time:
2017-05-30T07:39:41Z
class:
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/InternalMatrixStats.java
comments:
Add document count to Matrix Stats aggregation response (#24776)

This commit adds a `doc_count` field to the response body of Matrix
Stats aggregation. It exposes the number of documents involved in
 the computation of statistics, a value that can already be retrieved using
  the method MatrixStats.getDocCount() in the Java API.

time:
2017-05-30T07:23:04Z
class:
core/src/main/java/org/elasticsearch/search/sort/ScriptSortBuilder.java
core/src/test/java/org/elasticsearch/search/sort/FieldSortIT.java
comments:
Fix script field sort returning Double.MAX_VALUE for all documents (#24942)

This change fixes the script field sort when the returned type is a number.

Closes #24940

time:
2017-05-29T15:37:27Z
class:
core/src/test/java/org/elasticsearch/recovery/RelocationIT.java
comments:
Add a second refresh to concurrent relocation test

This commit adds a second refresh to the concurrent relocation
test. This is necessary as the first refresh might have brought back a
local checkpoint for a shard that a newly relocated primary became aware
of but did not yet receive a local checkpoint for that shard. When that
local checkpoint arrives on the new primary, the global checkpoint could
advance again and so we need a second replication action to push that
global checkpoint back out to the replica. This is indeed a hack, and it
will eventually be removed.

Closes #24599

time:
2017-05-29T15:36:44Z
class:
comments:
Add a dummy_index to upgrade tests to ensure we recover fine with replicas (#24937)

We default to 0 replicas in the rolling restart scenario already to ensure
we test against worst case. Yet, this adds a dummy index to ensure we also
recover and index with replicas just fine.

time:
2017-05-29T14:22:32Z
class:
comments:
Rework bwc snapshot projects to build up to two bwc versions (#24870)

Removes the `distribution:bwc` project in favor of
`distribution:bwc-release-snapshot` and
`distribution:bwc-stable-snapshot`.
`distribution:bwc-release-snapshot` builds a snapshot of the
latest release branch (5.4 now) if needed for backwards
compatibility. `distribution:bwc-stable-snapshot` builds a
snapshot of the latest stable branch (5.x now) if needed for
backwards compatibility.

time:
2017-05-29T13:56:30Z
class:
core/src/main/java/org/elasticsearch/index/engine/Engine.java
core/src/main/java/org/elasticsearch/index/engine/EngineConfig.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/LocalShardSnapshot.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoverySourceHandler.java
core/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/shard/RefreshListenersTests.java
core/src/test/java/org/elasticsearch/indices/recovery/RecoverySourceHandlerTests.java
comments:
Move the IndexDeletionPolicy to be engine internal (#24930)

The `IndexDeletionPolicy` is currently instantiated by `IndexShard` and is then passed through to the engine as a parameter. That's a shame as it is really just an implementation detail and the engine already has a method to acquire a commit.

This is preparing for a follow up PR that will we connect the index deletion policy with a new translog deletion policy.

Relates to #10708

time:
2017-05-29T13:45:51Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalExtendedStatsTests.java
comments:
[Tests] Harden InternalExtendedStatsTests (#24934)

The order in which double values are added in Java can give different results,
so in testing the sum and sumOfSquares we need to allow some delta for testing
equality. The difference can be larger for large sum values, so we should
account for this by making the delta in the assertion depend on the values
magnitude.

Closes #24931

time:
2017-05-29T11:58:31Z
class:
comments:
TCorrecting api name (#24924)

As per REST request signature for reroute, API has no underscore.

time:
2017-05-29T10:47:34Z
class:
client/rest-high-level/src/main/java/org/elasticsearch/client/Request.java
client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RequestTests.java
client/rest-high-level/src/test/java/org/elasticsearch/client/RestHighLevelClientTests.java
client/rest-high-level/src/test/java/org/elasticsearch/client/SearchIT.java
comments:
Add search method to high level REST client (#24796)

Relates to #23331

time:
2017-05-29T09:00:54Z
class:
core/src/main/java/org/elasticsearch/action/search/ClearScrollResponse.java
core/src/test/java/org/elasticsearch/search/ClearScrollResponseTests.java
comments:
Add fromXContent method to ClearScrollResponse (#24909)

ClearScrollResponse can print out its content into an XContentBuilder as it implements ToXContentObject. This PR add a fromXContent method to it so that we are able to recreate the response object when parsing the response back. This will be used in the high level REST client.

time:
2017-05-29T09:00:20Z
class:
core/src/main/java/org/elasticsearch/action/search/ClearScrollRequest.java
core/src/main/java/org/elasticsearch/rest/action/search/RestClearScrollAction.java
core/src/test/java/org/elasticsearch/action/search/ClearScrollRequestTests.java
core/src/test/java/org/elasticsearch/search/scroll/RestClearScrollActionTests.java
comments:
ClearScrollRequest to implement ToXContentObject (#24907)

ClearScrollRequest can be created from a request body, but it doesn't support the opposite, meaning printing out its content to an XContentBuilder. This is useful to the high level REST client and allows for better testing of what we parse.

Moved parsing method from RestClearScrollAction to ClearScrollRequest so that fromXContent and toXContent sit close to each other. Added unit tests to verify that body parameters override query_string parameters when both present (there is already a yaml test for this but unit test is even better)

time:
2017-05-29T08:56:35Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchScrollRequest.java
core/src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java
core/src/test/java/org/elasticsearch/action/search/SearchScrollRequestTests.java
core/src/test/java/org/elasticsearch/search/scroll/RestSearchScrollActionTests.java
comments:
SearchScrollRequest to implement ToXContentObject (#24906)

SearchScrollRequest can be created from a request body, but it doesn't support the opposite, meaning printing out its content to an XContentBuilder. This is useful to the high level REST client and allows for better testing of what we parse.

Moved parsing method from RestSearchScrollAction to SearchScrollRequest so that fromXContent and toXContent sit close to each other. Added unit tests to verify that body parameters override query_string parameters when both present (there is already a yaml test for this but unit test is even better)

time:
2017-05-28T17:36:47Z
class:
core/src/main/java/org/elasticsearch/indices/IndicesQueryCache.java
comments:
Fix bug in weight computation for query cache

When proportioning the shared RAM bytes across the shards of the query
cache, there's a computation that shares these bytes according to the
relative size of the shard cache to the total size of all the shard
caches. This computation had a bug where integer division was performed
instead which leads to this computation often being zero. This commit
fixes this bug by casting the numerator to a double before doing the
division so that double division is performed.

Relates #24856

time:
2017-05-27T22:31:44Z
class:
qa/verify-version-constants/src/test/java/org/elasticsearch/qa/verify_version_constants/VerifyVersionConstantsIT.java
comments:
Fix Lucene version expectation

The Lucene version expectation in the verify Lucene version test is
backwards, mixing up the expected and actual values. This commit
reorders them to fix this issue.

time:
2017-05-27T19:46:16Z
class:
core/src/main/java/org/elasticsearch/Version.java
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
qa/verify-version-constants/src/test/java/org/elasticsearch/qa/verify_version_constants/VerifyVersionConstantsIT.java
comments:
Verify Lucene version constants

The Lucene version constants for 5.4.1 and 5.5.0 are wrong, they are
listed as 6.5.0 instead of 6.5.1. This commit fixes these issues, and
adds a test to ensure that this does not happen again.

Relates #24923

time:
2017-05-27T19:40:37Z
class:
core/src/main/java/org/elasticsearch/index/search/stats/ShardSearchStats.java
core/src/main/java/org/elasticsearch/search/SearchService.java
comments:
Avoid double decrement on current query counter

This commit fixes a double decrement bug on the current query
counter. The double decrement arises in a situation when the fetch phase
is inlined for a query that is only touching one shard. After the query
phase succeeds we decrement the current query counter. If the fetch
phase ultimately fails, an exception is thrown and we decrement the
current query counter again in the catch block. We also add assertions
that all current stats counters remain non-negative at all
times.

Relates #24922

time:
2017-05-26T22:36:32Z
class:
core/src/main/java/org/elasticsearch/Version.java
core/src/main/java/org/elasticsearch/action/DocWriteResponse.java
core/src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java
core/src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java
core/src/main/java/org/elasticsearch/action/admin/indices/shards/IndicesShardStoresResponse.java
core/src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java
core/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java
core/src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java
core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java
core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java
core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesResponse.java
core/src/main/java/org/elasticsearch/action/index/IndexRequest.java
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/cluster/block/ClusterBlock.java
core/src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateMetaData.java
core/src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java
core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java
core/src/main/java/org/elasticsearch/common/settings/Settings.java
core/src/main/java/org/elasticsearch/common/transport/TransportAddress.java
core/src/main/java/org/elasticsearch/gateway/TransportNodesListGatewayStartedShards.java
core/src/main/java/org/elasticsearch/index/IndexSortConfig.java
core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
core/src/main/java/org/elasticsearch/index/engine/Segment.java
core/src/main/java/org/elasticsearch/index/mapper/AllFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/BooleanFieldMapper.java
core/src/main/java/org/elasticsearch/index/mapper/DynamicTemplate.java
core/src/main/java/org/elasticsearch/index/mapper/MapperService.java
core/src/main/java/org/elasticsearch/index/mapper/TypeParsers.java
core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/CommonTermsQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java
core/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java
core/src/main/java/org/elasticsearch/index/seqno/GlobalCheckpointSyncAction.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/store/StoreStats.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryFinalizeRecoveryRequest.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryPrepareForTranslogOperationsRequest.java
core/src/main/java/org/elasticsearch/indices/recovery/RecoveryTranslogOperationsResponse.java
core/src/main/java/org/elasticsearch/indices/recovery/StartRecoveryRequest.java
core/src/main/java/org/elasticsearch/monitor/fs/FsInfo.java
core/src/main/java/org/elasticsearch/search/aggregations/InternalOrder.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseBuilder.java
core/src/main/java/org/elasticsearch/snapshots/SnapshotInfo.java
core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/common/settings/SettingsTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/mapper/DynamicTemplateTests.java
core/src/test/java/org/elasticsearch/indices/recovery/StartRecoveryRequestTests.java
core/src/test/java/org/elasticsearch/search/aggregations/InternalOrderTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MultiSearchTemplateRequest.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
qa/mixed-cluster/src/test/java/org/elasticsearch/backwards/IndexingIT.java
test/framework/src/main/java/org/elasticsearch/test/VersionUtils.java
test/framework/src/test/java/org/elasticsearch/test/VersionUtilsTests.java
test/framework/src/test/java/org/elasticsearch/test/test/VersionUtilsTests.java
comments:
Remove the need for _UNRELEASED suffix in versions (#24798)

Removes the need for the `_UNRELEASED` suffix on versions by detecting if a version should be unreleased or not based on the versions around it. This should make it simpler to automate the task of adding a new version label.

time:
2017-05-26T18:59:53Z
class:
core/src/main/java/org/elasticsearch/monitor/fs/FsProbe.java
core/src/test/java/org/elasticsearch/monitor/fs/FsProbeTests.java
comments:
Adjust available and free bytes to be non-negative on huge FSes

In #23093 we made a change so that total bytes for a filesystem would not be a
negative value when the total bytes were > Long.MAX_VALUE.

This fixes #24453 which had a related issue where `available` and `free` bytes
could also be so large that they were negative. These will now return
`Long.MAX_VALUE` for the bytes if the JDK returns a negative value.

time:
2017-05-26T18:07:48Z
class:
core/src/main/java/org/elasticsearch/Version.java
core/src/test/java/org/elasticsearch/bwcompat/OldIndexBackwardsCompatibilityIT.java
qa/full-cluster-restart/src/test/java/org/elasticsearch/upgrades/FullClusterRestartIT.java
comments:
Begin replacing static index tests with full restart tests (#24846)

These tests spin up two nodes of an older version of Elasticsearch,
create some stuff, shut down the nodes, start the current version,
and verify that the created stuff works.

You can run `gradle qa:full-cluster-restart:check` to run these
tests against the head of the previous branch of Elasticsearch
(5.x for master, 5.4 for 5.x, etc) or you can run
`gradle qa:full-cluster-restart:bwcTest` to run this test against
all "index compatible" versions, one after the other. For master
this is every released version in the 5.x.y version *and* the tip
of the 5.x branch.

I'd love to add more to these tests in the future but these
currently just cover the functionality of the `create_bwc_index.py`
script and start to cover the assertions in the
`OldIndexBackwardsCompatibilityIT` test.

time:
2017-05-26T17:40:35Z
class:
comments:
Fix plugin docs for using custom config dir

This commit fixes an issue with the plugin docs incorrectly specifying
how to set a custom configuration directory. The correct way is to use
the environment variable CONF_DIR.

time:
2017-05-26T15:41:40Z
class:
comments:
Update context-suggest.asciidoc

Removed incorrect parameter

time:
2017-05-26T12:57:07Z
class:
core/src/main/java/org/elasticsearch/search/collapse/CollapseBuilder.java
comments:
Move BWC version to 5.5 after backport

Relates to #24517

time:
2017-05-26T11:28:08Z
class:
core/src/main/java/org/elasticsearch/action/search/ExpandSearchPhase.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseBuilder.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseContext.java
core/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
core/src/test/java/org/elasticsearch/search/collapse/CollapseBuilderTests.java
test/framework/src/main/java/org/elasticsearch/test/AbstractWireSerializingTestCase.java
comments:
Merge branch 'mattweber-multiple_collapse_inner_hits'

time:
2017-05-26T11:23:57Z
class:
core/src/main/java/org/elasticsearch/action/search/ExpandSearchPhase.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseBuilder.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseContext.java
core/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
core/src/test/java/org/elasticsearch/search/collapse/CollapseBuilderTests.java
test/framework/src/main/java/org/elasticsearch/test/AbstractWireSerializingTestCase.java
comments:
Support Multiple Collapse Inner Hits

Support multiple named inner hits on a field collapsing
request.

time:
2017-05-26T07:02:54Z
class:
core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/script/ExecutableScript.java
core/src/main/java/org/elasticsearch/script/ScriptContext.java
core/src/main/java/org/elasticsearch/script/ScriptEngine.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/SearchScript.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/ScriptHeuristic.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketscript/BucketScriptPipelineAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketselector/BucketSelectorPipelineAggregator.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorTests.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/ExpressionTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/CustomMustacheFactoryTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheScriptEngineTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheTests.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptEngineTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptTestCase.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollActionScriptTestCase.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Scripting: Rename CompiledType to FactoryType in ScriptContext (#24897)

This commit renames the concept of the "compiled type" to a "factory
type", along with all implementations of this class to be named Factory.
This brings it inline with the classes purpose.

time:
2017-05-25T23:55:47Z
class:
core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionPlugin.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustachePlugin.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessPlugin.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptPlugin.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
comments:
Scripting: Make contexts available to ScriptEngine construction (#24896)

This commit adds collection of all contexts to the parameters of
getScriptEngine. This will allow script engines like painless to
precache extra information about the contexts.

time:
2017-05-25T21:37:36Z
class:
core/src/test/java/org/elasticsearch/recovery/RelocationIT.java
comments:
Mute index and relocate concurrently

This test is failing sporadically and for now we mute it as we have a
failure with additional logging that should hopefully enable us to
assess the situation.

time:
2017-05-25T19:22:08Z
class:
comments:
Build: Add back explicit exclusions and remove gradle exclusions (#24879)

When transitive dependencies are disable for a dependency, gradle adds a
wildcard exclusion to the generated pom. However, some external tools
like ivy have bugs with wildcards. This commit adds back the explicit
generation of transitive excludes, and removes the gradle generated
exclusions element from the pom.

closes #24490

time:
2017-05-25T19:18:45Z
class:
core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java
core/src/main/java/org/elasticsearch/index/query/InnerHitContextBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java
core/src/main/java/org/elasticsearch/ingest/InternalTemplateService.java
core/src/main/java/org/elasticsearch/script/ExecutableScript.java
core/src/main/java/org/elasticsearch/script/ScriptContext.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/SearchScript.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/ScriptHeuristic.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketscript/BucketScriptPipelineAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketselector/BucketSelectorPipelineAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java
core/src/main/java/org/elasticsearch/search/sort/ScriptSortBuilder.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorTests.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/ExpressionTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportSearchTemplateAction.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/CustomMustacheFactoryTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheScriptEngineTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptEngineTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptTestCase.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollActionScriptTestCase.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/AbstractScriptTestCase.java
comments:
Scripting: Move context definitions to instance type classes (#24883)

This is a simple refactoring to move the context definitions into the
type that they use. While we have multiple context names for the same
class at the moment, this will eventually become one ScriptContext per
instance type, so the pattern of a static member on the interface called
CONTEXT can be used. This commit also moves the consolidated list of
contexts provided by core ES into ScriptModule.

time:
2017-05-25T19:11:33Z
class:
comments:
Build: Fix hadoop integ test error on windows (#24885)

This commit fixes the error message to escape the dollar sign for
referencing a literal `$HADOOP_HOME`, which caused an error while trying
to generate an error.

closes #24878

time:
2017-05-25T18:51:44Z
class:
core/src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest.java
core/src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java
core/src/test/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestTests.java
core/src/test/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestTests.java
comments:
Put mapping and index template requests do not need content type detection for 5.3.0+ (#24835)

This change cleans up some missed TODOs for content type detection on the source of put mapping and
put index template requests. In 5.3.0 and newer versions, the source is always JSON so the content
type detection is not needed. The TODOs were missed after the change was backported to 5.3.

Relates #24798

time:
2017-05-25T18:30:00Z
class:
core/src/main/java/org/elasticsearch/search/internal/ScrollContext.java
core/src/test/java/org/elasticsearch/search/internal/ScrollContextTests.java
comments:
Add the ability to store objects with a ScrollContext (#24777)

This commit adds the ability to store and retrieve data that should be associated with a
ScrollContext. Additionally the ScrollContext was made final as we should only have a single
implementation of this concept.

time:
2017-05-25T14:45:19Z
class:
comments:
add docs example for Ingest scripts manipulating document metadata (#24875)

It may not be clear to users that the Ingest ScriptProcessor context object `ctx` can 
manipulate document metadata like `_index` and `_type`.

time:
2017-05-25T13:02:43Z
class:
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
core/src/test/java/org/elasticsearch/transport/TCPTransportTests.java
comments:
Fix error message if an incompatible node connects (#24884)

This message broken in recent refactoring, this commit also adds a
basic unit-test to ensure we maintain the correct version.

time:
2017-05-25T03:06:32Z
class:
core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java
core/src/main/java/org/elasticsearch/script/ScriptEngine.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/ExpressionTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/CustomMustacheFactoryTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheScriptEngineTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheTests.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptEngineTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptTestCase.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Scripting: Make ScriptEngine.compile generic on the script context (#24873)

This commit changes the compile method of ScriptEngine to be generic in
the same way it is on ScriptService. This moves the shim of handling the
two existing context classes into each script engine, so that each
engine can be worked on independently to convert to real handling of
contexts.

time:
2017-05-25T02:20:49Z
class:
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/script/ScriptContext.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
comments:
Scripting: Remove unnecessary generic type from ScriptContext (#24877)

When developing the new ScriptContext, the compiled type was original
generic, so that the instance type was also necessary. However, since
CompiledType is all that is used by the compile method signature, we
actually don't need the instance type to be generic. This commit removes
the InstanceType, and finds the Class for it through reflection on the
CompiledType method.

time:
2017-05-24T21:29:02Z
class:
core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/script/CompiledScript.java
core/src/main/java/org/elasticsearch/script/ExecutableScript.java
core/src/main/java/org/elasticsearch/script/ScriptContext.java
core/src/main/java/org/elasticsearch/script/ScriptEngine.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/SearchScript.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/ScriptHeuristic.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketscript/BucketScriptPipelineAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketselector/BucketSelectorPipelineAggregator.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionContext.java
core/src/main/java/org/elasticsearch/template/CompiledTemplate.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorTests.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionExecutableScript.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionSearchScript.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/ExpressionTests.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/MoreExpressionTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportSearchTemplateAction.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/CustomMustacheFactoryTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheScriptEngineTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheTests.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptEngineTests.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/ScriptTestCase.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollActionScriptTestCase.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Scripting: Add instance and compiled classes to script contexts (#24868)

This commit modifies the compile method of ScriptService to be context
aware. The ScriptContext is now a generic class which contains both the
instance type and compiled type for a script. Instance type may be
stateful (for example, pre loading field information for the index a
script will execute on, like in expressions), while the compiled type is
stateless and used to construct instance type instances. This change is
only a first step to cutover ScriptService to the new paradigm. It only
converts callers to the script service, and has a small shim to wrap
compilation from the script engines to support the current two fixed
instance types, SearchScript and ExecutableScript.

time:
2017-05-24T20:19:27Z
class:
core/src/main/java/org/elasticsearch/script/ScriptEngine.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/lang-painless/src/test/java/org/elasticsearch/painless/NeedsScoreTests.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Scripting: Add default implementation of close() for ScriptEngine (#24851)

Since groovy was removed, we no longer have any ScriptEngines with
resources to release. We may want to keep the option open for a script
engine to close resources, but this would not be common. This commit
adds a default implementation to ScriptEngine for `close()` to reduce
the boiler plate that must be added for a ScriptEngine implementation.

time:
2017-05-24T19:31:30Z
class:
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
comments:
[TEST] Add test for retrying replica operations with real network

Related to #24745

time:
2017-05-24T16:05:02Z
class:
comments:
Test fix - rest test missing version skip for new 6.0 significant_text agg

time:
2017-05-24T15:55:32Z
class:
comments:
Add BWC packaging distributions

Some packaging tests depend on snapshot versions of packaging
distributions yet the build does not use a repository that includes such
distributions. While we could add such a repository, a better strategy
is to follow our approach for other BWC tests where we depend on a
locally-compiled archive distribution. This commit adds a local
compilation of packaging artifacts and substitutes these anywhere that
we would otherwise depend on a snapshot of these artifacts.

Relates #24861

time:
2017-05-24T15:51:00Z
class:
core/src/test/java/org/elasticsearch/recovery/RelocationIT.java
comments:
Increase logging in concurrent relocation test

This commit increases the logging level on the index and relocate
concurrently test to obtain some insight into the global checkpoint
moving backwards.

time:
2017-05-24T14:18:25Z
class:
comments:
Docs: Fix grammar in  aliases doc (#24852)

time:
2017-05-24T14:15:15Z
class:
core/src/test/java/org/elasticsearch/cluster/NoMasterNodeIT.java
comments:
NoMasterNodeIT shouldn't try to validate the length of a timeout

The current log tries make sure we waited some (but not too long). This is unpredictable and fails all the time. This commit removes all of it and just make sure that we throw the right exceptions after timing out.

Fixes #24369

time:
2017-05-24T14:04:25Z
class:
core/src/test/java/org/elasticsearch/transport/RemoteClusterServiceTests.java
comments:
Remote duplicate test from RemoteClusterServiceTests

The test `testEnsureConnected` was accidentially introduces during #24845

time:
2017-05-24T13:50:17Z
class:
core/src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreIT.java
comments:
[TEST] adds TRACE logging to org.elasticsearch.snapshots for the
SharedClusterSnapshotRestoreIT#testDataFileCorruptionDuringRestore test

time:
2017-05-24T13:38:54Z
class:
core/src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreIT.java
comments:
[TEST] increases testDataFileCorruptionDuringRestore logging to TRACE to
help debug sporadic tests failures.

time:
2017-05-24T12:46:43Z
class:
core/src/main/java/org/apache/lucene/analysis/miscellaneous/DeDuplicatingTokenFilter.java
core/src/main/java/org/apache/lucene/analysis/miscellaneous/DuplicateByteSequenceSpotter.java
core/src/main/java/org/apache/lucene/analysis/miscellaneous/DuplicateSequenceAttribute.java
core/src/main/java/org/apache/lucene/analysis/miscellaneous/DuplicateSequenceAttributeImpl.java
core/src/main/java/org/elasticsearch/search/SearchModule.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
core/src/main/java/org/elasticsearch/search/aggregations/AggregatorBase.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregatorFactory.java
core/src/test/java/org/apache/lucene/analysis/miscellaneous/DeDuplicatingTokenFilterTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTextTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTextAggregatorTests.java
comments:
SignificantText aggregation - like significant_terms, but for text (#24432)

* SignificantText aggregation - like significant_terms but doesn’t require fielddata=true, recommended used with `sampler` agg to limit expense of tokenizing docs and takes optional `filter_duplicate_text`:true setting to avoid stats skew from repeated sections of text in search results.

Closes #23674

time:
2017-05-24T11:49:02Z
class:
core/src/main/java/org/elasticsearch/ElasticsearchException.java
core/src/main/java/org/elasticsearch/index/AlreadyExpiredException.java
core/src/main/java/org/elasticsearch/index/engine/IgnoreOnRecoveryEngineException.java
core/src/main/java/org/elasticsearch/index/shard/TranslogRecoveryPerformer.java
core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java
comments:
Remove AlreadyExpiredException (#24857)

This is a relict from the TTL functionality that has been removed in #21670

time:
2017-05-24T11:26:39Z
class:
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java
core/src/main/java/org/elasticsearch/index/translog/Translog.java
core/src/main/java/org/elasticsearch/index/translog/TranslogWriter.java
core/src/test/java/org/elasticsearch/action/bulk/TransportShardBulkActionTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
core/src/test/java/org/elasticsearch/indices/recovery/PeerRecoveryTargetServiceTests.java
test/framework/src/main/java/org/elasticsearch/index/shard/IndexShardTestCase.java
comments:
Guarantee that translog generations are seqNo conflict free (#24825)

With #24779 in place, we can now guaranteed that a single translog generation file will never have a sequence number conflict that needs to be resolved by looking at primary terms. These conflicts can a occur when a replica contains an operation which isn't part of the history of a newly promoted primary. That primary can then assign a different operation to the same slot and replicate it to the replica.

PS. Knowing that each generation file is conflict free will simplifying repairing these conflicts when we read from the translog.

PPS. This PR also fixes some bugs in the piping of primary terms in the bulk shard action. These bugs are a result of the legacy of IndexRequest/DeleteRequest being a ReplicationRequest. We need to change that as a follow up.

Relates to #10708

time:
2017-05-24T11:15:28Z
class:
core/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java
core/src/main/java/org/elasticsearch/transport/RemoteClusterConnection.java
core/src/main/java/org/elasticsearch/transport/RemoteClusterService.java
core/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java
core/src/test/java/org/elasticsearch/transport/RemoteClusterServiceTests.java
comments:
Ensure remote cluster is connected before fetching `_field_caps` (#24845)

If a cluster disconnects and comes back up we should ensure that
we connected to the cluster before we fire the requests.

Closes #24763

time:
2017-05-24T09:43:54Z
class:
comments:
Fix link to perl docs (#24842)

* Fixes Elasticsearch issue #24606.

* Fixes Elasticsearch issue #24606.

* Fixes Elasticsearch issue #24606.

* Fixes Elasticsearch issue #24606.

* Issue #24606 - Changed the link text to Search::Elasticsearch::Client::5_0::Bulk and
Search::Elasticsearch::Client::5_0::Scroll.

time:
2017-05-24T03:34:12Z
class:
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/AvgIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/MetricAggScriptPlugin.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/SumIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountIT.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
core/src/test/java/org/elasticsearch/search/sort/ScriptSortBuilderTests.java
core/src/test/java/org/elasticsearch/update/UpdateIT.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Test: Convert test script engine impls to use MockScriptEngine (#24854)

This commit cleans up tests which currently use custom script engine
implementations, converting them to use a MockScriptEngine with script
functions provided by the tests. It also creates a common set of metric
scripts which were copied across a couple metric agg tests.

time:
2017-05-24T00:04:20Z
class:
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
comments:
Increase max compilations per minute in tests

Large test suites with unfortunate seed choices can easily exceed the
1000 script compilations per minute limit. This commit increases the
limit in integration tests to 2048.

time:
2017-05-23T20:41:39Z
class:
core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java
core/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java
comments:
Move InnerHitBuilder queries BWC version to 5.5 after the backport

Relates #24676

time:
2017-05-23T19:33:48Z
class:
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/Features.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/Stash.java
test/framework/src/test/java/org/elasticsearch/test/rest/yaml/StashTests.java
comments:
Add magic $_path stash key to docs tests (#24724)

Adds a "magic" key to the yaml testing stash mostly for use with
documentation tests. When unstashing an object, `$_path` is the
path into the current position in the object you are unstashing.
This means that in docs tests you can use
`// TESTRESPONSEs/somevalue/$body.${_path}/` to mean "replace
`somevalue` with whatever is the response in the same position."

Compare how you must carefully mock out all the numbers in the profile
response without this change:
```
// TESTRESPONSE[s/"id": "\[2aE02wS1R8q_QFnYu6vDVQ\]\[twitter\]\[1\]"/"id": $body.profile.shards.0.id/]
// TESTRESPONSE[s/"rewrite_time": 51443/"rewrite_time": $body.profile.shards.0.searches.0.rewrite_time/]
// TESTRESPONSE[s/"score": 51306/"score": $body.profile.shards.0.searches.0.query.0.breakdown.score/]
// TESTRESPONSE[s/"time_in_nanos": "1873811"/"time_in_nanos": $body.profile.shards.0.searches.0.query.0.time_in_nanos/]
// TESTRESPONSE[s/"build_scorer": 2935582/"build_scorer": $body.profile.shards.0.searches.0.query.0.breakdown.build_scorer/]
// TESTRESPONSE[s/"create_weight": 919297/"create_weight": $body.profile.shards.0.searches.0.query.0.breakdown.create_weight/]
// TESTRESPONSE[s/"next_doc": 53876/"next_doc": $body.profile.shards.0.searches.0.query.0.breakdown.next_doc/]
// TESTRESPONSE[s/"time_in_nanos": "391943"/"time_in_nanos": $body.profile.shards.0.searches.0.query.0.children.0.time_in_nanos/]
// TESTRESPONSE[s/"score": 28776/"score": $body.profile.shards.0.searches.0.query.0.children.0.breakdown.score/]
// TESTRESPONSE[s/"build_scorer": 784451/"build_scorer": $body.profile.shards.0.searches.0.query.0.children.0.breakdown.build_scorer/]
// TESTRESPONSE[s/"create_weight": 1669564/"create_weight": $body.profile.shards.0.searches.0.query.0.children.0.breakdown.create_weight/]
// TESTRESPONSE[s/"next_doc": 10111/"next_doc": $body.profile.shards.0.searches.0.query.0.children.0.breakdown.next_doc/]
// TESTRESPONSE[s/"time_in_nanos": "210682"/"time_in_nanos": $body.profile.shards.0.searches.0.query.0.children.1.time_in_nanos/]
// TESTRESPONSE[s/"score": 4552/"score": $body.profile.shards.0.searches.0.query.0.children.1.breakdown.score/]
// TESTRESPONSE[s/"build_scorer": 42602/"build_scorer": $body.profile.shards.0.searches.0.query.0.children.1.breakdown.build_scorer/]
// TESTRESPONSE[s/"create_weight": 89323/"create_weight": $body.profile.shards.0.searches.0.query.0.children.1.breakdown.create_weight/]
// TESTRESPONSE[s/"next_doc": 2852/"next_doc": $body.profile.shards.0.searches.0.query.0.children.1.breakdown.next_doc/]
// TESTRESPONSE[s/"time_in_nanos": "304311"/"time_in_nanos": $body.profile.shards.0.searches.0.collector.0.time_in_nanos/]
// TESTRESPONSE[s/"time_in_nanos": "32273"/"time_in_nanos": $body.profile.shards.0.searches.0.collector.0.children.0.time_in_nanos/]
```

To how you can cavalierly mock all the numbers at once with this change:
```
// TESTRESPONSE[s/(?<=[" ])\d+(\.\d+)?/$body.$_path/]
```

time:
2017-05-23T18:15:40Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/ParsedGeoBounds.java
comments:
Use ParseField constants in ParsedGeoBounds (#24849)

time:
2017-05-23T16:37:40Z
class:
core/src/main/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutor.java
core/src/test/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutorTests.java
comments:
[TEST] Add additional assert logging

time:
2017-05-23T14:43:44Z
class:
core/src/main/java/org/elasticsearch/cluster/routing/OperationRouting.java
core/src/test/java/org/elasticsearch/action/support/replication/ClusterStateCreationUtils.java
core/src/test/java/org/elasticsearch/cluster/routing/OperationRoutingTests.java
comments:
Search: Fairer balancing when routing searches by session ID (#24671)

A user reported uneven balancing of load on nodes handling search requests from Kibana which supplies a session ID in a routing preference. Each shardId was selecting the same node for a given session ID because one data node had all primaries and the other data node held all replicas after cluster startup.
This change counteracts the tendency to opt for the same node given the same user-supplied preference by incorporating shard ID in the hash of the preference key. This will help randomise node choices across shards.

Closes #24642

time:
2017-05-23T14:19:12Z
class:
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/InternalMatrixStats.java
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/MatrixStatsAggregator.java
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/MatrixStatsAggregatorFactory.java
modules/aggs-matrix-stats/src/test/java/org/elasticsearch/search/aggregations/matrix/stats/MatrixStatsAggregatorTests.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java
comments:
Added unit tests for MatrixStatsAggregator

time:
2017-05-23T13:40:53Z
class:
core/src/test/java/org/elasticsearch/index/translog/TranslogTests.java
comments:
simplify flow/stop control in testConcurrentWriteViewsAndSnapshot

Thread starvation of the control thread could cause the writer to keep on generating ops and make the test go out of control (OOM).

time:
2017-05-23T13:34:51Z
class:
core/src/main/java/org/elasticsearch/Assertions.java
comments:
Suppress inspections on assertions helper

This commit adds comments to org.elasticsearch.Assertions that disables
IntelliJ from complaining about using assert with side-effects, and
using constant conditions there as the side-effect with a constant
condition is intentionally employed.

time:
2017-05-23T13:32:48Z
class:
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
comments:
Remove unused assertions enabled method

This commit removes an unused assertions enabled method in
ESTestCase. For future uses of such a method, use the field ENABLED in
org.elasticsearch.Assertions.

time:
2017-05-23T12:22:18Z
class:
core/src/main/java/org/elasticsearch/Assertions.java
core/src/main/java/org/elasticsearch/cluster/routing/RoutingNodes.java
core/src/main/java/org/elasticsearch/cluster/service/MasterService.java
core/src/main/java/org/elasticsearch/common/geo/builders/ShapeBuilder.java
core/src/main/java/org/elasticsearch/common/lucene/ShardCoreKeyMap.java
core/src/main/java/org/elasticsearch/common/util/concurrent/ReleasableLock.java
core/src/test/java/org/elasticsearch/common/hppc/HppcMapsTests.java
comments:
Add assertions enabled helper

Today in the code base we have lots of ugly code blocks like:

  boolean assertionsEnabled = false;
  assert assertionsEnabled = true;
  if (assertionsEnabled) {
    // something
  }

These are a nuisance. Instead, we can do this in exactly one place and
replace these blocks with

  if (Assertions.ENABLED) {
    // something
  }

The cool thing here is that since this is a static final field, the JIT
can optimize away the check at runtime if assertions are disabled.

Relates #24834

time:
2017-05-23T11:33:54Z
class:
comments:
Build: add client jar for aggs-matrix-stats (#24827)

This will be useful for the high level client to add support for the matrix stats aggregation, as we will ship with this jar by default like we do for parent-join-client which is aligned with distributing core with the modules already included.

Relates to #24796

time:
2017-05-23T11:06:22Z
class:
core/src/main/java/org/elasticsearch/index/query/AbstractQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/BoolQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/BoostingQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/ConstantScoreQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/DisMaxQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java
core/src/main/java/org/elasticsearch/index/query/InnerHitContextBuilder.java
core/src/main/java/org/elasticsearch/index/query/NestedQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/collapse/CollapseBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsContext.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/InnerHitsFetchSubPhase.java
core/src/test/java/org/elasticsearch/index/query/InnerHitBuilderTests.java
core/src/test/java/org/elasticsearch/index/query/NestedQueryBuilderTests.java
core/src/test/java/org/elasticsearch/search/collapse/CollapseBuilderTests.java
core/src/test/java/org/elasticsearch/search/fetch/subphase/InnerHitsIT.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ChildrenIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ChildQuerySearchIT.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasChildQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/HasParentQueryBuilderTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/InnerHitsIT.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
comments:
Add the ability to define custom inner hit sub context builder (#24676)

This commit moves the handling of nested and parent/child inner hits to specialized classes that can be defined outside of ES core.
InnerHitBuilderContext is now used by the parent query (nested or hasChild, ...) to build the sub context from the InnerHitBuilder definition.
BWC is also ensured so that nodes in previous versions can still send/receive inner hits to/from this version.

Relates #20257

time:
2017-05-23T07:08:30Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
relax the assertion about the existence of MAX_UNSAFE_AUTO_ID_TIMESTAMP_COMMIT_ID in the user commit data

Since #24149 we started storing the maxUnsafeAutoIdTimestamp in the lucene commit. The assertions in that PR were built on the assumption that recovering a primary always ends up committing lucene. That is sadly [not true](https://github.com/elastic/elasticsearch/blob/a72eaa8e0f5c0f305c507c5fcd918fed7c1bf6bf/core/src/main/java/org/elasticsearch/index/engine/InternalEngine.java#L313).

Closes #24809

time:
2017-05-23T01:53:16Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
Removes the 5.3.3 version constant (#24833)

After releasing 5.3.2, the 5.3.3 version constant was created.  However,
this causes issues for the rolling upgrade tests, which expect to have
all older versions artifacts published and no point releases created off
of the older versions (older meaning more than one version behind the
current version).  This commit removes the 5.3.3 version constant,
assuming we will not need it anywhere.

time:
2017-05-22T22:08:45Z
class:
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/StoredExpressionTests.java
comments:
Fix settings names for script.allowed_types and script.allowed_contexts. (#24831)

Fixes #24830

time:
2017-05-22T20:11:15Z
class:
core/src/main/java/org/elasticsearch/action/update/UpdateHelper.java
core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/ScriptQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/functionscore/ScriptScoreFunctionBuilder.java
core/src/main/java/org/elasticsearch/ingest/InternalTemplateService.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java
core/src/main/java/org/elasticsearch/script/ScriptContext.java
core/src/main/java/org/elasticsearch/script/ScriptContextRegistry.java
core/src/main/java/org/elasticsearch/script/ScriptEngine.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/ScriptHeuristic.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketscript/BucketScriptPipelineAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketselector/BucketSelectorPipelineAggregator.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java
core/src/main/java/org/elasticsearch/search/sort/ScriptSortBuilder.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestionBuilder.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/script/ScriptContextRegistryTests.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportSearchTemplateAction.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkByScrollAction.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/AbstractScriptTestCase.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
comments:
Scripting: Simplify ScriptContext (#24818)

As we work towards contexts implying the return type of compilation, we
first need ScriptContext to not be an enum. This commit removes the
Standard enum and Plugin subclass of ScriptContext.

time:
2017-05-22T16:37:06Z
class:
core/src/main/java/org/elasticsearch/index/mapper/RangeFieldMapper.java
core/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java
core/src/test/java/org/elasticsearch/index/query/RangeQueryBuilderTests.java
core/src/test/java/org/elasticsearch/search/query/SearchQueryIT.java
comments:
Fix RangeFieldMapper rangeQuery to properly handle relations

This commit fixes the RangeFieldMapper and RangeQueryBuilder to pass the correct relation to the RangeQuery when performing a range query over range fields.

time:
2017-05-22T12:43:40Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchResponse.java
core/src/main/java/org/elasticsearch/action/search/SearchResponseSections.java
core/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java
core/src/main/java/org/elasticsearch/common/xcontent/XContentParserUtils.java
core/src/main/java/org/elasticsearch/rest/action/RestActions.java
core/src/main/java/org/elasticsearch/search/SearchHits.java
core/src/main/java/org/elasticsearch/search/aggregations/Aggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/Aggregations.java
core/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java
core/src/main/java/org/elasticsearch/search/aggregations/ParsedAggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/ParsedMultiBucketAggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/ParsedSingleBucketAggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/ParsedAdjacencyMatrix.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filter/ParsedFilter.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/filters/ParsedFilters.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/ParsedGeoHashGrid.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/global/ParsedGlobal.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/ParsedDateHistogram.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/ParsedHistogram.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/missing/ParsedMissing.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ParsedNested.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ParsedReverseNested.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalBinaryRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ParsedBinaryRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ParsedRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/ParsedDateRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/ParsedGeoDistance.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/sampler/InternalSampler.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/sampler/ParsedSampler.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantLongTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantStringTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/UnmappedSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/ParsedDoubleTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/ParsedLongTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/ParsedStringTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/ParsedTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/UnmappedTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/ParsedSingleValueNumericMetricsAggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/avg/ParsedAvg.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/InternalCardinality.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/ParsedCardinality.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/InternalGeoBounds.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/ParsedGeoBounds.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/geocentroid/InternalGeoCentroid.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/geocentroid/ParsedGeoCentroid.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/max/ParsedMax.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/min/ParsedMin.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/ParsedPercentileRanks.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/ParsedPercentiles.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/hdr/ParsedHDRPercentileRanks.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/hdr/ParsedHDRPercentiles.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/ParsedTDigestPercentileRanks.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/ParsedTDigestPercentiles.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ParsedScriptedMetric.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/InternalStats.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/ParsedStats.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/InternalExtendedStats.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ParsedExtendedStats.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/sum/ParsedSum.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/ParsedTopHits.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ParsedValueCount.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/ParsedSimpleValue.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/InternalBucketMetricValue.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/ParsedBucketMetricValue.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/percentile/ParsedPercentilesBucket.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/stats/ParsedStatsBucket.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/stats/extended/ParsedExtendedStatsBucket.java
core/src/main/java/org/elasticsearch/search/aggregations/pipeline/derivative/ParsedDerivative.java
core/src/main/java/org/elasticsearch/search/internal/InternalSearchResponse.java
core/src/main/java/org/elasticsearch/search/suggest/Suggest.java
core/src/test/java/org/elasticsearch/action/search/SearchResponseTests.java
core/src/test/java/org/elasticsearch/action/search/ShardSearchFailureTests.java
core/src/test/java/org/elasticsearch/common/xcontent/XContentParserUtilsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrixTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/InternalFilterTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFiltersTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGridTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/global/InternalGlobalTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogramTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogramTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/missing/InternalMissingTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/nested/InternalNestedTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/nested/InternalReverseNestedTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalBinaryRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/date/InternalDateRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/InternalGeoDistanceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/sampler/InternalSamplerTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTermsTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTermsTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalExtendedStatsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalMaxTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalStatsBucketTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalStatsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/avg/InternalAvgTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/cardinality/InternalCardinalityTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/geobounds/InternalGeoBoundsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/geocentroid/InternalGeoCentroidTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/min/InternalMinTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractPercentilesTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentilesRanksTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/InternalPercentilesTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/hdr/InternalHDRPercentilesRanksTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/hdr/InternalHDRPercentilesTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/InternalTDigestPercentilesRanksTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/InternalTDigestPercentilesTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/sum/InternalSumTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHitsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/valuecount/InternalValueCountTests.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/InternalSimpleValueTests.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/InternalBucketMetricValueTests.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/percentile/InternalPercentilesBucketTests.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/bucketmetrics/stats/extended/InternalExtendedStatsBucketTests.java
core/src/test/java/org/elasticsearch/search/aggregations/pipeline/derivative/InternalDerivativeTests.java
core/src/test/java/org/elasticsearch/search/profile/SearchProfileShardResultsTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestionTests.java
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/MatrixStatsResults.java
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/ParsedMatrixStats.java
modules/aggs-matrix-stats/src/test/java/org/elasticsearch/search/aggregations/matrix/stats/InternalMatrixStatsTests.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ParsedChildren.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/InternalChildrenTests.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/InternalSingleBucketAggregationTestCase.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
comments:
Merge pull request #24824 from elastic/feature/client_aggs_parsing

Add aggs parsers for high level REST Client

time:
2017-05-22T10:25:14Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java
core/src/main/java/org/elasticsearch/Version.java
core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/index/IndexService.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/main/java/org/elasticsearch/script/ScriptEngine.java
core/src/main/java/org/elasticsearch/script/ScriptEngineRegistry.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/test/java/org/elasticsearch/action/bulk/TransportBulkActionIndicesThatCannotBeCreatedTests.java
core/src/test/java/org/elasticsearch/action/bulk/TransportBulkActionTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/ShardStateIT.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/indices/cluster/AbstractIndicesClusterStateServiceTestCase.java
core/src/test/java/org/elasticsearch/indices/flush/SyncedFlushSingleNodeTests.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/AvgIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/SumIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
core/src/test/java/org/elasticsearch/update/UpdateIT.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/AbstractScriptTestCase.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Merge branch 'master' into feature/client_aggs_parsing

time:
2017-05-22T10:20:26Z
class:
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolatorFieldMapper.java
comments:
percolator: Use QueryBuilder.rewriteQuery(...) to rewrite query builder instead of QueryBuilder.rewrite(...)

Relates to #24617

time:
2017-05-22T08:49:23Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/Aggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java
core/src/main/java/org/elasticsearch/search/aggregations/ParsedAggregation.java
core/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTestCase.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
comments:
Move getType to Aggregation interface (#24822)

Given that both InternalAggregation and ParsedAggregation have this method, it makes sense to move it to the interface they both implement.

time:
2017-05-22T08:03:31Z
class:
comments:
Marked `fixed_auto_queue_size` as experimental

Relates to https://github.com/elastic/elasticsearch/pull/23884

time:
2017-05-22T07:34:50Z
class:
comments:
Upgrade icu4j to latest version (#24821)

time:
2017-05-22T07:00:22Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/CrudIT.java
core/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
core/src/test/java/org/elasticsearch/action/bulk/TransportBulkActionIndicesThatCannotBeCreatedTests.java
core/src/test/java/org/elasticsearch/action/bulk/TransportBulkActionTests.java
comments:
Deleting a document from a non-existing index creates the should not auto create it, unless using EXTERNAL* versioning (#24518)

Currently a `delete document` request against a non-existing index actually **creates** this index.

With this change the `delete document` no longer creates the previously non-existing index and throws an `index_not_found` exception instead.

However as discussed in https://github.com/elastic/elasticsearch/pull/15451#issuecomment-165772026, if an external version is explicitly used, the current behavior is preserved and the index is still created and the document is marked for deletion.

Fixes #15425

time:
2017-05-21T06:46:53Z
class:
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
comments:
Scripting: Simplify search method on script service (#24817)

This commit is a simple cleanup to remove an unnecessary extra method on
ScriptService which was only used in 3 places. There is now only one
search method.

time:
2017-05-20T19:01:25Z
class:
core/src/main/java/org/elasticsearch/script/ScriptEngine.java
core/src/main/java/org/elasticsearch/script/ScriptEngineRegistry.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/AvgIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/SumIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
core/src/test/java/org/elasticsearch/update/UpdateIT.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/AbstractScriptTestCase.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Scripting: Remove "inline script enabled" on script engines (#24815)

ScriptEngine implementations have an overridable method to indicate they
are safe to use as inline scripts. Since groovy was removed fro 6.0,
there are no longer any implementations which used the default false
value. Furthermore, the value was not actually read anywhere. This
commit removes the method. The ScriptEngineRegistry was also no longer
necessary as it only was used to build a map from language to engine.

time:
2017-05-20T18:39:05Z
class:
comments:
Update mappings.asciidoc

typo

time:
2017-05-20T13:44:09Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
Remove unnecessary method from index shard

This commit removes a convenience method from index shard that is used
at exactly one call site. This method is used to callback a listener
when an operation is on too old of a primary term. Since it is only used
at one call site, we simply inline the method.

time:
2017-05-19T20:17:22Z
class:
core/src/main/java/org/elasticsearch/action/support/replication/TransportReplicationAction.java
core/src/main/java/org/elasticsearch/index/IndexService.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/shard/IndexShardOperationPermits.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportWriteActionTests.java
core/src/test/java/org/elasticsearch/cluster/routing/allocation/ShardStateIT.java
core/src/test/java/org/elasticsearch/index/replication/ESIndexLevelReplicationTestCase.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardOperationPermitsTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/indices/cluster/AbstractIndicesClusterStateServiceTestCase.java
core/src/test/java/org/elasticsearch/indices/flush/SyncedFlushSingleNodeTests.java
comments:
Block older operations on primary term transition

Today a replica learns of a new primary term via a cluster state update
and there is not a clean transition between the older primary term and
the newer primary term. This commit modifies this situation so that:
 - a replica shard learns of a new primary term via replication
   operations executed under the mandate of the new primary
 - when a replica shard learns of a new primary term, it blocks
   operations on older terms from reaching the engine, with a clear
   transition point between the operations on the older term and the
   operations on the newer term

This work paves the way for a primary/replica sync on primary
promotion. Future work will also ensure a clean transition point on a
promoted primary, and prepare a replica shard for a sync with the
promoted primary.

Relates #24779

time:
2017-05-19T19:18:14Z
class:
core/src/main/java/org/elasticsearch/Version.java
comments:
Add version 5.3.3 constant

This commit adds the version 5.3.3 constant to the master branch.

time:
2017-05-19T17:29:14Z
class:
comments:
Fix handling of dirty PID file

When Elasticsearch dies during a standalone REST test we might leave a
dirty PID file laying around. We tried to log about this, but the log
messages contained references to undefined variables so we simply died
instead of providing a helpful message to run clean. This commit
addresses this issue.

time:
2017-05-19T16:17:06Z
class:
client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java
core/src/main/java/org/elasticsearch/index/analysis/AnalysisRegistry.java
core/src/main/java/org/elasticsearch/index/analysis/PreBuiltTokenizerFactoryFactory.java
core/src/main/java/org/elasticsearch/index/analysis/PreConfiguredAnalysisComponent.java
core/src/main/java/org/elasticsearch/index/analysis/PreConfiguredTokenFilter.java
core/src/main/java/org/elasticsearch/index/analysis/PreConfiguredTokenizer.java
core/src/main/java/org/elasticsearch/index/fielddata/AtomicParentChildFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/IndexOrdinalsFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/IndexParentChildFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/UidIndexFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsBuilder.java
core/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsIndexFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicParentChildFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractIndexOrdinalsFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVOrdinalsIndexFieldData.java
core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/store/Store.java
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltTokenizers.java
core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/index/analysis/AnalysisRegistryTests.java
core/src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTestCase.java
core/src/test/java/org/elasticsearch/index/fielddata/ParentChildFieldDataTests.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
core/src/test/java/org/elasticsearch/indices/analysis/AnalysisModuleTests.java
core/src/test/java/org/elasticsearch/search/builder/SearchSourceBuilderTests.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ReplaceableConstDoubleValueSource.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ChildrenAggregationBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ChildrenAggregatorFactory.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ParentToChildrenAggregator.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ParentToChildrenAggregatorTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ChildQuerySearchIT.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
Merge branch 'master' into feature/client_aggs_parsing

time:
2017-05-19T16:07:04Z
class:
core/src/main/java/org/elasticsearch/index/analysis/AnalysisRegistry.java
core/src/main/java/org/elasticsearch/index/analysis/PreBuiltTokenizerFactoryFactory.java
core/src/main/java/org/elasticsearch/index/analysis/PreConfiguredAnalysisComponent.java
core/src/main/java/org/elasticsearch/index/analysis/PreConfiguredTokenFilter.java
core/src/main/java/org/elasticsearch/index/analysis/PreConfiguredTokenizer.java
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltTokenizers.java
core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/index/analysis/AnalysisRegistryTests.java
core/src/test/java/org/elasticsearch/indices/analysis/AnalysisModuleTests.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
Allow plugins to register pre-configured tokenizers (#24751)

Allows plugins to register pre-configured tokenizers. Much
of the decisions are the same as those in #24223, #24572,
and #24223. This only migrates the lowercase tokenizer but
I figure that is a good start because it proves out the features.

time:
2017-05-19T16:00:58Z
class:
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/test/java/org/elasticsearch/search/builder/SearchSourceBuilderTests.java
comments:
Mark SearchSourceBuilder as ToXContentObject (#24795)

SearchSourceBuilder#toXContent prints out a complete object, hence it should implement ToXContentObject

time:
2017-05-19T15:20:55Z
class:
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ReplaceableConstDoubleValueSource.java
comments:
Upgrade to lucene-7.0.0-snapshot-a0aef2f

This commit upgrades master to a current lucene snapshot with commit id a0aef2f.

time:
2017-05-19T15:11:23Z
class:
core/src/main/java/org/elasticsearch/index/fielddata/AtomicParentChildFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/IndexOrdinalsFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/IndexParentChildFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/UidIndexFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsBuilder.java
core/src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsIndexFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractAtomicParentChildFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/AbstractIndexOrdinalsFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
core/src/main/java/org/elasticsearch/index/fielddata/plain/SortedSetDVOrdinalsIndexFieldData.java
core/src/main/java/org/elasticsearch/index/mapper/ParentFieldMapper.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
core/src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceConfig.java
core/src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTestCase.java
core/src/test/java/org/elasticsearch/index/fielddata/ParentChildFieldDataTests.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ChildrenAggregationBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ChildrenAggregatorFactory.java
modules/parent-join/src/main/java/org/elasticsearch/join/aggregations/ParentToChildrenAggregator.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasChildQueryBuilder.java
modules/parent-join/src/main/java/org/elasticsearch/join/query/HasParentQueryBuilder.java
modules/parent-join/src/test/java/org/elasticsearch/join/aggregations/ParentToChildrenAggregatorTests.java
modules/parent-join/src/test/java/org/elasticsearch/join/query/ChildQuerySearchIT.java
comments:
Removes parent child fielddata specialization (#24737)

This change removes the field data specialization needed for the parent field and replaces it with
a simple DocValuesIndexFieldData. The underlying global ordinals are retrieved via a new function called
IndexOrdinalsFieldData#getOrdinalMap.
The children aggregation is also modified to use a simple WithOrdinals value source rather than the deleted WithOrdinals.Parent.

Relates #20257

time:
2017-05-19T14:56:41Z
class:
comments:
Small typo in Painless Dispatch page (#24792)

time:
2017-05-19T14:49:56Z
class:
comments:
Typo in setup/configuration.asciidoc (#24797)

time:
2017-05-19T13:36:39Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/index/store/Store.java
core/src/test/java/org/elasticsearch/index/shard/IndexShardTests.java
comments:
Obey lock order if working with store to get metadata snapshots (#24787)

Today when we get a metadata snapshot from the index shard we ensure
that if there is no engine started on the shard that we lock the index
writer before we go and fetch the store metadata. Yet, if we concurrently
recover that shard, recovery finalization might fail since it can't acquire
the IW lock on the directory. This is mainly due to the wrong order of aquiring
the IW lock and the metadata lock. Fetching store metadata without a started engine
should block on the metadata lock in Store.java but since IndexShard locks the writer
first we get into a failed recovery dance especially in test. In production
this is less of an issue since we rarely get into this siutation if at all.

Closes #24481

time:
2017-05-19T13:24:29Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchResponse.java
core/src/test/java/org/elasticsearch/action/search/SearchResponseTests.java
comments:
SearchResponse#fromXContent to not require START_OBJECT as current token (#24794)

The method should rather advance one token and only then require a START_OBJECT as the current token. This allows to parse given a parser that's at the beginning of the response, where the initial/current token is null.

time:
2017-05-19T13:05:30Z
class:
client/transport/src/main/java/org/elasticsearch/transport/client/PreBuiltTransportClient.java
comments:
Disable the Netty recycler in the client

The Netty recycler is nothing but trouble, so let us disable this by
default in the client too.

Relates #24793

time:
2017-05-19T11:56:58Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/ParsedAggregationTests.java
comments:
[Test] Remove ParsedAggregationTests (#24791)

Now the Java High Level Rest Client has tests to parse all aggregations,
 this test is not needed anymore. We have better tests like
 AggregationsTests and sub classes of InternalAggregationTestCase.

 Related to #23965

time:
2017-05-19T11:37:31Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalExtendedStatsTests.java
comments:
Fix InternalExtendedStatsTests setUp

time:
2017-05-19T11:20:45Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantLongTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantStringTerms.java
comments:
Remove compareTerm() method in parsed Significant Terms aggregations

This method has been removed in core (see #24714)

time:
2017-05-19T11:13:00Z
class:
client/rest/src/main/java/org/elasticsearch/client/RequestLogger.java
core/src/main/java/org/elasticsearch/Version.java
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/discovery/zen/PublishClusterStateAction.java
core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
core/src/main/java/org/elasticsearch/monitor/jvm/JvmInfo.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/rest/BaseRestHandler.java
core/src/main/java/org/elasticsearch/script/ScriptModes.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/ScriptSettings.java
core/src/main/java/org/elasticsearch/script/ScriptType.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogram.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTerms.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/discovery/zen/PublishClusterStateActionTests.java
core/src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryUnitTests.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/script/ScriptModesTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/script/ScriptSettingsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/StoredExpressionTests.java
plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageRepository.java
plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageService.java
plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStoreRepositoryTests.java
plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageServiceTests.java
qa/mixed-cluster/src/test/java/org/elasticsearch/backwards/IndexingIT.java
qa/mixed-cluster/src/test/java/org/elasticsearch/backwards/MixedClusterClientYamlTestSuiteIT.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/AbstractScriptTestCase.java
test/framework/src/main/java/org/elasticsearch/ingest/RandomDocumentPicks.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
test/framework/src/main/java/org/elasticsearch/test/VersionUtils.java
test/framework/src/main/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Merge remote-tracking branch 'origin/master' into feature/client_aggs_parsing

time:
2017-05-19T11:12:01Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTests.java
comments:
[Test] Remove leftover in InternalRangeTests

time:
2017-05-19T10:46:37Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/ParsedCardinality.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrixTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFiltersTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/date/InternalDateRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/InternalGeoDistanceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/InternalExtendedStatsTests.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
comments:
Remove //norelease and cleans up somet aggregations tests (#24789)

time:
2017-05-19T10:22:54Z
class:
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/MatrixStatsResults.java
modules/aggs-matrix-stats/src/main/java/org/elasticsearch/search/aggregations/matrix/stats/ParsedMatrixStats.java
modules/aggs-matrix-stats/src/test/java/org/elasticsearch/search/aggregations/matrix/stats/InternalMatrixStatsTests.java
comments:
Add parsing method for Matrix Stats (#24746)

Related to #23331

time:
2017-05-19T07:34:23Z
class:
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/discovery/zen/PublishClusterStateAction.java
core/src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
core/src/test/java/org/elasticsearch/discovery/zen/PublishClusterStateActionTests.java
core/src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryUnitTests.java
comments:
Clear responsibilities for PublishClusterStateAction and ZenDiscovery (#24772)

This commit moves some functionality from PublishClusterStateAction to ZenDiscovery, which allows each class to focus on it's core competencies:
- PendingStatesQueue is now solely managed by ZenDiscovery (no shared access by both PublishClusterStateAction and ZenDiscovery)
- Validation logic is handled exclusively by ZenDiscovery

time:
2017-05-18T21:27:58Z
class:
comments:
Fix search template documentation reference to scripting security.

time:
2017-05-18T21:20:23Z
class:
qa/mixed-cluster/src/test/java/org/elasticsearch/backwards/IndexingIT.java
qa/mixed-cluster/src/test/java/org/elasticsearch/backwards/MixedClusterClientYamlTestSuiteIT.java
comments:
Test: Make mixed cluster bwc test per wire compat version (#24780)

This commit renames the backwards-5.0 qa test to mixed-cluster and
creates a test within the project per wire compat version. Like with
rolling upgrade tests, the integTest task will run against the most
recent version, while all versions will be tested with the bwcTest task.

time:
2017-05-18T20:32:46Z
class:
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/script/ScriptModes.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/ScriptSettings.java
core/src/main/java/org/elasticsearch/script/ScriptType.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/script/ScriptModesTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/script/ScriptSettingsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
modules/lang-expression/src/test/java/org/elasticsearch/script/expression/StoredExpressionTests.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/AbstractScriptTestCase.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
comments:
Remove Deprecated Script Settings (#24756)

Removes all fine-grained script settings replaced by scripts.types_allowed and scripts.contexts_allowed.

time:
2017-05-18T19:15:45Z
class:
core/src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
comments:
Refactor update shard logic for primaries

This commit is a simple refactoring of the update shard logic for
primaries. Namely, there was some duplicated code here that was annoying
to have to read twice so it is now collapsed with this commit.

time:
2017-05-18T19:15:17Z
class:
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
comments:
TransportShardBulkAction: s/tha that/that/

time:
2017-05-18T18:59:08Z
class:
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
comments:
TransportShardBulkAction: remove hard version assertion and improve todo comment

We have decided not to force a future version upgrade to deal with this todo. Rather, we'll keep the code until its in our way / the opportunity arises to deal with it.

time:
2017-05-18T17:22:29Z
class:
plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageRepository.java
plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageService.java
plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStoreRepositoryTests.java
plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageServiceTests.java
comments:
GCS Repository: Remove specifying credential file on disk (#24727)

This commit removes the ability to specify the google credential json
file on disk, which is deprecated in 5.5.0.

time:
2017-05-18T17:04:52Z
class:
comments:
Build: Fix plugin installation for integ test to have unique configuration name (#24778)

time:
2017-05-18T13:33:13Z
class:
comments:
Remove vagrant testing versions (#24754)

Now that we generate the versions list from Versions.java we can
drop the list of versions maintained for vagrant testing. One nice
thing that the vagrant testing did was to check if the list of
versions was out of date. This moves that test to the core
project.

time:
2017-05-18T12:57:12Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTerms.java
comments:
Remove the unused SignificantTerms.compareTerm() method (#24714)

This method is not used and not tested. While it exists it forces
implementations of the interface to implement it while it's unused.

time:
2017-05-18T10:48:15Z
class:
comments:
remove remaining references to scripts directory (#24771)

The packaging scripts still referenced the scripts directory which is now removed.

time:
2017-05-18T10:02:29Z
class:
client/rest/src/main/java/org/elasticsearch/client/RequestLogger.java
core/src/main/java/org/elasticsearch/monitor/jvm/JvmInfo.java
core/src/main/java/org/elasticsearch/rest/BaseRestHandler.java
test/framework/src/main/java/org/elasticsearch/ingest/RandomDocumentPicks.java
test/framework/src/main/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Use StringBuilder to construct a String instead of relying on appending where possible (#24753)

This PR revolves around places in the code where introducing a StringBuilder might make the construction
of a String easier to follow and also, maybe avoid a case where the compiler's very safe way of introducing 
StringBuilder instead of String might not always be optimal for performance.

time:
2017-05-18T09:21:50Z
class:
core/src/main/java/org/elasticsearch/Version.java
core/src/test/java/org/elasticsearch/VersionTests.java
comments:
[TEST] Fix compatibilty tests for wire compatibility based on Version.java

time:
2017-05-18T09:21:50Z
class:
test/framework/src/main/java/org/elasticsearch/test/VersionUtils.java
comments:
Add utility method to get the latest version of the previous minor

time:
2017-05-18T09:07:48Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogram.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java
comments:
DateHistogram: Fix 'extended_bounds' with 'offset' (#23789)

This fixes a bug in the 'date_histogram' aggregation that can happen when using 'extended_bounds'
together with some 'offset' parameter. Offsets should be applied after rounding the extended bounds 
and also be applied when adding empty buckets during the reduce phase in InternalDateHistogram.

Closes #23776

time:
2017-05-18T08:14:24Z
class:
comments:
Test: Convert rolling upgrade test to have task per wire compat version (#24758)

This commit changes the rolling upgrade test to create a set of rest
test tasks per wire compat version. The most recent wire compat version
is always tested with the `integTest` task, and all versions can be
tested with `bwcTest`.

time:
2017-05-18T07:43:57Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java
core/src/main/java/org/elasticsearch/bootstrap/Security.java
core/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java
core/src/main/java/org/elasticsearch/common/network/IfConfig.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/common/settings/SecureSetting.java
core/src/main/java/org/elasticsearch/common/settings/Setting.java
core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java
core/src/main/java/org/elasticsearch/env/Environment.java
core/src/main/java/org/elasticsearch/index/shard/SearchOperationListener.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java
core/src/main/java/org/elasticsearch/script/AbstractDoubleSearchScript.java
core/src/main/java/org/elasticsearch/script/AbstractExecutableScript.java
core/src/main/java/org/elasticsearch/script/AbstractLongSearchScript.java
core/src/main/java/org/elasticsearch/script/AbstractSearchScript.java
core/src/main/java/org/elasticsearch/script/NativeScriptEngine.java
core/src/main/java/org/elasticsearch/script/NativeScriptFactory.java
core/src/main/java/org/elasticsearch/script/Script.java
core/src/main/java/org/elasticsearch/script/ScriptEngine.java
core/src/main/java/org/elasticsearch/script/ScriptModes.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/ScriptSettings.java
core/src/main/java/org/elasticsearch/script/ScriptType.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/main/java/org/elasticsearch/tribe/TribeService.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunctionTests.java
core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/index/WaitUntilRefreshIT.java
core/src/test/java/org/elasticsearch/index/shard/SearchOperationListenerTests.java
core/src/test/java/org/elasticsearch/script/FileScriptTests.java
core/src/test/java/org/elasticsearch/script/NativeScriptTests.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/script/ScriptFieldIT.java
core/src/test/java/org/elasticsearch/script/ScriptModesTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/script/ScriptSettingsTests.java
core/src/test/java/org/elasticsearch/search/SearchCancellationIT.java
core/src/test/java/org/elasticsearch/search/SearchTimeoutIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateScriptMocks.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateScriptMocksPlugin.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/IpRangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/AvgIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/SumIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptPlugin.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
core/src/test/java/org/elasticsearch/tribe/TribeServiceTests.java
core/src/test/java/org/elasticsearch/update/UpdateByNativeScriptIT.java
core/src/test/java/org/elasticsearch/update/UpdateIT.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorFactoryTests.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestSearchTemplateAction.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/SearchTemplateRequestTests.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java
modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java
modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java
qa/evil-tests/src/test/java/org/elasticsearch/bootstrap/EvilSecurityTests.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/AbstractScriptTestCase.java
test/framework/src/main/java/org/elasticsearch/common/inject/ModuleTestCase.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/bucket/script/TestScript.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSuite.java
comments:
Merge remote-tracking branch 'origin/master' into feature/client_aggs_parsing

time:
2017-05-18T07:41:04Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ParsedScriptedMetric.java
comments:
Fix checkstyle violation in ParsedScriptedMetric

time:
2017-05-18T07:37:46Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/ParsedTopHits.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHitsTests.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
comments:
Add parsing method for Top Hits aggregation (#24717)

Related to #23331

time:
2017-05-18T07:24:33Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalBinaryRange.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ParsedBinaryRange.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalBinaryRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/date/InternalDateRangeTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/InternalGeoDistanceTests.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
comments:
Add parsing method for binary range aggregation (#24706)

Related to #23331

time:
2017-05-18T07:22:54Z
class:
comments:
Fix leftover reference to scripts path in packaging test

time:
2017-05-18T06:51:30Z
class:
core/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java
core/src/main/java/org/elasticsearch/common/network/IfConfig.java
test/framework/src/main/java/org/elasticsearch/common/inject/ModuleTestCase.java
comments:
Fix String concatenation within a StringBuilder append chain

This commit replaces String concatenation within a StringBuilder append chain by using explicit append calls.

time:
2017-05-17T21:49:24Z
class:
core/src/main/java/org/elasticsearch/plugins/ScriptPlugin.java
core/src/main/java/org/elasticsearch/script/AbstractDoubleSearchScript.java
core/src/main/java/org/elasticsearch/script/AbstractExecutableScript.java
core/src/main/java/org/elasticsearch/script/AbstractLongSearchScript.java
core/src/main/java/org/elasticsearch/script/AbstractSearchScript.java
core/src/main/java/org/elasticsearch/script/NativeScriptEngine.java
core/src/main/java/org/elasticsearch/script/NativeScriptFactory.java
core/src/main/java/org/elasticsearch/script/ScriptModes.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptSettings.java
core/src/test/java/org/elasticsearch/common/lucene/search/function/ScriptScoreFunctionTests.java
core/src/test/java/org/elasticsearch/index/WaitUntilRefreshIT.java
core/src/test/java/org/elasticsearch/script/NativeScriptTests.java
core/src/test/java/org/elasticsearch/script/ScriptFieldIT.java
core/src/test/java/org/elasticsearch/script/ScriptModesTests.java
core/src/test/java/org/elasticsearch/search/SearchCancellationIT.java
core/src/test/java/org/elasticsearch/search/SearchTimeoutIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateScriptMocks.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateScriptMocksPlugin.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/IpRangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptIT.java
core/src/test/java/org/elasticsearch/search/functionscore/ExplainableScriptPlugin.java
core/src/test/java/org/elasticsearch/update/UpdateByNativeScriptIT.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptNoParams.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/bucket/script/NativeSignificanceScoreScriptWithParams.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/bucket/script/TestScript.java
comments:
Scripting: Remove native scripts (#24726)

Native scripts have been replaced in documentation by implementing
a ScriptEngine and they were deprecated in 5.5.0. This commit
removes the native script infrastructure for 6.0.

closes #19966

time:
2017-05-17T21:42:25Z
class:
client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/QueryDSLDocumentationTests.java
core/src/main/java/org/elasticsearch/bootstrap/Security.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/env/Environment.java
core/src/main/java/org/elasticsearch/node/Node.java
core/src/main/java/org/elasticsearch/script/NativeScriptEngine.java
core/src/main/java/org/elasticsearch/script/Script.java
core/src/main/java/org/elasticsearch/script/ScriptEngine.java
core/src/main/java/org/elasticsearch/script/ScriptModule.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/script/ScriptSettings.java
core/src/main/java/org/elasticsearch/script/ScriptType.java
core/src/main/java/org/elasticsearch/tribe/TribeService.java
core/src/test/java/org/elasticsearch/action/update/UpdateRequestTests.java
core/src/test/java/org/elasticsearch/index/IndexModuleTests.java
core/src/test/java/org/elasticsearch/script/FileScriptTests.java
core/src/test/java/org/elasticsearch/script/NativeScriptTests.java
core/src/test/java/org/elasticsearch/script/ScriptContextTests.java
core/src/test/java/org/elasticsearch/script/ScriptModesTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/script/ScriptSettingsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/AvgIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/SumIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountIT.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregatorTests.java
core/src/test/java/org/elasticsearch/search/sort/AbstractSortTestCase.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
core/src/test/java/org/elasticsearch/tribe/TribeServiceTests.java
core/src/test/java/org/elasticsearch/update/UpdateIT.java
modules/ingest-common/src/main/java/org/elasticsearch/ingest/common/ScriptProcessor.java
modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/ScriptProcessorFactoryTests.java
modules/lang-expression/src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/RestSearchTemplateAction.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/SearchTemplateRequestTests.java
modules/lang-painless/src/main/java/org/elasticsearch/painless/PainlessScriptEngine.java
modules/reindex/src/main/java/org/elasticsearch/index/reindex/RestUpdateByQueryAction.java
qa/evil-tests/src/test/java/org/elasticsearch/bootstrap/EvilSecurityTests.java
qa/smoke-test-ingest-with-all-dependencies/src/test/java/org/elasticsearch/ingest/AbstractScriptTestCase.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
test/framework/src/main/java/org/elasticsearch/test/AbstractQueryTestCase.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSuite.java
comments:
Scripting: Remove file scripts (#24627)

This commit removes file scripts, which were deprecated in 5.5.

closes #21798

time:
2017-05-17T20:14:12Z
class:
core/src/main/java/org/elasticsearch/common/settings/SecureSetting.java
core/src/main/java/org/elasticsearch/common/settings/Setting.java
core/src/main/java/org/elasticsearch/common/settings/SettingsModule.java
core/src/test/java/org/elasticsearch/common/settings/SettingsModuleTests.java
modules/transport-netty4/src/main/java/org/elasticsearch/http/netty4/Netty4HttpServerTransport.java
modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java
comments:
Settings: Remove shared setting property (#24728)

Shared settings were added intially to allow the few common settings
names across aws plugins. However, in 6.0 these settings have been
removed. The last use was in netty, but since 6.0 also has the netty 3
modules removed, there is no longer a need for the shared property. This
commit removes the shared setting property.

time:
2017-05-17T19:58:37Z
class:
comments:
Build: Extract all ES versions into gradle properties (#24748)

This commit expands the logic for version extraction from Version.java
to include a list of all versions for backcompat purposes. The tests
using bwcVersion are converted to use this list, but those tests
(rolling upgrade and backwards-5.0) are still not randomized; that will
happen in another followup.

time:
2017-05-17T18:28:33Z
class:
core/src/main/java/org/elasticsearch/action/search/SearchResponse.java
core/src/main/java/org/elasticsearch/rest/action/RestActions.java
core/src/main/java/org/elasticsearch/search/SearchHits.java
core/src/main/java/org/elasticsearch/search/suggest/Suggest.java
core/src/test/java/org/elasticsearch/action/search/SearchResponseTests.java
core/src/test/java/org/elasticsearch/action/search/ShardSearchFailureTests.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/profile/SearchProfileShardResultsTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestTests.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestionTests.java
comments:
Add fromXContent method to SearchResponse (#24720)

SearchResponse#fromXContent allows to parse a search response, including search hits, aggregations, suggestions and profile results. Only the aggs that we can parse today are supported (which means all of them but a couple that are left to support). SearchResponseTests reuses the existing test infra to randomize aggregations, suggestions and profile response.

Relates to #23331

time:
2017-05-17T17:20:25Z
class:
comments:
Fix jvm-example assertions in packaging tests

These assertions were on the yaml extension but we have migrated to yml
everywhere so these assertions need to be updated too.

time:
2017-05-17T17:07:57Z
class:
core/src/main/java/org/elasticsearch/index/shard/SearchOperationListener.java
core/src/main/java/org/elasticsearch/search/SearchService.java
core/src/test/java/org/elasticsearch/index/shard/SearchOperationListenerTests.java
comments:
Allow SearchOperationListeners to validate a search context (#24650)

This commit adds a new method to the SearchOperationListener that allows implementers to validate
the SearchContext immediately after it is retrieved from the active contexts. The listener may
throw a runtime exception if it deems the SearchContext is not valid and that the use of the context
should be terminated.

time:
2017-05-17T16:58:50Z
class:
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
comments:
[TEST] Fix TransportReplicationActionTests.testRetryOnReplica for replica request (#24745)

* [TEST] Fix TransportReplicationActionTests.testRetryOnReplica for replica request

We were improperly testing that it was a `ConcreteShardRequest` instead of a
`ConcreteReplicaRequest`. This adds that change and also ensures that the
checkpoint is retrievable from the request.

* Fix line-length

time:
2017-05-17T16:55:57Z
class:
core/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
core/src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ParsedScriptedMetric.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetricTests.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
comments:
Add parsing for InternalScriptedMetric aggregation (#24738)

time:
2017-05-17T15:59:00Z
class:
core/src/main/java/org/elasticsearch/ElasticsearchException.java
core/src/main/java/org/elasticsearch/Version.java
core/src/main/java/org/elasticsearch/action/OriginalIndices.java
core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java
core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java
core/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
core/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsRequest.java
core/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsResponse.java
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/GetStoredScriptResponse.java
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/PutStoredScriptRequest.java
core/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeResponse.java
core/src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/TransportUpdateSettingsAction.java
core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/QueryExplanation.java
core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequest.java
core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java
core/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStats.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsResponse.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardResponse.java
core/src/main/java/org/elasticsearch/action/index/IndexRequest.java
core/src/main/java/org/elasticsearch/action/ingest/PutPipelineRequest.java
core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java
core/src/main/java/org/elasticsearch/action/search/ExpandSearchPhase.java
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java
core/src/main/java/org/elasticsearch/cluster/NamedDiff.java
core/src/main/java/org/elasticsearch/cluster/NamedDiffable.java
core/src/main/java/org/elasticsearch/cluster/SnapshotDeletionsInProgress.java
core/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java
core/src/main/java/org/elasticsearch/cluster/block/ClusterBlock.java
core/src/main/java/org/elasticsearch/cluster/block/ClusterBlockLevel.java
core/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java
core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexStateService.java
core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java
core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeFilters.java
core/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocationResult.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java
core/src/main/java/org/elasticsearch/common/transport/TransportAddress.java
core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java
core/src/main/java/org/elasticsearch/common/util/concurrent/EsThreadPoolExecutor.java
core/src/main/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutor.java
core/src/main/java/org/elasticsearch/common/util/concurrent/ResizableBlockingQueue.java
core/src/main/java/org/elasticsearch/common/util/concurrent/SizeBlockingQueue.java
core/src/main/java/org/elasticsearch/common/util/concurrent/TimedRunnable.java
core/src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java
core/src/main/java/org/elasticsearch/gateway/GatewayService.java
core/src/main/java/org/elasticsearch/index/IndexService.java
core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java
core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java
core/src/main/java/org/elasticsearch/index/refresh/RefreshStats.java
core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java
core/src/main/java/org/elasticsearch/index/reindex/BulkByScrollTask.java
core/src/main/java/org/elasticsearch/index/reindex/RemoteInfo.java
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltTokenFilters.java
core/src/main/java/org/elasticsearch/ingest/PipelineConfiguration.java
core/src/main/java/org/elasticsearch/monitor/os/OsStats.java
core/src/main/java/org/elasticsearch/plugins/PluginInfo.java
core/src/main/java/org/elasticsearch/rest/RestStatus.java
core/src/main/java/org/elasticsearch/script/AbstractSearchScript.java
core/src/main/java/org/elasticsearch/script/NativeScriptEngine.java
core/src/main/java/org/elasticsearch/script/NativeScriptFactory.java
core/src/main/java/org/elasticsearch/script/Script.java
core/src/main/java/org/elasticsearch/script/ScriptMetaData.java
core/src/main/java/org/elasticsearch/script/StoredScriptSource.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/DateRangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistanceAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ip/IpRangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/AbstractHighlighterBuilder.java
core/src/main/java/org/elasticsearch/search/internal/AliasFilter.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
core/src/main/java/org/elasticsearch/search/lookup/CachedPositionIterator.java
core/src/main/java/org/elasticsearch/search/lookup/IndexField.java
core/src/main/java/org/elasticsearch/search/lookup/IndexFieldTerm.java
core/src/main/java/org/elasticsearch/search/lookup/IndexLookup.java
core/src/main/java/org/elasticsearch/search/lookup/LeafIndexLookup.java
core/src/main/java/org/elasticsearch/search/lookup/LeafSearchLookup.java
core/src/main/java/org/elasticsearch/search/lookup/PositionIterator.java
core/src/main/java/org/elasticsearch/search/lookup/SearchLookup.java
core/src/main/java/org/elasticsearch/search/lookup/TermPosition.java
core/src/main/java/org/elasticsearch/snapshots/SnapshotInfo.java
core/src/main/java/org/elasticsearch/threadpool/AutoQueueAdjustingExecutorBuilder.java
core/src/main/java/org/elasticsearch/threadpool/ExecutorBuilder.java
core/src/main/java/org/elasticsearch/threadpool/FixedExecutorBuilder.java
core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
core/src/main/java/org/elasticsearch/tribe/TribeService.java
core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdaterTests.java
core/src/test/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsResponseTests.java
core/src/test/java/org/elasticsearch/action/admin/cluster/storedscripts/PutStoredScriptRequestTests.java
core/src/test/java/org/elasticsearch/action/admin/cluster/tasks/PendingTasksBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestTests.java
core/src/test/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/flush/FlushBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/forcemerge/ForceMergeBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestTests.java
core/src/test/java/org/elasticsearch/action/admin/indices/refresh/RefreshBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/segments/IndicesSegmentsBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestTests.java
core/src/test/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequestTests.java
core/src/test/java/org/elasticsearch/action/fieldstats/FieldStatsRequestTests.java
core/src/test/java/org/elasticsearch/action/index/IndexRequestTests.java
core/src/test/java/org/elasticsearch/action/ingest/PutPipelineRequestTests.java
core/src/test/java/org/elasticsearch/action/ingest/SimulatePipelineRequestTests.java
core/src/test/java/org/elasticsearch/action/main/MainActionTests.java
core/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
core/src/test/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeActionTests.java
core/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationActionTests.java
core/src/test/java/org/elasticsearch/action/termvectors/AbstractTermVectorsTestCase.java
core/src/test/java/org/elasticsearch/action/termvectors/GetTermVectorsCheckDocFreqIT.java
core/src/test/java/org/elasticsearch/action/termvectors/GetTermVectorsIT.java
core/src/test/java/org/elasticsearch/action/termvectors/TermVectorsUnitTests.java
core/src/test/java/org/elasticsearch/cluster/allocation/ClusterRerouteIT.java
core/src/test/java/org/elasticsearch/cluster/block/ClusterBlockTests.java
core/src/test/java/org/elasticsearch/cluster/node/DiscoveryNodeTests.java
core/src/test/java/org/elasticsearch/cluster/serialization/ClusterSerializationTests.java
core/src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsIT.java
core/src/test/java/org/elasticsearch/cluster/shards/ClusterSearchShardsIT.java
core/src/test/java/org/elasticsearch/common/io/stream/BytesStreamsTests.java
core/src/test/java/org/elasticsearch/common/settings/ScopedSettingsTests.java
core/src/test/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutorTests.java
core/src/test/java/org/elasticsearch/common/util/concurrent/ResizableBlockingQueueTests.java
core/src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryUnitTests.java
core/src/test/java/org/elasticsearch/fieldstats/FieldStatsTests.java
core/src/test/java/org/elasticsearch/index/IndexSortSettingsTests.java
core/src/test/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/mapper/MapperTests.java
core/src/test/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/refresh/RefreshStatsTests.java
core/src/test/java/org/elasticsearch/index/reindex/BulkByScrollTaskStatusTests.java
core/src/test/java/org/elasticsearch/index/termvectors/TermVectorsServiceTests.java
core/src/test/java/org/elasticsearch/indices/analysis/AnalysisModuleTests.java
core/src/test/java/org/elasticsearch/indices/exists/indices/IndicesExistsIT.java
core/src/test/java/org/elasticsearch/indices/settings/GetSettingsBlocksIT.java
core/src/test/java/org/elasticsearch/indices/state/OpenCloseIndexIT.java
core/src/test/java/org/elasticsearch/ingest/PipelineConfigurationTests.java
core/src/test/java/org/elasticsearch/script/IndexLookupIT.java
core/src/test/java/org/elasticsearch/script/NativeScriptTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/GlobalAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/IpRangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/RangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/MaxAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/avg/AvgAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/min/MinAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/hdr/HDRPercentilesAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/TDigestPercentilesAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/sum/SumAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregatorTests.java
core/src/test/java/org/elasticsearch/search/query/SearchQueryIT.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
core/src/test/java/org/elasticsearch/threadpool/AutoQueueAdjustingExecutorBuilderTests.java
distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java
comments:
Merge branch 'master' into feature/client_aggs_parsing

time:
2017-05-17T15:27:09Z
class:
core/src/main/java/org/elasticsearch/ElasticsearchException.java
core/src/main/java/org/elasticsearch/Version.java
core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java
core/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsRequest.java
core/src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsResponse.java
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/GetStoredScriptResponse.java
core/src/main/java/org/elasticsearch/action/admin/cluster/storedscripts/PutStoredScriptRequest.java
core/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeResponse.java
core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/QueryExplanation.java
core/src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequest.java
core/src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java
core/src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStats.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsResponse.java
core/src/main/java/org/elasticsearch/action/fieldstats/FieldStatsShardResponse.java
core/src/main/java/org/elasticsearch/action/index/IndexRequest.java
core/src/main/java/org/elasticsearch/action/ingest/PutPipelineRequest.java
core/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java
core/src/main/java/org/elasticsearch/action/search/SearchTransportService.java
core/src/main/java/org/elasticsearch/action/termvectors/TermVectorsRequest.java
core/src/main/java/org/elasticsearch/cluster/NamedDiff.java
core/src/main/java/org/elasticsearch/cluster/NamedDiffable.java
core/src/main/java/org/elasticsearch/cluster/SnapshotDeletionsInProgress.java
core/src/main/java/org/elasticsearch/cluster/SnapshotsInProgress.java
core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java
core/src/main/java/org/elasticsearch/cluster/routing/allocation/NodeAllocationResult.java
core/src/main/java/org/elasticsearch/common/transport/TransportAddress.java
core/src/main/java/org/elasticsearch/gateway/GatewayMetaState.java
core/src/main/java/org/elasticsearch/index/query/InnerHitBuilder.java
core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java
core/src/main/java/org/elasticsearch/index/refresh/RefreshStats.java
core/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java
core/src/main/java/org/elasticsearch/index/reindex/BulkByScrollTask.java
core/src/main/java/org/elasticsearch/index/reindex/RemoteInfo.java
core/src/main/java/org/elasticsearch/ingest/PipelineConfiguration.java
core/src/main/java/org/elasticsearch/monitor/os/OsStats.java
core/src/main/java/org/elasticsearch/plugins/PluginInfo.java
core/src/main/java/org/elasticsearch/script/Script.java
core/src/main/java/org/elasticsearch/script/ScriptMetaData.java
core/src/main/java/org/elasticsearch/script/StoredScriptSource.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
core/src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
core/src/main/java/org/elasticsearch/search/fetch/subphase/highlight/AbstractHighlighterBuilder.java
core/src/main/java/org/elasticsearch/search/internal/AliasFilter.java
core/src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
core/src/main/java/org/elasticsearch/snapshots/SnapshotInfo.java
core/src/main/java/org/elasticsearch/transport/TcpTransport.java
core/src/test/java/org/elasticsearch/ExceptionSerializationTests.java
core/src/test/java/org/elasticsearch/VersionTests.java
core/src/test/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsResponseTests.java
core/src/test/java/org/elasticsearch/action/admin/cluster/storedscripts/PutStoredScriptRequestTests.java
core/src/test/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestTests.java
core/src/test/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestTests.java
core/src/test/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestTests.java
core/src/test/java/org/elasticsearch/action/fieldstats/FieldStatsRequestTests.java
core/src/test/java/org/elasticsearch/action/index/IndexRequestTests.java
core/src/test/java/org/elasticsearch/action/ingest/PutPipelineRequestTests.java
core/src/test/java/org/elasticsearch/action/ingest/SimulatePipelineRequestTests.java
core/src/test/java/org/elasticsearch/action/termvectors/TermVectorsUnitTests.java
core/src/test/java/org/elasticsearch/cluster/node/DiscoveryNodeTests.java
core/src/test/java/org/elasticsearch/cluster/serialization/ClusterSerializationTests.java
core/src/test/java/org/elasticsearch/common/io/stream/BytesStreamsTests.java
core/src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryUnitTests.java
core/src/test/java/org/elasticsearch/fieldstats/FieldStatsTests.java
core/src/test/java/org/elasticsearch/index/IndexSortSettingsTests.java
core/src/test/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerTests.java
core/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java
core/src/test/java/org/elasticsearch/index/mapper/MapperTests.java
core/src/test/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilderTests.java
core/src/test/java/org/elasticsearch/index/refresh/RefreshStatsTests.java
core/src/test/java/org/elasticsearch/index/reindex/BulkByScrollTaskStatusTests.java
core/src/test/java/org/elasticsearch/ingest/PipelineConfigurationTests.java
modules/percolator/src/main/java/org/elasticsearch/percolator/PercolateQueryBuilder.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolateQueryBuilderTests.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/RoundTripTests.java
test/framework/src/test/java/org/elasticsearch/test/rest/yaml/section/ClientYamlTestSectionTests.java
test/framework/src/test/java/org/elasticsearch/test/rest/yaml/section/SetupSectionTests.java
test/framework/src/test/java/org/elasticsearch/test/rest/yaml/section/SkipSectionTests.java
test/framework/src/test/java/org/elasticsearch/test/rest/yaml/section/TeardownSectionTests.java
comments:
Fix Version based BWC and set correct minCompatVersion (#24732)

Approaching the release of 6.0 we need to sort out the usage of
`Version#minimumCompatibilityVersion` which was still set to 5.0.0.
Now this change moves it to the latest released version of 5.x (5.4 at this point)
to ensure we are compatible with the latest minor of the previous major. This change
also removes all the `_UNRELEASED` from the versions that where released and drops versions
that were never released and are not expected to be released (bugfixes in minors that are not
the latest in the previous major).

time:
2017-05-17T14:24:57Z
class:
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/ESClientYamlSuiteTestCase.java
comments:
Fail rest tests on yaml files (#24740)

We've switched to supporting only `yml` files but anyone who didn't
notice will commit a `yaml` file which won't be executed
which is bad because it is easy not to notice. The test to catch this is
simple enough that I think it is worth adding just to warn folks about
their mistake.

time:
2017-05-17T13:32:07Z
class:
core/src/test/java/org/elasticsearch/action/termvectors/GetTermVectorsIT.java
comments:
Fix GetTermVectorsIT

It was assuming that payloads were available in a context where
they weren't.

Relates to #24716

time:
2017-05-17T12:15:40Z
class:
core/src/main/java/org/elasticsearch/action/search/ExpandSearchPhase.java
core/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
comments:
Fix ExpandSearchPhase when response contains no hits (#24688)

This change skips the expand search phase entirely when there is no search hits in the response.

time:
2017-05-17T12:02:45Z
class:
core/src/main/java/org/elasticsearch/action/OriginalIndices.java
core/src/main/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequest.java
core/src/main/java/org/elasticsearch/action/fieldcaps/TransportFieldCapabilitiesAction.java
core/src/test/java/org/elasticsearch/action/fieldcaps/FieldCapabilitiesRequestTests.java
comments:
Fix `_field_caps` serialization in order to support cross cluster search (#24722)

Today the `_field_caps` API doesn't implement its request serialization
correctly since indices and indices options are not serialized at all.
This will likely break with all transport clients etc. and if this request
must be send across the network. This commit fixes this and adds correct
handling if we have only remote indices to prevent the inclusion of
all local indices.

time:
2017-05-17T11:55:04Z
class:
comments:
Fix new analysis-common yml tests

These tests are broken because I added them with the `yml` extension
and didn't realize that we weren't running tests with that extension
until we merged #24659. I used that extension in anticipation of #24659
but didn't verify that the tests were actually running. Ooops!

Closes #24734

time:
2017-05-17T11:22:05Z
class:
comments:
Handle parentheses in path

The variable assignment needs to be quoted to correctly handle scenario
where the path contains parentheses.

Realtes #24731

time:
2017-05-17T09:34:01Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/DateRangeAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistanceAggregationBuilder.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/range/ip/IpRangeAggregationBuilder.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/DateRangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/GeoDistanceIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/IpRangeIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/RangeIT.java
comments:
Fix ArrayIndexOutOfBoundsException when no ranges are specified in the query (#23241)

* Fix ArrayIndexOutOfBoundsException in Range Aggregation when no ranges are specified in the query

* Revert "Fix ArrayIndexOutOfBoundsException in Range Aggregation when no ranges are specified in the query"

This reverts commit ad57d8feb3577a64b37de28c6f3df96a3a49fe93.

* Fix range aggregation out of bounds exception when there are no ranges in a range or date_range query

* Fix range aggregation out of bounds exception when there are no ranges in the query

This fix is applied to range queries, date range queries, ip range queries and geo distance aggregation queries

time:
2017-05-17T00:55:47Z
class:
comments:
[DOCS] Fixed cross doc xref in plugin docs.

time:
2017-05-17T00:24:35Z
class:
distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java
plugins/ingest-user-agent/src/main/java/org/elasticsearch/ingest/useragent/IngestUserAgentPlugin.java
plugins/ingest-user-agent/src/test/java/org/elasticsearch/ingest/useragent/UserAgentProcessorFactoryTests.java
plugins/ingest-user-agent/src/test/java/org/elasticsearch/ingest/useragent/UserAgentProcessorTests.java
plugins/jvm-example/src/main/java/org/elasticsearch/plugin/example/ExamplePluginConfiguration.java
comments:
Tests: Change rest test extension from .yaml to .yml (#24659)

This commit renames all rest test files to use the .yml extension
instead of .yaml. This way the extension used within all of
elasticsearch for yaml is consistent.

time:
2017-05-17T00:17:37Z
class:
plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStoragePlugin.java
plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageRepository.java
plugins/repository-gcs/src/main/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageService.java
plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageBlobStoreRepositoryTests.java
plugins/repository-gcs/src/test/java/org/elasticsearch/repositories/gcs/GoogleCloudStorageServiceTests.java
comments:
GCS Repository: Add secure storage of credentials (#24697)

This commit adds gcs credential settings to the elasticsearch keystore.
The setting name follows the same pattern as the s3 client settings,
beginning with `gcs.client.`, followed by the client name, and then the
setting name, in this case, `credentials_file`. Using the legacy service
file setting is also deprecated.

time:
2017-05-16T22:05:40Z
class:
comments:
[DOCS] Removed API xrefs from Painless GSG

time:
2017-05-16T21:25:24Z
class:
comments:
CONSOLEify some more aggregation docs

Related #18160

time:
2017-05-16T19:46:56Z
class:
comments:
[DOCS] Setting up separate Painless book.

time:
2017-05-16T19:46:56Z
class:
comments:
[DOCS] Added Painless Language Spec content

time:
2017-05-16T19:01:19Z
class:
core/src/main/java/org/elasticsearch/cluster/block/ClusterBlock.java
comments:
Move BWC versin to 5.5 after backport

Relates to #24678

time:
2017-05-16T18:57:18Z
class:
core/src/main/java/org/elasticsearch/script/NativeScriptEngine.java
core/src/main/java/org/elasticsearch/script/NativeScriptFactory.java
core/src/test/java/org/elasticsearch/script/NativeScriptTests.java
comments:
Scripting: Deprecate native scripts (#24692)

Native scripts are no longer documented and instead using a ScriptEngine
is recommended. This change adds a deprecation warning for removal in
6.0.

relates #19966

time:
2017-05-16T17:13:16Z
class:
core/src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java
core/src/main/java/org/elasticsearch/common/util/concurrent/EsThreadPoolExecutor.java
core/src/main/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutor.java
core/src/main/java/org/elasticsearch/common/util/concurrent/ResizableBlockingQueue.java
core/src/main/java/org/elasticsearch/common/util/concurrent/SizeBlockingQueue.java
core/src/main/java/org/elasticsearch/common/util/concurrent/TimedRunnable.java
core/src/main/java/org/elasticsearch/threadpool/AutoQueueAdjustingExecutorBuilder.java
core/src/main/java/org/elasticsearch/threadpool/ExecutorBuilder.java
core/src/main/java/org/elasticsearch/threadpool/FixedExecutorBuilder.java
core/src/main/java/org/elasticsearch/threadpool/ThreadPool.java
core/src/test/java/org/elasticsearch/common/util/concurrent/QueueResizingEsThreadPoolExecutorTests.java
core/src/test/java/org/elasticsearch/common/util/concurrent/ResizableBlockingQueueTests.java
core/src/test/java/org/elasticsearch/threadpool/AutoQueueAdjustingExecutorBuilderTests.java
comments:
Add ability to automatically adjust search threadpool queue_size

This PR adds a new thread pool type: `fixed_auto_queue_size`. This thread pool
behaves like a regular `fixed` threadpool, except that every
`auto_queue_frame_size` operations (default: 10,000) in the thread pool,
[Little's Law](https://en.wikipedia.org/wiki/Little's_law) is calculated and
used to adjust the pool's `queue_size` either up or down by 50. A minimum and
maximum is taken into account also. When the min and max are the same value, a
regular fixed executor is used instead.

The `SEARCH` threadpool is changed to use this new type of thread pool. However,
the min and max are both set to 1000, meaning auto adjustment is opt-in rather
than opt-out.

Resolves #3890

time:
2017-05-16T17:10:24Z
class:
core/src/main/java/org/elasticsearch/indices/analysis/AnalysisModule.java
core/src/main/java/org/elasticsearch/indices/analysis/PreBuiltTokenFilters.java
core/src/test/java/org/elasticsearch/action/termvectors/AbstractTermVectorsTestCase.java
core/src/test/java/org/elasticsearch/action/termvectors/GetTermVectorsCheckDocFreqIT.java
core/src/test/java/org/elasticsearch/action/termvectors/GetTermVectorsIT.java
core/src/test/java/org/elasticsearch/index/termvectors/TermVectorsServiceTests.java
core/src/test/java/org/elasticsearch/indices/analysis/AnalysisModuleTests.java
core/src/test/java/org/elasticsearch/search/query/SearchQueryIT.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/CommonAnalysisPlugin.java
modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java
test/framework/src/main/java/org/elasticsearch/indices/analysis/AnalysisFactoryTestCase.java
comments:
Move remaining pre-configured token filters into analysis-common (#24716)

Moves the remaining preconfigured token figured into the analysis-common module. There were a couple of tests in core that depended on the pre-configured token filters so I had to touch them:

* `GetTermVectorsCheckDocFreqIT` depended on `type_as_payload` but didn't do anything important with it. I dropped the dependency. Then I moved the test to a single node test case because we're trying to cut down on the number of `ESIntegTestCase` subclasses.
* `AbstractTermVectorsTestCase` and its subclasses depended on `type_as_payload`. I dropped their usage of the token filter and added an integration test for the termvectors API that uses `type_as_payload` to the `analysis-common` module.
* `AnalysisModuleTests` expected a few pre-configured token filtes be registered by default. They aren't any more so I dropped this assertion. We assert that the `CommonAnalysisPlugin` registers these pre-built token filters in `CommonAnalysisFactoryTests`
* `SearchQueryIT` and `SuggestSearchIT` had tests that depended on the specific behavior of the token filters so I moved the tests to integration tests in `analysis-common`.

time:
2017-05-16T16:26:07Z
class:
core/src/main/java/org/elasticsearch/index/shard/IndexShard.java
comments:
Adjust comment lengths in IndexShard

This commit adjusts the length of some comments in IndexShard.java that
were written when the column width was set to 100.

time:
2017-05-16T16:10:09Z
class:
core/src/main/java/org/elasticsearch/script/AbstractSearchScript.java
core/src/main/java/org/elasticsearch/search/lookup/CachedPositionIterator.java
core/src/main/java/org/elasticsearch/search/lookup/IndexField.java
core/src/main/java/org/elasticsearch/search/lookup/IndexFieldTerm.java
core/src/main/java/org/elasticsearch/search/lookup/IndexLookup.java
core/src/main/java/org/elasticsearch/search/lookup/LeafIndexLookup.java
core/src/main/java/org/elasticsearch/search/lookup/LeafSearchLookup.java
core/src/main/java/org/elasticsearch/search/lookup/PositionIterator.java
core/src/main/java/org/elasticsearch/search/lookup/SearchLookup.java
core/src/main/java/org/elasticsearch/search/lookup/TermPosition.java
core/src/test/java/org/elasticsearch/script/IndexLookupIT.java
comments:
Remove script access to term statistics (#19462)

In scripts (at least some of the languages), the terms dictionary and
postings can be access with the special _index variable. This is for
very advanced use cases which want to do their own scoring. The problem
is segment level statistics must be recomputed for every document.
Additionally, this is not friendly to the terms index caching as the
order of looking up terms should be controlled by lucene.

This change removes _index from scripts. Anyone using it can and should
instead write a Similarity plugin, which is explicitly designed to allow
doing the calculations needed for a relevance score.

closes #19359

time:
2017-05-16T15:34:37Z
class:
core/src/main/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdater.java
core/src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
core/src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java
core/src/main/java/org/elasticsearch/action/admin/indices/settings/put/TransportUpdateSettingsAction.java
core/src/main/java/org/elasticsearch/cluster/block/ClusterBlock.java
core/src/main/java/org/elasticsearch/cluster/block/ClusterBlockLevel.java
core/src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java
core/src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
core/src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexStateService.java
core/src/main/java/org/elasticsearch/cluster/metadata/MetaDataUpdateSettingsService.java
core/src/main/java/org/elasticsearch/common/settings/ClusterSettings.java
core/src/main/java/org/elasticsearch/common/settings/IndexScopedSettings.java
core/src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
core/src/main/java/org/elasticsearch/gateway/GatewayService.java
core/src/main/java/org/elasticsearch/rest/RestStatus.java
core/src/main/java/org/elasticsearch/tribe/TribeService.java
core/src/test/java/org/elasticsearch/action/admin/cluster/settings/SettingsUpdaterTests.java
core/src/test/java/org/elasticsearch/action/admin/cluster/tasks/PendingTasksBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/flush/FlushBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/forcemerge/ForceMergeBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/refresh/RefreshBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/segments/IndicesSegmentsBlocksIT.java
core/src/test/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsBlocksIT.java
core/src/test/java/org/elasticsearch/action/main/MainActionTests.java
core/src/test/java/org/elasticsearch/action/support/broadcast/node/TransportBroadcastByNodeActionTests.java
core/src/test/java/org/elasticsearch/action/support/master/TransportMasterNodeActionTests.java
core/src/test/java/org/elasticsearch/action/support/replication/TransportReplicationActionTests.java
core/src/test/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationActionTests.java
core/src/test/java/org/elasticsearch/cluster/allocation/ClusterRerouteIT.java
core/src/test/java/org/elasticsearch/cluster/block/ClusterBlockTests.java
core/src/test/java/org/elasticsearch/cluster/settings/ClusterSettingsIT.java
core/src/test/java/org/elasticsearch/cluster/shards/ClusterSearchShardsIT.java
core/src/test/java/org/elasticsearch/indices/exists/indices/IndicesExistsIT.java
core/src/test/java/org/elasticsearch/indices/settings/GetSettingsBlocksIT.java
core/src/test/java/org/elasticsearch/indices/state/OpenCloseIndexIT.java
modules/reindex/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryBasicTests.java
test/framework/src/main/java/org/elasticsearch/test/ESIntegTestCase.java
comments:
Add a cluster block that allows to delete indices that are read-only (#24678)

Today when an index is `read-only` the index is also blocked from
being deleted which sometimes is undesired since in-order to make
changes to a cluster indices must be deleted to free up space. This is
a likely scenario in a hosted environment when disk-space is limited to switch
indices read-only but allow deletions to free up space.

time:
2017-05-16T15:16:12Z
class:
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/Features.java
test/framework/src/main/java/org/elasticsearch/test/rest/yaml/Stash.java
test/framework/src/test/java/org/elasticsearch/test/rest/yaml/StashTests.java
comments:
Allow unstashing values into keys (#24685)

This is almost exclusively for docs test which frequently match the
entire response. This allow something like:
```
  - set: {nodes.$master.http.publish_address: host}
  - match:
      $body:
        {
          "nodes": {
            $host: {
              ... stuff in here ...
            }
          }
        }
```

This should make it possible for the docs tests to work with
unpredictable keys.

time:
2017-05-16T14:50:26Z
class:
comments:
Docs: Link to  new native ColdFusion (CFML) client (#24690)

time:
2017-05-16T14:06:24Z
class:
core/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodeFilters.java
core/src/test/java/org/elasticsearch/common/settings/ScopedSettingsTests.java
comments:
Allow resetting settings that use and IP validator (#24713)

The IP validator doesn't expect a null value for a setting that causes NPEs
if a user tries to reset a setting that uses this validator.

Closes #24709

time:
2017-05-16T13:57:05Z
class:
comments:
Use correct script name in docs for Windows

With this commit we correct the name of the ES batch script to
`elasticsearch.bat` in the docs and use backslashes in path names.

time:
2017-05-16T13:01:38Z
class:
core/src/test/java/org/elasticsearch/search/aggregations/bucket/GlobalAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/MaxAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/avg/AvgAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/min/MinAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/hdr/HDRPercentilesAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/TDigestPercentilesAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/sum/SumAggregatorTests.java
core/src/test/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountAggregatorTests.java
test/framework/src/main/java/org/elasticsearch/search/aggregations/AggregatorTestCase.java
comments:
Automatically close releasables after test (#24687)

This moves the releasing logic to the base test, so that individual test cases don't need
to worry about releasing the aggregators.  It's not a big deal for individual aggs,
but once tests start using sub-aggs, it can become tricky to free (without double-freeing)
all the aggregators.

time:
2017-05-16T12:54:42Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantLongTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantStringTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/ParsedSignificantTerms.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/InternalMultiBucketAggregationTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTermsTestCase.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTermsTests.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
comments:
Add parsing to Significant Terms aggregations (#24682)

Related to  #23331

time:
2017-05-16T12:35:49Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/ParsedAdjacencyMatrix.java
core/src/test/java/org/elasticsearch/search/aggregations/AggregationsTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrixTests.java
test/framework/src/main/java/org/elasticsearch/test/InternalAggregationTestCase.java
comments:
Add parsing for InternalAdjacencyMatrix aggregation (#24700)

time:
2017-05-16T11:13:11Z
class:
core/src/main/java/org/elasticsearch/index/IndexService.java
modules/percolator/src/test/java/org/elasticsearch/percolator/PercolatorQuerySearchIT.java
comments:
percolator: Fix range queries with date range based on current time.

Range queries with now based date ranges were previously not allowed,
but since #23921 these queries were allowed. This change should really
fix range queries with now based date ranges.

time:
2017-05-16T09:54:02Z
class:
core/src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java
core/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java
core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/index/reindex/ReindexAction.java
core/src/main/java/org/elasticsearch/ingest/InternalTemplateService.java
core/src/main/java/org/elasticsearch/script/ScriptContextRegistry.java
core/src/main/java/org/elasticsearch/script/ScriptModes.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrix.java
core/src/main/java/org/elasticsearch/search/lookup/LeafIndexLookup.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggester.java
core/src/main/java/org/elasticsearch/template/CompiledTemplate.java
core/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java
core/src/test/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilderTests.java
core/src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryIT.java
core/src/test/java/org/elasticsearch/script/ScriptModesTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrixTests.java
core/src/test/java/org/elasticsearch/search/morelikethis/MoreLikeThisIT.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
core/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportSearchTemplateAction.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/CustomMustacheFactoryTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheScriptEngineTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheTests.java
test/framework/src/main/java/org/elasticsearch/bootstrap/BootstrapForTesting.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
comments:
Merge branch 'master' into feature/client_aggs_parsing

time:
2017-05-16T09:51:45Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrix.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/adjacency/InternalAdjacencyMatrixTests.java
comments:
[Tests] Add unit test for InternalAdjecencyMatrix aggregation (#24698)

Adding a unit test to InternalAdjecencyMatrix that extends the shared InternalAggregationTestCase
 that we use for testing aggregations.
Relates to #22278

time:
2017-05-16T09:09:52Z
class:
core/src/test/java/org/elasticsearch/indices/recovery/IndexRecoveryIT.java
comments:
testRerouteRecovery should use assertBusy when checking recovery counters

The test check that the number of outgoing/incoming recoveries of a shard is 0 after recoveries were done. Sadly that is not guaranteed by the current recovery logic as we decrement the counters only when all references to the relevant RecoveryTarget object have been released. This may happen in an async fashion to the recovery completion which causes the test to fail. I looked at options to change the recovery logic to have the recovery counters decrease before the recovery is done *under normally circumstances* but I don't see a clean way to do it. Since it won't give hard guarantees anyway I opted to add assertBusy to the test

Closes #24669

time:
2017-05-16T08:41:29Z
class:
core/src/main/java/org/elasticsearch/search/lookup/LeafIndexLookup.java
comments:
Scripting: Deprecate index lookup (#24691)

This commit adds a deprecation warning if `_index` is used in scripts.
It is emitted each time a script is invoked, but not per document. There
is no test because constructing a LeafIndexLookup is quite difficult,
but the deprecation warning does show up in IndexLookupIT, there is just
no way to assert warnings in integ tests.

relates #19359

time:
2017-05-16T08:01:17Z
class:
core/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java
comments:
Make RemoteClusterConnectionTests more robust against cancelable threads aborts

Today we assert hart if failure listeners are invoked more than once. Yet, this
can happen if we cancel the execution since the caller and the handler will get
the exception on the cancelable threads and will notify the listener concurrently
if timinig allows. This commit relaxes the assertion towards handling multiple
invocations with `ExecutionCancelledException`

Closes #24010
Closes #24179
Closes vagnerclementino/elasticsearch/#98

time:
2017-05-16T05:37:31Z
class:
core/src/main/java/org/elasticsearch/index/query/QueryRewriteContext.java
core/src/main/java/org/elasticsearch/index/query/QueryShardContext.java
core/src/main/java/org/elasticsearch/ingest/InternalTemplateService.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggester.java
core/src/main/java/org/elasticsearch/template/CompiledTemplate.java
core/src/test/java/org/elasticsearch/search/suggest/SuggestSearchIT.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngine.java
modules/lang-mustache/src/main/java/org/elasticsearch/script/mustache/TransportSearchTemplateAction.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/CustomMustacheFactoryTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheScriptEngineTests.java
modules/lang-mustache/src/test/java/org/elasticsearch/script/mustache/MustacheTests.java
test/framework/src/main/java/org/elasticsearch/script/MockScriptEngine.java
comments:
Scripts: Convert template script engines to return String instead of BytesReference (#24447)

Template script engines (mustache, the only one) currently return a
BytesReference that users must know is utf8 encoded. This commit
modifies all callers and mustache to have the template engine return
String. This is much simpler, and does not require decoding in order to
use (for example, in ingest).

time:
2017-05-15T20:42:28Z
class:
comments:
Docs: Add migration note about .yaml and .json removal (#24689)

relates #19391
relates #24633

time:
2017-05-15T20:37:46Z
class:
core/src/main/java/org/elasticsearch/script/ScriptContextRegistry.java
core/src/main/java/org/elasticsearch/script/ScriptModes.java
core/src/main/java/org/elasticsearch/script/ScriptService.java
core/src/test/java/org/elasticsearch/script/ScriptModesTests.java
core/src/test/java/org/elasticsearch/script/ScriptServiceTests.java
comments:
Add New Security Script Settings (#24637)

Settings are simplified to allowed_types and allowed_contexts.  If a setting is not specified the default is to enable all for that setting.

time:
2017-05-15T20:00:24Z
class:
comments:
Re-enable centos-6

time:
2017-05-15T19:58:11Z
class:
comments:
Test: Fix how packaging test generates expected plugins

time:
2017-05-15T18:28:59Z
class:
core/src/main/java/org/elasticsearch/index/reindex/ReindexAction.java
comments:
Move ReindexAction class to core (#24684)

This class is also needed for plugins to use reindex functionality.

Relates to #24578

time:
2017-05-15T18:08:46Z
class:
comments:
Fix typo in example (grades_count -> types_count) (#24635)

Looks like `doc.grade` was used for examples before. But not anymore - https://www.elastic.co/guide/en/elasticsearch/reference/2.4/search-aggregations-metrics-valuecount-aggregation.html

time:
2017-05-15T16:40:24Z
class:
test/framework/src/main/java/org/elasticsearch/bootstrap/BootstrapForTesting.java
test/framework/src/main/java/org/elasticsearch/test/ESTestCase.java
comments:
Remove Jython hacks

We had a hack in setting up permissions for tests to support testing
the lang-python plugin. We also had a hack to prevent Log4j from
loading a shaded version of Jansi provided by Jython. This plugin has
been removed so these hacks are no longer necessary.

Relates #24681

time:
2017-05-15T16:15:42Z
class:
core/src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java
core/src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
core/src/test/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilderTests.java
core/src/test/java/org/elasticsearch/search/morelikethis/MoreLikeThisIT.java
comments:
Pass over _routing value with more_like_this items to be retrieved (#24679)

When retrieving documents to extract terms from as part of a more like this query, the _routing value can be set, yet it gets lost. That leads to not being able to retrieve the documents, hence more_like_this used to return no matches all the time.

Closes #23699

time:
2017-05-15T16:15:20Z
class:
core/src/main/java/org/elasticsearch/common/xcontent/ObjectParser.java
core/src/test/java/org/elasticsearch/common/xcontent/ObjectParserTests.java
comments:
Make ObjectParser support string to boolean conversion (#24668)

We generally accept string values when a boolean is expected. We've been doing that in our parsing code, but we missed that bit when moving parsing code to ObjectParser, which throws an error instead. This commit makes ObjectParser parse also string values into booleans. It throws an error in case the value is not `true` or `false`.

Closes #21802

time:
2017-05-15T15:08:26Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalMappedSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/UnmappedSignificantTerms.java
core/src/test/java/org/elasticsearch/discovery/AbstractDisruptionTestCase.java
core/src/test/java/org/elasticsearch/discovery/ClusterDisruptionIT.java
core/src/test/java/org/elasticsearch/discovery/DiscoveryDisruptionIT.java
core/src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptionsIT.java
core/src/test/java/org/elasticsearch/discovery/MasterDisruptionIT.java
core/src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreIT.java
test/framework/src/main/java/org/elasticsearch/test/disruption/NetworkDisruption.java
test/framework/src/test/java/org/elasticsearch/test/disruption/NetworkDisruptionIT.java
comments:
Merge remote-tracking branch 'origin/master' into feature/client_aggs_parsing

time:
2017-05-15T14:52:02Z
class:
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalMappedSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
core/src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
comments:
 Share XContent rendering code in significant terms aggregations (#24677)

The rendering methods in String and Long Significant String aggregations
 and buckets are very similar. They can be factored out in the
 InternalSignificantTerms class an InternalMappedSignificantTerms class.

