time:
2014-10-30T14:45:07Z
class:
src/main/java/org/elasticsearch/cloud/azure/AzureStorageService.java
src/main/java/org/elasticsearch/cloud/azure/AzureStorageServiceImpl.java
src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobContainer.java
src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureBlobStore.java
src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureImmutableBlobContainer.java
src/main/java/org/elasticsearch/cloud/azure/blobstore/AzureOutputStream.java
src/main/java/org/elasticsearch/discovery/azure/AzureDiscovery.java
src/main/java/org/elasticsearch/repositories/azure/AzureRepository.java
src/test/java/org/elasticsearch/repositories/azure/AzureStorageServiceMock.java
comments:
BlobContainer interface changed in elasticsearch 1.4.0

AWS plugin needs an update because of this change https://github.com/elasticsearch/elasticsearch/pull/7551

Closes #37.

time:
2014-10-30T12:41:08Z
class:
comments:
Plugins: Support usage of ES_JAVA_OPTS in plugin commands

As that environment variable can contain elasticsearch specific configuration
like the path to a configuration, it makes sense to support in both
elasticsearch commands.

Closes #8288

time:
2014-10-30T09:55:59Z
class:
comments:
Upgrade to Lucene 4.10.2

time:
2014-10-30T09:55:55Z
class:
comments:
Upgrade to Lucene 4.10.2

time:
2014-10-30T09:55:35Z
class:
comments:
Upgrade to Lucene 4.10.2

time:
2014-10-30T09:31:53Z
class:
src/main/java/org/elasticsearch/common/logging/jdk/ESLogRecord.java
src/main/java/org/elasticsearch/common/logging/jdk/JdkESLogger.java
src/main/java/org/elasticsearch/common/logging/jdk/JdkESLoggerFactory.java
src/main/java/org/elasticsearch/common/logging/log4j/Log4jESLogger.java
src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java
src/main/java/org/elasticsearch/common/logging/slf4j/Slf4jESLogger.java
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
src/test/java/org/elasticsearch/common/logging/jdk/JDKESLoggerTests.java
src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java
comments:
Core: Fix location information for loggers

This change corrects the location information gathered by the loggers so that when printing class name, method name, and line numbers in the log pattern, the information from the class calling the logger is used rather than a location within the logger itself.

A reset method has also been added to the LogConfigurator class which allows the logging configuration to be reset. This is needed because if the LoggingConfigurationTests and Log4jESLoggerTests are run in the same JVM the second one to run needs to be able to override the log configuration set by the first

Closes #5130, #8052

time:
2014-10-30T06:09:55Z
class:
comments:
Update to Lucene 4.10.2

Closes #33

time:
2014-10-30T05:57:56Z
class:
comments:
Tests: Fix randomizedtest fail

Closes #32

time:
2014-10-30T05:52:22Z
class:
comments:
Update to Lucene 4.10.2

Closes #35

time:
2014-10-30T05:51:10Z
class:
comments:
Tests: Fix randomizedtest fail

Closes #34

time:
2014-10-30T05:46:36Z
class:
comments:
Update to Lucene 4.10.2

Closes #35

time:
2014-10-30T05:44:53Z
class:
comments:
Tests: Fix randomizedtest fail

Closes #34

time:
2014-10-30T05:30:28Z
class:
comments:
Update to Lucene 4.10.2

Closes #44

time:
2014-10-30T05:29:24Z
class:
comments:
Tests: Fix randomizedtest fail

Closes #43

time:
2014-10-30T05:14:56Z
class:
comments:
Update to Lucene 4.10.2

Closes #50

time:
2014-10-30T04:45:42Z
class:
comments:
Tests: Fix randomizedtest fail

Closes #49

time:
2014-10-29T19:34:07Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
[TEST] Upgrade test can only run if major or minor version differs

time:
2014-10-29T17:08:53Z
class:
src/main/java/org/elasticsearch/common/logging/jdk/ESLogRecord.java
src/main/java/org/elasticsearch/common/logging/jdk/JdkESLogger.java
src/main/java/org/elasticsearch/common/logging/jdk/JdkESLoggerFactory.java
src/main/java/org/elasticsearch/common/logging/log4j/Log4jESLogger.java
src/main/java/org/elasticsearch/common/logging/slf4j/Slf4jESLogger.java
src/test/java/org/elasticsearch/common/logging/jdk/JDKESLoggerTests.java
src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java
comments:
Revert "Core: Fix location information for loggers"

This reverts commit 4ebbb657d853895b543a42451ee84975ddf8e925.

time:
2014-10-29T17:08:52Z
class:
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
comments:
Revert "[TEST] Added awaits fix to failing LoggingConfigurationTests"

This reverts commit f8ea7c15d7b018334b7f0b3a92ba60e7c073c168.

time:
2014-10-29T17:08:51Z
class:
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
comments:
Revert "[TEST] added additional logging to LoggingConfigurationTests"

This reverts commit c639815af9ca348e9876b1fd513b51a08fd0c65d.

time:
2014-10-29T17:08:50Z
class:
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
comments:
Revert "[TEST] added more additional logging to LoggingConfigurationTests"

This reverts commit b3a60130bae321ca5d82c781c88941a3d3df0594.

time:
2014-10-29T17:08:45Z
class:
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
comments:
Revert "[TEST] re-enabled AwaitsFix for LoggingConfigurationTests"

This reverts commit c548a526570a016d353fe4a9e67129898cae4178.

time:
2014-10-29T16:13:50Z
class:
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
comments:
[TEST] re-enabled AwaitsFix for LoggingConfigurationTests

time:
2014-10-29T15:21:51Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Upgrade to Lucene 4.10.2

time:
2014-10-29T14:20:10Z
class:
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
comments:
[TEST] added more additional logging to LoggingConfigurationTests

This is to try to determine why the test passes locally but not on the CI builds

time:
2014-10-29T14:04:13Z
class:
comments:
Docs: Update getting-started.asciidoc

Closes #8195

time:
2014-10-29T14:01:18Z
class:
comments:
Docs: Update getting-started.asciidoc

Closes #8194

time:
2014-10-29T13:51:05Z
class:
comments:
Update source-field.asciidoc

very minor typofix

Closes #8066

time:
2014-10-29T13:48:56Z
class:
comments:
Docs: Updated Perl client page to mention async client

Closes #8012

time:
2014-10-29T13:34:25Z
class:
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
comments:
[TEST] added additional logging to LoggingConfigurationTests

This is to try to determine why the test passes locally but not on the CI builds

time:
2014-10-29T13:03:37Z
class:
src/test/java/org/elasticsearch/common/logging/LoggingConfigurationTests.java
comments:
[TEST] Added awaits fix to failing LoggingConfigurationTests

time:
2014-10-29T11:29:28Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
comments:
Recovery: change check for finished to a ref count check

we current check that the recovery is not finished when people access the status local variables. This is wrong and we should check for the refcount being > 0 as it is OK to use the status after it has marked as finished but there are still on going, in-flight reference to it.

Relates to #8092

Closes #8271

time:
2014-10-29T10:24:23Z
class:
src/main/java/org/elasticsearch/common/logging/jdk/ESLogRecord.java
src/main/java/org/elasticsearch/common/logging/jdk/JdkESLogger.java
src/main/java/org/elasticsearch/common/logging/jdk/JdkESLoggerFactory.java
src/main/java/org/elasticsearch/common/logging/log4j/Log4jESLogger.java
src/main/java/org/elasticsearch/common/logging/slf4j/Slf4jESLogger.java
src/test/java/org/elasticsearch/common/logging/jdk/JDKESLoggerTests.java
src/test/java/org/elasticsearch/common/logging/log4j/Log4jESLoggerTests.java
comments:
Core: Fix location information for loggers

This change corrects the location information gathered by the loggers so that when printing class name, method name, and line numbers in the log pattern, the information from the class calling the logger is used rather than a location within the logger itself.

Closes #5130

time:
2014-10-29T09:19:00Z
class:
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryParser.java
src/main/java/org/elasticsearch/index/query/QueryBuilders.java
src/main/java/org/elasticsearch/indices/query/IndicesQueriesModule.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
MLT Field Query: remove it from master

The MLT field query is simply replaced by a MLT query set to specififc field.
To simplify code maintenance we should deprecate it in 1.4 and remove it in
2.0.

Closes #8238

time:
2014-10-29T08:54:42Z
class:
src/main/java/org/elasticsearch/action/indexedscripts/get/TransportGetIndexedScriptAction.java
src/main/java/org/elasticsearch/script/ScriptService.java
comments:
[SCRIPTS] GetIndexedScript call can deadlock

GetIndexedScript can deadlock since they perform blocking operation
on the network thread. This commit moves the blocking to an async operation

time:
2014-10-29T08:24:35Z
class:
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
comments:
[TEST] Move rebalance setting to the index level / pass it on index creation

time:
2014-10-28T22:53:25Z
class:
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/test/test/GlobalScopeClusterTests.java
src/test/java/org/elasticsearch/test/test/SuiteScopeClusterTests.java
src/test/java/org/elasticsearch/test/test/TestScopeClusterTests.java
comments:
[TEST] initialize SUITE | GLOBAL scope cluster in a private random context

Today any call to the current randomized context modifies the random
sequence such that cluster initialization is context dependent. If due
to an error for instance a static util method is used like `randomLong`
inside the TestCluster instead of the provided Random instance all
reproducibility guarantees are gone. This commit adds a safe mechanism
to initialize these clusters even if a static helper is used. All none
test scope clusters are now initialized in a private randomized context.

time:
2014-10-28T22:39:02Z
class:
src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java
src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java
comments:
Completion Suggester: Fix CompletionFieldMapper to correctly parse weight
 - Allows weight to be defined as a string representation of a positive integer

closes #8090

time:
2014-10-28T22:20:30Z
class:
src/test/java/org/elasticsearch/indices/settings/UpdateSettingsTests.java
comments:
Test: fix test to optimize and flush in the end to try to prevent 'Delete Index failed - not acked'

time:
2014-10-28T21:57:17Z
class:
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/test/PrintAllThreadStacksOnFailure.java
comments:
Tests: stop printing all thread stacks on failure: it's too noisy

time:
2014-10-28T20:39:51Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
s/MapBuilder/singletonMap in InternalEngine

time:
2014-10-28T20:37:21Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
[ENGINE] Add current translog ID to commit meta before closing

Today we simply close the IW when we have to open a new one if ie.
we change merge settings. Yet, the API is deprecated and under the hood
it commits the IW. For safety we should add the current translog ID and
use rollback instead to not wait for merges.

time:
2014-10-28T18:34:34Z
class:
comments:
Added missing percolate API parameters (percolate_routing, percolate_preference) to the REST API Spec

Closes #7173

time:
2014-10-28T18:31:06Z
class:
comments:
Use the simpler command line syntax in the Debian init script

It's definitely not a blocker, but it would be nice to be consistent.

Closes #5033

time:
2014-10-28T15:36:17Z
class:
src/main/java/org/elasticsearch/client/support/Headers.java
src/test/java/org/elasticsearch/client/AbstractClientHeadersTests.java
src/test/java/org/elasticsearch/client/transport/TransportClientHeadersTests.java
comments:
Enabled overriding the request headers in the clients

One can set the headers sent with request by the clients by setting the `request.headers` setting. This commit enables overriding any such set headers directly on the requests.

time:
2014-10-28T14:57:21Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java
comments:
Improve handling of multicast binding exceptions

In case the multicast binding fails (due to socket errors), abort zen
pinging code and throw a better error message
Relates #8225

(cherry picked from commit f819cff77a0ef95b340afc2f22e3464283803960)

time:
2014-10-28T14:33:20Z
class:
comments:
Introduce elasticsearch.in.bat (i.e. es.in for Windows)

Break-out common functionality between elasticsearch.bat and service.bat
Relates #8237

(cherry picked from commit 87095e79534bcef97b2b275322c924bd96b34e3b)

time:
2014-10-28T12:39:05Z
class:
comments:
Tests: Refixed the put_alias tests

The missing/null index parameter is in the URL, not the body.
So it should be required, and throw a param error if not provided.

Relates #7863

time:
2014-10-28T11:30:36Z
class:
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/TemplateQueryParser.java
src/main/java/org/elasticsearch/index/query/WrapperFilterParser.java
src/main/java/org/elasticsearch/index/query/WrapperQueryParser.java
comments:
Make indexQueryParserService available. Closes #8248

time:
2014-10-28T10:43:48Z
class:
src/main/java/org/elasticsearch/cloud/aws/AwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/cloud/aws/TestAwsS3Service.java
src/test/java/org/elasticsearch/repositories/s3/AbstractS3SnapshotRestoreTest.java
comments:
Allow per-repository endpoints

time:
2014-10-28T10:43:10Z
class:
comments:
Test: Change missing/null alias test to catch a request error, not a param error

Relates: #7863

time:
2014-10-28T09:58:47Z
class:
comments:
Docs: Update multi-get.asciidoc

Duplicate word

Closes #8228

time:
2014-10-28T06:08:19Z
class:
comments:
Updated paths to be inline with #8240

time:
2014-10-27T21:18:50Z
class:
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/StandaloneTest.java
comments:
Fix test

Related to #89

time:
2014-10-27T21:13:15Z
class:
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/StandaloneTest.java
comments:
Fix test

Related to #89

time:
2014-10-27T21:08:41Z
class:
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/StandaloneTest.java
comments:
Fix test

Related to #89

time:
2014-10-27T21:01:22Z
class:
src/test/java/org/elasticsearch/plugin/mapper/attachments/test/StandaloneTest.java
comments:
Test: add a standalone tool which process content

This tool is a simple main class which can be used to test what is extracted from a given binary file or from its base64 equivalent.

You can give as first argument the BASE64 content

Available options:

 -u file:/URL/TO/YOUR/DOC (in place of BASE64 content)
 -s set extracted size (default to mapper attachment size)

Examples:

```
StandaloneTest BASE64Text
StandaloneTest BASE64Text -s 1000000
StandaloneTest -u /tmp/mydoc.pdf
StandaloneTest -u /tmp/mydoc.pdf -s 1000000
```

Closes #89.

time:
2014-10-27T19:49:58Z
class:
src/main/java/org/elasticsearch/rest/action/cat/RestRecoveryAction.java
comments:
Cat Recovery API: Reverting changes introduced with commit e1c75bae87300f5fd59c9a455f9a89298688df49

Adding these 2 headers to the CAT Recovery made the CI tests hanging for a loooong time.

Related to #8041

time:
2014-10-27T19:03:36Z
class:
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
Delegate write.lock to primary directory

time:
2014-10-27T18:39:01Z
class:
src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
comments:
Aliases: Throw exception if index is null or missing when creating an alias

Fixes a bug where alias creation would allow `null` for index name, which thereby
applied the alias to _all_ indices.  This patch makes the validator throw an
exception if the index is null.

```bash
POST /_aliases
{
   "actions": [
      {
         "add": {
            "alias": "empty-alias",
            "index": null
         }
      }
   ]
}
```
```json
{
   "error": "ActionRequestValidationException[Validation Failed: 1: Alias action [add]: [index] may not be null;]",
   "status": 400
}
```

The reason this bug wasn't caught by the existing tests is because
the old test for nullness only validated against a cluster which had
zero indices.  The null index is translated into "_all", and since
there are no indices, this fails because the index doesn't exist.
 So the test passes.

However, as soon as you add an index, "_all" resolves and you get the
situation described in the original bug report:  null index is
accepted by the alias, resolves to "_all" and gets applied to everything.

The REST tests, otoh, explicitly tested this bug as a real feature and therefore
passed.  The REST tests were modified to change this behavior.

Fixes #7863

time:
2014-10-27T16:35:06Z
class:
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
comments:
MLT Query: use ParseField#withAllDeprecated for percent_terms_to_match

Also the parameter was deprecated but not removed so we keep it in the doc and
mark it as deprecated ...

Closes #8241

time:
2014-10-27T14:42:44Z
class:
comments:
Docs: fix tags for dfs and new like parameter

time:
2014-10-27T13:49:48Z
class:
comments:
Documented that HTTP pipelining is not supported

time:
2014-10-27T13:26:04Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java
comments:
Remove unused imports

time:
2014-10-27T13:21:25Z
class:
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/deletionpolicy/SnapshotIndexCommitExistsMatcher.java
comments:
[CORE] remove usage of Directory#fileExists

This commit removes the usage of #fileExists which has been
deprecated long ago an can be a source of race conditions.

time:
2014-10-27T12:57:52Z
class:
src/main/java/org/elasticsearch/index/search/nested/NestedDocsFilter.java
src/main/java/org/elasticsearch/index/search/nested/NonNestedDocsFilter.java
comments:
Core: Cleanup non nested filter to not flip the bits in the FixedBitSet returned by the wrapped filter.

If the filter producing the FBS were to be cached then it would flip bits each time the NonNestedDocsFilter was executed.
In our case we cache the NonNestedDocsFilter itself so that didn't happen each time this filter was used.
However the hashcode of NonNestedDocsFilter and NestedDocsFilter was the same, since NonNestedDocsFilter directly used NestedDocsFilter#hashCode()

Closes #8227
Closes #8232

time:
2014-10-27T12:31:27Z
class:
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
comments:
Test: remove wait on events from multipleNodesShutdownNonMasterNodes

The test validates that minimum master node is honored after shutting down nodes. When nodes are restarted we may go through a couple of master election of a master is elected and  discovers some of the old nodes left before all new node have joined. Processing that node failure the master de-elects it self, which is fine because we will start a new master election. Test however runs a clusterHealth call with a  wait for event. This is implemented using a cluster state update task which fails when the master steps down. Longer term fix requires a rewrite of the cluster health API code but a quick fix is not check for events (not needed for this test).

time:
2014-10-27T12:05:12Z
class:
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
[TEST] Beef up test and replace deprecated API

time:
2014-10-27T11:11:26Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/Terms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/UnmappedTerms.java
src/test/java/org/elasticsearch/search/aggregations/bucket/AbstractTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/MinDocCountTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
Aggregations: Return the sum of the doc counts of other buckets.

This commit adds a new field to the response of the terms aggregation called
`sum_other_doc_count` which is equal to the sum of the doc counts of the buckets
that did not make it to the list of top buckets. It is typically useful to have
a sector called eg. `other` when using terms aggregations to build pie charts.

Example query and response:

```json
GET test/_search?search_type=count
{
  "aggs": {
    "colors": {
      "terms": {
        "field": "color",
        "size": 3
      }
    }
  }
}
```

```json
{
   [...],
   "aggregations": {
      "colors": {
         "doc_count_error_upper_bound": 0,
         "sum_other_doc_count": 4,
         "buckets": [
            {
               "key": "blue",
               "doc_count": 65
            },
            {
               "key": "red",
               "doc_count": 14
            },
            {
               "key": "brown",
               "doc_count": 3
            }
         ]
      }
   }
}
```

Close #8213

time:
2014-10-27T10:11:54Z
class:
comments:
[TESTS Fix wrong assertion in test introduced by #8128

time:
2014-10-27T08:47:26Z
class:
src/main/java/org/elasticsearch/rest/action/cat/RestRecoveryAction.java
comments:
Cat API: Add node name to _cat/recovery

Add source_node and target_node fields to the recovery cat API. Also fixed and updated the documentation which was not complete concerning fields names.

Closes #8041

time:
2014-10-27T08:19:29Z
class:
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
[TEST] Add test for #8226

time:
2014-10-27T02:27:41Z
class:
src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java
src/main/java/org/elasticsearch/common/Booleans.java
src/test/java/org/elasticsearch/common/BooleansTests.java
comments:
Core: Validates bool values in yaml for node settings

- Added parseBooleanExact in booleans which throws exception in case of
  parse failure
- Used ParseExact in static's to make it consistent

+ code review fixes

- Added unit test
- Changed Exception Type to ElasticSearchIllegalArg from Parse
- used isExplicit*

Closes #8097

time:
2014-10-26T20:10:17Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java
comments:
Recovery: RecoveriesCollection.findRecoveryByShard should call recoveryStatus.tryIncRef before accessing fields

The function iterates over a snapshot of on going recoveries and thus may access RecoveryStatus objects that are already finished.

Closes #8231

time:
2014-10-26T12:07:32Z
class:
src/test/java/org/elasticsearch/test/transport/NettyTransportMultiPortIntegrationTests.java
comments:
[TEST] NettyTransportMultiPortIntegrationTests used wrong random to
initialize ports.

JUnit uses an instance per test which caused the prot range to be
initialized twice since suite level tests are not configured in a
different context.

time:
2014-10-26T09:09:18Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
add missing imports

time:
2014-10-26T08:42:35Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/test/GlobalScopeClusterTests.java
src/test/java/org/elasticsearch/test/test/SuiteScopeClusterTests.java
src/test/java/org/elasticsearch/test/test/TestScopeClusterTests.java
comments:
[TEST] `Scope.SUITE` is not reproducible due to late cluster initialization

The cluster for `Scope.SUITE` tests must be initialize in a static manner
before the first test runs otherwise the random context used to initialize
the cluster is taken from tests randomness rather than the suites randomness.
This means test clusters will have different setups if only a single test is
executed or even the test might have a entirely different random sequence.

time:
2014-10-25T21:08:42Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Test: testRecoverFromPreviousVersion should refresh from new nodes if running against v<1.3.0

This is due to a bug in older version causing refreshes to potentially be missed due to relocations #6545

Also:
- Changed test to keep track of ids and report missing ones.
- Removed total count check from assertSearchHits in order to enable per id checks in cased of a mismatch
- Added a printable unique id part the ids of dummy documents added by indexRandom. The current random unicode id
sometimes prints as ???? to the logs making them hard to trace

time:
2014-10-25T09:04:51Z
class:
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
comments:
MLT Query: versatile 'like' parameter

The MLT query has a lot of parameters. For example, a set of documents is
specified with either `like_text`, `ids` or `docs`, with at least one
parameter required. This commit groups all the document specification
parameters under one called `like`. The syntax is described below and could
easily be extended to allow for new means of specifying document input. The
`like_text`, `ids` and `docs` parameters are deprecated.

As a single piece text:

{
  "query": {
    "more_like_this": {
      "like": "some text here"
    }
  }
}

As a single item:

{
  "query": {
    "more_like_this": {
      "like": {
        "_index": "imdb",
        "_type": "movies",
        "_id": "88247"
      }
    }
  }
}

Or as a mixture of all:

{
  "query": {
    "more_like_this": {
      "like": [
        "Some random text ...",
        {
          "_index": "imdb",
          "_type": "movies",
          "_id": "88247"
        },
        {
          "_index": "imdb",
          "_type": "movies",
          "doc": {
            "title": "Document with an artificial title!"
          }
        }
      ]
    }
  }
}

Closes #8039

time:
2014-10-25T07:34:18Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
comments:
Catch both FileNotFound & NoSuchFileException

time:
2014-10-24T14:45:42Z
class:
comments:
Docs: rolling upgrade process seems incorrect

When reading the [rolling upgrade process](http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/setup-upgrade.html#rolling-upgrades), you can see that we wrote:

* disable allocation
* upgrade node1
* upgrade node2
* upgrade node3
* ...
* enable allocation

That won't work as after a node has been removed and restarted, no shard will be allocated anymore.
So closing node2 and remaining nodes, won't help to serve index and search request anymore.

We should write:

* disable allocation
* upgrade node1
* enable allocation
* wait for shards being recovered on node1
* disable allocation
* upgrade node2
* enable allocation
* wait for shards being recovered on node2
* disable allocation
* upgrade node3
* enable allocation
* wait for shards being recovered on node3
* disable allocation
* ...
* enable allocation

I think this documentation update should go in 1.3, 1.4, 1.x and master branches.

Closes #8218
Closes #7973.

time:
2014-10-24T13:27:31Z
class:
comments:
Docs: fixed typo in documentation

Closes #8205

time:
2014-10-24T12:50:37Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/test/java/org/elasticsearch/action/bulk/BulkProcessorClusterSettingsTests.java
comments:
Bulk indexing: Fix 8125 hanged request when auto create index is off.
If a bulk request contains a mix of indexing requests for an existing index and one that needs to be auto-created but a cluster configuration prevents the auto-create of the new index the ingest process hangs. The exception for the failure to create an index was not caught or reported back properly. Added a Junit test to recreate the issue and the associated fix is in TransportBulkAction.

Closes #8125

time:
2014-10-24T12:35:38Z
class:
src/main/java/org/elasticsearch/common/ParseField.java
src/test/java/org/elasticsearch/common/ParseFieldTests.java
comments:
ParseField: Support for when all fields are deprecated

Closes #8067

time:
2014-10-24T11:49:42Z
class:
src/main/java/org/elasticsearch/action/termvector/dfs/ShardDfsOnlyRequest.java
comments:
Term Vectors: removed Nullable annotation on a primitive type

time:
2014-10-24T10:19:30Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
[STORE] Don't catch FNF/NSF exception when reading metadata

When reading metadata we do catch FileNotFound and NoSuchFileExceptions
today, log the even and return an empty metadata object. Yet, in some cases
this might be the wrong thing todo ie. if a commit point is provided these
situations are actually an error and should be rethrown. This commit
pushes the responsiblity to the caller to handle this exception.

Closes #8207

time:
2014-10-24T09:45:13Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[CACHE] Expose concurrency_level on all caches

The concurrency level allows to configure the cache internal segments
used to cache data. This can have direct impact on evicition rates since
memory bound caches are equally divided into segments which can cause
early evictions if cache entries are not well balanced.

Relates to #7836

time:
2014-10-24T08:33:54Z
class:
src/main/java/org/elasticsearch/common/util/concurrent/AbstractRefCounted.java
src/main/java/org/elasticsearch/common/util/concurrent/RefCounted.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
src/test/java/org/elasticsearch/common/util/concurrent/RefCountedTest.java
comments:
[UTILITIES] Introduce a RefCounted interface and basic impl

We already have two places duplicating this rather hairy logic, this
commit intorduces a new RefCoutned interace and an abstract implementation
that can be used for delegation. It factors out all the reference counting
and adds single and multithreaded test for it.

Closes #8210

time:
2014-10-24T07:49:18Z
class:
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
test: RelocationTests.testCancellationCleansTempFiles may fail due to io errors while check temp files are deleted

Windows can throw NoSuchFileException when using File.walkFileTree and deleting files concurrently. This commit changes IO exceptions into assertion error so that assertBusy will wait for them as well.

time:
2014-10-23T15:30:57Z
class:
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
Test: additional logging

time:
2014-10-23T13:06:02Z
class:
src/main/java/org/elasticsearch/action/admin/indices/recovery/TransportRecoveryAction.java
src/main/java/org/elasticsearch/index/gateway/IndexShardGatewayService.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/main/java/org/elasticsearch/indices/recovery/RecoveriesCollection.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryFailedException.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
Recovery: refactor RecoveryTarget state management

This commit rewrites the state controls in the RecoveryTarget family classes to make it easier to guarantee that:
- recovery resources are only cleared once there are no ongoing requests
- recovery is automatically canceled when the target shard is closed/removed
- canceled recoveries do not leave temp files behind when canceled.

Highlights of the change:
1) All temporary files are cleared upon failure/cancel (see #7315 )
2) All newly created files are always temporary
3) Doesn't list local files on the cluster state update thread (which throw unwanted exception)
4) Recoveries are canceled by a listener to IndicesLifecycle.beforeIndexShardClosed, so we don't need to explicitly call it.
5) Simplifies RecoveryListener to only notify when a recovery is done or failed. Removed subtleties like ignore and retry (they are dealt with internally)

Closes #8092 , Closes #7315

time:
2014-10-23T12:42:06Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TESTS] Change test node watermarks for DiskThresholdDecider

Ensures that we can still run tests if the machine running them does not
have enough free disk space to be below the high watermark

time:
2014-10-23T12:07:13Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationDecider.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationDeciderIntegrationTest.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationTests.java
src/test/java/org/elasticsearch/gateway/local/RecoveryBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
src/test/java/org/elasticsearch/test/ElasticsearchAllocationTestCase.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[ROUTING] Add rebalance enabled allocation decider

This commit adds the ability to enable / disable relocations
on an entire cluster or on individual indices for either:

 * `primaries` - only primaries can rebalance
 * `replica` - only replicas can rebalance
 * `all` - everything can rebalance (default)
 * `none` - all rebalances are disabled

similar to the allocation enable / disable functionality.

Relates to #7288

time:
2014-10-23T12:04:42Z
class:
src/main/java/org/elasticsearch/search/fetch/fielddata/FieldDataFieldsParseElement.java
src/test/java/org/elasticsearch/search/fields/SearchFieldsTests.java
comments:
[SEARCH] Passing fieddata_fields as a non array causes OOM

If `fielddata_fields` are passed as a simple value instead of an array
we end up in an infinite loop createing parsed elements with null
values.
This commit validates the incoming token

Closes #8203

time:
2014-10-23T11:59:59Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequest.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequestBuilder.java
src/main/java/org/elasticsearch/action/termvector/TermVectorResponse.java
src/main/java/org/elasticsearch/action/termvector/TermVectorWriter.java
src/main/java/org/elasticsearch/action/termvector/dfs/DfsOnlyRequest.java
src/main/java/org/elasticsearch/action/termvector/dfs/DfsOnlyResponse.java
src/main/java/org/elasticsearch/action/termvector/dfs/ShardDfsOnlyRequest.java
src/main/java/org/elasticsearch/action/termvector/dfs/ShardDfsOnlyResponse.java
src/main/java/org/elasticsearch/action/termvector/dfs/TransportDfsOnlyAction.java
src/main/java/org/elasticsearch/action/termvector/dfs/package-info.java
src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorService.java
src/main/java/org/elasticsearch/rest/action/termvector/RestTermVectorAction.java
src/test/java/org/elasticsearch/action/termvector/GetTermVectorTests.java
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
Term Vectors: support for distributed frequencies

Adds distributed frequencies support for the Term Vectors API. A new parameter
called `dfs` is introduced which defaults to `false`.

Closes #8144

time:
2014-10-23T11:48:48Z
class:
src/main/java/org/elasticsearch/cluster/InternalClusterInfoService.java
src/test/java/org/elasticsearch/cluster/routing/ClusterInfoServiceTests.java
comments:
Enable ClusterInfoService by default

Since we enabled the disk threshold decider by default, we need to
enable the cluster info service so that disk usages and shard sizes can
be gathered also.

Adds a test that checks that we are gathering information by default.

time:
2014-10-23T10:42:51Z
class:
src/main/java/org/elasticsearch/common/logging/log4j/LogConfigurator.java
comments:
Add EnhancedPatternLayout to logging.yml options

time:
2014-10-23T09:41:38Z
class:
comments:
update documentation with release 2.4.0

time:
2014-10-23T08:11:10Z
class:
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
TEST : Disable throttleStats test

This test has been intermittently failing, disabling while I dig into it.

time:
2014-10-22T22:06:00Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/RangeTests.java
comments:
Tests: Improve range tests to check inclusive/exclusive on ends.

closes #8199

time:
2014-10-22T16:37:09Z
class:
comments:
Startup: Add ES_HOME to ES_INCLUDE search path

With this change, the elasticsearch script can be linked to another path
without having to set ES_INCLUDE to match the installation path.
Previously, the elasticsearch would find ES_HOME correctly even if linked
but could not find the include script, and finding it would be expected
behavior to me based on its current search path.

Closes #4958

time:
2014-10-22T15:34:58Z
class:
src/main/java/org/elasticsearch/index/query/MissingFilterBuilder.java
comments:
Docs: Fixed typo in MissingFilterBuilder

Closes #8185

time:
2014-10-22T15:25:39Z
class:
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
TEST : Force throttle test to use tiered merge

This commit fixes the failing throttle test by forcing the use of the tiered merge policy.

time:
2014-10-22T13:07:28Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/indexing/IndexingStats.java
src/main/java/org/elasticsearch/index/indexing/ShardIndexingService.java
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
Stats : Add time in index throttle to stats.

This commit adds throttle stats to the indexing stats and uses a call back from InternalEngine to manage the stats.
Also includes updates the IndexStatsTests to test for these new stats.
Stats added :
```
throttle_time_in_millis
is_throttled
```

Closes #7861

time:
2014-10-22T11:02:16Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
comments:
[CORE] Don't handle FNF exceptions when reading snapshot

We used to handle FNF exceptions in the store when reading a snapshot.
For instance if we can't open a segments file for a given commit point
we just return an empty metadata object and tracelog the even. This can
cause shards to be false marked as corrupted if a shard is forcefully
removed while a recovery started at the same time. We should in general
bubble up these exceptions and let the caller decided how to handle the
IOExceptions.

time:
2014-10-22T10:46:33Z
class:
comments:
Update update-settings.asciidoc

Removed deprecated `cluster.routing.allocation.disable` settings

time:
2014-10-22T10:45:10Z
class:
comments:
Update cluster.asciidoc

Fixed asciidoc syntax

time:
2014-10-22T08:53:53Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/indices/breaker/HierarchyCircuitBreakerService.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerNoopTests.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Make "noop" request breaker a non-dynamic setting

The issue with making it dynamic is that in the event a cluster is
switched from a noop to a concrete implementation, there may be
in-flight requests, once these requests complete we adjust the breaker
with a negative number and trip an assertion.

This also rarely uses noop breakers in InternalTestCluster

time:
2014-10-22T08:31:34Z
class:
src/main/java/org/elasticsearch/index/query/SimpleQueryParser.java
src/test/java/org/elasticsearch/search/query/SimpleQueryStringTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
Make simple_query_string leniency more fine-grained

Previously, the leniency was on a per-query basis, with each query being
parsed into multiple queries, one for each field. If any one of these
queries failed, the entire query was discarded in the name of being
lenient.

Now query parts will only be discarded if they fail for a particular
field, the entire query is not discarded. This helps when performing a
query over a numeric and string field, as only the sub-queries that are
invalid due to format exceptions will be discarded.

Also moves the `simple_query_string` queries out of SimpleQueryTests and
into a dedicated SimpleQueryStringTests class.

Fixes #7967

time:
2014-10-22T08:20:25Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
comments:
Aggregations: the `children` agg didn't take deleted document into account.

The live docs that is passed down was ignored by the filter impl. Now the children filter gets wrapped with ApplyAcceptedDocsFilter, so live docs are actually applied.

Closes #8180

time:
2014-10-22T08:17:50Z
class:
src/main/java/org/elasticsearch/index/query/NestedQueryParser.java
comments:
Core: Forget to move the child filter over to fixed bitset filter.

Closes #8171

time:
2014-10-22T08:12:55Z
class:
src/main/java/org/elasticsearch/index/cache/fixedbitset/FixedBitSetFilterCache.java
comments:
Core: Add warmer listener only when index service is set, in order to prevent possible NPE.

The IndicesWarmer gets set before the InternalIndexService gets set, which can lead to a small time window were InternalIndexService isn't set

Closes #8140
Closes #8168

time:
2014-10-22T08:06:10Z
class:
src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Test: Fix expected error message

time:
2014-10-22T07:49:37Z
class:
src/main/java/org/elasticsearch/index/query/QueryParserUtils.java
src/test/java/org/elasticsearch/bwcompat/ParentChildDeleteByQueryBackwardsCompatibilityTest.java
comments:
Parent/child: Check if there is a search context, otherwise throw a query parse exception.

Also added a bwc test that runs a delete by query with a has_child query and verifies that only that operation is ignored when recovering from disk during a upgrade.

Closes #8031
Closes #8177

time:
2014-10-21T18:59:41Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
Tests: Add forgotten portions of the fix to make the upgrade test not do
reallcations at the wrong time.

time:
2014-10-21T18:14:51Z
class:
comments:
Merge pull request #8183 from pickypg/feature/groovy-jdk7-8182

Use groovy-x.y.z-indy jar for better scripting performance

time:
2014-10-21T17:08:08Z
class:
comments:
Use groovy-x.y.z-indy jar for better scripting performance

Using the Groovy jar with the indy (short for `invokedynamic`) classifier enables usage of the `invokedynamic` instruction available in Java 7+. Due to buggy JVMs, it should only be used with Java 7u60 or later.

time:
2014-10-21T16:18:10Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
Tests: Control reallocation in upgrade test to stop rebalancing causing upgrade requests to be lost.

time:
2014-10-21T10:52:12Z
class:
comments:
Docs: missing quote

fix missing quote

Closes #8176

time:
2014-10-21T08:42:54Z
class:
src/test/java/org/elasticsearch/search/fields/SearchFieldsTests.java
comments:
Tests: Fix SearchFieldsTests after changes to TimestampFieldMapper.

time:
2014-10-21T08:10:03Z
class:
comments:
Docs: Provide example of deleting a repository

Example of deleting a repository with explanation that snapshots themselves are left untouched.

Closes #8172

time:
2014-10-21T07:45:19Z
class:
comments:
Docs: Update filtered-query.asciidoc

Fix mistyping

Closes #8167

time:
2014-10-21T07:43:55Z
class:
comments:
Docs: Update minimum-should-match.asciidoc

Add %-sign to examle in the last section

Closes #8157

time:
2014-10-20T19:09:51Z
class:
src/main/java/org/elasticsearch/indices/IndexPrimaryShardNotAllocatedException.java
comments:
Change IndexPrimaryShardNotAllocatedException from 409 (RestStatus.CONFLICT) to 500 (RestStatus.INTERNAL_SERVER_ERROR)

Closes #7632, Closes #7987

time:
2014-10-20T18:48:37Z
class:
src/main/java/org/elasticsearch/bootstrap/Bootstrap.java
comments:
Boostrap: Log startup exception to console if needed and to file as error

Closes #6581

time:
2014-10-20T18:26:56Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
Tests: Adding additional debug info to upgrade test.

time:
2014-10-20T17:41:39Z
class:
src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
comments:
Parent/child: Reduce memory usage in top children query.

Closes #8165
Closes #8160

time:
2014-10-20T17:09:45Z
class:
src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java
src/main/java/org/apache/lucene/queryparser/classic/QueryParserSettings.java
src/main/java/org/elasticsearch/index/query/QueryStringQueryBuilder.java
src/main/java/org/elasticsearch/index/query/QueryStringQueryParser.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Add time_zone setting for query_string

Query String query now supports a new `time_zone` option based on JODA time zones.
When using a range on date field, the time zone is applied.

```json
{
"query": {
  "query_string": {
    "text": "date:[2012 TO 2014]",
    "timezone": "Europe/Paris"
  }
 }
}
```

Closes #7880.

time:
2014-10-20T13:44:20Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
comments:
Raise maximum index name length to 255 bytes

Fixes #8079

time:
2014-10-20T13:11:15Z
class:
src/test/java/org/elasticsearch/recovery/RelocationTests.java
comments:
Test: RelocationTests.testMoveShardsWhileRelocation should wait on nodes to start before asking for a client

The client call may create another node if none of the previous nodes are published. That node throws the test off.

time:
2014-10-20T10:29:30Z
class:
src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/search/SearchModule.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsContext.java
src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
src/main/java/org/elasticsearch/search/fetch/FetchPhase.java
src/main/java/org/elasticsearch/search/fetch/partial/PartialFieldsContext.java
src/main/java/org/elasticsearch/search/fetch/partial/PartialFieldsFetchSubPhase.java
src/main/java/org/elasticsearch/search/fetch/partial/PartialFieldsParseElement.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/test/java/org/elasticsearch/search/fields/SearchFieldsTests.java
src/test/java/org/elasticsearch/search/source/SourceFetchingTests.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Search: Remove partial fields.

Partial fields have been deprecated since 1.0.0Beta1 in favor of _source
filtering. They will be removed in 2.0.

time:
2014-10-20T10:17:26Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingOnClusterTests.java
comments:
Mappings: Store _timestamp by default.

Storing `_timestamp` by default means that under the default configuration, you
would have all the information you need in order to reindex into a different
index.

Close #8139

time:
2014-10-20T10:16:50Z
class:
comments:
Eclipse: do not use star imports and reorganize imports on save.

Close #7587

time:
2014-10-20T09:56:01Z
class:
comments:
Update plugins.asciidoc

Added Vietnamese Analyser to plugins page

Closes #6647

time:
2014-10-20T09:19:40Z
class:
src/test/java/org/elasticsearch/benchmark/breaker/CircuitBreakerBenchmark.java
comments:
[TESTS] Add a benchmark for circuit breaker overhead

time:
2014-10-20T08:43:41Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/common/breaker/CircuitBreaker.java
src/main/java/org/elasticsearch/common/breaker/NoopCircuitBreaker.java
src/main/java/org/elasticsearch/indices/breaker/BreakerSettings.java
src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerModule.java
src/main/java/org/elasticsearch/indices/breaker/HierarchyCircuitBreakerService.java
src/main/java/org/elasticsearch/indices/breaker/NoneCircuitBreakerService.java
src/test/java/org/elasticsearch/indices/memory/breaker/CircuitBreakerServiceTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Allow setting individual breakers to "noop" breakers

This adds a NoopCircuitBreaker, and then adds the settings
`indices.breaker.fielddata.type` and `indices.breaker.request.type`,
which can be set to "noop" in order to use a breaker that will never
break, and incurs no overhead during computation.

This also refactors the tests for the CircuitBreakerService to use
@Before and @After functions as well as adding settings in
ElasticsearchIntegrationTest to occasionally use NOOP breakers for all
tests.

time:
2014-10-20T08:10:00Z
class:
comments:
[DOCS] Add documentation about proxy settings

Closes #110

time:
2014-10-20T07:34:38Z
class:
comments:
Update README IAM policy fix version number

time:
2014-10-19T19:24:28Z
class:
comments:
Docs: Added 'd' to the list of supported units.

Day was missing from the list of supported units in the date math section.

Closes #8151

time:
2014-10-19T08:40:29Z
class:
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
comments:
Tests: re-enable these tests

time:
2014-10-18T19:01:49Z
class:
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
comments:
Test: ignore this for now

time:
2014-10-18T18:58:34Z
class:
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
comments:
Test: ignore this for now

time:
2014-10-18T09:25:50Z
class:
src/main/java/org/elasticsearch/search/rescore/QueryRescorer.java
src/main/java/org/elasticsearch/search/rescore/RescorePhase.java
src/main/java/org/elasticsearch/search/rescore/Rescorer.java
src/test/java/org/elasticsearch/search/rescore/QueryRescorerTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
Core: cutover to Lucene's query rescorer

This is functionally equivalent to before, so there should be no
user-visible impact, except I added a NOTE in the docs warning about
the interaction of pagination and rescoring.

Closes #6232

Closes #7707

time:
2014-10-18T08:32:39Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
Core: fix index throttling to notice a change to max_merge_count on the next merge start/finish

Previously such changes were never noticed, and index throttling kept
kicking in at the original setting from startup.

Closes #8136

Closes #8132

time:
2014-10-17T23:16:04Z
class:
src/test/java/org/elasticsearch/test/transport/NettyTransportMultiPortIntegrationTests.java
comments:
Test: Fix netty multiport tests

Ensuring, that even in local mode, netty is started appropriately.

time:
2014-10-17T20:55:07Z
class:
src/main/java/org/elasticsearch/common/util/concurrent/EsExecutors.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
src/test/java/org/elasticsearch/test/transport/NettyTransportMultiPortIntegrationTests.java
src/test/java/org/elasticsearch/test/transport/NettyTransportMultiPortTests.java
src/test/java/org/elasticsearch/test/transport/NettyTransportTests.java
comments:
Netty: Support to bind on multiple host/port pairs

This patch allows to create several netty bootstrap, each of which
listening on different ports. This will potentially allow for features
to listen to different network interfaces for node-to-node or node-to-client
communication and is also the base to listen to several interfaces, so that those
can be used to speed up cluster communication in the future.

Closes #8098

time:
2014-10-17T19:14:54Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/VersionFieldMapper.java
comments:
Internal: use 1 instead of 0 as filler version value for nested docs

time:
2014-10-17T15:07:40Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/BucketStreamContext.java
src/main/java/org/elasticsearch/search/aggregations/bucket/BucketStreams.java
src/main/java/org/elasticsearch/search/aggregations/bucket/MultiBucketsAggregation.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/Filters.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFilters.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGrid.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGrid.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalDateHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/DateRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/InternalDateRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistance.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/InternalGeoDistance.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/IPv4Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/InternalIPv4Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantStringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/UnmappedSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/test/java/org/elasticsearch/search/aggregations/bucket/significant/SignificanceHeuristicTests.java
comments:
Aggregations: Buckets can now be serialized outside of an Aggregation

This change means that buckets can now be serialised to JSON and serialized and deserialized to the transport API outside of the aggregation that contains them.  This is a required change for #8110 (Reducers framework) but should make sense on it's own since object should really take care of their own serialization rather than relying on their parent object.

time:
2014-10-17T13:44:10Z
class:
comments:
Avoid shading of org.joda.convert package, fixes #3557

time:
2014-10-17T13:26:29Z
class:
comments:
Docs: Percolate reference - a typo and a misused word

Closes #8116

time:
2014-10-17T13:25:02Z
class:
comments:
Docs: Percolate `_score` reference

Added missing `_score` word, made the sentence less ambiguous.

Closes #8115

time:
2014-10-17T13:20:33Z
class:
comments:
Docs: Some Data Cant't be obtained.

In previous case, the first 100 data can't be obtained.

Closes #8103

time:
2014-10-17T13:17:24Z
class:
comments:
Docs: Update id-field.asciidoc

It is strange to provide an example with `"store" : false` when talking about possibility of enabling the field to be stored.
Broke the line in the mapping in two lines for better readability.
More verbose sentence above the mapping.

Closes #7894

time:
2014-10-17T13:01:42Z
class:
comments:
Docs: Documented the http.*host and transport.*host settings

time:
2014-10-16T20:38:10Z
class:
src/main/java/org/elasticsearch/action/search/SearchRequest.java
comments:
Fixing copy/paste mistake in SearchRequest.extraSource's exception message.

time:
2014-10-16T19:59:05Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
Remove unnecessary log level setting in upgrade test.

time:
2014-10-16T19:43:09Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
More improvements to debug logging for upgrade test.

time:
2014-10-16T18:58:47Z
class:
comments:
Improve amibiguous ES_HEAP_SIZE warning in deb init script

Closes #3554

time:
2014-10-16T18:51:58Z
class:
comments:
Docs: Typo: s/by/be/

Closes #8114

time:
2014-10-16T18:48:57Z
class:
comments:
Docs: fix typo

Closes #8111

time:
2014-10-16T18:21:12Z
class:
comments:
Docs: Update query-string-query.asciidoc

Update sample

Closes #8024

time:
2014-10-16T18:15:33Z
class:
comments:
Docs: Added RethinkDB River to list of community plugins

Closes #8016

time:
2014-10-16T16:49:36Z
class:
comments:
Docs: Fix order for PUT _mapping docs

Closes #8083

time:
2014-10-16T14:47:08Z
class:
comments:
Docs: Adding community-contributed Scout plugins

Scout plugins for reporting key node, cluster, and index health metrics.

Closes #7937

time:
2014-10-16T13:00:00Z
class:
comments:
Docs: adds note about using null_value with dynamic templates

Closes #7874

time:
2014-10-16T08:24:13Z
class:
src/main/java/org/elasticsearch/cloud/aws/InternalAwsS3Service.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/DefaultS3OutputStream.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobContainer.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3BlobStore.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3ImmutableBlobContainer.java
src/main/java/org/elasticsearch/cloud/aws/blobstore/S3OutputStream.java
src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java
src/main/java/org/elasticsearch/repositories/s3/S3Repository.java
src/test/java/org/elasticsearch/cloud/aws/blobstore/MockDefaultS3OutputStream.java
src/test/java/org/elasticsearch/cloud/aws/blobstore/S3OutputStreamTest.java
src/test/java/org/elasticsearch/repositories/s3/AbstractS3SnapshotRestoreTest.java
comments:
BlobStore: BlobContainer interface changed in elasticsearch 1.4.0

Adding a S3OutputStream that upload blobs to the S3 Storage service with two modes (single/multipart).
When the length of the chunk is lower than buffer_size (default to 5mb), the chunk is uploaded with a single request.
Otherwise multiple requests are made, each of buffer_size (except the last one which can be lower than buffer_size).
For example, when uploading a blob (say, 1Gb) with chunk_size set for accepting large chunks (chunk_size = 5Gb) and buffer_size set to 100Mb, the blob will be sent into 10 multiple parts, each of ~100Mb. Each part upload may failed independently and will be retried 3 times.

Closes #117

time:
2014-10-16T04:20:38Z
class:
comments:
Docs: add the predefined language-specific stopword lists to stop-tokenfilter.asciidoc

time:
2014-10-15T21:57:21Z
class:
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Snapshot/Restore: fix snapshot of a single closed index

Snapshot of a closed index can leave snapshot hanging in initializing state.

Fixes #8046

time:
2014-10-15T21:33:41Z
class:
comments:
Update cat.nodes regex

Support for multi-word node names like 'Henry "Hank" McCoy'

time:
2014-10-15T20:41:28Z
class:
src/main/java/org/elasticsearch/index/merge/policy/ElasticsearchMergePolicy.java
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
Add debug logging to help diagnose intermittent upgrade test failures.

Also fixed indentation in ElasticsearchMergePolicy.

time:
2014-10-15T19:42:22Z
class:
comments:
Docs: Removing escape character

The escape character `\` doesn't work and should be removed from the documentation.

Closes #8029

time:
2014-10-15T19:02:32Z
class:
comments:
Updating test to support Windows file descriptor count (-1)

time:
2014-10-15T16:54:12Z
class:
comments:
Fixing test to allow decimal numbers for load.

time:
2014-10-15T16:27:48Z
class:
comments:
Docs: cross_type query needs to be cross_fields

Closes #8021

time:
2014-10-15T16:21:57Z
class:
src/main/java/org/elasticsearch/script/python/PythonScriptEngineService.java
comments:
Implement new method `scriptRemoved(CompiledScript)` in `ScriptEngineService`

This [PR](https://github.com/elasticsearch/elasticsearch/pull/8062) broke ScriptEngineService by adding a new method `scriptRemoved(CompiledScript)`.

Closes #23.

time:
2014-10-15T16:08:15Z
class:
src/test/java/org/elasticsearch/gateway/local/LocalGatewayIndexStateTests.java
comments:
testDanglingIndicesConflictWithAlias - wait for node left to be processed

O.w. delete index command may time out waiting for the node that left to confirm deletion

time:
2014-10-15T16:03:39Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeReallyOldIndexTest.java
comments:
Tweaking upgrade test to improve reliability.

time:
2014-10-15T15:52:08Z
class:
src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java
comments:
Implement new method `scriptRemoved(CompiledScript)` in `ScriptEngineService`

This [PR](https://github.com/elasticsearch/elasticsearch/pull/8062) broke ScriptEngineService by adding a new method `scriptRemoved(CompiledScript)`.

Closes #29.

(cherry picked from commit 1fd05bc)

time:
2014-10-15T15:18:41Z
class:
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
comments:
Add file descriptor details to cat/nodes

cat/nodes currently does not report any details related to file descriptors. This adds the current number in use, the maximum number available as well as their ratio (percentage) to cat/nodes as hidden-by-default metrics. In addition, this also adds current heap usage (as a non-percentage of ts max) and ram usage (as a non-percerntage of its max) to allow tools to provide more granularity.

Closes #7652

time:
2014-10-15T15:18:15Z
class:
src/test/java/org/elasticsearch/index/analysis/AnalysisTestUtils.java
src/test/java/org/elasticsearch/index/analysis/SimpleIcuAnalysisTests.java
src/test/java/org/elasticsearch/index/analysis/SimpleIcuCollationTokenFilterTests.java
src/test/java/org/elasticsearch/index/analysis/SimpleIcuNormalizerCharFilterTests.java
comments:
Tests: index.version.created must be set

Due to this [change](https://github.com/elasticsearch/elasticsearch/pull/8018), we need to fix our tests for elasticsearch 1.4.0 and above.

Closes #41.

(cherry picked from commit 75b800f)

time:
2014-10-15T14:54:00Z
class:
src/test/java/org/elasticsearch/index/search/child/ScoreTypeTests.java
comments:
Adding ScoreTypesTest missing license header

time:
2014-10-15T14:23:36Z
class:
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/ScoreType.java
src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
src/test/java/org/elasticsearch/index/search/child/AbstractChildTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenQueryTests.java
src/test/java/org/elasticsearch/index/search/child/MockScorer.java
src/test/java/org/elasticsearch/index/search/child/ScoreTypeTests.java
comments:
Adding "min" score mode to parent-child queries

Support for "max", "sum", and "avg" already existed.

time:
2014-10-15T14:17:34Z
class:
src/test/java/org/elasticsearch/index/analysis/SimpleSmartChineseAnalysisTests.java
comments:
Tests: index.version.created must be set

Due to this [change](https://github.com/elasticsearch/elasticsearch/pull/8018), we need to fix our tests for elasticsearch 1.4.0 and above.

Closes #31.

(cherry picked from commit 3eeb827)

time:
2014-10-15T14:02:52Z
class:
src/test/java/org/elasticsearch/index/analysis/KuromojiAnalysisTests.java
comments:
Tests: index.version.created must be set

Due to this [change](https://github.com/elasticsearch/elasticsearch/pull/8018), we need to fix our tests for elasticsearch 1.4.0 and above.

Closes #47.

(cherry picked from commit 3a90982)

time:
2014-10-15T13:49:35Z
class:
src/test/java/org/elasticsearch/index/analysis/PolishAnalysisTests.java
src/test/java/org/elasticsearch/index/analysis/SimplePolishTokenFilterTests.java
comments:
Tests: index.version.created must be set

Due to this [change](https://github.com/elasticsearch/elasticsearch/pull/8018), we need to fix our tests for elasticsearch 1.4.0 and above.

Closes #33.

time:
2014-10-15T13:30:21Z
class:
src/test/java/org/elasticsearch/index/analysis/SimplePhoneticAnalysisTests.java
comments:
Tests: index.version.created must be set

Due to this [change](https://github.com/elasticsearch/elasticsearch/pull/8018), we need to fix our tests for elasticsearch 1.4.0 and above.

Closes #33.

(cherry picked from commit cb869cd)

time:
2014-10-15T11:56:35Z
class:
comments:
Docs: Add plugin to list

This plugin provides trigram accelerated regular expression search for when
you need reasonably fast arbitrary matching.

Closes #7997

time:
2014-10-15T11:47:56Z
class:
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalAllocateDangledIndices.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/test/java/org/elasticsearch/gateway/local/LocalGatewayIndexStateTests.java
comments:
Internal: dangling indices import ignores aliases

Dangling indices are indexes found on disk which are not part of the cluster state. By default, we don't delete them but rather import them into the cluster state in order to not accidentally delete data and also allow for the ease of copying index data folders from one cluster to another. Currently, the import logic doesn't check for existing aliases of the same name as the imported dangling index, causing both an index and an alias with the same name.

 This commit add a protection against this. Note that the index is still kept as dangling and is only deleted from disk after `gateway.local.dangling_timeout` has passed (2 hours).

 We also change the log message indicating deletion of dangling indices to a `WARN` level.

 Closes #8059

time:
2014-10-15T11:45:56Z
class:
comments:
Docs: Update highlighting.asciidoc

Added note about how to highlight on the `_all` field

Closes #7991

time:
2014-10-15T11:16:20Z
class:
comments:
Docs: Fix curl statements in query-cache.asciidoc

Closes #7989

time:
2014-10-15T11:05:41Z
class:
src/test/java/org/elasticsearch/index/mapper/xcontent/DateAttachmentMapperTests.java
src/test/java/org/elasticsearch/index/mapper/xcontent/EncryptedDocMapperTest.java
src/test/java/org/elasticsearch/index/mapper/xcontent/LanguageDetectionAttachmentMapperTests.java
src/test/java/org/elasticsearch/index/mapper/xcontent/MapperTestUtils.java
src/test/java/org/elasticsearch/index/mapper/xcontent/MetadataMapperTest.java
src/test/java/org/elasticsearch/index/mapper/xcontent/MultifieldAttachmentMapperTests.java
src/test/java/org/elasticsearch/index/mapper/xcontent/SimpleAttachmentMapperTests.java
comments:
Tests: AnalysisService constructor signature change

Due to this [change](https://github.com/elasticsearch/elasticsearch/pull/8018), we need to fix our tests for elasticsearch 1.4.0 and above.

Closes #87.

(cherry picked from commit b3b0d34)

time:
2014-10-15T09:38:37Z
class:
src/main/java/org/elasticsearch/script/ScriptService.java
comments:
Log exception thrown in ScriptEngineService.scriptRemoved

Guava would swallow the exception and log it itself if we bubbled it up,
so we catch and log it ourselves to use our logging infrastructure.

time:
2014-10-15T09:28:50Z
class:
src/main/java/org/elasticsearch/ElasticsearchCorruptionException.java
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/main/java/org/elasticsearch/env/NodeEnvironment.java
src/main/java/org/elasticsearch/gateway/local/state/meta/CorruptStateException.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormat.java
src/main/java/org/elasticsearch/gateway/local/state/shards/LocalGatewayShardsState.java
src/test/java/org/elasticsearch/gateway/local/state/meta/MetaDataStateFormatTest.java
comments:
[CORE] Add cluster and index state checksums

This commit adds checksumming for cluster and index states. It moves
from a plain XContent based on-disk format to a more structured binary
format including a header and footer as well as a CRC32 checksum for
each of these files. Since previous versions didn't write any format
identifier etc. this commit adds a file extension `.st` for states
that have header/footer and checksum.
This commit also moves over to write temporary files and moves them into
place with an atomic move operation. This commit also serializes and
deserializes the states without materilazing them into opaque memory.

Closes #7586

time:
2014-10-15T09:19:20Z
class:
src/test/java/org/elasticsearch/plugins/PluginManagerTests.java
comments:
Tests: check maven central download service is up before running plugin manager test

Though we check that internet connection is fine and that the service is available, it could happen that some services are not available.

```java
assumeTrue(isDownloadServiceWorking("search.maven.org", 80, "/"));
singlePluginInstallAndRemove("org.elasticsearch/elasticsearch-transport-thrift/2.4.0", null);
```

In that case, the first check was successful but downloading thrift plugin from maven central download services was not successful.

This is not an issue with the plugin manager itself but sometimes the test could fail.

Adding a check that actual download service in Maven central works:

```java
assumeTrue(isDownloadServiceWorking("repo1.maven.org", 443, "/maven2/org/elasticsearch/elasticsearch-transport-thrift/2.4.0/elasticsearch-transport-thrift-2.4.0.pom"));
```

time:
2014-10-15T08:47:56Z
class:
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
comments:
Core: don't spin 100% CPU when disabling refresh_interval

If refresh was already running when the refresh_interval is
dynamically disabled (set to a non-positive value like 0, -1, etc.),
then it's possible for the refresh thread to go into while (true)
refresh() loop.

Closes #8085

Closes #8087

time:
2014-10-15T02:54:19Z
class:
comments:
Update cjk-bigram-tokenfilter.asciidoc

time:
2014-10-14T18:51:54Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/main/java/org/elasticsearch/index/analysis/Analysis.java
src/main/java/org/elasticsearch/index/analysis/AnalysisService.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/EdgeNGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/NGramTokenizerFactory.java
src/main/java/org/elasticsearch/index/analysis/PatternAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerProviderFactory.java
src/main/java/org/elasticsearch/index/analysis/PreBuiltCharFilterFactoryFactory.java
src/main/java/org/elasticsearch/index/analysis/PreBuiltTokenFilterFactoryFactory.java
src/main/java/org/elasticsearch/index/analysis/PreBuiltTokenizerFactoryFactory.java
src/main/java/org/elasticsearch/index/analysis/StandardAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/StandardHtmlStripAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/StemmerTokenFilterFactory.java
src/main/java/org/elasticsearch/index/analysis/SynonymTokenFilterFactory.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/Mapper.java
src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SizeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SourceFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TTLFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/test/java/org/elasticsearch/VersionTests.java
src/test/java/org/elasticsearch/index/analysis/AnalysisModuleTests.java
src/test/java/org/elasticsearch/index/analysis/AnalysisTestsHelper.java
src/test/java/org/elasticsearch/index/analysis/CharFilterTests.java
src/test/java/org/elasticsearch/index/analysis/CompoundAnalysisTests.java
src/test/java/org/elasticsearch/index/analysis/NGramTokenizerFactoryTests.java
src/test/java/org/elasticsearch/index/analysis/PatternCaptureTokenFilterTests.java
src/test/java/org/elasticsearch/index/analysis/PreBuiltAnalyzerProviderFactoryTests.java
src/test/java/org/elasticsearch/index/analysis/PreBuiltCharFilterFactoryFactoryTests.java
src/test/java/org/elasticsearch/index/analysis/PreBuiltTokenFilterFactoryFactoryTests.java
src/test/java/org/elasticsearch/index/analysis/PreBuiltTokenizerFactoryFactoryTests.java
src/test/java/org/elasticsearch/index/analysis/StopAnalyzerTests.java
src/test/java/org/elasticsearch/index/analysis/synonyms/SynonymsAnalysisTest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/query/TemplateQueryParserTest.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPlugin2Tests.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPluginTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTokenStreamTestCase.java
comments:
[CORE] Be more explicit if index.version.created is not set

Today we use the current version which might enable features that are
not supported. We should throw an exception if this setting is not
present for any index.

Closes #8018

time:
2014-10-14T16:47:32Z
class:
comments:
Update completion-suggest.asciidoc

Documented the `size` parameter in the completion suggester query

time:
2014-10-14T15:27:49Z
class:
src/test/java/org/elasticsearch/common/UUIDTests.java
comments:
Test: make test less evil to not cause OOME

time:
2014-10-14T11:29:35Z
class:
comments:
Docs: Fix (another) Idaho spelling

Closes #7912

time:
2014-10-14T11:24:44Z
class:
comments:
fix mismatched curly bracket

time:
2014-10-14T11:20:38Z
class:
comments:
Docs: Added elasticsearch-dsl-py

Closes #7812
Closes #7813

time:
2014-10-14T11:17:43Z
class:
src/main/java/org/elasticsearch/cluster/service/PendingClusterTask.java
comments:
Internal: Fix serialization of PendingClusterTask.timeInQueue.

This parameter is serialized as a vLong while it could sometimes be negative.

Close #8077

time:
2014-10-14T11:16:37Z
class:
comments:
Docs: Update object-type.asciidoc to make object type more explicit

Closes #7646

time:
2014-10-14T11:07:25Z
class:
src/test/java/org/elasticsearch/search/query/ExistsMissingTests.java
comments:
Tests: Add more logging to ExistsMissingTests.

time:
2014-10-14T08:46:03Z
class:
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[CORE] Remove leftover unused constants

time:
2014-10-14T08:19:34Z
class:
src/main/java/org/elasticsearch/script/NativeScriptEngineService.java
src/main/java/org/elasticsearch/script/ScriptEngineService.java
src/main/java/org/elasticsearch/script/ScriptService.java
src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngineService.java
src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
src/main/java/org/elasticsearch/script/mustache/MustacheScriptEngineService.java
src/test/java/org/elasticsearch/script/ScriptServiceTests.java
comments:
Clear the GroovyClassLoader cache before compiling

Since we don't use the cache, it's okay to clear it entirely if needed,
Elasticsearch maintains its own cache for compiled scripts.

Adds loader.clearCache() into a listener, the listener is called when a
script is removed from the Guava cache.

This also lowers the amount of cached scripts to 100, since 500 is
around the limit some users have run into before hitting an out of
memory error in permgem.

Fixes #7658

time:
2014-10-14T01:08:23Z
class:
comments:
Doc: Clarify that index.routing.allocation.total_shards_per_node means both primary and replica shards
Closes #8002

time:
2014-10-13T10:30:31Z
class:
src/main/java/org/elasticsearch/cluster/node/DiscoveryNode.java
comments:
[CORE] Simplify discovery node initialization if version is unknown

Today it's easy to use the wrong version when initializing DiscoveryNode
instances. This commit adds javadocs and a utility constant to
initialize DiscoveryNode instances if the the remotes node version is
unknown.

Closes #8051

time:
2014-10-13T10:01:46Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeReallyOldIndexTest.java
comments:
Test: re-enable testUpgrade_0_20

time:
2014-10-13T07:33:46Z
class:
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
comments:
Logging: add shard id to logging in InternalIndexService.removeShard

time:
2014-10-13T07:25:46Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeReallyOldIndexTest.java
comments:
[TEST] Remove explicit network mode - not needed here

time:
2014-10-13T02:55:51Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeReallyOldIndexTest.java
comments:
Temporarily ignore 0.20 upgrade test until it can be made less flaky.

time:
2014-10-13T02:04:59Z
class:
src/main/java/org/elasticsearch/index/merge/policy/ElasticsearchMergePolicy.java
src/main/java/org/elasticsearch/rest/action/admin/indices/upgrade/RestUpgradeAction.java
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeReallyOldIndexTest.java
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Admin: Fix upgrade logic to work on lucene major version differences.

Also improved upgrade tests, and added test against static ES 0.20 index
which used Lucene 3.6.

closes #8013

time:
2014-10-12T19:44:02Z
class:
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/index/query/TermsQueryParser.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
comments:
Throw parsing exception if terms filter or query has more than one field

Closes #5014

time:
2014-10-12T18:35:11Z
class:
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
Tests: Add assumption to restrict upgrade test from running against
invalid backcompat versions.

time:
2014-10-12T15:54:21Z
class:
comments:
Docs: Add missing link to the 2.0 migration guide.

time:
2014-10-11T15:19:06Z
class:
comments:
Spec: Removed flush and max_num_segments from indices.upgrade

time:
2014-10-11T14:40:45Z
class:
comments:
Rest: Added missing parameters to indices.upgrade

time:
2014-10-11T14:22:24Z
class:
comments:
Docs: Tidied the upgrade indices docs

time:
2014-10-10T21:50:30Z
class:
src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
comments:
Revert "Aliases: Throw exception if index is null when creating alias"

This reverts commit ee857bc07302b5bfcb327b3be9d07d9c6de28254.

time:
2014-10-10T20:47:40Z
class:
src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
comments:
Aliases: Throw exception if index is null when creating alias

Fixes a bug where alias creation would allow `null` for index name, which thereby
applied the alias to _all_ indices.  This patch makes the validator throw an
exception if the index is null.

```bash
POST /_aliases
{
   "actions": [
      {
         "add": {
            "alias": "empty-alias",
            "index": null
         }
      }
   ]
}
```
```json
{
   "error": "ActionRequestValidationException[Validation Failed: 1: Alias action [add]: [index] may not be null;]",
   "status": 400
}
```

The reason this bug wasn't caught by the existing tests is because
the old test for nullness only validated against a cluster which had
zero indices.  The null index is translated into "_all", and since
there are no indices, this fails because the index doesn't exist.
 So the test passes.

However, as soon as you add an index, "_all" resolves and you get the
situation described in the original bug report:  null index is
accepted by the alias, resolves to "_all" and gets applied to everything.

Fixes #7976

time:
2014-10-10T20:29:23Z
class:
src/main/java/org/elasticsearch/index/mapper/core/BooleanFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/ip/IpFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/null_value/NullValueTests.java
comments:
Mapper: Throw exception if null_value is set to null

The mapping parser should throw an exception if "null_value" is set to `null`.

Fixes #7273

```bash
PUT /foo
{
  "mappings": {
    "bar": {
      "properties": {
        "exception": {
          "null_value": null,
          "type": "integer"
        }
      }
    }
  }
}
```
```
{
   "error": "MapperParsingException[mapping [bar]]; nested: MapperParsingException[Property [null_value] cannot be null.]; ",
   "status": 400
}
```

time:
2014-10-10T19:47:45Z
class:
src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java
comments:
Internal: fixed bw comp in ShardSearchTransportRequest

Original indices were introduced in 1.4.0.Beta1 as optional, preceded by a boolean flag that told whether they were empty or not. We have to keep serializing as optional only when reading and writing from/to 1.4.0.Beta1, although the original indices are not optional whenever we go and serialize the request they belong to (which is why the boolean got removed in 1.4.0).

time:
2014-10-10T18:53:19Z
class:
src/test/java/org/elasticsearch/transport/ActionNamesBackwardsCompatibilityTest.java
comments:
[TEST] bump benchmark apis version to 2.0.0

time:
2014-10-10T17:55:45Z
class:
comments:
Add forgotten include for upgrade docs.

See #7922

time:
2014-10-10T17:52:11Z
class:
comments:
Add link to new upgrade docs from indices page.

See #7922.

time:
2014-10-10T15:26:36Z
class:
comments:
Spec: Added human flag to indices.get_upgrade

time:
2014-10-10T11:02:46Z
class:
src/main/java/org/elasticsearch/common/breaker/ChildMemoryCircuitBreaker.java
src/main/java/org/elasticsearch/common/breaker/MemoryCircuitBreaker.java
comments:
[CORE] Log if CircuitBreaker is tripping

Today we only throw an exception which might not be logged at all. This
commit adds debug logging if we are tripping a CB.

Closes #8050

time:
2014-10-10T08:50:47Z
class:
comments:
Docs: Remove the note that fielddata doesn't support filtering.

This particular note was about fielddata filtering but could cause confusion
that fields that have doc values enabled cannot be used for filtering (as in
a `filtered_query`).

time:
2014-10-10T07:54:26Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/MetricsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregator.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java
comments:
Aggregations: Fixes scripted metrics aggregation when used as a sub aggregation

The scripted metric aggregation is now a PER_BUCKET aggregation so that parent buckets are evaluated independently. Also the params and reduceParams are copied for each instance of the aggregator (each parent bucket) so modifications to the values are kept only within the scope of its parent bucket

Closes #8036

time:
2014-10-09T22:23:26Z
class:
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/PrintAllThreadStacksOnFailure.java
comments:
Tests: move thread stacks on failure to a RunListener, so it actually works

time:
2014-10-09T14:28:51Z
class:
comments:
Update to Lucene 4.10.1

time:
2014-10-09T14:26:31Z
class:
comments:
update documentation with release 2.4.1

time:
2014-10-09T14:20:40Z
class:
comments:
update documentation with release 2.3.1

time:
2014-10-09T14:19:58Z
class:
comments:
[SPEC] Separated the "Upgrade Index" API into two methods

* `get_upgrade` => `GET _upgrade`  -- Return the status
* `upgrade`     => `POST _upgrade` -- Perform the operation

Original specification part of c021f22523a69583b94c56921792b727ab4030fb.

Related: #7884, #7922

time:
2014-10-09T14:16:19Z
class:
src/main/java/org/elasticsearch/index/analysis/SmartChineseAnalysisBinderProcessor.java
src/main/java/org/elasticsearch/index/analysis/SmartChineseNoOpTokenFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/smartcn/SmartChineseIndicesAnalysis.java
comments:
Add `smartcn_word` & `smartcn_sentence` back for backwards compatibility

In f4d0d27 the deprecated `smartcn_sentence` tokenizer and deprecated
`smartcn_word` token filter were removed as the new all in one
`smartcn_tokenizer` should be used instead. However for those with pre-existing
indices with mappings that reference the deprecated tokenizer and token filter
this changes causes indexing and search errors.

This change preserves the `smartcn_sentence` tokenizer name and aliases it to
the new `smartcn_tokenizer`. The change set also reintroduces a `smartcn_word`
token filter that is a noop filter. The result of these changes should allow
elasticsearch instances with the existing deprecated mappings to upgrade and
take advantage of the new tokenizer in lucene.

(cherry picked from commit 25a0071)

Closes #29

time:
2014-10-09T14:14:19Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Tests: dump all thread stacks on failure

time:
2014-10-09T14:12:55Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-10-09T12:13:09Z
class:
src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java
comments:
Fix serialization of short[] arays.

short[] were mistakenly encoded as a float[]. This is not an issue for the
text-based xcontents that we have (yaml, json) since floats can represent any
short value and are serialized as strings. However, this will make the binary
xcontents serialize shorts as int instead of floats.

Close #7845

time:
2014-10-09T10:49:09Z
class:
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
comments:
MLT Query: don't fetch unnecessary stats

time:
2014-10-09T09:37:52Z
class:
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
comments:
add verbose logging during index close

time:
2014-10-09T09:35:11Z
class:
src/test/java/org/elasticsearch/indices/settings/UpdateSettingsTests.java
comments:
Tests: add verbosity to this test case

time:
2014-10-08T20:21:30Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/search/SearchHit.java
src/main/java/org/elasticsearch/search/fetch/FetchPhase.java
src/main/java/org/elasticsearch/search/fetch/FetchSubPhase.java
src/main/java/org/elasticsearch/search/fetch/version/VersionFetchSubPhase.java
src/main/java/org/elasticsearch/search/highlight/FastVectorHighlighter.java
src/main/java/org/elasticsearch/search/highlight/HighlightUtils.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceScoreOrderFragmentsBuilder.java
src/main/java/org/elasticsearch/search/highlight/vectorhighlight/SourceSimpleFragmentsBuilder.java
src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
src/main/java/org/elasticsearch/search/lookup/SourceLookup.java
src/main/java/org/elasticsearch/search/sort/SortParseElement.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
comments:
Core: Make fetch phase nested doc aware

By letting the fetch phase understand the nested docs structure we can serve nested docs as hits.
The `top_hits` aggregation can because of this commit be placed in a `nested` or `reverse_nested` aggregation.

Closes #7164

time:
2014-10-08T16:57:04Z
class:
src/main/java/org/elasticsearch/action/OriginalIndices.java
src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java
src/main/java/org/elasticsearch/action/count/TransportCountAction.java
src/main/java/org/elasticsearch/action/deletebyquery/TransportShardDeleteByQueryAction.java
src/main/java/org/elasticsearch/action/exists/TransportExistsAction.java
src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchCountAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchHelper.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScanAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/action/SearchServiceTransportAction.java
src/main/java/org/elasticsearch/search/internal/InternalScrollSearchRequest.java
src/main/java/org/elasticsearch/search/internal/ShardSearchLocalRequest.java
src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
src/main/java/org/elasticsearch/search/internal/ShardSearchTransportRequest.java
comments:
Internal: split shard search request into a local and a transport variant

In some cases a shard search request gets created on a node to be only used there and never sent over the transport. This commit clarifies that and creates a new base class called `ShardSearchLocalRequest` that can and will be only used locally. `ShardSearchTransportRequest` on the other hand delegates to the local version but extends `TransportRequest` and is `Streamable`, which means that it is supposed to be sent over the transport.

This way we can make the `OriginalIndices` only required (and mandatory now) in the transport variant.

Took the chance to remove an unused InternalScrollSearchRequest constructor and an empty else branch in `TransportSearchScrollQueryAndFetchAction`.

Closes #7855

time:
2014-10-08T16:50:20Z
class:
comments:
update documentation with release 2.4.0

time:
2014-10-08T15:45:16Z
class:
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
comments:
[TEST] fix test after pr #8020

time:
2014-10-08T14:50:26Z
class:
src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Parent/child: has_parent filter must take parent filter into account when executing the inner query/filter.

Closes #8020
Closes #7943

time:
2014-10-08T14:08:25Z
class:
comments:
Docs: Added breaking changes docs for Indices APIs

Adds the breaking changes defaults for the change of default indices options for the GET Aliases API

time:
2014-10-08T14:00:35Z
class:
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/index/store/CorruptedTranslogTests.java
comments:
Tests: two corruptions can fix a file

In some of our tests we corrupt multiple places in a file randomly. If we corrupt the same place twice, we shouldn't fix the file by mistake.

time:
2014-10-08T12:43:06Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java
comments:
Docs: clarify wait_for_completion flag in snapshot documentation

Closes #7952

time:
2014-10-08T11:38:00Z
class:
src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
comments:
Admin: add total index memory in `_cat/indices`

This patch adds to `_cat/indices` information about memory usage per index by adding memory used by FieldData, IdCache, Percolate, Segments (memory, index writer, version map).

```
% curl 'localhost:9200/_cat/indices?v&h=i,tm'
i     tm
wiki  8.1gb
test  30.5kb
user  1.9mb
```

Closes #7008

time:
2014-10-08T08:28:02Z
class:
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
Tests: Enable check index in tests again.

* Run flush in beforeIndexShardClosed to prevent an empty shard.
* Only run check index if the shard state before closing was: started, relocated or post_recovery

time:
2014-10-08T07:49:16Z
class:
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapperParser.java
src/main/java/org/elasticsearch/index/query/ScriptFilterParser.java
src/main/java/org/elasticsearch/index/query/functionscore/script/ScriptScoreFunctionParser.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/main/java/org/elasticsearch/script/ScriptParameterParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricParser.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java
src/main/java/org/elasticsearch/search/fetch/script/ScriptFieldsParseElement.java
src/test/java/org/elasticsearch/script/ScriptParameterParserTest.java
comments:
Scripting: Created a parameter parse to standardised script options

time:
2014-10-08T04:47:02Z
class:
src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java
comments:
[TEST] Fix content comparison to not take platform dependent control chars into account.

time:
2014-10-07T16:33:21Z
class:
comments:
Docs: fix formatting in snapshots documentation

time:
2014-10-07T16:06:25Z
class:
src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequestBuilder.java
src/main/java/org/elasticsearch/rest/action/admin/indices/optimize/RestOptimizeAction.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineIntegrationTest.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SnapshotBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Fix missed places referencing optimize force flag from removal in commit 1ae8195.

time:
2014-10-07T15:35:11Z
class:
src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/ShardOptimizeRequest.java
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
comments:
Remove deprecations from master (follow up to #7922)

time:
2014-10-07T15:09:50Z
class:
src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/ShardOptimizeRequest.java
src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/merge/policy/ElasticsearchMergePolicy.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/admin/indices/upgrade/RestUpgradeAction.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/rest/action/admin/indices/upgrade/UpgradeTest.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
comments:
Add Upgrade API

This commit does the following:
* Add the new API at the rest layer, being backed by the optimize API
  with upgrade flag, and segments api to find upgrade status.
* Add `upgrade` flag to optimize API, and deprecate `force` flag (will
  remove in master)
* Add test for both synchronous and async upgrade

closes #7884
closes #7922
@rjernst is this class used anywhere? it doesn't seem so, if that's the case we could remove it?

I wonder if and why this `if` is needed @rjernst , don't we always have at least a data node for the current version and a data node for the previous one?

Doh! This was leftover from before using tuple.  Will remove.

This was from copying an existing bwc test as a base, but I think you are right, the min data nodes is 1.  So i will remove.


time:
2014-10-07T14:50:16Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/PutRepositoryRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/put/TransportPutRepositoryAction.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/verify/TransportVerifyRepositoryAction.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/verify/VerifyRepositoryAction.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/verify/VerifyRepositoryRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/verify/VerifyRepositoryRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/cluster/repositories/verify/VerifyRepositoryResponse.java
src/main/java/org/elasticsearch/client/ClusterAdminClient.java
src/main/java/org/elasticsearch/client/Requests.java
src/main/java/org/elasticsearch/client/support/AbstractClusterAdminClient.java
src/main/java/org/elasticsearch/common/xcontent/XContentHelper.java
src/main/java/org/elasticsearch/index/snapshots/IndexShardRepository.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/repositories/RepositoriesService.java
src/main/java/org/elasticsearch/repositories/Repository.java
src/main/java/org/elasticsearch/repositories/RepositoryVerificationException.java
src/main/java/org/elasticsearch/repositories/VerificationFailure.java
src/main/java/org/elasticsearch/repositories/VerifyNodeRepositoryAction.java
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
src/main/java/org/elasticsearch/repositories/uri/URLIndexShardRepository.java
src/main/java/org/elasticsearch/repositories/uri/URLRepository.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/put/RestPutRepositoryAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/verify/RestVerifyRepositoryAction.java
src/test/java/org/elasticsearch/snapshots/RepositoriesTests.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SnapshotBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/transport/ActionNamesBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
[SNAPSHOT] Add repository validation

Fixes #7096

time:
2014-10-07T14:16:37Z
class:
src/main/java/org/elasticsearch/common/io/FileSystemUtils.java
src/main/java/org/elasticsearch/plugins/PluginManager.java
src/test/java/org/elasticsearch/common/io/FileSystemUtilsTests.java
src/test/java/org/elasticsearch/plugins/PluginManagerTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
plugins: disable support for config dir

When removing and installing again the plugin all configuration files will be removed in `config/pluginname` dir.
This is bad as users may have set and added specific configuration files.

During an install, if we detect already existing files in `config/pluginname` directory, we simply copy the new file to the same dir but we append a `.new` at the end.

Related to  #5064.

(cherry picked from commit 5da028f)
(cherry picked from commit 4cb1f95)

time:
2014-10-07T11:45:37Z
class:
comments:
update documentation with release 2.4.0

time:
2014-10-07T11:25:08Z
class:
src/test/java/org/elasticsearch/script/python/PythonScriptSearchTests.java
comments:
Multi-line or multi-statement Python scripts raise NullPointerException

Calling a multi-statement score using curl e.g. `a=22; _score*a` is not possible with the current lang-python, nor is it possible to write a script using semicolons or multiple lines. I can only get compound statements (e.g. list comprehensions with embedded if statements) to work, so I'm limited in the complexity of my scoring process.

I'm using ES 1.3.2 and latest lang-python:
```
$ ls -la /usr/share/elasticsearch/plugins/lang-python/
-rw-r--r-- 1 root root    10482 Aug 27 17:20 elasticsearch-lang-python-2.3.0.jar
-rw-r--r-- 1 root root 14340135 Aug 27 17:20 jython-standalone-2.5.3.jar
```

Here's a worked example:

```
# Delete existing data, add 2 simple records, fetch both results to stdout
curl -XDELETE "http://localhost:9200/test"
curl -XPUT "http://localhost:9200/test/doc/1" -d '{
  "num": 1.0
}'
curl -XPUT "http://localhost:9200/test/doc/2?refresh" -d '{
  "num": 2.0
}'
# show our records
curl -XGET 'http://localhost:9200/test/_search' -d '{
   "query" : { "match_all": {}}
}'
```

We'll run a simple query that uses `num` as a score modifier:
```doc["num"].value * _score```

If I create `/etc/elasticsearch/scripts/py1.py`:
```
doc["num"].value * _score
```

and wait for the script to reload (by monitoring the logs), I can call:
```
$ curl -XGET "http://localhost:9200/test/_search?pretty" -d'
{
  "query": {
    "function_score": {
      "script_score": {
        "script": "py1",
        "lang": "python"
      }
    }
  }
}'
```
and this will calculate the results.

The same can be achieved using an in-line call (ignoring `py1.py`):
```
curl -XGET "http://localhost:9200/test/_search?pretty" -d'
{
  "query": {
    "function_score": {
      "script_score": {
        "script": "doc[\"num\"].value * _score",
        "lang": "python"
      }
    }
  }
}'
```

However using more than 1 statement will fail. This example uses `;` to split 2 statements (this is legal in jython 2.5):
```
curl -XGET "http://localhost:9200/test/_search?pretty" -d'
{
  "query": {
    "function_score": {
      "script_score": {
        "script": "a=42; doc[\"num\"].value * _score",
        "lang": "python"
      }
    }
  }
}'

      "reason" : "QueryPhaseExecutionException[[test][3]: query[function score (ConstantScore(*:*),function=script[a=42; doc[\"num\"].value * _score], params [null])],from[0],size[10]: Query Failed [Failed to execute main query]]; nested: NullPointerException; "
and the log message:
org.elasticsearch.search.query.QueryPhaseExecutionException: [test][3]: query[function score (ConstantScore(*:*),function=script[a=42; doc["num"].value * _score], params [null])],from[0],size[10]: Query Failed [Failed to execute main query]
	at org.elasticsearch.search.query.QueryPhase.execute(QueryPhase.java:162)
	at org.elasticsearch.search.SearchService.executeQueryPhase(SearchService.java:261)
	at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:206)
	at org.elasticsearch.search.action.SearchServiceTransportAction$5.call(SearchServiceTransportAction.java:203)
	at org.elasticsearch.search.action.SearchServiceTransportAction$23.run(SearchServiceTransportAction.java:517)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
```

Creating a `py2.py` in the scripts directory containing:
```
a=42; doc["num"].value * _score
```
and calling
```
$ curl -XGET "http://localhost:9200/test/_search?pretty" -d'
{
  "query": {
    "function_score": {
      "script_score": {
        "script": "py2",
        "lang": "python"
      }
    }
  }
}'
has the same error:
      "reason" : "QueryPhaseExecutionException[[test][3]: query[function score (ConstantScore(*:*),function=script[py2], params [null])],from[0],size[10]: Query Failed [Failed to execute main query]]; nested: PyException; "
```

If a `py3.py` script is made with the same two statements split over two lines:
```
a=42
doc["num"].value * _score
```
then the same errors are thrown.

I'll note that if I experiment with equivalent groovy scripts then both the semicolon is allowed and multi-line scripts (in /scripts) are allowed.

Closes #19.

(cherry picked from commit 9fca562)

time:
2014-10-07T11:15:16Z
class:
comments:
Update to Jython 2.7-b3

It sounds like Jython 2.5.3 is leaking some threads.

Jython 2.5.4.rc1 has the same issue.

Jython 2.7-b3 fixes it.

Typical error when running tests:

```
ERROR   0.00s J2 | PythonScriptEngineTests (suite) <<<
   > Throwable #1: com.carrotsearch.randomizedtesting.ThreadLeakError: 1 thread leaked from SUITE scope at org.elasticsearch.script.python.PythonScriptEngineTests:
   >    1) Thread[id=12, name=org.python.google.common.base.internal.Finalizer, state=WAITING, group=TGRP-PythonScriptEngineTests]
   >         at java.lang.Object.wait(Native Method)
   >         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)
   >         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)
   >         at org.python.google.common.base.internal.Finalizer.run(Finalizer.java:127)
   >    at __randomizedtesting.SeedInfo.seed([7A5ECFD8D0474383]:0)
   > Throwable #2: com.carrotsearch.randomizedtesting.ThreadLeakError: There are still zombie threads that couldn't be terminated:
   >    1) Thread[id=12, name=org.python.google.common.base.internal.Finalizer, state=WAITING, group=TGRP-PythonScriptEngineTests]
   >         at java.lang.Object.wait(Native Method)
   >         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:135)
   >         at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:151)
   >         at org.python.google.common.base.internal.Finalizer.run(Finalizer.java:127)
   >    at __randomizedtesting.SeedInfo.seed([7A5ECFD8D0474383]:0)
```

Closes #22.

time:
2014-10-07T11:14:08Z
class:
src/main/java/org/elasticsearch/script/python/PythonScriptEngineService.java
src/test/java/org/elasticsearch/script/python/PythonScriptSearchTests.java
comments:
Remove setNextScore in SearchScript

Due to a change in elasticsearch 1.4.0, we need to apply a similar patch here.

See elasticsearch/elasticsearch#6864
See elasticsearch/elasticsearch#7819

Closes #16.
Closes #21.

time:
2014-10-07T10:46:51Z
class:
comments:
update documentation with release 2.4.0

time:
2014-10-07T10:30:07Z
class:
src/main/java/org/elasticsearch/script/javascript/JavaScriptScriptEngineService.java
src/test/java/org/elasticsearch/script/javascript/JavaScriptScriptSearchTests.java
comments:
Remove setNextScore in SearchScript

Due to a change in elasticsearch 1.4.0, we need to apply a similar patch here.

See https://github.com/elasticsearch/elasticsearch/pull/6864
See https://github.com/elasticsearch/elasticsearch/pull/7819

Closes #23.
(cherry picked from commit 5e5c373)

time:
2014-10-07T10:17:01Z
class:
src/test/java/org/elasticsearch/test/CurrentTestFailedMarker.java
comments:
[TEST] fix CurrentTestFailedMarker to reset its state after each test

The currently used method `testRunStarted` is only called before any tests have been run, we need to reset that state before each test, that's why we need to use `testStarted`.

time:
2014-10-07T09:23:20Z
class:
src/test/java/org/elasticsearch/test/ExternalNode.java
comments:
[TEST] Fix config directory for external nodes in bwc tests

The logging configuration was expected in the path.home folder which is set to
target/JX
when running the bwc tests from the console.
Therefore the logger could not be initialized with error message:

[INFO] Failed to configure logging...
org.elasticsearch.ElasticsearchException: Failed to load logging configuration
        at org.elasticsearch.common.logging.log4j.LogConfigurator.resolveConfig(LogConfigurator.java:117)
        at org.elasticsearch.common.logging.log4j.LogConfigurator.configure(LogConfigurator.java:81)
        at org.elasticsearch.bootstrap.Bootstrap.setupLogging(Bootstrap.java:96)
        at org.elasticsearch.bootstrap.Bootstrap.main(Bootstrap.java:180)
        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:32)
Caused by: java.nio.file.NoSuchFileException: /home/britta/es/target/J0/config
        at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)
        at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)
        at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
        at sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)
        at sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:144)
        at sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:97)
        at java.nio.file.Files.readAttributes(Files.java:1686)
        at java.nio.file.FileTreeWalker.walk(FileTreeWalker.java:109)
        at java.nio.file.FileTreeWalker.walk(FileTreeWalker.java:69)
        at java.nio.file.Files.walkFileTree(Files.java:2602)
        at org.elasticsearch.common.logging.log4j.LogConfigurator.resolveConfig(LogConfigurator.java:107)
        ... 4 more
log4j:WARN No appenders could be found for logger (node).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.

Setting the config directory fixes this.

Logs from external nodes are still not printed properly. They are inserted to the log
whenever the stdout is printed ([WARNING] JVM J0: stdout was not empty...)

closes #7964

time:
2014-10-06T22:43:07Z
class:
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Snapshot/Restore: make it possible to delete snapshots with missing metadata file

Fixes #7980

time:
2014-10-06T17:00:07Z
class:
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/test/java/org/elasticsearch/consistencylevel/WriteConsistencyLevelTests.java
comments:
Core: Perform write consistency just before writing on the primary shard

Before this change the write consistency change was performed on the node that receives the write request and the node that holds the primary shard. This change removes the check on the node that receives the request, since it is redundant.

Also this change moves the write consistency check on the node that holds the primary shard to a later moment after forking of the thread to perform the actual write on the primary shard.

Closes #7873

time:
2014-10-06T15:09:30Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
comments:
Discovery: remove MasterFaultDetection.Listener.notListedOnMaster

It is never used in practice. We treat it as a master failure (using NodeDoesNotExistOnMasterException).

Closes #7995

time:
2014-10-06T13:59:18Z
class:
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/query/RangeFilterParser.java
src/main/java/org/elasticsearch/index/query/RangeQueryParser.java
src/test/java/org/elasticsearch/index/query/IndexQueryParserFilterDateRangeFormatTests.java
comments:
Search: add `format` support for date range filter and queries

When the date format is defined in mapping, you can not use another format when querying using range date query or filter.

For example, this won't work:

```
DELETE /test

PUT /test/t/1
{
  "date": "2014-01-01"
}

GET /test/_search
{
  "query": {
    "filtered": {
      "filter": {
        "range": {
          "date": {
            "from": "01/01/2014"
          }
        }
      }
    }
  }
}
```

It causes:

```
Caused by: org.elasticsearch.ElasticsearchParseException: failed to parse date field [01/01/2014], tried both date format [dateOptionalTime], and timestamp number
```

It could be nice if we can support at query time another date format just like we support `analyzer` at search time on String fields.

Something like:

```
GET /test/_search
{
  "query": {
    "filtered": {
      "filter": {
        "range": {
          "date": {
            "from": "01/01/2014",
            "format": "dd/MM/yyyy"
          }
        }
      }
    }
  }
}
```

Same for queries:

```
GET /test/_search
{
  "query": {
    "range": {
      "date": {
        "from": "01/01/2014",
        "format": "dd/MM/yyyy"
      }
    }
  }
}
```

Closes #7189.

time:
2014-10-06T08:07:25Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricParser.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java
comments:
Aggregations: makes script params consistent with other APIs in scripted_metric

This change removes the script_type parameter form the Scripted Metric Aggregation and adds support for _file and _id suffixes to the init_script, map_script, combine_script and reduce_script parameters to make defining the source of the script consistent with the other APIs which use the ScriptService

time:
2014-10-05T17:30:36Z
class:
src/main/java/org/elasticsearch/snapshots/RestoreService.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
Snapshot/Restore: Make sure indices cannot be renamed into restored aliases

Fixes #7915

time:
2014-10-03T18:21:07Z
class:
src/main/java/org/elasticsearch/script/ScriptService.java
src/main/java/org/elasticsearch/watcher/FileWatcher.java
src/main/java/org/elasticsearch/watcher/ResourceWatcherService.java
src/test/java/org/elasticsearch/script/ScriptServiceTests.java
comments:
Fix NPE in ScriptService when script file with no extension is deleted

Fixes #7689

time:
2014-10-03T14:40:17Z
class:
src/main/java/org/elasticsearch/action/termvector/TermVectorRequest.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequestBuilder.java
src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorService.java
src/test/java/org/elasticsearch/action/termvector/GetTermVectorTests.java
comments:
Term Vectors/MLT Query: support for different analyzers than default at field

This adds a `per_field_analyzer` parameter to the Term Vectors API, which
allows to override the default analyzer at the field. If the field already
stores term vectors, then they will be re-generated. Since the MLT Query uses
the Term Vectors API under its hood, this commits also adds the same ability
to the MLT Query, thereby allowing users to fine grain how each field item
should be processed and analyzed.

Closes #7801

time:
2014-10-03T14:37:02Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Tests: Improve BWC preconditions to error cleanly when wire formats differ.

closes #7966

time:
2014-10-03T12:20:39Z
class:
src/main/java/org/elasticsearch/common/lucene/index/FilterableTermsEnum.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TermsShardMinDocCountTests.java
comments:
Aggs fix - background count for docs should include deleted docs otherwise a term’s docFreq (which includes deleted docs) can exceed the number of docs reported in the index and cause an exception.
The randomisation that deletes documents is also removed from tests as this doc-accounting change would mean the specific scores being expected in tests would now be subject to random variability and so fail.

Closes #7951

time:
2014-10-03T11:16:14Z
class:
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
comments:
Admin: show open and closed indices in _cat/indices

When asking for `GET /_cat/indices?v`, you can now retrieve closed indices in addition to opened ones.

```
health status index              pri rep docs.count docs.deleted store.size pri.store.size
yellow open   .marvel-2014.05.21   1   1       8792            0     21.7mb         21.7mb
       close  test
yellow open   .marvel-2014.05.22   1   1       3871            0     10.7mb         10.7mb
red    open   .marvel-2014.05.27   1   1
```

Closes #7907.
Closes #7936.

time:
2014-10-03T10:25:22Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/main/java/org/elasticsearch/action/search/type/AbstractAsyncAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
comments:
Internal: Don't let `took` be negative.

`took` is computed based on the system clock and can be negative if the clock
time was updated during the execution of the search request. This commit
protects against these cases by replacing `took` with 1 if the elapsed time is
negative.

Close #7968

time:
2014-10-03T10:14:34Z
class:
src/test/java/org/elasticsearch/search/query/ExistsMissingTests.java
comments:
Tests: Add more assertions to ExistsMissingTests.

time:
2014-10-03T07:26:47Z
class:
src/main/java/org/elasticsearch/action/termvector/TermVectorRequest.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequestBuilder.java
src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorService.java
src/main/java/org/elasticsearch/rest/action/termvector/RestTermVectorAction.java
src/test/java/org/elasticsearch/action/termvector/GetTermVectorTests.java
comments:
Term Vectors: support for realtime

By default term vectors are now realtime, as opposed to previously near
realtime. If they are not found in the index, they will be generated on the
fly. The document is fetched from the transaction log and treated as an
artificial document. One can set `realtime` parameter to `false` in order to
disable this functionality. This consequently makes the MLT query realtime in
fetching documents, as it previsouly used to be before switching from using
the multi get API to the mtv API.

Closes #7846

time:
2014-10-02T20:19:29Z
class:
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
comments:
Logging: suppress long mapping logging during mapping updates (unless in TRACE)

Currently DEBUG logs can get very verbose because IndicesClusterStateService logs the complete mapping with every mapping update. We should suppress it if long in DEBUG mode and always log the full one in TRACE.

Closes #7949

time:
2014-10-02T19:32:04Z
class:
comments:
Upgrade to Jackson 2.4.2
closes #7934
closes #7932

time:
2014-10-02T19:08:32Z
class:
comments:
Docs: Updated the resiliency docs to point to the DiscoveryWithServiceDisruptions class

time:
2014-10-02T13:17:54Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPing.java
src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java
comments:
Discovery: add a finalize round to multicast pinging

When sending a multicast ping, there is no way to determine how long it will take before all nodes will respond. Currently we send two pings (one at start, one after half timeout) and wait until the ping timeout has passed for all responses to come back. However, if all nodes are fast to respond, there is a gap relatively large between the moment that pings were gathered and the election that is based on them. This commits adds a last ping round (at timeout) where we know the number of nodes we expect to receive answers from. Once all nodes responded, we complete the pinging.

Closes #7924

time:
2014-10-02T13:00:25Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Discovery: only accept unicast pings when started

Due to component start order we may process an incoming ping while the ZenDiscovery module is not yet started. This leads to exception (from which we recover correctly, but the logs are note nice). UnicastZenPing should only start processing pings if it is started. We previously processed if not closed or stopped.

Closes #7950

time:
2014-10-02T12:58:21Z
class:
comments:
release tool: must decode bytes to string

time:
2014-10-02T12:02:31Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
comments:
DiscoveryWithServiceDisruptions: some more java docs and todos

time:
2014-10-02T11:42:20Z
class:
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetFieldMappingsIndexAction.java
src/main/java/org/elasticsearch/common/collect/CopyOnWriteHashMap.java
src/main/java/org/elasticsearch/common/collect/CopyOnWriteHashSet.java
src/main/java/org/elasticsearch/common/collect/UpdateInPlaceMap.java
src/main/java/org/elasticsearch/index/analysis/FieldNameAnalyzer.java
src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/FieldMapperListener.java
src/main/java/org/elasticsearch/index/mapper/FieldMappersLookup.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/mapper/core/AbstractFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/index/mapper/object/RootObjectMapper.java
src/main/java/org/elasticsearch/search/SearchService.java
src/test/java/org/elasticsearch/common/collect/CopyOnWriteHashMapTests.java
src/test/java/org/elasticsearch/common/collect/CopyOnWriteHashSetTests.java
src/test/java/org/elasticsearch/common/collect/UpdateInPlaceMapTests.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
comments:
Mappings: Make lookup structures immutable.

This commit makes the lookup structures that are used for mappings immutable.
When changes are required, a new instance is created while the current instance
is left unmodified. This is done efficiently thanks to a hash table
implementation based on a array hash trie, see
org.elasticsearch.common.collect.CopyOnWriteHashMap.

ManyMappingsBenchmark returns indexing times that are similar to the ones that
can be observed in current master.

Ultimately, I would like to see if we can make mappings completely immutable as
well and updated atomically. This is not trivial however, eg. because of dynamic
mappings. So here is a first baby step that should help move towards that
direction.

Close #7486

time:
2014-10-02T11:34:27Z
class:
comments:
Docs: Fixed issue link in doc values section of resiliency status

time:
2014-10-02T11:35:38Z
class:
comments:
release tool: fix 'log exists' check to not create the log before it checks ;)

time:
2014-10-02T10:31:45Z
class:
comments:
Core: improve build_release.py

Don't insist on log file removal until after usage is printed.

Some simple Python code improvements (x.find(y) != -1 --> y in x)

Make sure the git area is "clean" (has no unpushed changes, has pulled
all changes, has no untracked files)

Add label color detail when creating next github version label.

Closes #7913

time:
2014-10-02T07:57:32Z
class:
comments:
update documentation with release 2.4.0

time:
2014-10-02T07:51:58Z
class:
comments:
Update to elasticsearch 1.4.0.Beta1

(cherry picked from commit 9abbe92)
(cherry picked from commit 890c483)

time:
2014-10-02T07:43:31Z
class:
comments:
update documentation with release 2.4.0

time:
2014-10-02T07:35:53Z
class:
comments:
Update to elasticsearch 1.4.0.Beta1

(cherry picked from commit f47babb)
(cherry picked from commit a515501)

time:
2014-10-02T07:30:35Z
class:
comments:
update documentation with release 2.4.0

time:
2014-10-02T07:24:03Z
class:
comments:
update documentation with release 2.4.0

time:
2014-10-02T07:19:32Z
class:
comments:
Update to elasticsearch 1.4.0.Beta1

(cherry picked from commit c082405)

time:
2014-10-02T07:09:35Z
class:
comments:
update documentation with release 2.4.0

time:
2014-10-02T07:05:48Z
class:
src/main/java/org/elasticsearch/index/analysis/SmartChineseAnalyzerProvider.java
src/main/java/org/elasticsearch/indices/analysis/smartcn/SmartChineseIndicesAnalysis.java
comments:
Update to Lucene 4.10.1 and elasticsearch 1.4.0.Beta1

Also replace deprecated code in Lucene.

Closes #28.

time:
2014-10-01T16:16:13Z
class:
comments:
Updated resiliency docs to remove improve_zen branch and update link to dakrone's repo

time:
2014-10-01T14:16:32Z
class:
comments:
Added resiliency page to docs

time:
2014-10-01T12:39:55Z
class:
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
[TEST] MLT malformed doc test fixed

time:
2014-10-01T11:53:37Z
class:
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
comments:
Test: AckTests.test*Warmer* - make sure at least one shard is started

The Put Warmer API executes the search encapsulated in the warmer before accepting it. This requires that at least one shard will be started. The tests used to use ensureGreen to check for that because of a publish timeout of 0 (needed to check the ack mechanism) that doesn't guarantee the shard is really started - just that the master has changed the CS to say so. This commit changes the ensureGreen to a the indexing of a single document.

time:
2014-10-01T10:37:59Z
class:
src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java
src/test/java/org/elasticsearch/search/sort/SimpleSortTests.java
comments:
[TEST] move fragile tests to BadApples rather than AwaitsFix

time:
2014-10-01T10:33:58Z
class:
src/test/java/org/elasticsearch/cluster/ack/AckClusterUpdateSettingsTests.java
comments:
Test: AckClusterUpdateSettingsTests - only set publish_timeout to 0 after green

time:
2014-10-01T08:34:35Z
class:
src/main/java/org/elasticsearch/index/query/IdsQueryParser.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
Be stricter parsing ids for ids query

Adds a check to make sure that all ids in the query are either strings
or numbers. This is to prevent the case where a user accidentally
specifies:

"ids": [["1", "2"]]

(note the double array)

With this change, an exception will be thrown since the second "[" is
not a string or number, it is a Token.START_ARRAY.

Fixes #7686

time:
2014-10-01T08:25:20Z
class:
src/test/java/org/elasticsearch/plugins/PluginManagerUnitTests.java
comments:
[TEST] Use canonical path for comparison rather than absolute path

time:
2014-09-30T20:42:51Z
class:
comments:
[TEST] Make mlt rest tests pass on a single node cluster

time:
2014-09-30T17:51:07Z
class:
src/main/java/org/elasticsearch/plugins/PluginManager.java
src/test/java/org/elasticsearch/plugins/PluginManagerUnitTests.java
comments:
PluginManager: Fix config path extraction from plugin handle

The PluginManager had a subtle bug in case the config directory was not in the
es home directory - which is always true in case of packaging.

This fixes the plugin manager, so that when specifying a path.home and a
path.conf variable on the commandline, the plugin manager acts
appropriately.

time:
2014-09-30T17:28:35Z
class:
comments:
Docs: Typoes on the range filter page

time:
2014-09-30T15:16:42Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java
src/main/java/org/elasticsearch/cluster/metadata/BenchmarkMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/MetaData.java
src/main/java/org/elasticsearch/cluster/metadata/RepositoriesMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/RestoreMetaData.java
src/main/java/org/elasticsearch/cluster/metadata/SnapshotMetaData.java
src/main/java/org/elasticsearch/gateway/local/state/meta/LocalGatewayMetaState.java
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
Snapshot/Restore: Allow custom metadata to specify whether or not it should be in a snapshot

Before this change all persistent custom metadata is stored as part of snapshot. It requires us to remove repositories metadata later during recovery process. This change allows custom metadata to specify whether or not it should be stored as part of a snapshot.

  Fixes #7900

time:
2014-09-30T14:48:22Z
class:
src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java
comments:
Changed the root rest endpoint ('/') to use cluster service

Instead of issuing a redundant cluster state request.

Closes #7899

time:
2014-09-30T13:38:34Z
class:
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequestBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryParser.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
comments:
MLT Query/API: fix `minimum_should_match` bwc

Rounded to the nearest int allows to avoid issues in which (int) (0.59f * 100)
= 58, instead of 59%.

time:
2014-09-30T11:05:45Z
class:
comments:
Docs: Document the most important changes to zen discovery.

Closes #7746

time:
2014-09-30T11:01:27Z
class:
src/test/java/org/elasticsearch/common/breaker/MemoryCircuitBreakerTests.java
comments:
[TESTS] Be less strict about breaker child limit

Failing a parent breaker check is eventually consistent, so the test
could fail the parent limit, throw an exception, and before being
adjusted back down, increment more and throw a circuit breaking
exception on the child. This increases the child's limit, to ensure
we're only testing the parent limit.

It adds an additional assert to ensure that the breaker total is
correctly re-adjusted when the parent breaker has been tripped.

time:
2014-09-30T10:44:19Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
1.3.4 release: add 1.3.5 Version constant

time:
2014-09-30T08:54:28Z
class:
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
comments:
Core: go back to unbounded (scaling) thread pool for management threads (revert #7318)

time:
2014-09-30T07:29:32Z
class:
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
[TEST] Mute MoreLikeThisActionTests#*ArtificialDocs

time:
2014-09-29T22:27:43Z
class:
comments:
Move forbidden api signature files to dev-tools.

This avoids the files showing up in the binary release, since .txt files
are copied.

closes #7917
closes #7921

time:
2014-09-29T22:20:19Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/merge/policy/ElasticsearchMergePolicy.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
Fix optimize behavior with 'force' and 'flush' flags.

This does the following:
* Make 'force' flag only build a merge if the delegate MP returned no merges
* Add async handling for 'flush' when 'waitForMerges' is false
* Remove flush at the beginning of optimize.  This is something the user can
  do if they wish, before calling optimize.

closes #7886
closes #7904
closes #7920

time:
2014-09-29T21:10:16Z
class:
src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java
comments:
Nest original exception while creating NoShardAvailableActionException

Closes #7756

time:
2014-09-29T15:45:10Z
class:
src/test/java/org/elasticsearch/VersionTests.java
comments:
[BUILD] Release version should match latest version

This commit ensures that the latest version in our code is identical
to the project.version specified in the pom.xml file.

time:
2014-09-29T15:18:26Z
class:
src/test/java/org/elasticsearch/test/ExternalNode.java
comments:
[TEST] Use Shutdown API only if nodes are on 1.3.3 or newer to prevent shutdown problems

time:
2014-09-29T14:29:18Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
1.3.3 release: add 1.3.4 version constant

time:
2014-09-29T13:57:14Z
class:
src/test/java/org/elasticsearch/action/IndicesRequestTests.java
comments:
[TEST] make sure that IndicesRequestTests is repeateable using the same seed

Remove the creation of a node client if not there before each test through setup method. `numClientNodes` makes sure that the client node gets created during suite cluster initialization.

time:
2014-09-29T13:49:13Z
class:
src/main/java/org/elasticsearch/action/termvector/MultiTermVectorsRequest.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequest.java
src/main/java/org/elasticsearch/index/mapper/Uid.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/main/java/org/elasticsearch/index/search/morelikethis/MoreLikeThisFetchService.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
MLT Query: Support for artificial documents

Previously, the only way to specify a document not present in the index was to
use `like_text`. This would usually lead to complex queries made of multiple
MLT queries per document field. This commit adds the ability to the MLT query
to directly specify documents not present in the index (artificial documents).
The syntax is similar to the Percolator API or to the Multi Term Vector API.

Closes #7725

time:
2014-09-29T13:24:17Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] create client nodes using node.client: true instead node.data: false and node.master: false

Create client nodes using `node.client: true` instead of `node.data: false` and `node.master: false`.

We should create client nodes in our test infra using the `node.client:true` settings as that is the one that users use, and the one that we use as well in `ClientNodePredicate` thus we end up not finding client nodes otherwise as they weren't created with the proper setting.

Updated also the `DataNodePredicate` so that `client: true` is enough, no need for `data: false` as well.

Closes #7911

time:
2014-09-29T13:06:36Z
class:
src/test/java/org/elasticsearch/common/breaker/MemoryCircuitBreakerTests.java
comments:
[TESTS] Additional logging for `testThreadedUpdatesToChildBreakerWithParentLimit`

time:
2014-09-29T09:38:39Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
comments:
Test: testNodeNotReachableFromMaster had a typo when choosing a non master node

time:
2014-09-29T09:14:56Z
class:
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequestBuilder.java
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisFieldQueryParser.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryBuilder.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/main/java/org/elasticsearch/rest/action/mlt/RestMoreLikeThisAction.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/mlt/MoreLikeThisActionTests.java
comments:
MLT Query: use minimum should match more extensive syntax

The minimum number of optional should clauses of the generated query to match
can now be set using the more extensive minimum should match syntax. This
makes the `percent_terms_to_match` parameter deprecated, and replaced in favor
to a new `minimum_should_match` parameter.

Closes #7898

time:
2014-09-29T09:12:11Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
src/test/java/org/elasticsearch/test/cluster/NoopClusterService.java
src/test/java/org/elasticsearch/test/disruption/SlowClusterStateProcessing.java
comments:
Discovery: master fault detection fall back to cluster state thread upon error

With #7834, we simplified ZenDiscovery by making it use the current cluster state for all it's decision. This had the side effect a node may start it's Master FD before the master  has fully processed that cluster state update that adds that node (or elects the master master). This is due to the fact that master FD is started when a node receives a cluster state from the master but the master it self may still be publishing to other node.

This commit makes sure that a master FD ping is only failed once we know that there is no current cluster state update in progress.

Closes #7908

time:
2014-09-29T08:13:45Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java
comments:
Refactor the Translog.read(Location) method

It was only used by `readSource`, it has been changed to return a
Translog.Operation, which can have .getSource() called on it to return
the source. `readSource` has been removed.

This also removes the checked IOException, any exception thrown is
unexpected and should throw a runtime exception.

Moves the ReleasableBytesStreamOutput allocation into the body of the
try-catch block so the lock can be released in the event of an exception
during allocation.

time:
2014-09-29T08:12:08Z
class:
comments:
fix typo: sonartype -> Sonatype

time:
2014-09-28T21:57:50Z
class:
comments:
Upgrade to Lucene 4.10.1

time:
2014-09-28T21:57:45Z
class:
comments:
Upgrade to Lucene 4.10.1

time:
2014-09-28T21:57:06Z
class:
comments:
Upgrade to Lucene 4.10.1

time:
2014-09-28T21:56:48Z
class:
comments:
Upgrade to Lucene 4.10.1

time:
2014-09-28T21:56:26Z
class:
comments:
Upgrade to Lucene 4.10.1

time:
2014-09-28T21:56:10Z
class:
comments:
Upgrade to Lucene 4.10.1

time:
2014-09-28T21:55:18Z
class:
comments:
Upgrade to Lucene 4.10.1

time:
2014-09-28T17:42:12Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
Core: upgrade to Lucene 4.10.1

time:
2014-09-28T16:30:48Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
fix concurrency bug in index throttling

time:
2014-09-28T09:11:19Z
class:
comments:
Clarify s3 snapshot compress behavior

Clarify s3 snapshot compress behavior only applies to metadata and no index files.

Closes #7654

time:
2014-09-28T09:09:48Z
class:
comments:
Fix Idaho spelling

Doesn't have two `d`s.

Closes #7802

time:
2014-09-28T09:08:09Z
class:
comments:
Remove comma in JSON

Closes #7827

time:
2014-09-28T09:07:15Z
class:
comments:
Improve sentence structure

Closes #7842

time:
2014-09-28T09:05:42Z
class:
comments:
GeoJSON is lon,lat

Although emphasized in the text, the example was backwards.

Closes #7843

time:
2014-09-28T09:04:28Z
class:
comments:
Update suggesters.asciidoc

A request was malformed

Closes #7867

time:
2014-09-27T12:23:07Z
class:
src/main/java/org/elasticsearch/common/network/MulticastChannel.java
comments:
Internal: MulticastChannel should wait on receiver thread to stop during shutdown

This was signaled by our tests which shutdown class and check for thread leakage.

Closes #7835

time:
2014-09-26T22:05:15Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
If a node is being shutdown some in flight ping request may be executed. Make sure to keep track of those ping requests and close the unicast connect executor service.

Closes #7903

time:
2014-09-26T19:35:57Z
class:
comments:
Docs: Fixed some deleted refs

time:
2014-09-26T19:04:42Z
class:
comments:
Docs: Removed all the added/deprecated tags from 1.x

time:
2014-09-26T16:24:53Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/action/SearchServiceTransportAction.java
src/main/java/org/elasticsearch/search/fetch/ShardFetchRequest.java
src/main/java/org/elasticsearch/search/fetch/ShardFetchSearchRequest.java
src/test/java/org/elasticsearch/transport/ActionNamesBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
Internal: split internal fetch request used within scroll and search

Similar to #7856 but relates to the fetch shard level requests. We currently use the same internal request when we need to fetch within search and scroll. The two original requests though diverged after #6933 as SearchRequest implements IndicesRequest while SearchScrollRequest doesn't. That said, with #7319 we made `FetchSearchRequest` implement IndicesRequest by making it hold the original indices taken from the original request, which are null if the fetch was originated by a search scroll, and that is why original indices are optional there.

This commit introduces a separate fetch request and transport action for scroll, which doesn't hold original indices. The new action is only used against nodes that expose it, the previous action name will be used for nodes older than 1.4.0.Beta1.

As a result, in 1.4 we have a new `indices:data/read/search[phase/fetch/id/scroll]` action that is equivalent to the previous `indices:data/read/search[phase/fetch/id]` whose request implements now IndicesRequest and holds the original indices coming from the original request. The original indices in the latter request can only be null during a rolling upgrade (already existing version checks make sure that serialization is bw compatible), when some nodes are still < 1.4.

Closes #7870

time:
2014-09-26T10:46:18Z
class:
src/main/java/org/elasticsearch/node/internal/InternalNode.java
comments:
node shutdown: make close() syncronized

An example scenario where this will help:

When the node is shutdown via api call
(https://github.com/elasticsearch/elasticsearch/blob/master/src/test/java/org/elasticsearch/test/ExternalNode.java#L219 )
then the call returns immediately even if the node is not actually shutdown yet
(https://github.com/elasticsearch/elasticsearch/blob/master/src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/TransportNodesShutdownAction.java#L226).
If at the same time the proces is killed, then the hook that would usually prevent
uncontrolled shutdown
(https://github.com/elasticsearch/elasticsearch/blob/master/src/main/java/org/elasticsearch/bootstrap/Bootstrap.java#L75)
has no effect: It again calls close() which might then just return
for example because one of the lifecycles was moved to closed already.

The bwc test FunctionScoreBackwardCompatibilityTests.testSimpleFunctionScoreParsingWorks
failed because of this. The translog was not properly
written because if the shutdown was called via api, the following process.destroy()
(https://github.com/elasticsearch/elasticsearch/blob/master/src/test/java/org/elasticsearch/test/ExternalNode.java#L225)
killed the node before the translog was written to disk.

closes #7885

time:
2014-09-26T09:21:55Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
comments:
NodesFD: simplify concurrency control to fully rely on a single map

The node fault detection class is used by the master node to ping the nodes in the cluster and verify they are alive. This PR simplifies the concurrency controls in the class + adds a test for a scenario that surfaced the problem.

Closes #7889

time:
2014-09-26T09:21:55Z
class:
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
comments:
Discovery: remove any local state and use clusterService.state instead

At the moment, ZenDiscovery contains a local copy of the disco nodes plus a flag that indicates whether the local node is master or not. This is redundant as the same information is stored in the cluster state. Have duplicate copy can lead to unneeded concurrency issues. This PR removes the duplication, including moving the ownership of the localNode creation to ClusterState

The PR introduces a tighter control of the background joining thread to make sure it is started and stopped together with any cluster state changes. This solves potentially concurrency bugs where a joining thread may fail to start.

Last we add a couple of safety checks to make sure that if a nodes receives a cluster state from a new master while actively trying to join another one (or electing itself) we go back to pinging to actively join it.

Closes #7834

time:
2014-09-26T09:13:12Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
 [TEST] wait for yellow else assertSearchResponse will trip

time:
2014-09-26T08:52:44Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
[TEST] wait for yellow else assertSearchResponse will trip

time:
2014-09-26T08:44:11Z
class:
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
comments:
Tests: turn off CheckIndex for now (it's buggy: there is a race w/ deletion of all files in the data dirs)

time:
2014-09-26T08:08:03Z
class:
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
comments:
disable CheckIndex for these no-ack tests

time:
2014-09-26T07:59:12Z
class:
src/main/java/org/elasticsearch/index/mapper/DocumentFieldMappers.java
src/main/java/org/elasticsearch/index/mapper/FieldMappersLookup.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java
src/main/java/org/elasticsearch/index/query/MissingFilterParser.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/search/highlight/HighlightPhase.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
field name lookup: return List instead of Set for names matching a pattern

The returned sets are only used for iterating. Therefore we might
as well return a list since this guaratees order.

This is the same effect as in
https://github.com/elasticsearch/elasticsearch/pull/7698
The test SimpleIndexQueryParserTests#testQueryStringFieldsMatch
failed on openjdk 1.7.0_65 with
<jdk.map.althashing.threshold>0</jdk.map.althashing.threshold>

closes #7709

time:
2014-09-26T07:59:12Z
class:
src/main/java/org/elasticsearch/script/AbstractSearchScript.java
src/main/java/org/elasticsearch/script/ScoreAccessor.java
src/main/java/org/elasticsearch/script/ScriptService.java
src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
src/main/java/org/elasticsearch/search/lookup/DocLookup.java
src/main/java/org/elasticsearch/search/lookup/SearchLookup.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/TopHitsTests.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
script with _score: remove dependency of DocLookup and scorer

As pointed out in #7487 DocLookup is a variable that is accessible by all scripts
for one doc while the query is executed. But the _score and therfore the scorer
depends on the current context, that is, which part of query is currently executed.
Instead of setting the scorer for DocLookup
and have Script access the DocLookup for getting the score, the Scorer should just
be explicitely set for each script.
DocLookup should not have any reference to a scorer.
This was similarly discussed in #7043.

This dependency caused a stackoverflow when running script score in combination with an
aggregation on _score. Also the wrong scorer was called when nesting several script scores.

closes #7487
closes #7819

time:
2014-09-26T06:49:05Z
class:
src/main/java/org/elasticsearch/common/xcontent/XContentParser.java
src/main/java/org/elasticsearch/index/query/SimpleQueryStringParser.java
src/main/java/org/elasticsearch/index/query/TemplateQueryParser.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestParser.java
comments:
Fix NumberFormatException in Simple Query String Query

Incorrect usage of XContentParser.hasTextCharacters() can result in NumberFormatException as well as other possible issues in template query parser and phrase suggest parsers.

Fixes #7875

time:
2014-09-25T22:21:12Z
class:
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
comments:
don't CheckIndex for this test case

time:
2014-09-25T20:50:48Z
class:
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/indices/IndicesLifecycle.java
src/main/java/org/elasticsearch/indices/InternalIndicesLifecycle.java
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/indices/FlushTest.java
src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java
src/test/java/org/elasticsearch/test/store/MockFSDirectoryService.java
src/test/java/org/elasticsearch/versioning/SimpleVersioningTests.java
comments:
Tests: always run Lucene's CheckIndex when shards are closed in tests and fail the test if corruption is detected

Today we only run 10% of the time, and the test doesn't fail when
corruption is detected.

I think it's better to always run and fail the test, so we can catch
any possible resiliency bugs in Lucene/Elasticsearch causing corruption.

For known tests that create corrupted indices, it's easy to set
MockFSDirectoryService.CHECK_INDEX_ON_CLOSE to false...

Closes #7730

time:
2014-09-25T18:29:12Z
class:
comments:
Update stemmer-tokenfilter.asciidoc

Change the `minimal_english` link to a publicly accessible URL

time:
2014-09-25T17:43:23Z
class:
comments:
Docs: bad text wrapping

On the page http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/analysis-synonym-tokenfilter.html

even on a huge monitor the text is being wrapped the next way
```
mapping:
ipod, i-pod, i pod => ipod, i-pod, i pod
mapping:
ipod, i-pod, i pod => ipod
```

So one can think that "mapping:" is not in comment and is a part of syntax. But the lines are less than 80 chars, so perhaps the problem is in the page layout and there may be some other pages in the reference where the text is also being wrapped in an undesirable way.

Closes #7739

time:
2014-09-25T17:08:59Z
class:
comments:
Docs: In the code there is the `d` option.

Documenting a behaviour that is present in the code and works.

Closes #7794

time:
2014-09-25T16:53:27Z
class:
comments:
Update indices.get_mapping.json

time:
2014-09-25T11:48:53Z
class:
comments:
Update getting-started.asciidoc

zip and tar is archive, deb and rpm is package.

Closes #7749

time:
2014-09-25T11:02:16Z
class:
comments:
[TEST] improved regular scroll REST test

Added sort clause by field and checked docs returned each time

time:
2014-09-25T10:02:29Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantLongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsTests.java
comments:
Aggs - support for arrays of numeric values in include/exclude clauses

Closes #7714
Will this commit related to #7714 be back-ported to 1.x branch? 
For me it is a deal breaker for migrating from facets? Majority of my facets are on numeric fields (IDs) and need ability to include/exclude specific values as selected by user so without arrays of terms including numerics I am stuck :-(

thanks
Alex

The last entry on issue 7714 is a commit of this change to the 1.x branch and the one prior is the commit to master.

I suspect what you might be after is a commit to the 1.4 branch which has changes for the next 1.4 minor release?
The master branch is any changes for a future 2.0 release.
The 1.x branch is any changes for a future 1.5 release.

To help keep track we label the versions a change was pushed to on the closed PR that relates to the issue e.g. https://github.com/elasticsearch/elasticsearch/pull/7727 cites versions 1.5 and 2.0

Thanks Mark. I missed the labels. I somehow thought that time-wise (september) 1.4 was cut after this commit and would include it. Guess I will have to wait for 1.5. Do you think it will be a longer then 1 month iteration like 1.4 was?

Do you by any chance push 1.x snapshot builds to any public maven repo? 

Hello, I need this patch as well, for the numerical filtering on include clause (which means I can't even use facets for my purposes). It looks like I might have to patch this against 1.4 in order to continue until 1.5 comes out.


time:
2014-09-25T09:51:06Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
src/main/java/org/elasticsearch/transport/TransportService.java
comments:
[TRANSPORT] never send requests after transport service is stopped

With local transport or any transport that doesn't necessarily send
notification if connections are closed we might miss a node
disconnection and the request handler hangs forever / until the timeout
kicks in. This window only exists during shutdown and is likely
unproblematic in practice but tests might run into this problem when
local transport is used.

time:
2014-09-25T09:46:05Z
class:
comments:
[TEST] improved regular scroll REST test

The intermediate document that gets indexed has now a non existing id, and we make sure it doesn't get returned.

time:
2014-09-25T09:25:13Z
class:
src/main/java/org/elasticsearch/action/ListenableActionFuture.java
src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java
src/main/java/org/elasticsearch/action/support/AbstractListenableActionFuture.java
src/main/java/org/elasticsearch/action/support/TransportAction.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
comments:
Add a listener thread pool
Today, when executing an action (mainly when using the Java API), a listener threaded flag can be set to true in order to execute the listener on a different thread pool. Today, this thread pool is the generic thread pool, which is cached. This can create problems for Java clients (mainly) around potential thread explosion.
Introduce a new thread pool called listener, that is fixed sized and defaults to the half the cores maxed at 10, and use it where listeners are executed.
relates to #5152
closes #7837

time:
2014-09-25T09:03:12Z
class:
comments:
[TEST] add regular scroll REST test

Closes #7860

time:
2014-09-25T08:48:13Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/ElasticsearchThreadFilter.java
comments:
[TEST] Reenable threadleak filters with 5 sec. lingering

time:
2014-09-25T08:48:12Z
class:
src/main/java/org/elasticsearch/client/transport/TransportClient.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySettings.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/test/java/org/elasticsearch/client/transport/TransportClientNodesServiceTests.java
src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java
src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/threadpool/UpdateThreadPoolSettingsTests.java
comments:
[CORE] Add ThreadPool.terminate to streamline shutdown

Shutting down threadpools and executor services is done in very similar
fashion across the codebase. This commit streamlines the process by
adding a terminate method to ThreadPool.

time:
2014-09-25T07:56:53Z
class:
src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java
src/main/java/org/elasticsearch/common/lucene/search/XMoreLikeThis.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
comments:
MLT Query: fix percent_terms_to_match

The parameter `percent_terms_to_match` (percentage of terms that must match in
the generated query) was wrongly set to the top level boolean query. This
would lead to zero or all results type of situations. This commit ensures that
the parameter is indeed applied to the query of generated terms.

Closes #7754

time:
2014-09-25T07:42:14Z
class:
comments:
Docs: Mention that that p/c queries and filters do not work in the delete-by-query api.

time:
2014-09-24T22:10:55Z
class:
comments:
Upgrade to Lucene 4.10.1 snapshot

time:
2014-09-24T22:04:14Z
class:
comments:
Upgrade to Lucene 4.10.1 snapshot

time:
2014-09-24T21:23:15Z
class:
comments:
Upgrade to Lucene 4.10.1 snapshot

time:
2014-09-24T21:18:13Z
class:
comments:
Upgrade to Lucene 4.10.1 snapshot

time:
2014-09-24T21:10:08Z
class:
comments:
Upgrade to Lucene 4.10.1 snapshot

time:
2014-09-24T20:56:24Z
class:
comments:
Upgrade to Lucene 4.10.1 snapshot

time:
2014-09-24T20:51:28Z
class:
comments:
Upgrade to Lucene 4.10.1 snapshot

time:
2014-09-24T19:09:13Z
class:
comments:
Update upgrade.asciidoc

Fix markup bug and change "deb" to "dpkg". (Package manager called dpkg, not deb in Debian distribution)

Closes #7748

time:
2014-09-24T18:54:09Z
class:
comments:
Docs: Update update.asciidoc

Closes #7498

time:
2014-09-24T18:50:30Z
class:
comments:
Docs: Update thrift.asciidoc

Fix typos, add clarifications and link.

Closes #7678

time:
2014-09-24T18:19:05Z
class:
comments:
Docs: Typos on range filter

Closes #7713

time:
2014-09-24T17:48:49Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/test/java/org/elasticsearch/index/store/DistributorDirectoryTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/test/store/MockDirectoryHelper.java
comments:
Core: try again to upgrade to Lucene 4.10.1-snapshot

time:
2014-09-24T17:25:55Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/test/java/org/elasticsearch/index/store/DistributorDirectoryTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/test/store/MockDirectoryHelper.java
comments:
Revert Lucene upgrade

time:
2014-09-24T17:13:07Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/index/store/DistributorDirectory.java
src/test/java/org/elasticsearch/index/store/DistributorDirectoryTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/test/store/MockDirectoryHelper.java
comments:
Core: upgrade to Lucene 4.10.1 snapshot

Lucene will soon release official 4.10.1, but by upgrading sooner we can 1) sidestep the false failures due to the 1.8.0_20 JVM hotspot bug (has caused a number of false failures in recent Jenkins tests), 2) make sure none of the Lucene changes in 4.10.1 are problematic.

Closes #7844

time:
2014-09-24T15:26:40Z
class:
src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java
comments:
Test: ClusterServiceTests.testLocalNodeMasterListenerCallbacks - increase ping timeout

was 200ms, now 400ms

time:
2014-09-24T13:33:27Z
class:
src/main/java/org/elasticsearch/search/action/SearchServiceTransportAction.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/transport/ActionNamesBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
Internal: split internal free context request used after scroll and search

We currently use the same internal request when we need to free the search context after a search and a scroll. The two original requests though diverged after #6933 as `SearchRequest` implements `IndicesRequest` while `SearchScrollRequest` and `ClearScrollRequest` don't. That said, with #7319 we made `SearchFreeContextRequest` implement `IndicesRequest` by making it hold the original indices taken from the original request, which are null if the free context was originated by a scroll or by a clear scroll call, and that is why original indices are optional there.

This commit introduces a separate free context request and transport action for scroll, which doesn't hold original indices. The new action is only used against nodes that expose it, the previous action name will be used for nodes older than 1.4.0.Beta1.

As a result, in 1.4 we have a new `indices:data/read/search[free_context/scroll]` action that is equivalent to the previous `indices:data/read/search[free_context]` whose request implements now `IndicesRequest` and holds the original indices coming from the original request. The original indices in the latter requests can only be null during a rolling upgrade (already existing version checks make sure that serialization is bw compatible), when some nodes are still < 1.4.

Closes #7856

time:
2014-09-24T13:23:57Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/StoreFileMetaData.java
comments:
Update version flags after backporting to 1.3.3

Relates to #7857

time:
2014-09-24T10:48:26Z
class:
src/main/java/org/elasticsearch/search/SearchModule.java
src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/SignificantTermsHeuristicModule.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/heuristics/TransportSignificantTermsHeuristicModule.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreTests.java
comments:
Aggregations: Significant Terms Heuristics now registered correctly

Closes #7840

time:
2014-09-23T21:41:07Z
class:
comments:
Docs: fix typo

time:
2014-09-23T12:01:22Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchThreadFilter.java
comments:
[TEST] Disable thread filter for now

time:
2014-09-23T11:58:47Z
class:
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
src/test/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPingTests.java
comments:
[TEST] use more terminate calls and wait for termination

time:
2014-09-23T11:36:21Z
class:
src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java
src/main/java/org/elasticsearch/action/count/TransportCountAction.java
src/main/java/org/elasticsearch/action/deletebyquery/TransportShardDeleteByQueryAction.java
src/main/java/org/elasticsearch/action/exists/TransportExistsAction.java
src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsContext.java
src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/client/node/NodeClientHeadersTests.java
src/test/java/org/elasticsearch/client/transport/TransportClientTests.java
src/test/java/org/elasticsearch/common/util/concurrent/PrioritizedExecutorsTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/query/TemplateQueryParserTest.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPlugin2Tests.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPluginTests.java
src/test/java/org/elasticsearch/indexing/IndexActionTests.java
src/test/java/org/elasticsearch/script/NativeScriptTests.java
src/test/java/org/elasticsearch/search/timeout/SearchTimeoutTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/ElasticsearchThreadFilter.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
src/test/java/org/elasticsearch/threadpool/ThreadPoolSerializationTests.java
src/test/java/org/elasticsearch/threadpool/UpdateThreadPoolSettingsTests.java
src/test/java/org/elasticsearch/transport/AbstractSimpleTransportTests.java
src/test/java/org/elasticsearch/watcher/ResourceWatcherServiceTests.java
comments:
[TEST] Add a more restrictive thread leaks filter

Today all threads are allowed to leak a suite. This is tricky since
it essentially allows resource leaks by default where for instance
test private TransportClients will never get closed and consume
resources influencing other tests. It also hides threads that
are not fully under elasticsearchs control like the Lucene
TimeLimitingCollector thread. This commit restricts the threads
that can leak a suite to the threads spawned from testclusters
and fixes sevearl places that leaked threads.

Closes #7833
Hi @s1monw,
1.  Does this mean that I will always have to annotate my Failing Test classes as a result of memory leaks detected by Lucenes' `<RandomizedRunner>` with : 
   
   `<@ThreadLeakScope(ThreadLeakScope.Scope.NONE) // Which is "Highly discouraged" >`?
2.  Or is there another work around?

**PS:** currently using `<@ThreadLeakScope(ThreadLeakScope.Scope.NONE)>` on staging and I will like to find an alternative before going live


time:
2014-09-23T11:30:36Z
class:
comments:
Docs: fix no callouts refer to list item 3

time:
2014-09-23T10:53:47Z
class:
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
[TEST] Make sure test actually throttles

time:
2014-09-23T10:39:57Z
class:
comments:
Docs: java add static imports for query and filter builders

Also move and add inline comments to references

Closes #6920.

time:
2014-09-23T10:30:06Z
class:
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
comments:
[TEST] disable translog based flushes when corrupting files

These tests rely on the fact that all files stay the same after
the corruption and if we run into a translog based flush we might
use a new / different delete file causing the test to fail.

time:
2014-09-23T10:15:19Z
class:
src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java
src/main/java/org/elasticsearch/common/netty/NettyUtils.java
src/main/java/org/elasticsearch/http/netty/ESHttpResponseEncoder.java
src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java
src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransport.java
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
src/test/java/org/elasticsearch/network/DirectBufferNetworkTests.java
comments:
Chunk direct buffer usage by networking layer
Today, due to how netty works (both on http layer and transport layer), and even though the buffers sent over to netty are paged (CompositeChannelBuffer), it ends up re-copying the whole buffer into another heap buffer (bad), and then send it over directly to sun.nio which allocates a full thread local direct buffer to send it (which can be repeated if not all message is sent).
  This is problematic for very large messages, aside from the extra heap temporal usage, the large direct buffers will stay around and not released by the JVM.
  This change forces the use of gathering when building a CompositeChannelBuffer, which results in netty using the sun.nio write method that accepts an array of ByteBuffer (so no extra heap copying), and also reduces the amount of direct memory allocated for large messages.
  See the doc on NettyUtils#DEFAULT_GATHERING for more info.
closes #7811

time:
2014-09-23T09:32:18Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryFileChunkRequest.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
comments:
[RECOVERY] Mark last file chunk to fail fast if payload is truncated

Today we rely on the metadata length of the file we are recoverying
to indicate when the last chunk was received. Yet, this might hide bugs
on the compression layer if payloads are truncated. We should indicate
if the last chunk is send to make sure we validate checksums
accordingly if possible.

Closes #7830

time:
2014-09-23T06:34:25Z
class:
src/test/java/org/elasticsearch/document/BulkTests.java
comments:
[TEST] Ensure primaries are allocated before bulk indexing with dymamic mappings

time:
2014-09-22T13:32:29Z
class:
comments:
Document the Java BulkProcessor

Closes #7638.

time:
2014-09-22T13:20:31Z
class:
comments:
Docs: IndexResponse.matches() does not exist anymore

Since 1.0, percolator has been redesigned so percolator is not applied anymore at index time.

Closes #7548.

time:
2014-09-22T13:13:35Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java
src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java
comments:
Apply bulk change to 1.3.3

relates to #7729

time:
2014-09-22T12:37:27Z
class:
comments:
Update java source example

From the version 1.0 FilterBuilders and QueryBuilders are not part from org.elasticsearch.index.query.xcontent package no more.

Closes #7701.

(cherry picked from commit 32d4200)

time:
2014-09-22T09:19:38Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
Tests: extend testRecoverFromPreviousVersion to sometimes index during relocation

Relates to #7729

Closes #7768

time:
2014-09-22T09:05:00Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
comments:
Recovery: mapping check during phase2 should be done in cluster state update task

Before phase2 we check verify that the local mapping is in sync with the cluster state mapping (and send & wait on a master update mapping task if not). This check should be done under a cluster state update task to make sure an incoming cluster state update to do not change things while we check.

Closes #7744

time:
2014-09-21T18:16:45Z
class:
src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Test: RecoveryWhileUnderLoadTests.recoverWhileRelocating should report cluster state when failing to reach green

time:
2014-09-20T10:58:15Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPing.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java
src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
src/test/java/org/elasticsearch/discovery/zen/ZenPingTests.java
comments:
Discovery: Give a unique id to each ping response

During discovery a node gossips with other nodes to discover the current state of the cluster - what nodes are out there, what version they use and most importantly whether there is an active master out there. During this ping process we may end up in a situation where old information is mixed with new. This is comment if a couple of master election happen in rapid succession.

This commit adds a monotonically increasing id to each ping response. This makes it easy to always select the last ping from every node.

Closes #7769

time:
2014-09-20T10:34:48Z
class:
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/query/QueryPhaseExecutionException.java
src/test/java/org/elasticsearch/search/simple/SimpleSearchTests.java
comments:
Core: Check if from + size don't cause overflow and fail with a better error.

Closes #7778

time:
2014-09-19T18:15:06Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/support/ForceSyncDirectory.java
comments:
Internal: remove ForceSyncDirectory

Historical code, not used anymore.

Closes #7804

time:
2014-09-19T10:59:08Z
class:
src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java
src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequestBuilder.java
src/main/java/org/elasticsearch/index/query/TemplateQueryParser.java
src/main/java/org/elasticsearch/rest/action/script/RestGetIndexedScriptAction.java
src/main/java/org/elasticsearch/search/SearchService.java
src/test/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequestTests.java
comments:
Indexed Scripts/Templates :  Cleanup

This contains several cleanups to the indexed scripts.
Remove the unused FetchSourceContext from the Get request..
Add lang,_version,_id to the REST GET API.
Removes the routing from GetIndexedScriptRequest since the script index is a single shard that is replicated across all nodes.
Fix backward compatible template file reference
Before 1.3.0 on disk scripts could be referenced by requesting
````
_search/template

{
  "template" : "ondiskscript"
}
````
This was broken in 1.3.0 by requiring
````
{
  "template" :
  {
    "file" : "ondiskscript"
  }
}
````
This commit restores the previous behavior.
Remove support for preference, realtime and refresh
These parameters don't make sense anymore for indexed scripts as we always force the preference to _local and
always refresh after a Put to the indexed scripts index.

Closes #7568
Closes #7559
Closes #7647
Closes #7567

time:
2014-09-19T10:36:51Z
class:
src/main/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDecider.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
comments:
Add option to take currently relocating shards' sizes into account

When using the DiskThresholdDecider, it's possible that shards could
already be marked as relocating to the node being evaluated. This commit
adds a new setting `cluster.routing.allocation.disk.include_relocations`
which adds the size of the shards currently being relocated to this node
to the node's used disk space.

This new option defaults to `true`, however it's possible to
over-estimate the usage for a node if the relocation is already
partially complete, for instance:

A node with a 10gb shard that's 45% of the way through a relocation
would add 10gb + (.45 * 10) = 14.5gb to the node's disk usage before
examining the watermarks to see if a new shard can be allocated.

Fixes #7753
Relates to #6168

time:
2014-09-19T09:55:49Z
class:
src/main/java/org/elasticsearch/action/DocumentRequest.java
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/test/java/org/elasticsearch/document/BulkTests.java
comments:
Bulk API: Do not fail whole request on closed index

The bulk API request was marked as completely failed,
in case a request with a closed index was referred in
any of the requests inside of a bulk one.

Implementation Note: Currently the implementation is a bit more verbose in order to prevent an instanceof check and another cast - if that is fast enough, we could execute that logic only once at the
beginning of the loop (thinking this might be a bit overoptimization here).

Closes #6410

time:
2014-09-19T09:27:28Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/test/java/org/elasticsearch/document/BulkTests.java
comments:
Revert "Bulk API: Do not fail whole request on closed index"

This reverts commit 405e5816b827db5823e6c2ed9c1bbe9fa4629355.

time:
2014-09-19T09:27:16Z
class:
src/main/java/org/elasticsearch/action/DocumentRequest.java
comments:
Revert "Bulk Request : Add Document Request"

This reverts commit 86f575dcea31e2e1486a17ed248708084905aeea.

time:
2014-09-19T09:05:45Z
class:
src/main/java/org/elasticsearch/action/DocumentRequest.java
comments:
Bulk Request : Add Document Request

This file was missing.

time:
2014-09-19T08:56:49Z
class:
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/test/java/org/elasticsearch/document/BulkTests.java
comments:
Bulk API: Do not fail whole request on closed index

The bulk API request was marked as completely failed,
in case a request with a closed index was referred in
any of the requests inside of a bulk one.

Implementation Note: Currently the implementation is a bit more verbose in order to prevent an instanceof check and another cast - if that is fast enough, we could execute that logic only once at the beginning of the loop (thinking this might be a bit overoptimization here).

Closes #6410

time:
2014-09-19T08:34:30Z
class:
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[TEST] move REST tests to their own test group

Closes #7795

time:
2014-09-18T22:37:30Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
comments:
[ENGINE] try increment store before searcher is acquired

InternalEngine#refreshNeeded must increment the ref count on the
store used before it's checking if the searcher is current since
internally a searcher ref is acquired and if that happens concurrently
to a engine close it might violate the assumption that all files
are closed when the store is closed.

This commit also converts some try / finally into try / with.

time:
2014-09-18T15:05:34Z
class:
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[TEST] allow to fully disable REST tests included parsing via -Dtests.rest=false

We currently look for REST tests on file system although they are disabled. We should not do that and move the check earlier on. This way third parties using our test infra, which don't have REST tests on file system, can effectively disable the REST tests, otherwise they would get initialization error despite having disabled them.  The downside is that the number of tests visualized is going to be zero instead of the real number of parsed REST tests, but there is nothing we can do about this. Tests get ignored anyways.

time:
2014-09-18T14:22:43Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalOrder.java
comments:
Aggregations: Removes isSingleUserCriteria check

This change removes the backwards compatibility workaround that checks that a compoundOrder originated from a single user defined criteria for the purposes of serialising to older versioned nodes.

time:
2014-09-18T14:14:59Z
class:
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
comments:
[TEST] close REST test execution context only if not null

The context can be null when REST tests are disabled via sysprop.

time:
2014-09-18T14:09:01Z
class:
comments:
[DOC] Add GET Alias API note to breaking changes

Note explains that GET Alias API now supports IndicesOptions and will error if a index is missing

time:
2014-09-18T13:25:10Z
class:
src/main/java/org/elasticsearch/action/ActionRunnable.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/common/util/concurrent/AbstractRunnable.java
src/main/java/org/elasticsearch/common/util/concurrent/EsThreadPoolExecutor.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/netty/MessageChannelHandler.java
src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java
src/test/java/org/elasticsearch/test/transport/MockTransportService.java
src/test/java/org/elasticsearch/test/transport/NettyTransportTests.java
comments:
[CORE] Add AbstractRunnable support to ThreadPool to simplify async operation on bounded threadpools

today we have to catch rejected operation exceptions in various places
and notify an ActionListener. This pattern is error prone and adds a lot
of boilerplait code. It's also easy to miss catching this exception
which only is relevant if nodes are under high load. This commit adds
infrastructure that makes ActionListener first class citizen on async
actions.

Closes #7765

time:
2014-09-18T13:21:02Z
class:
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
comments:
[TEST] Reimplement AckTests#testDeleteWarmerNoAcknowledgement

This test was not testing what it was supposed to test. This commit
implements the test as an actual delete warmer test without ack
returned.

time:
2014-09-18T12:26:11Z
class:
src/main/java/org/elasticsearch/action/IndicesRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/ClusterSearchShardsRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/create/CreateSnapshotRequest.java
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/GetAliasesRequest.java
src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/DeleteMappingRequest.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest.java
src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/settings/get/GetSettingsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/settings/put/UpdateSettingsRequest.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerRequest.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerRequest.java
src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequest.java
src/main/java/org/elasticsearch/action/support/master/info/ClusterInfoRequest.java
src/main/java/org/elasticsearch/action/support/replication/IndicesReplicationOperationRequest.java
comments:
Internal: add indices setter to IndicesRequest interface

We currently expose generic getters for indices and indicesOptions on the IndicesRequest interface. This commit adds a generic setter as well, which can be used to set the indices to a request. The setter impl throws `UnsupportedOperationException` if called on internal requests. Also throws exception if called on single index operations, since it accepts an array as argument.

Closes #7734

time:
2014-09-18T12:00:51Z
class:
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequest.java
src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java
comments:
Internal: make sure that update internal requests share the same original headers and request context

Update request internally executes index and delete operations. We need to make sure that those internal operations hold the same headers and context as the original update request. Achieved via copy constructors that accept the current request and the original request.

Closes #7766

time:
2014-09-18T11:58:03Z
class:
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java
src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java
src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java
src/main/java/org/elasticsearch/action/support/replication/IndicesReplicationOperationRequest.java
comments:
Internal: make sure that all delete mapping internal requests share the same original headers and context

Delete mapping executes flush, delete by query and refresh operations internally. Those internal requests are now initialized by passing in the original delete mapping request so that its headers and request context are kept around.

Closes #7736

time:
2014-09-18T10:27:55Z
class:
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSource.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ParentIdAggTests.java
comments:
Aggregations: Fix regression bug for the support of terms aggregation on the `_parent` field.

time:
2014-09-18T08:40:30Z
class:
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/test/CurrentTestFailedMarker.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Only reset test cluster if a test actually failed

Previously we resetted the test cluster for all subsequent tests
even though they didn't fail. This make suites like REST tests faster
and prevents crazy timeouts.

Closes #7775

time:
2014-09-18T07:15:17Z
class:
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
comments:
[TEST] Wait until warmer is registered when testing timeout

time:
2014-09-17T17:17:40Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
comments:
[SNAPSHOT] Minor code cleanup

time:
2014-09-17T17:17:40Z
class:
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
[TEST] adjust chunk size to create less but bigger files to trigger throtteling more reliably

time:
2014-09-17T17:06:24Z
class:
src/test/java/org/elasticsearch/gateway/local/RecoveryBackwardsCompatibilityTests.java
comments:
Test: increase zen logging

time:
2014-09-17T12:53:58Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Only close GLOBAL_CLUSTER if it's non-null

time:
2014-09-17T10:46:26Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
comments:
Aggregations: More consistent response format for scripted metrics aggregation

Changes the name of the field in the scripted metrics aggregation from 'aggregation' to 'value' to be more in line with the other metrics aggregations like 'avg'

time:
2014-09-17T10:34:29Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequest.java
comments:
Internal: make sure that internally generated percolate request re-uses the original headers and request context

Closes #7767

time:
2014-09-17T08:55:34Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java
src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/TransportNodesShutdownAction.java
src/main/java/org/elasticsearch/action/admin/cluster/reroute/TransportClusterRerouteAction.java
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/cluster/shards/TransportClusterSearchShardsAction.java
src/main/java/org/elasticsearch/action/admin/cluster/snapshots/status/TransportSnapshotsStatusAction.java
src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java
src/main/java/org/elasticsearch/action/admin/cluster/tasks/TransportPendingClusterTasksAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/exists/TransportAliasesExistAction.java
src/main/java/org/elasticsearch/action/admin/indices/alias/get/TransportGetAliasesAction.java
src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/TransportGetMappingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/settings/get/TransportGetSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/settings/put/TransportUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/TransportGetIndexTemplatesAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/TransportGetWarmersAction.java
src/main/java/org/elasticsearch/action/bench/TransportAbortBenchmarkAction.java
src/main/java/org/elasticsearch/action/bench/TransportBenchmarkAction.java
src/main/java/org/elasticsearch/action/bench/TransportBenchmarkStatusAction.java
src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java
src/main/java/org/elasticsearch/cluster/action/index/MappingUpdatedAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestUpdateSettingsAction.java
src/test/java/org/elasticsearch/action/bulk/BulkProcessorTests.java
src/test/java/org/elasticsearch/cluster/BlockClusterStatsTests.java
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
Add missing cluster blocks handling for master operations
Master node related operations were missing proper handling of cluster blocks, allowing for example to perform cluster level update settings even before the state was fully restored on initial cluster startup

Note, the change allows to change read only related settings without checking for blocks on update settings, as without it, it means one can't re-enable metadata/write. Also, it doesn't check for blocks on cluster state and health API, as those are allowed to be used even when blocked to figure out what causes the block.
closes #7763
closes #7740

time:
2014-09-17T07:48:51Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
comments:
[CORE] Notify listener when execution was rejected

time:
2014-09-17T07:22:02Z
class:
comments:
Docs: Indicate that the Children Aggregation is coming in 1.4.0

time:
2014-09-16T21:17:30Z
class:
src/test/java/org/elasticsearch/test/CompositeTestCluster.java
comments:
[TEST] wait until all nodes have joined the cluster after upgrade

upgradeOneNode() only checked if the new node is in the nodes info.
However, this does not guarantee that all nodes have joined the cluster
already. For example the new node could be the master and might not yet
know about all nodes and the other nodes might not know about the new
master yet.
Depending on which client is picked later, the client might then try to
send request to the old node that was shut down instead of the new one.
Instead of just checking if the new node is in the nodes info we should
therefore also check if the all nodes are in the nodes info.

time:
2014-09-16T20:51:54Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/Store.java
comments:
[SNAPSHOT] Reset missing file hash instead of existing hash

Commit e8a1f2598b504183c1a3f2e60363ceaa0d4b298e introduced a regression
where the already existing hash was replaced instead of the missing.

time:
2014-09-16T20:13:25Z
class:
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
[TEST] Mute DedicatedClusterSnapshotRestoreTests#restorePersistentSettingsTest

time:
2014-09-16T17:35:35Z
class:
src/test/java/org/elasticsearch/action/admin/cluster/stats/ClusterStatsTests.java
comments:
[TEST] Wait for nodes before calling the API stats API

time:
2014-09-16T16:05:35Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Discovery: UnicastZenPing don't rename configure host name

#7719 introduced temporary node ids for nodes that can't be resolved via their address. The change is overly aggressive and creates temporary nodes also for the configure target hosts.

Closes #7747

time:
2014-09-16T14:09:48Z
class:
src/test/java/org/elasticsearch/test/rest/RestTestExecutionContext.java
src/test/java/org/elasticsearch/test/rest/client/RestClient.java
comments:
[TEST] Update REST client before each test in our REST tests

In #7723 we removed the `updateAddresses` method from `RestClient` under the assumption that the addresses never change during the suite execution, as REST tests rely on the global cluster. Due to #6734 we restart the global cluster though before each test if there was a failure in the suite. If that happens we do need to make sure that the REST client points to the proper nodes. What was missing before was the http call to verify the es version every time the addresses change, which we do now since we effectively re-initialize the REST client when needed (if the http addresses have changed).

Closes #7737

time:
2014-09-16T12:56:05Z
class:
src/test/java/org/elasticsearch/options/jsonp/JsonpOptionDisabledTest.java
comments:
[TEST] ensure HTTP is enabled in JsonP tests

time:
2014-09-16T12:31:43Z
class:
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/rest/RestController.java
src/test/java/org/elasticsearch/options/jsonp/JsonpOptionDisabledTest.java
src/test/java/org/elasticsearch/options/jsonp/JsonpOptionEnabledTest.java
src/test/java/org/elasticsearch/rest/CorsRegexTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Improve HTTP support in TestClusters

This commit disalbes HTTP for all the suite and test scope tests
since it's an unused / unneeded module which takes time to startup.
This also uses a JVM private port range for HTTP ports to ensure
there are no cross JVM conflicts.

time:
2014-09-16T12:15:00Z
class:
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
comments:
[SNAPSHOT] Trigger retry logic also if we hit a JsonException

We rely on retry logic when reading a snapshot since it's concurrently
serialized. We should move to a better logic here but the refactoring
of the blobstore change the semantics and this now throws Json
exceptions rather than returning an unexpected Token

time:
2014-09-16T10:13:39Z
class:
src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java
src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java
src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java
src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequest.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
comments:
Bulk operation can create duplicates on primary relocation
When executing a bulk request, with create index operation and auto generate id, if while the primary is relocating the bulk is executed, and the relocation is done while N items from the bulk have executed, the full shard bulk request will be retried on the new primary. This can create duplicates because the request is not makred as potentially holding conflicts.

This change carries over the response for each item on the request level, and if a conflict is detected on the primary shard, and the response is there (indicating that the request was executed once already), use the mentioned response as the actual response for that bulk shard item.

On top of that, when a primary fails and is retried, the change now marks the request as potentially causing duplicates, so the actual impl will do the extra lookup needed.

This change also fixes a bug in our exception handling on the replica, where if a specific item failed, and its not an exception we can ignore, we should actually cause the shard to fail.

closes #7729

time:
2014-09-16T09:41:59Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
Discovery: node join requests should be handled at lower priority than master election

When a node is elected as master or receives a join request, we submit a cluster state update task. We should give the node join update task a lower priority than the elect as master to increase the chance it will not be rejected. During master election there is a big chance that these will happen concurrently.

This commit lowers the priority of node joins from IMMEDIATE to URGENT

Closes #7733

time:
2014-09-16T09:01:49Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/Store.java
comments:
[STORE] Fold two hashFile implemenation into one

time:
2014-09-16T08:54:41Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/action/OriginalIndices.java
src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequest.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ShardClearIndicesCacheRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java
src/main/java/org/elasticsearch/action/count/CountRequest.java
src/main/java/org/elasticsearch/action/count/CountResponse.java
src/main/java/org/elasticsearch/action/count/ShardCountRequest.java
src/main/java/org/elasticsearch/action/count/ShardCountResponse.java
src/main/java/org/elasticsearch/action/delete/ShardDeleteRequest.java
src/main/java/org/elasticsearch/action/explain/ExplainResponse.java
src/main/java/org/elasticsearch/action/get/GetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java
src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/single/custom/TransportSingleCustomOperationAction.java
src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/rounding/Rounding.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPing.java
src/main/java/org/elasticsearch/index/engine/SegmentsStats.java
src/main/java/org/elasticsearch/index/fielddata/plain/DocValuesIndexFieldData.java
src/main/java/org/elasticsearch/index/indexing/IndexingStats.java
src/main/java/org/elasticsearch/index/mapper/core/NumberFieldMapper.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/store/StoreFileMetaData.java
src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerStats.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTranslogOperationsRequest.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/internal/InternalSearchResponse.java
src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
src/main/java/org/elasticsearch/search/query/QuerySearchResult.java
src/main/java/org/elasticsearch/search/suggest/Suggest.java
src/main/java/org/elasticsearch/search/warmer/IndexWarmersMetaData.java
src/main/java/org/elasticsearch/transport/ActionNames.java
src/test/java/org/elasticsearch/action/OriginalIndicesTests.java
src/test/java/org/elasticsearch/action/get/MultiGetShardRequestTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramOffsetTests.java
src/test/java/org/elasticsearch/transport/ActionNamesBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
[VERSION] s/V_1_4_0_Beta/V_1_4_0_Beta1/g

time:
2014-09-16T08:43:28Z
class:
src/test/java/org/elasticsearch/index/store/CorruptedTranslogTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Make flush in #indexRandom optinal

Some tests like CorruptedTranslogTests rely on the fact that we
are recovering from translog. In those cases we need to prevent
flushes from happening during indexing. This change adds an optional
flag on the #indexRandom utility to disable flushes.

time:
2014-09-16T08:23:02Z
class:
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
[TEST] Fixed ActionNamesTests to not use random action names that conflict with existing ones

ActionNamesTests#testIncomingAction rarely uses a random action name to make sure that actions registered via plugins work properly. In some cases the random action would conflict with existing one (e.g. tv) and make the test fail. Fixed also testOutgoingAction although the probability of conflict there is way lower due to longer action names used from 1.4 on.

time:
2014-09-16T08:08:25Z
class:
src/test/java/org/elasticsearch/bwcompat/NodesStatsBasicBackwardsCompat.java
src/test/java/org/elasticsearch/client/transport/TransportClientHeadersTests.java
comments:
[TEST] Use node names for transport clients an close them in tests

time:
2014-09-15T19:26:01Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
Discovery: not all master election related cluster state update task use Priority.IMMEDIATE

Most notably the elected_as_master task should run as soon as possible. This is an issue as node join request do use `Priority.IMMEDIATE` and can be unjustly rejected.

Closes #7718

time:
2014-09-15T19:02:23Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java
src/test/java/org/elasticsearch/cluster/ClusterHealthTests.java
comments:
Internal: ClusterHealthAPI does not respect waitForEvents when local flag is set

It uses a cluster state update task and it gets rejected if not run on a master node. We should enable running on non-masters if the local flag is set.

Also, report any unexpected error that may happen during this cluster state update task

Closes #7731

time:
2014-09-15T16:21:55Z
class:
comments:
Tools: Add script to grab ES version for BWC tests.

closes #7653

time:
2014-09-15T15:54:15Z
class:
src/main/java/org/elasticsearch/transport/netty/NettyTransport.java
comments:
Netty: Make sure channel closing never happens on i/o thread

Similar to NettyTransport.doStop() all actions which disconnect
from a node (and thus call awaitUnterruptibly) should not be executed
on the I/O thread.

This patch ensures that all disconnects happen in the generic threadpool, trying to avoid unnecessary `disconnectFromNode` calls.

Also added a missing return statement in case the component was not yet
started when catching an exception on the netty layer.

Closes #7726

time:
2014-09-15T14:47:39Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Discovery: UnicastZenPing - use temporary node ids if can't resolve node by it's address

The Unicast Zen Ping mechanism is configured to ping certain host:port combinations in order to discover other node. Since this is only a ping, we do not setup a full connection but rather do a light connect with one channel. This light connection is closed at the end of the pinging.

During pinging, we may discover disco nodes which are not yet connected (via temporalResponses). UnicastZenPing will setup the same light connection for those node. However, during pinging a cluster state may arrive with those nodes in it. In that case , we will mistakenly believe those nodes are connected and at the end of pinging we will mistakenly disconnect those valid node.

This commit makes sure that all nodes UnicastZenPing connects to have a unique id and can be safely disconnected.

Closes #7719

time:
2014-09-15T14:30:10Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-09-15T14:29:41Z
class:
comments:
Update to Lucene 4.10.0

Closes #27.

(cherry picked from commit 1eb2352)

time:
2014-09-15T13:58:14Z
class:
src/test/java/org/elasticsearch/indices/FlushTest.java
src/test/java/org/elasticsearch/versioning/SimpleVersioningTests.java
comments:
Test: always run CheckIndex for these two tests

time:
2014-09-15T13:42:34Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Log if we use transport client in trace mode

time:
2014-09-15T13:30:54Z
class:
src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTarget.java
comments:
Recovery: remove unneeded waits on recovery cancellation

When cancelling recoveries, we wait for up to 10s for the source node to be notified before continuing. This is not needed in two cases:
1) The source node has been disconnected due to node shutdown (recovery is canceled as a response to cluster state processing)
2) The current thread is the one that will be notifying the source node (happens when one of the calls from the source nodes discoveres the local index is closed)

The first one is especially important as it may delay cluster state update processing with 10s.

Closes #7717

time:
2014-09-15T13:27:14Z
class:
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
src/test/java/org/elasticsearch/test/rest/RestTestExecutionContext.java
src/test/java/org/elasticsearch/test/rest/client/RestClient.java
comments:
[TEST] Minor  REST tests infra cleanup

Make the http addresses within the REST client final. It makes no sense to update them before each test if we don't check the version of the nodes again, which would mean adding too much overhead (an additional http call before each test) for no reason. We just reuse the same nodes for the whole suite and check the version once while initializing the client. Would be nice to make the REST client within the execution context final but its initialization still needs to happen after the `ElasticsearchIntegrationTest#beforeInternal` that assigns `GLOBAL_CLUSTER` to `currentCluster`.

Closes #7723

time:
2014-09-15T12:37:42Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-09-15T11:55:39Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-09-15T11:52:16Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-09-15T11:49:31Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-09-15T10:56:48Z
class:
src/main/java/org/elasticsearch/action/search/ClearScrollRequest.java
src/main/java/org/elasticsearch/action/search/SearchResponse.java
comments:
Added scrollId/s setters to the different scroll requests/responses

time:
2014-09-15T10:29:57Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java
src/test/java/org/elasticsearch/bwcompat/NodesStatsBasicBackwardsCompat.java
comments:
Only set `breaker` when stats are retrieved

When communicating with 1.3 and earlier nodes, it's possible that the
field data breaker info is not sent at all. When this happens, we should
leave the `breaker` variable as-is (unset) instead of creating an
AllCircuitBreakerStats object with a null fd breaker and fake request &
parent breakers.

time:
2014-09-15T10:08:29Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalOrder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/Terms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/UnmappedTerms.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/SumAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
Aggregations: Adds ability to sort on multiple criteria

The terms aggregation can now support sorting on multiple criteria by replacing the sort object with an array or sort object whose order signifies the priority of the sort. The existing syntax for sorting on a single criteria also still works.

Contributes to #6917
Replaces #7588

time:
2014-09-15T10:01:23Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-09-15T09:46:20Z
class:
src/main/java/org/elasticsearch/index/query/functionscore/gauss/GaussDecayFunctionParser.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
function score: fix cast in Gaussian decay function

Also fix the test
FunctionScoreTests#simpleWeightedFunctionsTestWithRandomWeightsAndRandomCombineMode
which sometimes failed due to rounding issues. Make sure
only floats are returned as scores to assure ratio of
expected and returned score is 1.0f.

time:
2014-09-15T09:23:12Z
class:
src/test/java/org/elasticsearch/discovery/ZenUnicastDiscoveryTests.java
comments:
Test: ZenUnicastDiscoveryTests.testNormalClusterForming should start unicast hosts first

The test starts a cluster with random nodes as unicast hosts but *doesn't* use min_master_nodes. If the unicast hosts are started last, nodes may elect themselves as master as they do not have mechanism yet to share information.

time:
2014-09-15T08:42:31Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-09-15T07:32:17Z
class:
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java
comments:
Internal: make sure that original headers are used when executing search as part of put warmer

Closes #7711

time:
2014-09-15T07:30:45Z
class:
src/main/java/org/elasticsearch/client/support/Headers.java
src/test/java/org/elasticsearch/test/rest/ElasticsearchRestTests.java
src/test/java/org/elasticsearch/test/rest/RestTestExecutionContext.java
src/test/java/org/elasticsearch/test/rest/client/RestClient.java
src/test/java/org/elasticsearch/test/rest/client/http/HttpRequestBuilder.java
comments:
[TEST] Expose ability to provide http headers when sending requests in our REST tests

ElasticsearchRestTests has now a `restClientSettings` method that can be overriden to provide headers as settings (similarly to what we do with transport client). Those headers will be sent together with every REST requests within the tests.

Closes #7710

time:
2014-09-12T18:16:42Z
class:
src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsTests.java
comments:
Tests: added trace action.search.type to GeoBoundsTests

time:
2014-09-12T16:12:34Z
class:
src/test/java/org/elasticsearch/search/functionscore/DecayFunctionScoreTests.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
[TEST] Fix test explain now that explanation is fixed

time:
2014-09-12T16:12:34Z
class:
src/main/java/org/elasticsearch/index/query/functionscore/gauss/GaussDecayFunctionParser.java
comments:
Fixed explanation for GaussDecayFunction

The explanation now gives the correct value instead of the negative.

time:
2014-09-12T15:22:07Z
class:
src/main/java/org/elasticsearch/common/lucene/search/Queries.java
src/main/java/org/elasticsearch/index/query/FQueryFilterParser.java
src/main/java/org/elasticsearch/index/query/NestedFilterParser.java
src/main/java/org/elasticsearch/index/query/QueryFilterParser.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Parent/child: If a p/c query is wrapped in a query filter then CustomQueryWrappingFilter must always be used and any filter wrapping the query filter must never be cached.

Closes #7685

time:
2014-09-12T14:28:03Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
Aggs enhancement - allow Include/Exclude clauses to use array of terms as alternative to a regex
Closes #6782

time:
2014-09-12T14:08:59Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-09-12T14:02:43Z
class:
comments:
Create branch es-1.4 for elasticsearch 1.4.0

time:
2014-09-12T13:42:41Z
class:
src/test/java/org/elasticsearch/cluster/routing/allocation/decider/DiskThresholdDeciderTests.java
comments:
[TEST] Additional logging info for node with primary

time:
2014-09-12T12:23:45Z
class:
src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsTests.java
comments:
[TEST] added trace logging for index recovery in GeoBoundsTests

time:
2014-09-12T12:02:43Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerTests.java
comments:
Discovery: restore preference to latest unicast pings describing the same node

Closes #7702

time:
2014-09-12T09:09:02Z
class:
src/main/java/org/elasticsearch/index/query/GeoBoundingBoxFilterParser.java
src/test/java/org/elasticsearch/search/geo/GeoBoundingBoxTests.java
comments:
Geo: Fixes BoundingBox across complete longitudinal range

Adds a special case to the GeoBoundingBoxFilterParser so that the left of the box is not normalised in the case where left and right are 360 apart.  Before this change the left would be normalised to 180 in this case and the filter would only match points with a longitude of 180 (or -180).

Closes #5128

time:
2014-09-12T08:59:11Z
class:
comments:
Added support for github access tokens to es_release_notes

time:
2014-09-12T08:43:25Z
class:
src/test/java/org/elasticsearch/index/search/geo/GeoUtilsTests.java
comments:
[TEST] Adds tests for GeoUtils

time:
2014-09-12T08:38:58Z
class:
comments:
Fixed bug in es_release_notes script

time:
2014-09-12T08:35:18Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
comments:
Tests: add a comment to DiscoveryWithServiceDisruptions.testAckedIndexing reminding to port it to 1.x once the awaitFix is removed

time:
2014-09-12T08:24:55Z
class:
src/test/java/org/elasticsearch/indices/IndicesLifecycleListenerTests.java
comments:
Tests: add an awaitFix to IndicesLifecycleListenerTests

time:
2014-09-12T05:46:03Z
class:
comments:
Update update.asciidoc

The upserts section should be on the same page as updates.

time:
2014-09-12T05:33:07Z
class:
src/main/java/org/elasticsearch/cluster/routing/GroupShardsIterator.java
src/main/java/org/elasticsearch/cluster/routing/PlainShardIterator.java
src/main/java/org/elasticsearch/cluster/routing/ShardIterator.java
src/main/java/org/elasticsearch/cluster/routing/operation/plain/PlainOperationRouting.java
src/main/java/org/elasticsearch/index/shard/ShardId.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/index/store/CorruptedTranslogTests.java
comments:
[CORE] Ensure GroupShardsIterator is consistent across requests

GroupShardsIterator is used in many places like the search execution
to determin which shards to query. This can hold shards of one index
as well as shards of multiple indices. The iteration order is used
to assigne a per-request shard ID for each shard that is used as a
tie-breaker when scores are the same. Today the iteration order is
soely depending on the HashMap iteration order which is undefined or
rather implementation dependent. This causes search requests to return
inconsistent results across requests if for instance different nodes
are coordinating the requests.

Simple queries like `match_all` may return results in arbitrary order
if pagination is used or may even return different results for the same
request even though there hasn't been a refresh call and preferences are
used.

time:
2014-09-11T20:38:03Z
class:
src/main/java/org/elasticsearch/Version.java
comments:
[VERSION] Added Version [1.5.0]

time:
2014-09-11T20:10:19Z
class:
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/action/OriginalIndices.java
src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequest.java
src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ShardClearIndicesCacheRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java
src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java
src/main/java/org/elasticsearch/action/count/CountRequest.java
src/main/java/org/elasticsearch/action/count/CountResponse.java
src/main/java/org/elasticsearch/action/count/ShardCountRequest.java
src/main/java/org/elasticsearch/action/count/ShardCountResponse.java
src/main/java/org/elasticsearch/action/delete/ShardDeleteRequest.java
src/main/java/org/elasticsearch/action/explain/ExplainResponse.java
src/main/java/org/elasticsearch/action/get/GetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java
src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/single/custom/TransportSingleCustomOperationAction.java
src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequest.java
src/main/java/org/elasticsearch/action/update/UpdateRequest.java
src/main/java/org/elasticsearch/cluster/metadata/MappingMetaData.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/rounding/Rounding.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPing.java
src/main/java/org/elasticsearch/index/engine/SegmentsStats.java
src/main/java/org/elasticsearch/index/fielddata/plain/DocValuesIndexFieldData.java
src/main/java/org/elasticsearch/index/indexing/IndexingStats.java
src/main/java/org/elasticsearch/index/mapper/core/NumberFieldMapper.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/store/StoreFileMetaData.java
src/main/java/org/elasticsearch/indices/breaker/CircuitBreakerStats.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTranslogOperationsRequest.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/internal/InternalSearchResponse.java
src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
src/main/java/org/elasticsearch/search/query/QuerySearchResult.java
src/main/java/org/elasticsearch/search/suggest/Suggest.java
src/main/java/org/elasticsearch/search/warmer/IndexWarmersMetaData.java
src/main/java/org/elasticsearch/transport/ActionNames.java
src/test/java/org/elasticsearch/action/OriginalIndicesTests.java
src/test/java/org/elasticsearch/action/get/MultiGetShardRequestTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramOffsetTests.java
src/test/java/org/elasticsearch/transport/ActionNamesBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
[Version] Add Version 1.4.0-Beta

time:
2014-09-11T19:15:02Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
comments:
[STORE] Turn unexpected exception into CorruptedIndexException

Today if we run into exception like NumberFormatException or IAE
when we try to open a commit point to retrieve checksums and calculate
store metadata we just bubble them up. Yet, those are very likely index
corruptions. In such a case we should really mark the shard as
corrupted.

time:
2014-09-11T17:49:51Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
[TEST] fix another rounding issue

time:
2014-09-11T15:42:37Z
class:
src/test/java/org/elasticsearch/search/basic/TransportTwoNodesSearchTests.java
comments:
[TEST] Use a sorted set since sets are compared and compare is order specific

time:
2014-09-11T15:34:54Z
class:
src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java
src/main/java/org/elasticsearch/rest/action/mlt/RestMoreLikeThisAction.java
src/test/java/org/elasticsearch/action/mlt/MoreLikeThisRequestTests.java
comments:
More Like This API: remove unused search_query_hint parameter

Closes #7691

time:
2014-09-11T15:26:22Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHits.java
comments:
Aggregations top_hits: Fixed inconsistent sorting of the hits

In the reduce logic of the top_hits aggregation if the first shard result to process contained has no results then the merging of all the shard results can go wrong resulting in an incorrect sorted hits.
This bug can only manifest with a sort other than score.

Closes #7697

time:
2014-09-11T15:11:48Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
comments:
[STORE] Improve exception from Store.failIfCorrupted

If you have previously corrupted files, this method currently builds an
exception like:
```
    failed engine [corrupted preexisting index]
    failed to start shard
```

Followed by a CorruptIndexException. This commit writes the entire
stacktrace to provide additional information. It also changes the
failure message from `corrupted preexisting index` to `preexisting
corrupted index` to prevent confusion.

Closes #7596

time:
2014-09-11T14:46:41Z
class:
comments:
Changed dev-tools/es_release_notes to:
* remove markdown support
* prefer PRs over issues
* include related issues in the list
* always use section headers if there is a header

time:
2014-09-11T14:39:46Z
class:
comments:
Spec: Fixed the docs URL for indices.get and indices.exists

time:
2014-09-11T14:20:51Z
class:
src/test/java/org/elasticsearch/test/test/InternalTestClusterTests.java
comments:
[TEST] Use a real unique clustername for InternalTestClusterTests

time:
2014-09-11T14:04:04Z
class:
comments:
[DOCS] clarification of breaking changes to 1.4 due to GET index API

time:
2014-09-11T13:20:28Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
comments:
Test: Let both types have a non_analyzed id field.

time:
2014-09-11T12:36:11Z
class:
comments:
[API] Fix minor issues with indices.get definition and tests

mark index param as required
make body match json, not string containing json

time:
2014-09-11T12:32:59Z
class:
src/test/java/org/elasticsearch/test/rest/client/RestResponse.java
src/test/java/org/elasticsearch/test/rest/section/DoSection.java
comments:
[TEST] parse response body as json depending on the content-type in our REST tests

time:
2014-09-11T11:18:08Z
class:
src/main/java/org/elasticsearch/rest/BaseRestHandler.java
src/main/java/org/elasticsearch/rest/RestClientFactory.java
src/main/java/org/elasticsearch/rest/RestController.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/hotthreads/RestNodesHotThreadsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/info/RestNodesInfoAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/restart/RestNodesRestartAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/shutdown/RestNodesShutdownAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/stats/RestNodesStatsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/delete/RestDeleteRepositoryAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/get/RestGetRepositoriesAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/put/RestPutRepositoryAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterGetSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/shards/RestClusterSearchShardsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/create/RestCreateSnapshotAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/delete/RestDeleteSnapshotAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/get/RestGetSnapshotsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/restore/RestRestoreSnapshotAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/status/RestSnapshotsStatusAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/stats/RestClusterStatsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/tasks/RestPendingClusterTasksAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestIndicesAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/delete/RestIndexDeleteAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetIndicesAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/head/RestAliasesExistAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/put/RestIndexPutAliasAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/analyze/RestAnalyzeAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/cache/clear/RestClearIndicesCacheAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/close/RestCloseIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/create/RestCreateIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/delete/RestDeleteIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/exists/indices/RestIndicesExistsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/exists/types/RestTypesExistsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/flush/RestFlushAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/get/RestGetIndicesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/delete/RestDeleteMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetFieldMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/put/RestPutMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/open/RestOpenIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/optimize/RestOptimizeAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/recovery/RestRecoveryAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/refresh/RestRefreshAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/segments/RestIndicesSegmentsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestGetSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestUpdateSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/delete/RestDeleteIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/get/RestGetIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/head/RestHeadIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/put/RestPutIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/validate/query/RestValidateQueryAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/delete/RestDeleteWarmerAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/get/RestGetWarmerAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/put/RestPutWarmerAction.java
src/main/java/org/elasticsearch/rest/action/bench/RestBenchAction.java
src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java
src/main/java/org/elasticsearch/rest/action/cat/AbstractCatAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestAliasAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestAllocationAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestCatAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestFielddataAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestHealthAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestMasterAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestPendingClusterTasksAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestPluginsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestRecoveryAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestSegmentsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestThreadPoolAction.java
src/main/java/org/elasticsearch/rest/action/count/RestCountAction.java
src/main/java/org/elasticsearch/rest/action/delete/RestDeleteAction.java
src/main/java/org/elasticsearch/rest/action/deletebyquery/RestDeleteByQueryAction.java
src/main/java/org/elasticsearch/rest/action/exists/RestExistsAction.java
src/main/java/org/elasticsearch/rest/action/explain/RestExplainAction.java
src/main/java/org/elasticsearch/rest/action/get/RestGetAction.java
src/main/java/org/elasticsearch/rest/action/get/RestGetSourceAction.java
src/main/java/org/elasticsearch/rest/action/get/RestHeadAction.java
src/main/java/org/elasticsearch/rest/action/get/RestMultiGetAction.java
src/main/java/org/elasticsearch/rest/action/index/RestIndexAction.java
src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java
src/main/java/org/elasticsearch/rest/action/mlt/RestMoreLikeThisAction.java
src/main/java/org/elasticsearch/rest/action/percolate/RestMultiPercolateAction.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/main/java/org/elasticsearch/rest/action/script/RestDeleteIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/script/RestGetIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/script/RestPutIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/search/RestClearScrollAction.java
src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java
src/main/java/org/elasticsearch/rest/action/suggest/RestSuggestAction.java
src/main/java/org/elasticsearch/rest/action/template/RestDeleteSearchTemplateAction.java
src/main/java/org/elasticsearch/rest/action/template/RestGetSearchTemplateAction.java
src/main/java/org/elasticsearch/rest/action/template/RestPutSearchTemplateAction.java
src/main/java/org/elasticsearch/rest/action/termvector/RestMultiTermVectorsAction.java
src/main/java/org/elasticsearch/rest/action/termvector/RestTermVectorAction.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/test/java/org/elasticsearch/plugins/responseheader/TestResponseHeaderRestAction.java
src/test/java/org/elasticsearch/rest/HeadersAndContextCopyClientTests.java
comments:
Internal: refactor copy headers mechanism to not require a client factory

With #7594 we replaced the static `BaseRestHandler#addUsefulHeaders` by introducing the `RestClientFactory` that can be injected and used to register the relevant headers. To simplify things, we can now register relevant headers through the `RestController` and remove the `RestClientFactory` that was just introduced.

Closes #7675

time:
2014-09-11T10:59:17Z
class:
src/test/java/org/elasticsearch/transport/ActionNamesBackwardsCompatibilityTest.java
comments:
[TEST] added exception for GET index API to bwc tests

time:
2014-09-11T10:53:25Z
class:
comments:
[DOCS] Additional documentation for _score accessing

Closes #7043

time:
2014-09-11T10:19:21Z
class:
src/main/java/org/elasticsearch/action/ActionModule.java
src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexResponse.java
src/main/java/org/elasticsearch/action/admin/indices/get/TransportGetIndexAction.java
src/main/java/org/elasticsearch/client/IndicesAdminClient.java
src/main/java/org/elasticsearch/client/support/AbstractIndicesAdminClient.java
src/main/java/org/elasticsearch/common/path/PathTrie.java
src/main/java/org/elasticsearch/rest/action/RestActionModule.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetIndicesAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/get/RestGetIndicesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestGetSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/get/RestGetWarmerAction.java
src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexTests.java
src/test/java/org/elasticsearch/common/path/PathTrieTests.java
src/test/java/org/elasticsearch/transport/ActionNamesTests.java
comments:
Indices API: Added GET Index API

Returns information about settings, aliases, warmers, and mappings. Basically returns the IndexMetadata. This new endpoint replaces the /{index}/_alias|_aliases|_mapping|_mappings|_settings|_warmer|_warmers and /_alias|_aliases|_mapping|_mappings|_settings|_warmer|_warmers endpoints whilst maintaining the same response formats.  The only exception to this is on the /_alias|_aliases|_warmer|_warmers endpoint which will now return a section for 'aliases' or 'warmers' even if no aliases or warmers exist. This backwards compatibility change is documented in the reference docs.

Closes #4069

time:
2014-09-11T09:19:10Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ping/PingContextProvider.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPing.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java
src/main/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPing.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/discovery/zen/ping/multicast/MulticastZenPingTests.java
src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingTests.java
comments:
Resiliency: Master election should demotes nodes which try to join the cluster for the first time

With the change in #7493,  we introduced a pinging round when a master nodes goes down. That pinging round helps validating the current state of the cluster and takes, by default, 3 seconds. It may be that during that window, a new node tries to join the cluster and starts pinging (this is typical when you quickly restart the current master).  If this node gets elected as the new master it will force recovery from the gateway (it has no in memory cluster state), which in turn will cause a full cluster shard synchronisation. While this is not a problem on it's own, it's a shame. This commit demotes "new" nodes during master election so the will only be elected if really needed.

Closes #7558

time:
2014-09-11T09:17:49Z
class:
comments:
Docs: A simple typo.

Closes #7535

time:
2014-09-11T09:13:55Z
class:
comments:
Docs: Added recommended Java versions to the docs

time:
2014-09-11T09:07:23Z
class:
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
comments:
Add inline comment to prevent confusion

time:
2014-09-11T08:41:23Z
class:
comments:
Docs: Fix misnamed setting

The settings is `index.merge.policy.reclaim_deletes_weight` not
`index.reclaim_deletes_weight`.

Closes #7676

time:
2014-09-11T08:00:06Z
class:
src/main/java/org/elasticsearch/index/translog/TranslogStreams.java
comments:
Translog: remove unused stream

Closes #7683

time:
2014-09-11T07:52:09Z
class:
src/main/java/org/elasticsearch/bulk/udp/BulkUdpModule.java
src/main/java/org/elasticsearch/bulk/udp/BulkUdpService.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
comments:
Bulk UDP: Removal.

This feature is rarely used. Removing it will help reduce the moving parts
of Elasticsearch and focus on the core.

Close #7595

time:
2014-09-11T07:35:25Z
class:
src/main/java/org/elasticsearch/index/cache/IndexCache.java
src/main/java/org/elasticsearch/index/engine/Engine.java
src/main/java/org/elasticsearch/index/search/nested/IncludeNestedDocsQuery.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
comments:
Core: Use FixedBitSetFilterCache for delete-by-query.

Leftover from #7037.
Close #7581

time:
2014-09-10T17:01:55Z
class:
src/test/java/org/elasticsearch/percolator/ConcurrentPercolatorTests.java
comments:
Test: Fields in percolator query must exist before percolating

time:
2014-09-10T16:24:22Z
class:
src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsTests.java
comments:
[TEST] Added logging of response to aid debugging

time:
2014-09-10T16:24:22Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
[TEST] added more information to fail message for a test to debug test failure

time:
2014-09-10T15:51:07Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/InternalTopHits.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsAggregator.java
comments:
Aggregation top_hits: Move sort resolution to the reduce method, so it is always guaranteed to be invoked.

time:
2014-09-10T14:07:15Z
class:
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
comments:
missing logging brackets

time:
2014-09-10T14:05:03Z
class:
comments:
The description was incorrect

Looked like a copy and paste from another aggregation

time:
2014-09-10T14:05:03Z
class:
comments:
Fixing some grammar

time:
2014-09-10T14:02:44Z
class:
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
comments:
Gateway: added trace logging to translog recovery logic

Enabled it in SimpleRecoveryLocalGatewayTests

time:
2014-09-10T13:57:57Z
class:
comments:
[docs] Fix typo: resonable - reasonable

time:
2014-09-10T12:48:06Z
class:
src/main/java/org/elasticsearch/cluster/ClusterState.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java
comments:
[Rest] reroute API response didn't filter metadata

By default the reroute API should return the new cluster state, excluding the metadata. It was however it was wrongly using an old parameter (filter_metadata) and thus failed to do so. This commits restores but wiring it to the correct `metric` parameter. We also add an enum representing the possible metrics, to avoid similar future mistakes.

Closes #7520
Closes #7523

time:
2014-09-10T12:45:46Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
comments:
Test: Added more assertions

time:
2014-09-10T12:42:35Z
class:
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Tests: log when an ensure green/yellow comes back

Also added some trace logging to SimpleRecoveryLocalGatewayTests

time:
2014-09-10T10:35:09Z
class:
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
comments:
Store: improved trace logging for shard active requests

time:
2014-09-10T10:29:00Z
class:
src/test/java/org/elasticsearch/gateway/local/LocalGatewayIndexStateTests.java
comments:
Tests: add logging to LocalGatewayIndexStateTests

time:
2014-09-10T10:05:53Z
class:
src/main/java/org/elasticsearch/rest/BaseRestHandler.java
src/main/java/org/elasticsearch/rest/RestClientFactory.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/hotthreads/RestNodesHotThreadsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/info/RestNodesInfoAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/restart/RestNodesRestartAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/shutdown/RestNodesShutdownAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/node/stats/RestNodesStatsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/delete/RestDeleteRepositoryAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/get/RestGetRepositoriesAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/repositories/put/RestPutRepositoryAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterGetSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/shards/RestClusterSearchShardsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/create/RestCreateSnapshotAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/delete/RestDeleteSnapshotAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/get/RestGetSnapshotsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/restore/RestRestoreSnapshotAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/snapshots/status/RestSnapshotsStatusAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/stats/RestClusterStatsAction.java
src/main/java/org/elasticsearch/rest/action/admin/cluster/tasks/RestPendingClusterTasksAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestIndicesAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/delete/RestIndexDeleteAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/get/RestGetIndicesAliasesAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/head/RestAliasesExistAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/alias/put/RestIndexPutAliasAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/analyze/RestAnalyzeAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/cache/clear/RestClearIndicesCacheAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/close/RestCloseIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/create/RestCreateIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/delete/RestDeleteIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/exists/indices/RestIndicesExistsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/exists/types/RestTypesExistsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/flush/RestFlushAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/delete/RestDeleteMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetFieldMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/put/RestPutMappingAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/open/RestOpenIndexAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/optimize/RestOptimizeAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/recovery/RestRecoveryAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/refresh/RestRefreshAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/segments/RestIndicesSegmentsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestGetSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestUpdateSettingsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/delete/RestDeleteIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/get/RestGetIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/head/RestHeadIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/template/put/RestPutIndexTemplateAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/validate/query/RestValidateQueryAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/delete/RestDeleteWarmerAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/get/RestGetWarmerAction.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/put/RestPutWarmerAction.java
src/main/java/org/elasticsearch/rest/action/bench/RestBenchAction.java
src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java
src/main/java/org/elasticsearch/rest/action/cat/AbstractCatAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestAliasAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestAllocationAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestCatAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestCountAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestFielddataAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestHealthAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestMasterAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestPendingClusterTasksAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestPluginsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestRecoveryAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestSegmentsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestThreadPoolAction.java
src/main/java/org/elasticsearch/rest/action/count/RestCountAction.java
src/main/java/org/elasticsearch/rest/action/delete/RestDeleteAction.java
src/main/java/org/elasticsearch/rest/action/deletebyquery/RestDeleteByQueryAction.java
src/main/java/org/elasticsearch/rest/action/exists/RestExistsAction.java
src/main/java/org/elasticsearch/rest/action/explain/RestExplainAction.java
src/main/java/org/elasticsearch/rest/action/get/RestGetAction.java
src/main/java/org/elasticsearch/rest/action/get/RestGetSourceAction.java
src/main/java/org/elasticsearch/rest/action/get/RestHeadAction.java
src/main/java/org/elasticsearch/rest/action/get/RestMultiGetAction.java
src/main/java/org/elasticsearch/rest/action/index/RestIndexAction.java
src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java
src/main/java/org/elasticsearch/rest/action/mlt/RestMoreLikeThisAction.java
src/main/java/org/elasticsearch/rest/action/percolate/RestMultiPercolateAction.java
src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java
src/main/java/org/elasticsearch/rest/action/script/RestDeleteIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/script/RestGetIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/script/RestPutIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/search/RestClearScrollAction.java
src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java
src/main/java/org/elasticsearch/rest/action/suggest/RestSuggestAction.java
src/main/java/org/elasticsearch/rest/action/template/RestDeleteSearchTemplateAction.java
src/main/java/org/elasticsearch/rest/action/template/RestGetSearchTemplateAction.java
src/main/java/org/elasticsearch/rest/action/template/RestPutSearchTemplateAction.java
src/main/java/org/elasticsearch/rest/action/termvector/RestMultiTermVectorsAction.java
src/main/java/org/elasticsearch/rest/action/termvector/RestTermVectorAction.java
src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
src/test/java/org/elasticsearch/plugins/responseheader/TestResponseHeaderRestAction.java
src/test/java/org/elasticsearch/rest/HeadersAndContextCopyClientTests.java
comments:
Internal: refactor copy headers mechanism

The functionality of copying headers in the REST layer (from REST requests to transport requests) remains the same. Made it a bit nicer by introducing a RestClientFactory component that is a singleton and allows to register useful headers without requiring static methods.

Plugins just have to inject the RestClientFactory now, and call its `addRelevantHeaders` method that is not static anymore.

Relates to #6513
Closes #7594

time:
2014-09-10T09:19:30Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
comments:
Test: Enabled ChildrenTests#testParentWithMultipleBuckets with more logging

time:
2014-09-10T07:36:30Z
class:
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/threadpool/UpdateThreadPoolSettingsTests.java
comments:
[ThreadPool] Use DirectExecutor instead of deprecated API

Guava deprecated MoreExecutors#sameThreadExecutor in favour of
a more efficient implemenation. We should move over to the new impl.

time:
2014-09-09T21:30:31Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicAnalysisBackwardCompatibilityTests.java
comments:
Tests: Re-enable BWC analysis test, skipping strings that could cause issue with LUCENE-5927.

time:
2014-09-09T19:58:37Z
class:
comments:
[BUILD] Randomly enable AggressiveOpts in builds

time:
2014-09-09T19:48:42Z
class:
src/test/java/org/elasticsearch/test/test/InternalTestClusterTests.java
comments:
[TEST] Added basic test for InternalTestCluster reproducibility

time:
2014-09-09T17:44:47Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
[TEST] fix rounding issue

time:
2014-09-09T16:31:41Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] use local random instance rather than thread local version

This influences reprocucibility dramatically since it modifies the
test random sequence while it should just use the private random
instance.

time:
2014-09-09T16:06:46Z
class:
src/main/java/org/elasticsearch/rest/BaseRestHandler.java
src/test/java/org/elasticsearch/rest/HeadersAndContextCopyClientTests.java
comments:
Internal: make sure that the request context is always copied from REST to transport layer

Also renamed HeadersCopyClientTests since it tests a class that was renamed and removed randomization around client wrapper, as it now needs to be weapped all the time to copy the context, doesn't depend on useful headers that have been registered anymore.

Relates to #7610

time:
2014-09-09T15:49:06Z
class:
src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsTests.java
comments:
[TEST] more debugging for GeoBoundsTests

time:
2014-09-09T15:48:37Z
class:
src/test/java/org/elasticsearch/index/store/CorruptedTranslogTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Disable translog flush in CorruptedTranslogTests

time:
2014-09-09T15:30:43Z
class:
src/test/java/org/elasticsearch/bwcompat/TransportClientBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalNode.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
comments:
[TEST] Ensure BWC test run even if node.mode=local is set

Today we throw an error if local transport is configured with BWC tests.
Yet, the BWC test need network to be enabled so test can just set the
required defaults.

Closes #7660

time:
2014-09-09T14:23:55Z
class:
src/main/java/org/elasticsearch/cluster/settings/DynamicSettings.java
src/test/java/org/elasticsearch/cluster/settings/SettingsValidatorTests.java
comments:
Fix ordering of Regex.simpleMatch() parameters

Previously we incorrectly sent them in the wrong order, which can cause
validators not to be run for dynamic settings that have been added
matching a particular wildcard.

Fixes #7651

time:
2014-09-09T13:26:13Z
class:
src/main/java/org/elasticsearch/common/io/stream/NoopStreamOutput.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/translog/ChecksummedTranslogStream.java
src/main/java/org/elasticsearch/index/translog/LegacyTranslogStream.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/index/translog/TranslogStream.java
src/main/java/org/elasticsearch/index/translog/TranslogStreams.java
src/main/java/org/elasticsearch/index/translog/TruncatedTranslogException.java
src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java
src/main/java/org/elasticsearch/index/translog/fs/FsChannelSnapshot.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/index/translog/fs/SimpleFsTranslogFile.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTranslogOperationsRequest.java
src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java
src/test/java/org/elasticsearch/index/translog/TranslogVersionTests.java
comments:
Simplify translog interface

get rid of readSource() entirely, it sucked, Operations should be able
to provide the source themselves.

No more TranslogStream headers, you are now required to pass an
StreamInput or StreamOutput for all operations, which means no extra
state is needed and no need to construct new versions when detecting the
version.

Read and write translog op sizes in TranslogStreams

Previously we handled these integers outside of the translog stream
itself, which was very unclean because other code had to know about
reading the size, or about writing the correct header sometimes.

There is some additional code in LocalIndexShardGateway to handle the
legacy case for older translogs, because we need to read and discard the
size in order to maintain the compatibility for the streaming
operations (they did not read or write the size for 1.3.x and earlier).

Additionally, we need to handle a case where the header is truncated
when recovering from disk

Use a NoopStreamOutput instead of byte arrays

Instead of writing translog operations to a temporary byte array and
then writing that byte array to the stream, we now write the operation
twice, once to a No-op stream to get the size, then again to the real
size.

This trades a little more CPU usage for less memory usage.

time:
2014-09-09T13:00:47Z
class:
src/main/java/org/elasticsearch/cluster/metadata/AliasValidator.java
src/main/java/org/elasticsearch/index/percolator/PercolatorQueriesRegistry.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
src/test/java/org/elasticsearch/explain/ExplainActionTests.java
src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateTests.java
src/test/java/org/elasticsearch/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/percolator/ConcurrentPercolatorTests.java
src/test/java/org/elasticsearch/percolator/MultiPercolatorTests.java
src/test/java/org/elasticsearch/percolator/PercolatorBackwardsCompatibilityTests.java
src/test/java/org/elasticsearch/percolator/PercolatorFacetsAndAggregationsTests.java
src/test/java/org/elasticsearch/percolator/PercolatorTests.java
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
src/test/java/org/elasticsearch/percolator/TTLPercolatorTests.java
comments:
Core: Added the `index.query.parse.allow_unmapped_fields` setting to fail queries if they refer to unmapped fields.

The percolator and filters in aliases by default enforce strict query parsing.

Closes #7335

time:
2014-09-09T12:57:38Z
class:
comments:
Docs: Update plugins.asciidoc

add search by sql

Closes #7525

time:
2014-09-09T09:09:03Z
class:
src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java
src/test/java/org/elasticsearch/rest/CorsRegexDefaultTests.java
src/test/java/org/elasticsearch/rest/CorsRegexTests.java
comments:
CORS: Disable by default

In order to deliver a more secure out-of-the-box configuration this commit
disables cross-origin resource sharing by default.

Closes #7151

time:
2014-09-08T22:05:22Z
class:
comments:
Docs: make the welcome page more obvious

Closes #17.

time:
2014-09-08T22:04:33Z
class:
comments:
Fix missing line

time:
2014-09-08T21:57:57Z
class:
comments:
Update to Lucene 4.10.0

Closes #20.

time:
2014-09-08T21:51:01Z
class:
comments:
Remove netcdf support

Sadly netcdf library is not Apache2 License compatible so we should not package it anymore.

For users who wants to use it, they can add manually [netcdf librairies](http://www.unidata.ucar.edu/software/thredds/current/netcdf-java/) in `plugins/mapper-attachments` dir and they will get the support back.

Closes #84.

time:
2014-09-08T21:47:15Z
class:
comments:
Update to Lucene 4.10.0

Closes #85.

time:
2014-09-08T21:23:11Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicAnalysisBackwardCompatibilityTests.java
comments:
Quiet BWC analysis test case for now.

See https://issues.apache.org/jira/browse/LUCENE-5927.

time:
2014-09-08T21:20:27Z
class:
comments:
Update to Lucene 4.10.0

Closes #33.

time:
2014-09-08T20:19:24Z
class:
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
comments:
[STORE] Write Snapshots directly to the blobstore stream

Today we serialize the snashot metadata to a byte array and then copy
the byte array to a stream. Instead this commit moves the serialization
directly to the target stream without the intermediate representation.

Closes #7637

time:
2014-09-08T19:27:19Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalOrder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/Terms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/UnmappedTerms.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
Revert "Aggregations: Adds ability to sort on multiple criteria"

This reverts commit bfedd11ffa4c48be0afd91793f491b0a8ff0ef8d.

time:
2014-09-08T19:27:16Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
Revert "[TEST] added @AwaitsFix to failing StringTermsTests while I work on a fix"

This reverts commit 18a713a2ae896e72c5821bf3f6d239ce634d1f52.

time:
2014-09-08T19:21:05Z
class:
comments:
[TESTS]: create directory for heapdumps if not exists

Before the heapdump was either written in a file with the
directory name if the heapdump path ended without / or
not written at all if the path ended with /

closes #7645

time:
2014-09-08T19:10:09Z
class:
src/test/java/org/elasticsearch/test/junit/listeners/ReproduceInfoPrinter.java
comments:
[TEST] Don't print BWC test path - it's different on every machine

time:
2014-09-08T18:46:07Z
class:
src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java
comments:
[Stats] update action returns before updating stats for `NONE` operations

We keep around a noop stats indicating how many update operations ended up not updating the document (typically because it didn't change). However, the TransportUpdateAction update that counter only after returning the result. This can throw off stats check which are done immediately after, potentially causing test failures.

Closes #7639

time:
2014-09-08T18:36:19Z
class:
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/action/SearchServiceTransportAction.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
comments:
[CORE] Unify search context cleanup

Today there are two different ways to cleanup search contexts which can
potentially lead to double releasing of a context. This commit unifies
the methods and prevents double closing.

Closes #7625

time:
2014-09-08T17:43:09Z
class:
comments:
Make .zip and .tar.gz release artifacts contain same files.

This commit changes the build to include .exe and sigar/.dll files in
both the zip and tar artifacts.

Closes #2793

time:
2014-09-08T16:35:47Z
class:
comments:
Update to Lucene 4.10.0

Closes #27.

time:
2014-09-08T16:34:41Z
class:
comments:
Docs: make the welcome page more obvious

Closes #26.

time:
2014-09-08T16:28:02Z
class:
comments:
Update to Lucene 4.10.0

Closes #32.

time:
2014-09-08T16:21:08Z
class:
src/main/java/org/elasticsearch/index/analysis/KuromojiAnalyzerProvider.java
src/main/java/org/elasticsearch/index/analysis/KuromojiPartOfSpeechFilterFactory.java
src/main/java/org/elasticsearch/indices/analysis/KuromojiIndicesAnalysis.java
comments:
Update to Lucene 4.10.0

Closes #44.

time:
2014-09-08T16:11:39Z
class:
comments:
Fix typo

time:
2014-09-08T16:10:16Z
class:
comments:
Update to Lucene 4.10.0

Closes #32.

time:
2014-09-08T16:07:32Z
class:
comments:
Docs: make the welcome page more obvious

Closes #31.

time:
2014-09-08T15:28:12Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
[TEST] added @AwaitsFix to failing StringTermsTests while I work on a fix

time:
2014-09-08T15:17:06Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingOnClusterTests.java
src/test/java/org/elasticsearch/timestamp/SimpleTimestampTests.java
comments:
_timestamp: enable mapper properties merging

Updates on the _timestamp field were silently ignored.
Now _timestamp undergoes the same merge as regular
fields. This includes exceptions if a property cannot
be changed.
"path" and "default" cannot be changed.

closes #5772
closes #6958
closes #7614
partially fixes #777

time:
2014-09-08T14:20:33Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/AbstractStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/DoubleTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/GlobalOrdinalsStringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalOrder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/LongTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/Terms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorFactory.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParametersParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/UnmappedTerms.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DoubleTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/LongTermsTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/StringTermsTests.java
comments:
Aggregations: Adds ability to sort on multiple criteria

The terms aggregation can now support sorting on multiple criteria by replacing the sort object with an array or sort object whose order signifies the priority of the sort. The existing syntax for sorting on a single criteria also still works.

Contributes to #6917

time:
2014-09-08T14:11:50Z
class:
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
comments:
[TESTS] Add explicit mappings to IndexAliasesTests.testSearchingFilteringAliasesSingleIndex

This makes sure that all shards know about the `_uid` field.

time:
2014-09-08T09:50:25Z
class:
src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsTests.java
comments:
[TEST] added debug info to GeoBoundsTests to try to solve build issue

time:
2014-09-08T09:32:55Z
class:
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/action/RejectionActionTests.java
comments:
[SEARCH] Execute search reduce phase on the search threadpool

Reduce Phases can be expensive and some of them like the aggregations
reduce phase might even execute a one-off call via an internal client
that might cause a deadlock due to execution on the network thread
that is needed to handle the one-off call. This commit dispatches
the reduce phase to the search threadpool to ensure we don't wait
for the current thread to be available.

Closes #7623

time:
2014-09-08T09:20:49Z
class:
comments:
Doc: Fixes node client section name on Java API Doc

Closes #7539

time:
2014-09-08T08:55:15Z
class:
src/main/java/org/elasticsearch/index/codec/docvaluesformat/DiskDocValuesFormatProvider.java
src/main/java/org/elasticsearch/index/codec/docvaluesformat/DocValuesFormats.java
src/main/java/org/elasticsearch/index/codec/docvaluesformat/MemoryDocValuesFormatProvider.java
src/main/java/org/elasticsearch/index/codec/postingsformat/BloomFilterLucenePostingsFormatProvider.java
src/main/java/org/elasticsearch/index/codec/postingsformat/DirectPostingsFormatProvider.java
src/main/java/org/elasticsearch/index/codec/postingsformat/MemoryPostingsFormatProvider.java
src/main/java/org/elasticsearch/index/codec/postingsformat/PostingFormats.java
src/main/java/org/elasticsearch/index/codec/postingsformat/PostingsFormatProvider.java
src/main/java/org/elasticsearch/index/codec/postingsformat/PulsingPostingsFormatProvider.java
src/test/java/org/elasticsearch/codecs/CodecTests.java
src/test/java/org/elasticsearch/index/codec/CodecTests.java
src/test/java/org/elasticsearch/index/mapper/merge/TestMergeMapperTests.java
comments:
Core: remove built-in support for Lucene's experimental codecs

Lucene's experimental codecs (from the codecs module) do not provide
backwards compatibility and are free to change from release to
release.  When they do change, they typically cannot in general read
older indices and the resulting exceptions look like index corruption.
So, we are removing built-in support for them to prevent applications
from choosing one and then seeing strange exceptions on upgrade.

Closes #7566

Closes #7604

time:
2014-09-08T08:50:59Z
class:
comments:
Docs: fixed typo

Closes #7544

time:
2014-09-07T09:42:33Z
class:
comments:
Docs: Update regexp-syntax.asciidoc

Closes #7419

time:
2014-09-07T09:41:05Z
class:
comments:
Docs: Clarify that refresh on update just refreshes the relevant shards

time:
2014-09-07T09:39:33Z
class:
comments:
Docs: Update scripting.asciidoc

Clarify that doc[...] does not return objects

Closes #7384

time:
2014-09-07T09:36:52Z
class:
comments:
Docs: Clarify that refresh on get/update/delete just refreshes the relevant shards

Closes #7359

time:
2014-09-07T09:32:05Z
class:
comments:
Docs: Update prefix-query.asciidoc

Typo (missing word)

Closes #7283

time:
2014-09-07T09:30:52Z
class:
comments:
Docs: Adds missing explanation to multi-match

Closes #7281

time:
2014-09-07T09:28:19Z
class:
comments:
Docs: Update span-not-query.asciidoc

The example given does not clearly explain what the query does.

Closes #7049

time:
2014-09-07T09:09:52Z
class:
comments:
Docs: Added explanation of how to do multi-field terms agg

Closes #5100

time:
2014-09-07T06:46:41Z
class:
comments:
Docs: Wrong class name

Was QFilterBuilders, should be FilterBuilders.

Closes #7611

time:
2014-09-07T05:02:32Z
class:
src/main/java/org/elasticsearch/action/ActionRequestValidationException.java
comments:
RestAPI: Change validation exceptions to respond with 400 status instead of 500.

Validation errors are clearly in the realm of client errors (a program
with the request).  Thus they should return a 4xx response code.

closes #7619

time:
2014-09-06T20:07:01Z
class:
src/test/java/org/elasticsearch/common/blobstore/BlobStoreTest.java
comments:
[TEST] Close input stream in test to not upset windows

time:
2014-09-06T18:45:45Z
class:
comments:
Docs: Update cardinality-aggregation.asciidoc

Closes #7516

time:
2014-09-06T11:18:40Z
class:
src/main/java/org/elasticsearch/action/support/ActionFilter.java
src/main/java/org/elasticsearch/action/support/ActionFilterChain.java
src/main/java/org/elasticsearch/action/support/TransportAction.java
src/test/java/org/elasticsearch/action/support/TransportActionFilterChainTests.java
comments:
Extended ActionFilter to also enable filtering the response side

Enables filtering the actions on both sides - request and response. Also added a base class for filter implementations (cleans up filters that only need to filter one side)

Also refactored the filter & filter chain methods to more intuitive names

time:
2014-09-05T20:59:10Z
class:
src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressedStreamOutput.java
comments:
Internal: Change LZFCompressedStreamOutput to use buffer recycler when allocating encoder

closes #7613

time:
2014-09-05T20:30:39Z
class:
src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest.java
src/test/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestTests.java
comments:
RestAPI: Add explicit error when PUT mapping API is given an empty request body.

closes #7536
closes #7618

time:
2014-09-05T19:40:20Z
class:
src/main/java/org/elasticsearch/common/blobstore/BlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/BlobStore.java
src/main/java/org/elasticsearch/common/blobstore/ImmutableBlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/fs/FsBlobStore.java
src/main/java/org/elasticsearch/common/blobstore/fs/FsImmutableBlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/support/AbstractBlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/support/BlobStores.java
src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java
src/main/java/org/elasticsearch/common/blobstore/url/URLBlobStore.java
src/main/java/org/elasticsearch/common/blobstore/url/URLImmutableBlobContainer.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/SlicedInputStream.java
src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
src/main/java/org/elasticsearch/repositories/fs/FsRepository.java
src/main/java/org/elasticsearch/repositories/uri/URLRepository.java
src/main/java/org/elasticsearch/rest/action/cat/RestThreadPoolAction.java
src/main/java/org/elasticsearch/threadpool/ThreadPool.java
src/test/java/org/elasticsearch/common/blobstore/BlobStoreTest.java
src/test/java/org/elasticsearch/index/snapshots/blobstore/SlicedInputStreamTest.java
src/test/java/org/elasticsearch/snapshots/mockstore/BlobContainerWrapper.java
src/test/java/org/elasticsearch/snapshots/mockstore/BlobStoreWrapper.java
src/test/java/org/elasticsearch/snapshots/mockstore/MockRepository.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[STORE] Simplify reading / writing from and to BlobContainer

BlobContainer used to provide async APIs which are not used
internally. The implementation of these APIs are also not async
by nature and neither is any of the pluggable BlobContainers. This
commit simplifies the API to a simple input / output stream and
reduces the hierarchy of BlobContainer dramatically.
NOTE: This is a breaking change!

Closes #7551

time:
2014-09-05T19:22:24Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeLuceneTestCase.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
comments:
[TEST] Allow SingleNodeTest to reset the node if really needed after test

time:
2014-09-05T16:21:08Z
class:
src/main/java/org/apache/lucene/analysis/SimpleAnalyzerWrapper.java
src/main/java/org/apache/lucene/expressions/XSimpleBindings.java
src/main/java/org/apache/lucene/expressions/js/XJavascriptCompiler.java
src/main/java/org/apache/lucene/expressions/js/XJavascriptLexer.java
src/main/java/org/apache/lucene/expressions/js/XJavascriptParser.java
src/main/java/org/apache/lucene/expressions/js/XVariableContext.java
src/main/java/org/apache/lucene/index/XOrdinalMap.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XAnalyzingSuggester.java
src/main/java/org/apache/lucene/search/suggest/analyzing/XFuzzySuggester.java
src/main/java/org/elasticsearch/Version.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchHelper.java
src/main/java/org/elasticsearch/action/termvector/TermVectorFields.java
src/main/java/org/elasticsearch/action/termvector/TermVectorResponse.java
src/main/java/org/elasticsearch/common/Strings.java
src/main/java/org/elasticsearch/common/bytes/BytesArray.java
src/main/java/org/elasticsearch/common/bytes/PagedBytesReference.java
src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
src/main/java/org/elasticsearch/common/lucene/BytesRefs.java
src/main/java/org/elasticsearch/common/lucene/HashedBytesRef.java
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/common/lucene/search/XMoreLikeThis.java
src/main/java/org/elasticsearch/common/util/CollectionUtils.java
src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentParser.java
src/main/java/org/elasticsearch/http/netty/NettyHttpChannel.java
src/main/java/org/elasticsearch/index/analysis/FieldNameAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/NamedAnalyzer.java
src/main/java/org/elasticsearch/index/analysis/StandardHtmlStripAnalyzer.java
src/main/java/org/elasticsearch/index/cache/filter/weighted/WeightedFilterCache.java
src/main/java/org/elasticsearch/index/codec/PerFieldMappingPostingFormatCodec.java
src/main/java/org/elasticsearch/index/codec/docvaluesformat/DiskDocValuesFormatProvider.java
src/main/java/org/elasticsearch/index/codec/docvaluesformat/DocValuesFormats.java
src/main/java/org/elasticsearch/index/engine/Segment.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/fielddata/FieldData.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/IndexNumericFieldData.java
src/main/java/org/elasticsearch/index/fielddata/SortingBinaryDocValues.java
src/main/java/org/elasticsearch/index/fielddata/fieldcomparator/BytesRefFieldComparatorSource.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalMapping.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/GlobalOrdinalsBuilder.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/InternalGlobalOrdinalsIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/ordinals/MultiOrdinals.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractIndexGeoPointFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AbstractIndexOrdinalsFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/AtomicLongFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/BytesBinaryDVAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/FSTBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PackedArrayIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesAtomicFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/PagedBytesIndexFieldData.java
src/main/java/org/elasticsearch/index/fielddata/plain/ParentChildIndexFieldData.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/mapper/Uid.java
src/main/java/org/elasticsearch/index/mapper/core/ByteFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DoubleFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/FloatFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/IntegerFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/LongFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/ShortFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/ip/IpFieldMapper.java
src/main/java/org/elasticsearch/index/merge/policy/ElasticsearchMergePolicy.java
src/main/java/org/elasticsearch/index/merge/policy/LogByteSizeMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/LogDocMergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/MergePolicyProvider.java
src/main/java/org/elasticsearch/index/merge/policy/TieredMergePolicyProvider.java
src/main/java/org/elasticsearch/index/query/CommonTermsQueryParser.java
src/main/java/org/elasticsearch/index/search/child/ParentIdsFilter.java
src/main/java/org/elasticsearch/index/store/DirectoryUtils.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/StoreFileMetaData.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryFileChunkRequest.java
src/main/java/org/elasticsearch/script/expression/ExpressionScript.java
src/main/java/org/elasticsearch/script/expression/ExpressionScriptEngineService.java
src/main/java/org/elasticsearch/search/MultiValueMode.java
src/main/java/org/elasticsearch/search/aggregations/RecordingPerReaderBucketCollector.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/support/IncludeExclude.java
src/main/java/org/elasticsearch/search/aggregations/support/values/ScriptBytesValues.java
src/main/java/org/elasticsearch/search/lookup/CachedPositionIterator.java
src/main/java/org/elasticsearch/search/lookup/TermPosition.java
src/main/java/org/elasticsearch/search/sort/ScriptSortParser.java
src/main/java/org/elasticsearch/search/suggest/SuggestPhase.java
src/main/java/org/elasticsearch/search/suggest/SuggestUtils.java
src/main/java/org/elasticsearch/search/suggest/Suggester.java
src/main/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProvider.java
src/main/java/org/elasticsearch/search/suggest/completion/Completion090PostingsFormat.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggester.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionTokenStream.java
src/main/java/org/elasticsearch/search/suggest/completion/PayloadProcessor.java
src/main/java/org/elasticsearch/search/suggest/context/CategoryContextMapping.java
src/main/java/org/elasticsearch/search/suggest/context/ContextMapping.java
src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java
src/main/java/org/elasticsearch/search/suggest/phrase/Correction.java
src/main/java/org/elasticsearch/search/suggest/phrase/DirectCandidateGenerator.java
src/main/java/org/elasticsearch/search/suggest/phrase/LaplaceScorer.java
src/main/java/org/elasticsearch/search/suggest/phrase/LinearInterpoatingScorer.java
src/main/java/org/elasticsearch/search/suggest/phrase/NoisyChannelSpellChecker.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggester.java
src/main/java/org/elasticsearch/search/suggest/phrase/StupidBackoffScorer.java
src/main/java/org/elasticsearch/search/suggest/phrase/WordScorer.java
src/main/java/org/elasticsearch/search/suggest/term/TermSuggester.java
src/test/java/org/apache/lucene/queries/BlendedTermQueryTest.java
src/test/java/org/apache/lucene/search/postingshighlight/CustomPostingsHighlighterTests.java
src/test/java/org/apache/lucene/search/postingshighlight/XPostingsHighlighterTests.java
src/test/java/org/elasticsearch/VersionTests.java
src/test/java/org/elasticsearch/common/bytes/PagedBytesReferenceTest.java
src/test/java/org/elasticsearch/common/lucene/LuceneTest.java
src/test/java/org/elasticsearch/common/lucene/index/FreqTermsEnumTests.java
src/test/java/org/elasticsearch/common/util/BytesRefHashTests.java
src/test/java/org/elasticsearch/common/util/CollectionUtilsTests.java
src/test/java/org/elasticsearch/deps/lucene/SimpleLuceneTests.java
src/test/java/org/elasticsearch/index/analysis/AnalysisModuleTests.java
src/test/java/org/elasticsearch/index/analysis/StopTokenFilterTests.java
src/test/java/org/elasticsearch/index/codec/CodecTests.java
src/test/java/org/elasticsearch/index/codec/postingformat/DefaultPostingsFormatTests.java
src/test/java/org/elasticsearch/index/fielddata/DuelFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/fieldcomparator/TestReplaceMissing.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/search/suggest/CustomSuggester.java
src/test/java/org/elasticsearch/search/suggest/completion/AnalyzingCompletionLookupProviderV1.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/update/UpdateTests.java
comments:
[Lucene] Upgrade to Lucene 4.10

Closes #7584

time:
2014-09-05T14:54:46Z
class:
src/main/java/org/elasticsearch/common/ContextHolder.java
src/main/java/org/elasticsearch/rest/BaseRestHandler.java
src/main/java/org/elasticsearch/rest/RestRequest.java
src/main/java/org/elasticsearch/transport/TransportMessage.java
src/test/java/org/elasticsearch/rest/FakeRestRequest.java
src/test/java/org/elasticsearch/rest/HeadersCopyClientTests.java
src/test/java/org/elasticsearch/rest/RestRequestTests.java
comments:
Introduced a transient context to the rest request

Similar to the one in `TransportMessage`. Added the `ContextHolder` base class where both `TransportMessage` and `RestRequest` derive from

Now next to the known headers, the context is always copied over from the rest request to the transport request (when the injected client is used)
@uboness are we sure that we want to copy the request context only if there are `usefulHeaders` registered? I think this condition might be wrong now that we copy the context too?

aaaaiiiiiii... good catch!!!!!  we always want to copy the context regardless of the headers

Ok, downside of this is that we will always need to wrap the client, while previously we would do it only if a plugin registered useful headers, empty by default. Do we want to do anything about this? Maybe allow to disable copying the context?


time:
2014-09-05T14:52:23Z
class:
src/main/java/org/elasticsearch/discovery/gce/GceDiscovery.java
comments:
ZenDiscovery constructor needs ElectMasterService instance

Introduced in https://github.com/elasticsearch/elasticsearch/pull/7336 (elasticsearch 1.4 and 2.0), we need to change GceDiscovery constructor.

Closes #35.

time:
2014-09-05T14:46:09Z
class:
src/test/java/org/elasticsearch/repositories/azure/AzureStorageServiceMock.java
comments:
Replace Strings.startsWithIgnoreCase()

`Strings.startsWithIgnoreCase()` has been removed in elasticsearch 1.4 ans master. See https://github.com/elasticsearch/elasticsearch/pull/7428

Closes #35.

time:
2014-09-05T14:45:55Z
class:
src/main/java/org/elasticsearch/discovery/azure/AzureDiscovery.java
comments:
ZenDiscovery constructor needs ElectMasterService instance

Introduced in https://github.com/elasticsearch/elasticsearch/pull/7336 (elasticsearch 1.4 and 2.0), we need to change AzureDiscovery constructor.

Closes #34.

time:
2014-09-05T14:23:38Z
class:
src/main/java/org/elasticsearch/discovery/ec2/Ec2Discovery.java
comments:
ZenDiscovery constructor needs ElectMasterService instance

Introduced in https://github.com/elasticsearch/elasticsearch/pull/7336 (elasticsearch 1.4 and 2.0), we need to change Ec2Discovery constructor.

Closes #115.

time:
2014-09-05T13:01:14Z
class:
src/main/java/org/elasticsearch/client/Client.java
src/main/java/org/elasticsearch/client/transport/TransportClient.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/test/java/org/elasticsearch/client/node/NodeClientTests.java
src/test/java/org/elasticsearch/client/transport/TransportClientTests.java
comments:
TransportClient: Mark transport client as such when instantiating

This allows plugins to load/inject specific classes, when the client started
is a transport client (compared to being a node client).

Closes #7552

time:
2014-09-05T05:42:43Z
class:
src/main/java/org/elasticsearch/action/termvector/MultiTermVectorsRequest.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequest.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequestBuilder.java
src/main/java/org/elasticsearch/action/termvector/TermVectorResponse.java
src/main/java/org/elasticsearch/action/termvector/TermVectorWriter.java
src/main/java/org/elasticsearch/client/Client.java
src/main/java/org/elasticsearch/client/support/AbstractClient.java
src/main/java/org/elasticsearch/index/mapper/ParseContext.java
src/main/java/org/elasticsearch/index/termvectors/ShardTermVectorService.java
src/main/java/org/elasticsearch/rest/action/termvector/RestTermVectorAction.java
src/test/java/org/elasticsearch/action/termvector/GetTermVectorTests.java
comments:
Term Vectors: Support for artificial documents

This adds the ability to the Term Vector API to generate term vectors for
artifical documents, that is for documents not present in the index. Following
a similar syntax to the Percolator API, a new 'doc' parameter is used, instead
of '_id', that specifies the document of interest. The parameters '_index' and
'_type' determine the mapping and therefore analyzers to apply to each value
field.

Closes #7530

time:
2014-09-04T18:14:59Z
class:
src/main/java/org/elasticsearch/common/unit/ByteSizeValue.java
src/main/java/org/elasticsearch/indices/cache/filter/IndicesFilterCache.java
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/test/java/org/elasticsearch/common/util/GuavaCacheOverflowTest.java
comments:
Internal: Upgrade Guava to 18.0.

17.0 and earlier versions were affected by the following bug
https://code.google.com/p/guava-libraries/issues/detail?id=1761
which caused caches that are configured with weights that are greater than
32GB to actually be unbounded. This is now fixed.

Relates to #6268
Close #7593

time:
2014-09-04T14:12:46Z
class:
comments:
Docs: Fixed typo in windows-as-a-service

time:
2014-09-04T14:00:32Z
class:
src/main/java/org/elasticsearch/action/delete/DeleteRequest.java
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/action/indexedscripts/delete/TransportDeleteIndexedScriptAction.java
src/main/java/org/elasticsearch/action/indexedscripts/get/TransportGetIndexedScriptAction.java
src/main/java/org/elasticsearch/action/indexedscripts/put/TransportPutIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/script/RestDeleteIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/script/RestGetIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/script/RestPutIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/template/RestDeleteSearchTemplateAction.java
src/main/java/org/elasticsearch/rest/action/template/RestGetSearchTemplateAction.java
src/main/java/org/elasticsearch/rest/action/template/RestPutSearchTemplateAction.java
src/main/java/org/elasticsearch/script/ScriptService.java
comments:
Indexed scripts: make sure headers are handed over to internal requests and streamline versioning support

The get, put and delete indexed script apis map to get, index and delete api and internally create those corresponding requests. We need to make sure that the original headers are handed over to the new request by passing the original request in the constructor when creating the new one.

Also streamlined the support for version and version_type in the REST layer since the parameters were not consistently parsed and set to the internal java API requests.

Modified the REST delete template and delete script actions to make use of a client instead of using the `ScriptService` directly.

Closes #7569

time:
2014-09-04T13:13:00Z
class:
comments:
Docs: make the welcome page more obvious

Closes #25.

time:
2014-09-04T13:11:28Z
class:
src/main/java/org/elasticsearch/common/collect/ImmutableOpenMap.java
src/main/java/org/elasticsearch/transport/TransportMessage.java
src/test/java/org/elasticsearch/transport/TransportMessageTests.java
comments:
Refactored TransportMessage context

Removed CHM in favour of an OpenHashMap and synchronized accessor/mutator methods. Also, the context is now lazily inititialied (just like we do with the headers)

time:
2014-09-04T13:04:11Z
class:
src/main/java/org/elasticsearch/rest/BaseRestHandler.java
src/test/java/org/elasticsearch/rest/HeadersCopyClientTests.java
comments:
Internal: deduplicate useful headers that get copied from REST to transport requests

The useful headers are now stored into a `Set` instead of an array so we can easily deduplicate them. A set is also returned instead of an array by the `usefulHeaders` static getter.

Relates to #6513

Closes #7590

time:
2014-09-04T09:28:40Z
class:
comments:
Docs: make the welcome page more obvious

 Closes #30.

time:
2014-09-04T09:23:09Z
class:
src/main/java/org/elasticsearch/index/mapper/attachment/AttachmentMapper.java
comments:
parseMultiField() method signature change in es 1.4 and master

 As seen with https://github.com/elasticsearch/elasticsearch/pull/7474, we need to update mapper attachment plugin with this new signature.

 Closes #83.

time:
2014-09-04T09:03:16Z
class:
src/main/java/org/elasticsearch/index/cache/IndexCache.java
src/main/java/org/elasticsearch/index/cache/IndexCacheModule.java
src/main/java/org/elasticsearch/index/cache/docset/DocSetCache.java
src/main/java/org/elasticsearch/index/cache/docset/DocSetCacheModule.java
src/main/java/org/elasticsearch/index/cache/docset/none/NoneDocSetCache.java
src/main/java/org/elasticsearch/index/cache/docset/simple/SimpleDocSetCache.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsContext.java
src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/DocIdSetCollector.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Core: Remove DocSetCache.

This class was unused.

Close #7582

time:
2014-09-04T07:33:00Z
class:
comments:
[docs] fix typo in language analyzer docs

time:
2014-09-04T04:41:57Z
class:
comments:
[Docs] Include EC2 IAM policy example

Closes #112.
Closes #113.

time:
2014-09-04T04:40:27Z
class:
comments:
Update to elasticsearch 1.4.0

Closes #114.

(cherry picked from commit 6c83341)

time:
2014-09-04T04:20:29Z
class:
comments:
[Docs] Fix incorrect eclipse m2e markdown syntax

Closes #7546.

time:
2014-09-03T14:14:07Z
class:
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsAggregator.java
src/test/java/org/elasticsearch/search/aggregations/metrics/GeoBoundsTests.java
comments:
Aggregations: Fixes resize bug in Geo bounds Aggregator

Closes #7556

time:
2014-09-03T13:16:13Z
class:
src/test/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequestTests.java
comments:
[TEST] added test to verify GetIndexedScriptRequest serialization after recent changes

time:
2014-09-03T13:16:13Z
class:
src/test/java/org/elasticsearch/index/query/TemplateQueryTest.java
comments:
[TEST] replaced assert with actual assertions in TemplateQueryTest

time:
2014-09-03T12:25:18Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/BoostFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/boost/BoostMappingIntegrationTests.java
src/test/java/org/elasticsearch/index/mapper/boost/BoostMappingTests.java
comments:
_boost: Fix "index" setting

Serialization if "index" setting for boost did not work since
the serialization was just true/false instead of valid options
"no"/"not_analyzed"/"analyzed".

closes #7557

time:
2014-09-03T12:05:24Z
class:
src/test/java/org/elasticsearch/script/IndexedScriptTests.java
comments:
[TEST] resolved warning in IndexedScriptTests

time:
2014-09-03T10:33:37Z
class:
src/main/java/org/elasticsearch/action/indexedscripts/get/GetIndexedScriptRequest.java
src/main/java/org/elasticsearch/rest/action/script/RestGetIndexedScriptAction.java
src/main/java/org/elasticsearch/rest/action/template/RestGetSearchTemplateAction.java
comments:
Java api: change base class for GetIndexedScriptRequest and improve its javadocs

`GetIndexedScriptRequest` now extends `ActionRequest` instead of `SingleShardOperationRequest`, as the index field that was provided with the previous base class is not needed (hardcoded).

Closes #7553

time:
2014-09-03T09:57:10Z
class:
src/main/java/org/elasticsearch/action/indexedscripts/delete/TransportDeleteIndexedScriptAction.java
src/main/java/org/elasticsearch/action/indexedscripts/get/TransportGetIndexedScriptAction.java
src/main/java/org/elasticsearch/action/indexedscripts/put/TransportPutIndexedScriptAction.java
comments:
Internal: fix members visibility, remove unused constant and needless try catch in indexed scripts transport actions

time:
2014-09-03T09:57:10Z
class:
src/main/java/org/elasticsearch/action/indexedscripts/delete/DeleteIndexedScriptRequest.java
comments:
Java api: remove needless copy constructor from DeleteIndexedScriptRequest

time:
2014-09-03T09:57:10Z
class:
src/main/java/org/elasticsearch/action/support/DelegatingActionListener.java
comments:
Internal: remove unused constructor and adjust methods visibility in DelegatingActionListener

time:
2014-09-03T08:15:35Z
class:
comments:
Packaging: Add default oracle jdk 7 (x64) path in debian init script

On Debian amd64, oracle jdk .deb packages made using make-jpkg (from
java-package) default to /usr/lib/jvm/jdk-7-oracle-x64.

Closes #7312
Is there a reason not to add a path to jdk for java-a-oracle

I don't believe there is a reason not to do that, no.

On Thu, Oct 30, 2014 at 10:49 AM, Keith Lubell notifications@github.com
wrote:

> Is there a reason not to add a path to jdk for java-a-oracle
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/elasticsearch/elasticsearch/commit/4c21db0dcadb2c2bc9df4aed4576586a4b0e1a2b#commitcomment-8369587
> .

@envitraux want to send a PR?

I was not clear. I meant  java-8-oracle. I will send a PR soon.


time:
2014-09-03T07:03:01Z
class:
src/main/java/org/elasticsearch/search/SearchService.java
src/test/java/org/elasticsearch/search/aggregations/AggregationsIntegrationTests.java
comments:
Aggregations: Forbid usage of aggregations in conjunction with search_type=SCAN.

Aggregations are collection-wide statistics, which is incompatible with the
collection mode of search_type=SCAN since it doesn't collect all matches on
calls to the search API.

Close #7429

time:
2014-09-03T07:03:01Z
class:
src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java
src/test/java/org/elasticsearch/search/aggregations/AggregationsIntegrationTests.java
comments:
Aggregations: Only return aggregations on the first page when scrolling.

Aggregations are collection-wide statistics so they would always be the same.
In order to save CPU/bandwidth, we can just return them on the first page.

Same as #1642 but for aggregations.

time:
2014-09-03T06:49:09Z
class:
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
comments:
[Internal] Do not use a background thread to disconnect node which are remove from the ClusterState

After a node fails to respond to a ping correctly (master or node fault detection), they are removed from the cluster state through an UpdateTask. When a node is removed, a background task is scheduled using the generic threadpool to actually disconnect the node. However, in the case of temporary node failures (for example) it may be that the node was re-added by the time the task get executed, causing an untimely disconnect call. Disconnect is cheep and should be done during the UpdateTask.

Closes #7543

time:
2014-09-02T23:22:59Z
class:
src/main/java/org/elasticsearch/index/analysis/Analysis.java
comments:
[Analysis] Add missing docs for latvian analysis

time:
2014-09-02T20:00:44Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
typo s/removeDistruptionSchemeFromNode/removeDisruptionSchemeFromNode

time:
2014-09-02T16:18:19Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/settings/IndexDynamicSettingsModule.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineSettingsTest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
[Engine] Verify checksums on merge

Enable lucene verification of checksums on segments before merging them.
This prevents corruption from existing segments from silently slipping into
newer merged segments.

Closes #7360

time:
2014-09-02T14:50:19Z
class:
src/test/java/org/elasticsearch/gateway/local/RecoveryBackwardsCompatibilityTests.java
comments:
[TEST] Use a large threshold to prevent relocations in RecoveryBackwardsCompatibilityTests

time:
2014-09-02T14:33:40Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineSettingsTest.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
comments:
[TEST] Add simple test to test RT Lucene IW settings

time:
2014-09-02T13:37:07Z
class:
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
comments:
[Tests] ExternalCluster change error message when use local network mode due to wrong system properties

time:
2014-09-02T13:37:07Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalNode.java
comments:
[Tests] add proper error message when BWC client creation fail due to node.local=true  system property

System properties are typically set via the command line and therefore override the node settings. If one has `node.local=true` or `node.mode=local` it can result in cryptic error messages during the test run.

time:
2014-09-02T13:13:51Z
class:
src/main/java/org/elasticsearch/action/index/IndexRequest.java
src/main/java/org/elasticsearch/common/MacAddressProvider.java
src/main/java/org/elasticsearch/common/RandomBasedUUIDGenerator.java
src/main/java/org/elasticsearch/common/SecureRandomHolder.java
src/main/java/org/elasticsearch/common/Strings.java
src/main/java/org/elasticsearch/common/TimeBasedUUIDGenerator.java
src/main/java/org/elasticsearch/common/UUIDGenerator.java
src/test/java/org/elasticsearch/common/UUIDTests.java
comments:
Use Flake IDs instead of random UUIDs when auto-generating id field

Flake IDs give better lookup performance in Lucene since they share
predictable prefixes (timestamp).

Closes #7531

Closes #6004

Closes #5941

time:
2014-09-02T12:49:46Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
comments:
[Tests] add proper error message when BWC test fail due to node.local=true  system property

System properties are typically set via the command line and therefore override the node settings. If one has `node.local=true` or `node.mode=local` it can result in cryptic error messages during the test run.

time:
2014-09-02T11:38:49Z
class:
src/test/java/org/elasticsearch/gateway/local/RecoveryBackwardsCompatibilityTests.java
comments:
[Test] RecoveryBackwardsCompatibilityTests.testReusePeerRecovery used `gateway.recover_after_nodes:3` but may start only a 2 node cluster

time:
2014-09-02T10:40:41Z
class:
comments:
Update reverse-nested-aggregation.asciidoc

Fixed reverse nested example

Closes #7463

time:
2014-09-02T07:38:51Z
class:
src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/DateFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/StringFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/core/TypeParsers.java
src/main/java/org/elasticsearch/index/mapper/geo/GeoPointFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/main/java/org/elasticsearch/index/mapper/object/RootObjectMapper.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/ExternalMapper.java
comments:
Internal: Removing unused methods/parameters.

Close #7474

time:
2014-09-01T20:07:05Z
class:
comments:
fix typo

time:
2014-09-01T19:40:52Z
class:
src/test/java/org/elasticsearch/discovery/ClusterDiscoveryConfiguration.java
comments:
[Test] change the default port base for ClusterDiscoveryConfiguration.UnicastZen to 30000

The previous value of 10000 collided with the standard test cluster ports when 6 or more JVMs are used.

time:
2014-09-01T19:14:30Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[Test] ElasticsearchIntegrationTest.clearDisruptionScheme should test if the current cluster is internal

When running on a non-internal cluster the function is a noop.

time:
2014-09-01T16:34:32Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] remove global scope mention from ElasticsearchIntegrationTest#buildTestCluster

The global cluster gets created from a static block and shared through all tests in the same jvm. The `buildTestCluster` method can't get called passing in `Scope.GLOBAL`, hence removed its mention from it as it might be misleading. The only two scopes supported within the `buildTestCluster` method are `SUITE` and `TEST`.

time:
2014-09-01T14:13:57Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/admin/indices/recovery/TransportRecoveryAction.java
src/main/java/org/elasticsearch/action/bench/BenchmarkService.java
src/main/java/org/elasticsearch/cluster/AckedClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/ClusterService.java
src/main/java/org/elasticsearch/cluster/ClusterState.java
src/main/java/org/elasticsearch/cluster/ClusterStateNonMasterUpdateTask.java
src/main/java/org/elasticsearch/cluster/ClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/ProcessedClusterStateNonMasterUpdateTask.java
src/main/java/org/elasticsearch/cluster/ProcessedClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/TimeoutClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java
src/main/java/org/elasticsearch/cluster/routing/RoutingService.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/discovery/Discovery.java
src/main/java/org/elasticsearch/discovery/DiscoveryService.java
src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscoveryModule.java
src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java
src/main/java/org/elasticsearch/discovery/zen/fd/FaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java
src/main/java/org/elasticsearch/gateway/GatewayService.java
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
src/main/java/org/elasticsearch/transport/TransportService.java
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/local/LocalTransportChannel.java
src/main/java/org/elasticsearch/tribe/TribeService.java
src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
src/test/java/org/elasticsearch/discovery/ClusterDiscoveryConfiguration.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
src/test/java/org/elasticsearch/discovery/ZenUnicastDiscoveryTests.java
src/test/java/org/elasticsearch/discovery/zen/ElectMasterServiceTest.java
src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryRejoinOnMaster.java
src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingTests.java
src/test/java/org/elasticsearch/index/TransportIndexFailuresTest.java
src/test/java/org/elasticsearch/recovery/FullRollingRestartTests.java
src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java
src/test/java/org/elasticsearch/test/BackgroundIndexer.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/SettingsSource.java
src/test/java/org/elasticsearch/test/disruption/LongGCDisruption.java
src/test/java/org/elasticsearch/test/disruption/NetworkDelaysPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkDisconnectPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkUnresponsivePartition.java
src/test/java/org/elasticsearch/test/disruption/NoOpDisruptionScheme.java
src/test/java/org/elasticsearch/test/disruption/ServiceDisruptionScheme.java
src/test/java/org/elasticsearch/test/disruption/SingleNodeDisruption.java
src/test/java/org/elasticsearch/test/disruption/SlowClusterStateProcessing.java
src/test/java/org/elasticsearch/test/transport/MockTransportService.java
comments:
[Discovery] accumulated improvements to ZenDiscovery

Merging the accumulated work from the feautre/improve_zen branch. Here are the highlights of the changes:

__Testing infra__
- Networking:
    - all symmetric partitioning
    - dropping packets
    - hard disconnects
    - Jepsen Tests
- Single node service disruptions:
    - Long GC / Halt
    - Slow cluster state updates
- Discovery settings
    - Easy to setup unicast with partial host list

__Zen Discovery__
- Pinging after master loss (no local elects)
- Fixes the split brain issue: #2488
- Batching join requests
- More resilient joining process (wait on a publish from master)

Closes #7493

time:
2014-09-01T13:57:07Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/action/bench/BenchmarkService.java
src/main/java/org/elasticsearch/cluster/AckedClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/ClusterService.java
src/main/java/org/elasticsearch/cluster/ClusterStateNonMasterUpdateTask.java
src/main/java/org/elasticsearch/cluster/ClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/ProcessedClusterStateNonMasterUpdateTask.java
src/main/java/org/elasticsearch/cluster/ProcessedClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/TimeoutClusterStateUpdateTask.java
src/main/java/org/elasticsearch/cluster/routing/RoutingService.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java
comments:
[Cluster] Refactored ClusterStateUpdateTask protection against execution on a non master

Previous implementation used a marker interface and had no explicit failure call back for the case update task was run on a non master (i.e., the master stepped down after it was submitted). That lead to a couple of instance of checks.

This approach moves ClusterStateUpdateTask from an interface to an abstract class, which allows adding a flag to indicate whether it should only run on master nodes (defaults to true). It also adds an explicit onNoLongerMaster call back to allow different error handling for that case. This also removed the need for the  NoLongerMaster.

Closes #7511

time:
2014-09-01T13:51:26Z
class:
src/main/java/org/elasticsearch/discovery/zen/fd/FaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryRejoinOnMaster.java
src/test/java/org/elasticsearch/index/TransportIndexFailuresTest.java
comments:
[Internal] Extract a common base class for (Master|Nodes)FaultDetection

They share a lot of settings and some logic.

Closes #7512

time:
2014-09-01T13:08:45Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreBackwardCompatibilityTests.java
comments:
[TEST]: remove field_value_factor , was only added 1.2

time:
2014-09-01T10:26:14Z
class:
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreBackwardCompatibilityTests.java
comments:
Tests: wait for yellow instead of green

time:
2014-09-01T10:04:24Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TEST] Unify the randomization logic for number of shards and replicas

We currently have two ways to randomize the number of shards and replicas: random index template, that stays the same for all indices created under the same scope, and the overridable `indexSettings` method, called by `createIndex` and `prepareCreate` which returns different values each time.

Now that the `randomIndexTemplate` method is not static anymore, we can easily apply the same logic to both. Especially for number of replicas, we used to have slightly different behaviours, where more than one replicas were only rarely used through random index template, which gets now applied to the `indexSettings` method too (might speed up the tests a bit)

Side note: `randomIndexTemplate` had its own logic which didn't depend on `numberOfReplicas` or `maximumNumberOfReplicas`, which was causing bw comp tests failures since in some cases too many copies of the data are requested, which cannot be allocated to older nodes, and the write consistency quorum cannot be met, thus indexing times out.

Closes #7522

time:
2014-09-01T09:43:52Z
class:
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingOnClusterTests.java
comments:
fix typo in class name

time:
2014-09-01T09:04:40Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/BoostScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/ScoreFunction.java
src/main/java/org/elasticsearch/common/lucene/search/function/WeightFactorFunction.java
src/main/java/org/elasticsearch/index/query/functionscore/DecayFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/FunctionScoreQueryParser.java
src/main/java/org/elasticsearch/index/query/functionscore/ScoreFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/ScoreFunctionBuilders.java
src/main/java/org/elasticsearch/index/query/functionscore/factor/FactorBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/factor/FactorParser.java
src/main/java/org/elasticsearch/index/query/functionscore/fieldvaluefactor/FieldValueFactorFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/random/RandomScoreFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/script/ScriptScoreFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/weight/WeightBuilder.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreBackwardCompatibilityTests.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScoreTests.java
comments:
function_score: add optional weight parameter per function

Weights can be defined per function like this:

```
"function_score": {
    "functions": [
        {
            "filter": {},
            "FUNCTION": {},
            "weight": number
        }
        ...
```
If `weight` is given without `FUNCTION` then `weight` behaves like `boost_factor`.
This commit deprecates `boost_factor`.

The following is valid:

```
POST testidx/_search
{
  "query": {
    "function_score": {
      "weight": 2
    }
  }
}
POST testidx/_search
{
  "query": {
    "function_score": {
      "functions": [
        {
          "weight": 2
        },
        ...
      ]
    }
  }
}
POST testidx/_search
{
  "query": {
    "function_score": {
      "functions": [
        {
          "FUNCTION": {},
          "weight": 2
        },
        ...
      ]
    }
  }
}
POST testidx/_search
{
  "query": {
    "function_score": {
      "functions": [
        {
          "filter": {},
          "weight": 2
        },
        ...
      ]
    }
  }
}
POST testidx/_search
{
  "query": {
    "function_score": {
      "functions": [
        {
          "filter": {},
          "FUNCTION": {},
          "weight": 2
        },
        ...
      ]
    }
  }
}
```

The following is not valid:

```
POST testidx/_search
{
  "query": {
    "function_score": {
      "weight": 2,
      "FUNCTION(including boost_factor)": 2
    }
  }
}

POST testidx/_search
{
  "query": {
    "function_score": {
      "functions": [
        {
          "weight": 2,
          "boost_factor": 2
        }
      ]
    }
  }
}
````

closes #6955
closes #7137

time:
2014-09-01T08:39:33Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataMappingService.java
src/main/java/org/elasticsearch/index/mapper/DocumentMapper.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/main/java/org/elasticsearch/index/mapper/internal/IndexFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/SizeFieldMapper.java
src/main/java/org/elasticsearch/index/mapper/internal/TimestampFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/index/IndexTypeMapperTests.java
src/test/java/org/elasticsearch/index/mapper/size/SizeMappingIntegrationTests.java
src/test/java/org/elasticsearch/index/mapper/source/DefaultSourceMappingTests.java
src/test/java/org/elasticsearch/index/mapper/timestamp/TimestampMappingTests.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingOnCusterTests.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingTests.java
src/test/java/org/elasticsearch/timestamp/SimpleTimestampTests.java
comments:
mappings: keep parameters in mapping for _timestamp, _index and _size even if disabled

Settings that are not default for _size, _index and _timestamp were only build in
toXContent if these fields were actually enabled.
_timestamp, _index and _size can be dynamically enabled or disabled.
Therfore the settings must be kept, even if the field is disabled.
(Dynamic enabling/disabling was intended, see TimestampFieldMapper.merge(..)
and SizeMappingTests#testThatDisablingWorksWhenMerging
but actually never worked, see below).

To avoid that _timestamp is overwritten by a default mapping
this commit also adds a check to mapping merging if the type is already
in the mapping. In this case the default is not applied anymore.
(see
SimpleTimestampTests#testThatUpdatingMappingShouldNotRemoveTimestampConfiguration)

As a side effect, this fixes
- overwriting of paramters from the _source field by default mappings
  (see DefaultSourceMappingTests).
- dynamic enabling and disabling of _timestamp and _size ()
  (see SimpleTimestampTests#testThatTimestampCanBeSwitchedOnAndOff and
  SizeMappingIntegrationTests#testThatTimestampCanBeSwitchedOnAndOff )

Tests:

Enable UpdateMappingOnClusterTests#test_doc_valuesInvalidMappingOnUpdate again
The missing settings in the mapping for _timestamp, _index and _size caused a the
failure: When creating a mapping which has settings other than default and the
field disabled, still empty field mappings were built from the type mappers.
When creating such a mapping, the mapping source on master and the rest of the cluster
can be out of sync for some time:

1. Master creates the index with source _timestamp:{_store:true}
   mapper classes are in a correct state but source is _timestamp:{}
2. Nodes update mapping and refresh source which then completely misses _timestamp
3. After a while source is refreshed again also on master and the _timestamp:{}
   vanishes there also.

The test UpdateMappingOnCusterTests#test_doc_valuesInvalidMappingOnUpdate failed
because the cluster state was sampled from master between 1. and 3. because the
randomized testing injected a default mapping with disabled _size and _timestamp
fields that have settings which are not default.

The test
TimestampMappingTests#testThatDisablingFieldMapperDoesNotReturnAnyUselessInfo
must be removed because it actualy expected the timestamp to remove
parameters when it was disabled.

closes #7137

time:
2014-09-01T08:26:38Z
class:
src/test/java/org/elasticsearch/index/mapper/xcontent/MapperTestUtils.java
comments:
Update to elasticsearch 1.4

Related to #77

(cherry picked from commit ad1742a)

time:
2014-09-01T08:05:11Z
class:
src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java
comments:
[Rest] Add the cluster name to the "/" endpoint

The root endpoint returns basic information about this node, like it's name and ES version etc. The cluster name is an important information that belongs in that list.

Closes #7524

time:
2014-09-01T07:53:26Z
class:
comments:
update documentation with release 2.3.2

time:
2014-09-01T07:46:13Z
class:
comments:
Docs: fix formula typo in documentation of the gauss decay in function_score

closes #7506

time:
2014-09-01T07:41:57Z
class:
comments:
Unable to extract text from Word documents

With issue #80 we explicitly removed appache POI dependency provided by Tika and replaced with a more recent one.
Sadly we forgot to add this new dependency to the assembly so the final ZIP file does not contain POI related jars.

Closes #82.

(cherry picked from commit 49793d5)

time:
2014-09-01T01:55:03Z
class:
src/main/java/org/elasticsearch/action/suggest/SuggestRequest.java
src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java
src/main/java/org/elasticsearch/search/suggest/SuggestBuilder.java
src/main/java/org/elasticsearch/search/suggest/SuggestBuilderException.java
src/main/java/org/elasticsearch/search/suggest/SuggestBuilders.java
src/test/java/org/elasticsearch/benchmark/search/SuggestSearchBenchMark.java
src/test/java/org/elasticsearch/indices/IndicesOptionsIntegrationTests.java
src/test/java/org/elasticsearch/search/suggest/CompletionSuggestSearchTests.java
src/test/java/org/elasticsearch/search/suggest/ContextSuggestSearchTests.java
src/test/java/org/elasticsearch/search/suggest/SuggestSearchTests.java
comments:
Improved Suggest Client API:

- Added SuggestBuilders (analogous to QueryBuilders)
 - supporting term, phrase, completion and fuzzyCompletion suggestion builders
- Added suggest(SuggestionBuilder) to SuggestRequest
   - previously only suggest(BytesReference) was supported

closes #7435

time:
2014-08-30T16:34:20Z
class:
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
comments:
[Test] make testNoMasterActions more resilient

time:
2014-08-29T21:04:17Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ReverseNestedTests.java
comments:
Aggregations: The nested aggregator should iterate over the child doc ids in ascending order.

The reverse_nested aggregator requires that the emitted doc ids are always in ascending order, which is already enforced on the scorer level,
but this also needs to be enforced on the nested aggrgetor level otherwise incorrect counts are a result.

Closes #7505
Closes #7514

time:
2014-08-29T20:57:23Z
class:
src/main/java/org/elasticsearch/cluster/ClusterState.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
comments:
[Internal] introduce ClusterState.UNKNOWN_VERSION constant

Used as null value for cluster state versions.

time:
2014-08-29T19:33:54Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java
src/test/java/org/elasticsearch/tribe/TribeTests.java
comments:
[Tests] add different node name prefix for the different cluster type

During a test run we have a global shared cluster and potentially a suite level or even a test level cluster running. All of those share the same node name pattern (node_#). This can be confusing if you're debugging discovery related tests where those nodes from the different clusters potentially interact (and reject each other). This commit gives each cluster type a unique prefix to make tracing and log filtering simpler.

Closes #7518

time:
2014-08-29T19:29:48Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Remove unused plugin isolation leftover

time:
2014-08-29T19:29:01Z
class:
src/test/java/org/elasticsearch/gateway/local/SimpleRecoveryLocalGatewayTests.java
comments:
[TEST] Stabelize SimpleRecoveryLocalGatewayTests#testReusePeerRecovery

time:
2014-08-29T15:17:03Z
class:
src/test/java/org/elasticsearch/common/util/BigArraysTests.java
comments:
[TEST] fix off-by-one error in BigArrays tests

Comparisons for the BigArrays breaker use "greater than" instead of
"greater than or equal", which was never an issue before because the
test size was not right on a page boundary. A test with an exactly
divisible page boundary (4mb exactly in this case) caused the sizes to
be equal to, but not exceed, the limit, and never break.

The limit should be smaller than the test increments the breaker anyway.

time:
2014-08-29T15:07:24Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
Add an assertion to ZenDiscovery checking that local node is never elected if pings indicate an active master

time:
2014-08-29T15:03:08Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
[Discovery] Add try/catch around repetitive onSuccess calls

time:
2014-08-29T14:36:43Z
class:
src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/Children.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/Filters.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/GeoHashGridBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/global/GlobalBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/missing/MissingBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNested.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/DateRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/DateRangeBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistance.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistanceBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/IPv4Range.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/IPv4RangeBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/Terms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/MetricsAggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/Avg.java
src/main/java/org/elasticsearch/search/aggregations/metrics/avg/AvgBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/Cardinality.java
src/main/java/org/elasticsearch/search/aggregations/metrics/cardinality/CardinalityBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBounds.java
src/main/java/org/elasticsearch/search/aggregations/metrics/geobounds/GeoBoundsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/Max.java
src/main/java/org/elasticsearch/search/aggregations/metrics/max/MaxBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/Min.java
src/main/java/org/elasticsearch/search/aggregations/metrics/min/MinBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanks.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentileRanksBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/Percentiles.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetric.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/StatsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStats.java
src/main/java/org/elasticsearch/search/aggregations/metrics/stats/extended/ExtendedStatsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/Sum.java
src/main/java/org/elasticsearch/search/aggregations/metrics/sum/SumBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountBuilder.java
comments:
Docs: Add javadocs to the client-side aggregation APIs.

time:
2014-08-29T14:26:41Z
class:
src/main/java/org/elasticsearch/search/highlight/HighlightBuilder.java
comments:
Highlighter Javadocs

time:
2014-08-29T14:26:41Z
class:
src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequest.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/MultiPercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
comments:
Docs: added missing jdocs for the percolate client classes.

Also made constructors were possible package protected
and removed some useless getters in percolator source builder.

time:
2014-08-29T14:26:41Z
class:
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerRequest.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerResponse.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/TransportDeleteWarmerAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersRequest.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/TransportGetWarmersAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/package-info.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerAction.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerRequest.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerRequestBuilder.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerResponse.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java
src/main/java/org/elasticsearch/client/ClusterAdminClient.java
src/main/java/org/elasticsearch/client/IndicesAdminClient.java
comments:
[DOCS] Added JavaDocs for ClusterAdminClient, IndicesAdminClient and Warmer API

time:
2014-08-29T14:26:41Z
class:
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionBuilder.java
src/main/java/org/elasticsearch/search/suggest/completion/CompletionSuggestionFuzzyBuilder.java
comments:
Completion suggestion javadocs

time:
2014-08-29T13:16:22Z
class:
src/main/java/org/elasticsearch/indices/cluster/IndicesClusterStateService.java
src/test/java/org/elasticsearch/search/basic/SearchWithRandomExceptionsTests.java
comments:
[CORE] Don't update indexShard if it has been removed before

Today we have logic that removes a shard from the indexservice if
the shard has changed ie. from replica to primary or if it's recovery
source vanished etc. This can cause shards from been not allocated at
all on a nodes causeing delete requests to timeout since we were waiting
for shards on nodes that got dropped due to a IndexShardMissingException

Closes #7509

time:
2014-08-29T12:41:35Z
class:
src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java
src/test/java/org/elasticsearch/search/suggest/ContextSuggestSearchTests.java
comments:
Suggest API - bugs with encoding multiple levels of geo precision.
1) One issue reported by a user is due to the truncation of the geohash string. Added Junit test for this scenario
2) Another suspect piece of code was the “toAutomaton” method that only merged the first of possibly many precisions into the result.

Closes #7368

time:
2014-08-29T09:57:22Z
class:
comments:
Docs: Replace added[1.4.0] with coming[1.4.0] since 1.4 is not released yet.

time:
2014-08-29T09:43:52Z
class:
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
comments:
[TEST] Fix per-segment / per-commit exclude logic in CorruptFileTest

time:
2014-08-29T08:11:50Z
class:
src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java
comments:
[TEST] add AwaitsFix for testTranslogChecksums since it may cause OOME
if the size is corrupted

time:
2014-08-29T07:46:28Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/discovery/DiscoveryService.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryRejoinOnMaster.java
comments:
[Internal] moved ZenDiscovery setting to use string constants

time:
2014-08-29T07:40:38Z
class:
src/main/java/org/elasticsearch/index/query/FilteredQueryBuilder.java
src/main/java/org/elasticsearch/index/query/QueryBuilders.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
comments:
Client: Make the query builder nullable in filteredQuery.

Close #7398

time:
2014-08-29T07:22:03Z
class:
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
comments:
[TEST] Exclude per commit files rather than only segments_N

When we corrupt a file in the snapshot/restore case we have to corrupt
a per-segment file. The .del file might change with the commit / flush
that is triggered by the snapshot operation.

time:
2014-08-29T07:01:05Z
class:
src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java
src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
comments:
Code style improvement

time:
2014-08-29T06:57:35Z
class:
comments:
[TEST] Port can have more or less than 4 digits

time:
2014-08-28T18:58:34Z
class:
src/main/java/org/elasticsearch/index/cache/IndexCache.java
src/main/java/org/elasticsearch/index/cache/fixedbitset/FixedBitSetFilterCache.java
comments:
Core: Remove the warmer listener when the FixedBitSetFilterCache gets closed.

time:
2014-08-28T14:36:17Z
class:
src/main/java/org/elasticsearch/search/scan/ScanContext.java
comments:
Scan: Use ConcurrentHashMap instead of HashMap, because the readerStates is accessed by multiple threads during the entire scroll session.

Closes #7499
Closes #7478

time:
2014-08-28T14:34:41Z
class:
src/main/java/org/elasticsearch/search/aggregations/AbstractAggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ChildrenBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/FiltersAggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/AbstractRangeBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistanceBuilder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/IPv4RangeBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/MetricsAggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/PercentilesBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsBuilder.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramTests.java
comments:
Aggregations: Encapsulate AggregationBuilder name and make getter public

Close #7425

time:
2014-08-28T14:31:44Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/test/java/org/elasticsearch/script/ScriptIndexSettingsTest.java
comments:
Indexed Scripts/Templates : Change the default auto_expand to 0-all

This commit changes the auto_expand_replicas setting for the ````.scripts```` index to
0-all from 1-all.

time:
2014-08-28T13:54:24Z
class:
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/test/java/org/elasticsearch/script/ScriptIndexSettingsTest.java
comments:
Indexed Scripts/Templates : Fix .script index template.

This commit makes the default number of shards for the .scripts index to ````1````, it also
forces the auto_expand replicas to ````1-all````. This change means that script index GET requests to load
scripts from the index should always use the local copy of the scripts index, preventing any network traffic or calls
on script GET.

time:
2014-08-28T13:35:35Z
class:
src/test/java/org/elasticsearch/action/RejectionActionTests.java
src/test/java/org/elasticsearch/action/bench/BenchmarkIntegrationTest.java
src/test/java/org/elasticsearch/action/bench/BenchmarkNegativeTest.java
src/test/java/org/elasticsearch/cluster/ack/AckClusterUpdateSettingsTests.java
src/test/java/org/elasticsearch/cluster/ack/AckTests.java
src/test/java/org/elasticsearch/cluster/shards/ClusterSearchShardsTests.java
src/test/java/org/elasticsearch/index/query/TemplateQueryTest.java
src/test/java/org/elasticsearch/percolator/RecoveryPercolatorTests.java
src/test/java/org/elasticsearch/script/OnDiskScriptTests.java
src/test/java/org/elasticsearch/search/StressSearchServiceReaperTest.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramOffsetTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/ShardSizeTests.java
comments:
[TEST] apply default settings by calling super.nodeSettings method when providing test specific methods

time:
2014-08-28T13:35:34Z
class:
src/test/java/org/elasticsearch/action/IndicesRequestTests.java
src/test/java/org/elasticsearch/bwcompat/UnicastBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/discovery/ZenUnicastDiscoveryTests.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/ExternalValuesMapperIntegrationTests.java
src/test/java/org/elasticsearch/indices/analysis/PreBuiltAnalyzerIntegrationTests.java
src/test/java/org/elasticsearch/options/jsonp/JsonpOptionDisabledTest.java
src/test/java/org/elasticsearch/options/jsonp/JsonpOptionEnabledTest.java
src/test/java/org/elasticsearch/plugins/PluggableTransportModuleTests.java
src/test/java/org/elasticsearch/plugins/ResponseHeaderPluginTests.java
src/test/java/org/elasticsearch/rest/CorsRegexTests.java
src/test/java/org/elasticsearch/script/ScriptFieldTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/SignificantTermsSignificanceScoreTests.java
src/test/java/org/elasticsearch/search/functionscore/FunctionScorePluginTests.java
src/test/java/org/elasticsearch/search/highlight/CustomHighlighterSearchTests.java
src/test/java/org/elasticsearch/search/suggest/CustomSuggesterSearchTests.java
src/test/java/org/elasticsearch/test/transport/NettyTransportTests.java
src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java
src/test/java/org/elasticsearch/update/UpdateByNativeScriptTests.java
comments:
[TEST] make default settings don't override test specific settings

time:
2014-08-28T13:35:34Z
class:
src/test/java/org/elasticsearch/test/ExternalNode.java
comments:
[TEST] apply default settings before test specific ones to external nodes in bw comp tests, otherwise the defaults win all the time

time:
2014-08-28T12:51:10Z
class:
comments:
test: write heap dump to log folder

Per default the heap dump is written to target/JX/pidXYZ.hprof
In order to keep them when a new test is is started, they
should be written to log folder which is not cleared in a new
test run.
Heap dump location can be set with -Dtests.heapdump.path=/path/to/heapdump

closes #7452

time:
2014-08-28T12:20:32Z
class:
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java
src/main/java/org/elasticsearch/cluster/metadata/IndexMetaData.java
src/test/java/org/elasticsearch/action/admin/indices/CreateIndexTests.java
src/test/java/org/elasticsearch/action/admin/indices/create/CreateIndexTests.java
comments:
Validate create index requests' number of primary/replica shards

Fixes #7495

time:
2014-08-28T10:35:56Z
class:
src/main/java/org/elasticsearch/common/network/NetworkUtils.java
comments:
[CORE] Make network interface iteration order consistent

Today the iteration order of the interfaces might change across JVMs
this commit cleans up the NetworkUtils class and attempts to ensure
consistent iteration order across JVMs.
FYI you could have used `Collections.list(intfs)` instead to avoid dealing with this crappy Enumeration interface :)

good call I will do another round of refactoring soong


time:
2014-08-28T10:31:47Z
class:
src/test/java/org/elasticsearch/search/functionscore/RandomScoreFunctionTests.java
comments:
[TEST] Fix RandomScoreFunctionTests#testConsistentHitsWithSameSeed

time:
2014-08-28T10:13:05Z
class:
src/test/java/org/elasticsearch/test/ExternalNode.java
comments:
[Tests] add a debug logging message when starting an external node

time:
2014-08-28T09:49:30Z
class:
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
comments:
Test: Increase the ping timeout to avoid that a candidate master node makes the decision to elect itself too soon.

time:
2014-08-28T09:20:33Z
class:
src/test/java/org/elasticsearch/snapshots/SnapshotBackwardsCompatibilityTest.java
comments:
[TEST] only expand to 1 replica in SnapshotBackwardsCompatibilityTest

time:
2014-08-28T07:18:39Z
class:
src/test/java/org/apache/lucene/util/AbstractRandomizedTest.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java
src/test/java/org/elasticsearch/tribe/TribeTests.java
comments:
[TEST] use a dedicated port range per test JVM

For reliability and debug purposes each test JVM should use it's own
TCP port range if executed in parallel. This also moves away from the
default port range to prevent conflicts with running ES instance on the local
machine.

time:
2014-08-28T06:57:12Z
class:
comments:
Spelling error of aggregation

time:
2014-08-28T00:01:01Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunction.java
src/main/java/org/elasticsearch/index/query/functionscore/random/RandomScoreFunctionParser.java
src/test/java/org/elasticsearch/search/functionscore/RandomScoreFunctionTests.java
comments:
FunctionScore: Fixed RandomScoreFunction to guard against _uid field not existing.

Also added a test case to check the random score works with queries on
an empty index.

time:
2014-08-27T19:33:40Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/test/java/org/elasticsearch/snapshots/SnapshotBackwardsCompatibilityTest.java
comments:
[SNAPSHOT] Ensure BWC layer can read chunked blobs

time:
2014-08-27T19:28:36Z
class:
src/main/java/org/elasticsearch/index/cache/IndexCache.java
src/main/java/org/elasticsearch/index/cache/IndexCacheModule.java
src/main/java/org/elasticsearch/index/cache/fixedbitset/FixedBitSetFilter.java
src/main/java/org/elasticsearch/index/cache/fixedbitset/FixedBitSetFilterCache.java
src/main/java/org/elasticsearch/index/cache/fixedbitset/FixedBitSetFilterCacheModule.java
src/main/java/org/elasticsearch/index/cache/fixedbitset/ShardFixedBitSetFilterCache.java
src/main/java/org/elasticsearch/index/cache/fixedbitset/ShardFixedBitSetFilterCacheModule.java
src/main/java/org/elasticsearch/index/engine/SegmentsStats.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldData.java
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/main/java/org/elasticsearch/index/query/NestedFilterParser.java
src/main/java/org/elasticsearch/index/query/NestedQueryParser.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java
src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java
src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
src/main/java/org/elasticsearch/index/service/IndexService.java
src/main/java/org/elasticsearch/index/service/InternalIndexService.java
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/index/shard/service/InternalIndexShard.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
src/main/java/org/elasticsearch/search/aggregations/bucket/children/ParentToChildrenAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsContext.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/main/java/org/elasticsearch/search/sort/GeoDistanceSortParser.java
src/main/java/org/elasticsearch/search/sort/ScriptSortParser.java
src/main/java/org/elasticsearch/search/sort/SortParseElement.java
src/test/java/org/elasticsearch/index/cache/fixedbitset/FixedBitSetFilterCacheTest.java
src/test/java/org/elasticsearch/index/fielddata/AbstractFieldDataTests.java
src/test/java/org/elasticsearch/index/fielddata/AbstractStringFieldDataTests.java
src/test/java/org/elasticsearch/index/search/child/AbstractChildTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ChildrenQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentConstantScoreQueryTests.java
src/test/java/org/elasticsearch/index/search/child/ParentQueryTests.java
src/test/java/org/elasticsearch/index/search/child/TopChildrenQueryTests.java
src/test/java/org/elasticsearch/index/search/nested/AbstractNumberNestedSortingTests.java
src/test/java/org/elasticsearch/index/search/nested/DoubleNestedSortingTests.java
src/test/java/org/elasticsearch/index/search/nested/FloatNestedSortingTests.java
src/test/java/org/elasticsearch/index/search/nested/NestedSortingTests.java
src/test/java/org/elasticsearch/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/test/ExternalTestCluster.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Introduced FixedBitSetFilterCache that guarantees to produce a FixedBitSet and does evict based on size or time.
Only when segments are merged away due to merging then entries in this cache are cleaned up.

Nested and parent/child rely on the fact that type filters produce a FixedBitSet, the FixedBitSetFilterCache does this.
Also if nested and parent/child is configured the type filters are eagerly loaded by default via the FixedBitSetFilterCache.

Closes #7037
Closes #7031

time:
2014-08-27T18:24:27Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java
src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java
src/main/java/org/elasticsearch/cluster/ClusterState.java
src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/membership/MembershipAction.java
src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java
src/test/java/org/elasticsearch/cluster/serialization/ClusterSerializationTests.java
comments:
[Internal] user node's cluster name as a default for an incoming cluster state who misses it

ClusterState has a reference to the cluster name since version 1.1.0 (df7474b9fcf849bbfea4222c1d2aa58b6669e52a) . However, if the state was  sent from a master of an older version, this name can be set to null. This is an unexpected and can cause bugs. The bad part is that it will never correct it self until a full cluster restart where the cluster state is rebuilt using the code of the latest version.

This commit changes the default to the node's cluster name.

Relates to #7386

Closes #7414

time:
2014-08-27T18:14:45Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/test/ExternalNode.java
comments:
[Tests] change BasicBackwardsCompatibilityTest to be compatible with 1.0.3

Also increase the time we wait for an external node to join
Sadly tests are not yet stable enough, testing with 1.0.3 is still disabled

time:
2014-08-27T15:37:25Z
class:
src/main/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunction.java
src/main/java/org/elasticsearch/index/query/functionscore/ScoreFunctionBuilders.java
src/main/java/org/elasticsearch/index/query/functionscore/random/RandomScoreFunctionBuilder.java
src/main/java/org/elasticsearch/index/query/functionscore/random/RandomScoreFunctionParser.java
src/test/java/org/elasticsearch/common/lucene/search/function/RandomScoreFunctionTests.java
src/test/java/org/elasticsearch/search/functionscore/RandomScoreFunctionTests.java
comments:
FunctionScore: Refactor RandomScoreFunction to be consistent, and return values in rang [0.0, 1.0]

RandomScoreFunction previously relied on the order the documents were
iterated in from Lucene. This caused changes in ordering, with the same
seed, if documents moved to different segments. With this change, a
murmur32 hash of the _uid for each document is used as the "random"
value. Also, the hash is adjusted so as to only return values between
0.0 and 1.0 to enable easier manipulation to fit into users' scoring
models.

closes #6907, #7446

time:
2014-08-27T15:04:14Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
Test: Allow global test cluster to have configurable settings source

This allows to reuse the global test cluster with specific configurations,
which is useful in plugins.

time:
2014-08-27T13:47:42Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscoveryModule.java
src/main/java/org/elasticsearch/discovery/zen/elect/ElectMasterService.java
src/main/java/org/elasticsearch/discovery/zen/ping/ZenPingService.java
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/discovery/zen/ElectMasterServiceTest.java
src/test/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPingTests.java
comments:
[Discovery] UnicastZenPing should also ping last known discoNodes

At the moment, when a node looses connection to the master (due to a partition or the master was stopped), we ping the unicast hosts in order to discover other nodes and elect a new master or get of another master than has been elected in the mean time. This can go wrong if all unicast targets are on the same side of a minority partition and therefore will never rejoin once the partition is healed.

Closes #7336

time:
2014-08-27T13:47:41Z
class:
src/main/java/org/elasticsearch/discovery/zen/publish/PublishClusterStateAction.java
comments:
[Discovery] add a debug log if a node responds to a publish request after publishing timed out.

time:
2014-08-27T13:47:41Z
class:
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
comments:
[TEST] Adapt testNoMasterActions since metadata isn't cleared if there is a no master block

time:
2014-08-27T13:47:41Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
comments:
[TEST] Changed action names.

time:
2014-08-27T13:47:41Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
comments:
[TEST] Remove the forceful `network.mode` setting in  DiscoveryWithServiceDisruptions#testMasterNodeGCs now local transport use worker threads.

time:
2014-08-27T13:47:40Z
class:
src/main/java/org/elasticsearch/transport/local/LocalTransport.java
src/main/java/org/elasticsearch/transport/local/LocalTransportChannel.java
comments:
[Transport] Introduced worker threads to prevent alien threads of entering a node.

Requests are handled by the worked thread pool of the target node instead of the generic thread pool of the source node.
Also this change is required in order to make GC disruption work with local transport. Previously the handling of the a request was performed on on a node that that was being GC disrupted, resulting in some actions being performed while GC was being simulated.

time:
2014-08-27T13:47:40Z
class:
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
comments:
Typo: s/Recieved/Received

time:
2014-08-27T13:47:40Z
class:
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
comments:
[TEST] Make sure all shards are allocated before killing a random data node.

time:
2014-08-27T13:47:40Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
comments:
[Discovery] Added cluster version and master node to the nodes fault detecting ping request

The cluster state version allows resolving the case where a old master node become unresponsive and later wakes up and pings all the nodes in the cluster, allowing the newly elected master to decide whether it should step down or ask the old master to rejoin.

time:
2014-08-27T13:47:40Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/discovery/ClusterDiscoveryConfiguration.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithServiceDisruptions.java
src/test/java/org/elasticsearch/test/disruption/LongGCDisruption.java
comments:
[TEST] Added LongGCDisruption and a test simulating GC on master nodes
Also rename DiscoveryWithNetworkFailuresTests to DiscoveryWithServiceDisruptions which better suites what we do.

time:
2014-08-27T13:47:39Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
comments:
[Discovery] Master fault detection and nodes fault detection should take cluster name into account.

Both master fault detection and nodes fault detection request should also send the cluster name, so that on the receiving side the handling of these requests can be failed with an error. This error can be caught on the sending side and for master fault detection the node can fail the master locally and for nodes fault detection the node can be failed.

Note this validation will most likely never fail in a production cluster, but in during automated tests where cluster / nodes are created and destroyed very frequently.

time:
2014-08-27T13:47:39Z
class:
src/main/java/org/elasticsearch/action/admin/indices/recovery/TransportRecoveryAction.java
src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryRejoinOnMaster.java
comments:
[TEST] Added test that verifies that no shard relocations happen during / after a master re-election.

time:
2014-08-27T13:47:39Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
[Discovery] Made the handeling of the join request batch oriented.

In large clusters when a new elected master is chosen, there are many join requests to handle. By batching them up the the cluster state doesn't get published for each individual join request, but many handled at the same time, which results into a single new cluster state which ends up be published.

Closes #6984

time:
2014-08-27T13:47:39Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
retry logic to unwrap exception to check for illegal state
it probably comes wrapped in a remote exception, which we should unwrap in order to detect it..., also, simplified a bit the retry logic

time:
2014-08-27T13:47:38Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/test/transport/MockTransportService.java
comments:
[Discovery] verify we have a master after a successful join request

After master election, nodes send join requests to the elected master. Master is then responsible for publishing a new cluster state which sets the master on the local node's cluster state. If something goes wrong with the cluster state publishing, this process will not successfully complete. We should check it after the join request returns and if it failed, retry pinging.

Closes #6969

time:
2014-08-27T13:47:38Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
[Discovery] join master after first election

Currently, pinging results are only used if the local node is elected master or if they detect another *already* active master. This has the effect that master election requires two pinging rounds - one for the elected master to take is role and another for the other nodes to detect it and join the cluster. We can be smarter and use the election of the first round on other nodes as well. Those nodes can try to join the elected master immediately. There is a catch though - the elected master node may still be processing the election and may reject the join request if not ready yet. To compensate a retry mechanism is introduced to try again (up to 3 times by default) if this happens.

Closes #6943

time:
2014-08-27T13:47:38Z
class:
src/test/java/org/elasticsearch/test/disruption/SlowClusterStateProcessing.java
comments:
[Tests] Fixed some issues with SlowClusterStateProcessing

Reduced expected time to heal to 0 (we interrupt and wait on stop disruption). It was also  wrongly indicated in seconds.
We didn't properly wait between slow cluster state tasks

time:
2014-08-27T13:47:38Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
Discovery: Don't include local node to pingMasters list. We might end up electing ourselves without any form of verification.

time:
2014-08-27T13:47:37Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
Discovery: Only add local node to possibleMasterNodes if it is a master node.

time:
2014-08-27T13:47:37Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/discovery/ClusterDiscoveryConfiguration.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
Discovery: If not enough possible masters are found, but there are masters to ping (ping responses did include master node) then these nodes should be resolved.

After the findMaster() call we try to connect to the node and if it isn't the master we start looking for a new master via pinging again.

Closes #6904

time:
2014-08-27T13:47:37Z
class:
src/main/java/org/elasticsearch/indices/store/IndicesStore.java
comments:
[Store] migrate non-allocated shard deletion to use ClusterStateNonMasterUpdateTask

time:
2014-08-27T13:47:30Z
class:
src/main/java/org/elasticsearch/discovery/zen/ping/unicast/UnicastZenPing.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[Tests] stability improvements

added explicit cleaning of temp unicast ping results
reduce gateway local.list_timeout to 10s.
testVerifyApiBlocksDuringPartition: verify master node has stepped down before restoring partition

time:
2014-08-27T13:47:23Z
class:
src/test/java/org/elasticsearch/discovery/ClusterDiscoveryConfiguration.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/discovery/ZenUnicastDiscoveryTests.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/SettingsSource.java
comments:
[Tests] Introduced ClusterDiscoveryConfiguration

Closes #6890

time:
2014-08-27T13:47:23Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
Remove unneeded reference to DiscoveryService which potentially causes circular references

time:
2014-08-27T13:47:23Z
class:
src/main/java/org/elasticsearch/cluster/routing/RoutingService.java
comments:
[logging] don't log an error if scheduled reroute is rejected because local node is no longer master

Since it runs in a background thread after a node is added, or submits a cluster state update when a node leaves, it may be that by the time it is executed the local node is no longer master.

time:
2014-08-27T13:47:23Z
class:
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
comments:
[Internal] Migrate new initial state cluster update task to a ClusterStateNonMasterUpdateTask

time:
2014-08-27T13:47:22Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[Tests] Increase timeout when waiting for partitions to heal

the current 30s addition is tricky because we use 30s as timeout in many places...

time:
2014-08-27T13:47:22Z
class:
src/test/java/org/elasticsearch/test/disruption/NetworkPartition.java
comments:
[Tests] Don't log about restoring a partition if the partition is not active.

time:
2014-08-27T13:47:22Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[Tests] Use local gateway

This is important to for proper primary allocation decisions

time:
2014-08-27T13:47:22Z
class:
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
comments:
[Discovery] Start master fault detection after pingInterval

This is to allow the master election to complete on the chosen master.

 Relates to #6706

time:
2014-08-27T13:47:22Z
class:
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
comments:
[Discovery] immediately start Master|Node fault detection pinging

After a node joins the clusters, it starts pinging the master to verify it's health. Before, the cluster join request was processed async and we had to give some time to complete. With  #6480 we changed this to wait for the join process to complete on the master. We can therefore start pinging immediately for fast detection of failures. Similar change can be made to the Node fault detection from the master side.

Closes #6706

time:
2014-08-27T13:47:21Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[Test] testVerifyApiBlocksDuringPartition - wait for stable cluster after partition

time:
2014-08-27T13:47:21Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] Properly clear the disruption schemes after test completed.

time:
2014-08-27T13:47:21Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[Tests] improved automatic disruption healing after tests

time:
2014-08-27T13:47:21Z
class:
src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java
src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/disruption/NetworkPartition.java
comments:
Added java docs to all tests in DiscoveryWithNetworkFailuresTests

Moved testVerifyApiBlocksDuringPartition to test blocks rather then rely on specific API rejections.
Did some cleaning while at it.

time:
2014-08-27T13:47:20Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[TEST] Make sure get request is always local

time:
2014-08-27T13:47:20Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[TEST] Verify no master block during partition for read and write apis

time:
2014-08-27T13:47:20Z
class:
src/main/java/org/elasticsearch/cluster/settings/ClusterDynamicSettingsModule.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/discovery/zen/ZenDiscoveryRejoinOnMaster.java
comments:
[TEST] Added test to verify if 'discovery.zen.rejoin_on_master_gone' is updatable at runtime.

time:
2014-08-27T13:47:20Z
class:
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
comments:
Fixed compilation issue caused by the lack of a thread pool name

time:
2014-08-27T13:47:20Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[Tests] Disabling testAckedIndexing

The test is currently unstable and needs some more work

time:
2014-08-27T13:47:19Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[Test] ensureStableCluster failed to pass viaNode parameter correctly

Also improved timeouts & logs

time:
2014-08-27T13:47:19Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/disruption/NetworkDelaysPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkDisconnectPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkUnresponsivePartition.java
src/test/java/org/elasticsearch/test/disruption/NoOpDisruptionScheme.java
src/test/java/org/elasticsearch/test/disruption/ServiceDisruptionScheme.java
src/test/java/org/elasticsearch/test/disruption/SingleNodeDisruption.java
src/test/java/org/elasticsearch/test/disruption/SlowClusterStateProcessing.java
comments:
[TEST] Renamed afterDistribution timeout to expectedTimeToHeal
Accumulate expected shard failures to log later

time:
2014-08-27T13:47:19Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/test/disruption/NetworkDelaysPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkPartition.java
src/test/java/org/elasticsearch/test/disruption/NoOpDisruptionScheme.java
src/test/java/org/elasticsearch/test/disruption/ServiceDisruptionScheme.java
src/test/java/org/elasticsearch/test/disruption/SingleNodeDisruption.java
src/test/java/org/elasticsearch/test/transport/MockTransportService.java
comments:
[TEST] Reduced failures in DiscoveryWithNetworkFailuresTests#testAckedIndexing test:
* waiting time should be long enough depending on the type of the disruption scheme
* MockTransportService#addUnresponsiveRule if remaining delay is smaller than 0 don't double execute transport logic

time:
2014-08-27T13:47:19Z
class:
src/test/java/org/elasticsearch/test/disruption/SlowClusterStateProcessing.java
comments:
[TEST] Check if worker if null to prevent NPE on double stopping

time:
2014-08-27T13:47:14Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/transport/TransportService.java
src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/recovery/RecoveryWhileUnderLoadTests.java
src/test/java/org/elasticsearch/test/BackgroundIndexer.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestCluster.java
src/test/java/org/elasticsearch/test/disruption/NetworkDelaysPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkDisconnectPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkPartition.java
src/test/java/org/elasticsearch/test/disruption/NetworkUnresponsivePartition.java
src/test/java/org/elasticsearch/test/disruption/NoOpDisruptionScheme.java
src/test/java/org/elasticsearch/test/disruption/ServiceDisruptionScheme.java
src/test/java/org/elasticsearch/test/disruption/SingleNodeDisruption.java
src/test/java/org/elasticsearch/test/disruption/SlowClusterStateProcessing.java
src/test/java/org/elasticsearch/test/transport/MockTransportService.java
comments:
[Tests] Added ServiceDisruptionScheme(s) and testAckedIndexing

This commit adds the notion of ServiceDisruptionScheme allowing for introducing disruptions in our test cluster. This
abstraction as used in a couple of wrappers around the functionality offered by MockTransportService to simulate various
network partions. There is also one implementation for causing a node to be slow in processing cluster state updates.

This new mechnaism is integrated into existing tests DiscoveryWithNetworkFailuresTests.

A new test called testAckedIndexing is added to verify retrieval of documents whose indexing was acked during various disruptions.

Closes #6505
typo s/removeDistruptionSchemeFromNode/removeDisruptionSchemeFromNode


time:
2014-08-27T13:47:13Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
[Discovery] when master is gone, flush all pending cluster states

If the master FD flags master as gone while there are still pending cluster states, the processing of those cluster states we re-instate that node a master again.

Closes #6526

time:
2014-08-27T13:47:09Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
[Discovery] Improved logging when a join request is not executed because local node is no longer master

time:
2014-08-27T13:47:05Z
class:
src/main/java/org/elasticsearch/discovery/zen/fd/MasterFaultDetection.java
src/main/java/org/elasticsearch/discovery/zen/fd/NodesFaultDetection.java
src/test/java/org/elasticsearch/discovery/ZenFaultDetectionTests.java
comments:
[Discovery] Change (Master|Nodes)FaultDetection's connect_on_network_disconnect default to false

The previous default was true, which means that after a node disconnected event we try to connect to it as an extra validation. This can result in slow detection of network partitions if the extra reconnect times out before failure.

Also added tests to verify the settings' behaviour

time:
2014-08-27T13:46:51Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[Test]  testIsolateMasterAndVerifyClusterStateConsensus didn't wait on initializing shards before comparing cluster states

time:
2014-08-27T13:46:51Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[TEST] Remove 'index.routing.allocation.total_shards_per_node' setting in data consistency test

time:
2014-08-27T13:46:50Z
class:
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[Discovery] do not use versions to optimize cluster state copying for a first update from a new master

We have an optimization which compares routing/meta data version of cluster states and tries to reuse the current object if the versions are equal. This can cause rare failures during recovery from a minimum_master_node breach when using the "new light rejoin" mechanism and simulated network disconnects. This happens where the current master updates it's state, doesn't manage to broadcast it to other nodes due to the disconnect and then steps down. The new master will start with a previous version and continue to update it. When the old master rejoins, the versions of it's state can equal but the content is different.

Also improved DiscoveryWithNetworkFailuresTests to simulate this failure (and other improvements)

Closes #6466

time:
2014-08-27T13:46:46Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
[Discovery] Made 'discovery.zen.rejoin_on_master_gone' setting updatable at runtime.

time:
2014-08-27T13:46:39Z
class:
src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
comments:
[Discovery] Removed METADATA block

time:
2014-08-27T13:46:39Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[TEST] Added test that exposes a shard consistency problem when isolated node(s) rejoin the cluster after network segmentation and when the elected master node ended up on the lesser side of the network segmentation.

time:
2014-08-27T13:46:39Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[TEST] Make sure there no initializing shards when network partition is simulated

time:
2014-08-27T13:46:39Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[TEST] Added test that verifies data integrity during and after a simulated network split.

time:
2014-08-27T13:46:38Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[TEST] It may take a little bit before the unlucky node deals with the fact the master left

time:
2014-08-27T13:46:38Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java
src/main/java/org/elasticsearch/cluster/ClusterService.java
src/main/java/org/elasticsearch/cluster/ClusterStateNonMasterUpdateTask.java
src/main/java/org/elasticsearch/cluster/ProcessedClusterStateNonMasterUpdateTask.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/tribe/TribeService.java
src/test/java/org/elasticsearch/cluster/ClusterServiceTests.java
comments:
[Internal] Do not execute cluster state changes if current node is no longer master

When a node steps down from being a master (because, for example, min_master_node is breached), it may still have
cluster state update tasks queued up. Most (but not all) are tasks that should no longer be executed as the node
no longer has authority to do so. Other cluster states updates, like electing the current node as master, should be
executed even if the current node is no longer master.

This commit make sure that, by default, `ClusterStateUpdateTask` is not executed if the node is no longer master. Tasks
that should run on non masters are changed to implement a new interface called `ClusterStateNonMasterUpdateTask`

Closes #6230

time:
2014-08-27T13:46:27Z
class:
src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
comments:
Updated to use ClusterBlocks new constructor signature

Introduced with: 11a3201a092ed6c5d31516ae4b30dbb618ba348c

time:
2014-08-27T13:46:23Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/recovery/FullRollingRestartTests.java
comments:
[Discovery] Eagerly clean the routing table of shards that exist on nodes that are not in the latestDiscoNodes list.

Only the previous master node has been removed, so only shards allocated to that node will get failed.
This would have happened anyhow on later on when AllocationService#reroute is invoked (for example when a cluster setting changes or another cluster event),
but by cleaning the routing table pro-actively, the stale routing table is fixed sooner and therefor the shards
that are not accessible anyhow (because the node these shards were on has left the cluster) will get re-assigned sooner.

time:
2014-08-27T13:46:23Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
comments:
[Discovery] If available newly elected master node should take over previous known nodes.

time:
2014-08-27T13:46:14Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
src/test/java/org/elasticsearch/recovery/FullRollingRestartTests.java
comments:
[Discovery] Changed the default for the 'rejoin_on_master_gone' option from false to true in zen discovery.

Added AwaitFix for the FullRollingRestartTests.

time:
2014-08-27T13:46:10Z
class:
src/test/java/org/elasticsearch/discovery/DiscoveryWithNetworkFailuresTests.java
comments:
[Discovery] Enable `discovery.zen.rejoin_on_master_gone` setting in DiscoveryWithNetworkFailuresTests only.

time:
2014-08-27T13:45:34Z
class:
src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
comments:
[Discovery] Make noMasterBlock configurable and added simple test that shows reads do execute (partially) when m_m_n isn't met

time:
2014-08-27T13:45:25Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
comments:
[Discovery] add rejoin on master gone flag, defaults to false

defaults to false since there is still work left to properly make it work

time:
2014-08-27T13:45:10Z
class:
src/main/java/org/elasticsearch/cluster/block/ClusterBlocks.java
src/main/java/org/elasticsearch/cluster/service/InternalClusterService.java
src/main/java/org/elasticsearch/discovery/Discovery.java
src/main/java/org/elasticsearch/discovery/DiscoveryService.java
src/main/java/org/elasticsearch/discovery/DiscoverySettings.java
src/main/java/org/elasticsearch/discovery/local/LocalDiscovery.java
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/gateway/GatewayService.java
src/main/java/org/elasticsearch/tribe/TribeService.java
src/test/java/org/elasticsearch/cluster/MinimumMasterNodesTests.java
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
comments:
[Internal] make no master lock an instance var so it can be configured

time:
2014-08-27T13:45:02Z
class:
src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java
src/main/java/org/elasticsearch/gateway/GatewayService.java
comments:
[Discovery] lightweight minimum master node recovery
don't perform full recovery when minimum master nodes are not met, keep the state around and use it once elected as master

time:
2014-08-27T13:18:17Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamInput.java
src/main/java/org/elasticsearch/index/translog/BufferedChecksumStreamOutput.java
src/main/java/org/elasticsearch/index/translog/ChecksummedTranslogStream.java
src/main/java/org/elasticsearch/index/translog/LegacyTranslogStream.java
src/main/java/org/elasticsearch/index/translog/Translog.java
src/main/java/org/elasticsearch/index/translog/TranslogCorruptedException.java
src/main/java/org/elasticsearch/index/translog/TranslogStream.java
src/main/java/org/elasticsearch/index/translog/TranslogStreams.java
src/main/java/org/elasticsearch/index/translog/fs/BufferingFsTranslogFile.java
src/main/java/org/elasticsearch/index/translog/fs/FsChannelSnapshot.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslog.java
src/main/java/org/elasticsearch/index/translog/fs/FsTranslogFile.java
src/main/java/org/elasticsearch/index/translog/fs/SimpleFsTranslogFile.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
src/main/java/org/elasticsearch/indices/recovery/RecoveryTranslogOperationsRequest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/store/CorruptedTranslogTests.java
src/test/java/org/elasticsearch/index/translog/AbstractSimpleTranslogTests.java
src/test/java/org/elasticsearch/index/translog/TranslogSizeMatcher.java
src/test/java/org/elasticsearch/index/translog/TranslogVersionTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsBufferedTranslogTests.java
src/test/java/org/elasticsearch/index/translog/fs/FsSimpleTranslogTests.java
comments:
Add translog checksums

Switches TranslogStreams to check a header in the file to determine the
translog format, delegating to the version-specific stream.

Version 1 of the translog format writes a header using Lucene's
CodecUtil at the beginning of the file and appends a checksum for each
translog operation written.

Also refactors much of the translog operations, such as merging
.hasNext() and .next() in FsChannelSnapshot

Relates to #6554

time:
2014-08-27T12:28:41Z
class:
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataCache.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/test/java/org/elasticsearch/benchmark/fielddata/LongFieldDataBenchmark.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Fielddata: Remove soft/resident caches.

These caches have no advantage compared to the default node cache. Additionally,
the soft cache makes use of soft references which make fielddata loading quite
unpredictable in addition to pushing more pressure on the garbage collector.

The `none` cache is still there because of tests. There is no other good
reason to use it.

LongFieldDataBenchmark has been removed because the refactoring exposed a
compilation error in this class, which seems to not having been working for a
long time. In addition it's not as much useful now that we are progressively
moving more fields to doc values.

Close #7443

time:
2014-08-27T12:07:21Z
class:
src/main/java/org/elasticsearch/index/query/BoolQueryParser.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DedicatedAggregationTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
comments:
bool query: parser should return match_all in case there are no clauses

This also fixes has_parent filters with a nested empty bool filter
(see test SimpleChildQuerySearchTests#test6722, the test should actually expect
either 0 results when searching for has_parent "test" or one result when
search for has_parent "foo")

closes #7240
closes #7347

time:
2014-08-27T12:07:20Z
class:
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/test/java/org/elasticsearch/explain/ExplainActionTests.java
comments:
explain score: fix explanation streaming

Complex explanations were always read as Explanations. Depending
on if the response was streamed or not the explanation was
therefore generated by a ComplexExplanation or by a regular
Explanation.

closes #7257

time:
2014-08-27T10:37:36Z
class:
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexClusterStateUpdateRequest.java
src/main/java/org/elasticsearch/action/admin/indices/create/TransportCreateIndexAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java
src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequestBuilder.java
src/main/java/org/elasticsearch/cluster/ClusterModule.java
src/main/java/org/elasticsearch/cluster/metadata/IndexTemplateFilter.java
src/main/java/org/elasticsearch/cluster/metadata/MetaDataCreateIndexService.java
src/test/java/org/elasticsearch/indices/template/IndexTemplateFilteringTests.java
comments:
Index templates: Made template filtering generic and extensible via plugins

Added the ability to register template filters that are being applied when a new index is created. The default filter that checks whether the template pattern matches the index name always runs first, additional filters can also be registered so that templates can be filtered out based on custom logic.

Took the chance to add the handy source(Object... source) method to PutIndexTemplateRequest and corresponding builder

Closes #7459
Closes #7454

time:
2014-08-27T10:14:45Z
class:
src/test/java/org/elasticsearch/snapshots/SnapshotBackwardsCompatibilityTest.java
comments:
[TEST] only bump replicas if we have enough nodes in the cluster

time:
2014-08-27T10:04:51Z
class:
src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java
comments:
[TEST] removed AwaitsFix, added checks to make sure indexed scripts are put correctly

time:
2014-08-27T09:45:53Z
class:
src/main/java/org/elasticsearch/script/ScriptService.java
comments:
Indexed Scripts : Change preference and thread option for GetRequest.

This change forces the GetRequest when a script is being loaded from an index
to use preference("_local") and threaded(false) to prevent the script service from
forking for GetRequests.

time:
2014-08-27T08:47:19Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/test/java/org/elasticsearch/snapshots/SnapshotBackwardsCompatibilityTest.java
comments:
Use physical name to compare files from snapshot metadata

The comparison and read code in the BlobStoreIndexShardRepository
used the physicalName and Name in reverse order. This caused
SnapshotBackwardsCompatibilityTest to fail.

This reverts commit 636af40da1ae22d5b7c8a81435987768e9cc3ac9

time:
2014-08-27T08:17:05Z
class:
src/main/java/org/elasticsearch/index/mapper/core/TypeParsers.java
src/main/java/org/elasticsearch/index/mapper/object/ObjectMapper.java
src/test/java/org/elasticsearch/index/mapper/object/SimpleObjectMappingTests.java
comments:
Mappings: Added support for empty field arrays

Close #7271

time:
2014-08-27T07:04:42Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/ParentFieldMapper.java
src/main/java/org/elasticsearch/search/SearchService.java
src/test/java/org/elasticsearch/search/child/ParentFieldLoadingTest.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Parent/child: Add missing support for the field data loading option to the `_parent` field.

Closes #7394
Closes #7402

time:
2014-08-27T07:00:51Z
class:
src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
comments:
Parent/child: If _parent field points to a non existing parent type, then skip the has_parent query/filter

Closes #7362
Closes #7349

time:
2014-08-27T06:34:19Z
class:
src/test/java/org/elasticsearch/cluster/SimpleClusterStateTests.java
comments:
[Test] testLargeClusterStatePublishing - bound max shard no to number of nodes and set replica count to 0

ensureGreen sometimes times out due to too many shards and GC kicking in

time:
2014-08-27T03:17:07Z
class:
src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressor.java
comments:
Internal: Add all unsafe variants of LZF compress library functions to forbidden APIs.

The "optimized" encoders/decoders have been unreliable and error prone.
Also, fix LZFCompressor.compress to use LZFEncoder.safeEncode, which
creates a new safe encoder, instead of using a shared encoder (which
is not threadsafe).

closes #7468

time:
2014-08-26T21:04:59Z
class:
src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressedStreamOutput.java
src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressor.java
comments:
Revert part of change in #7466 to fix issue because encoder is not threadsafe so cannot be shared

time:
2014-08-26T20:38:03Z
class:
src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressedStreamOutput.java
src/main/java/org/elasticsearch/common/compress/lzf/LZFCompressor.java
comments:
Internal: Add LZF safe encoder in LZFCompressor

Selecting the safe encoder fixes a 64bit JVM crash on big-endian architectures with
LZF UnsafeChunkEncoderBE.

closes #7466

time:
2014-08-26T16:13:36Z
class:
src/test/java/org/elasticsearch/snapshots/SnapshotBackwardsCompatibilityTest.java
comments:
Tests: Temporarily ignore SnapshotBackwardsCompatibilityTest

time:
2014-08-26T15:54:11Z
class:
src/test/java/org/elasticsearch/index/mapper/FileBasedMappingsTests.java
comments:
Tests: Fix FileBasedMappingsTests by using the mappings API instead of field mappings.

time:
2014-08-26T15:48:24Z
class:
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchAssertions.java
comments:
[Test] rewrite testNoMasterActions to use latest tooling

The test's timeout checks were thrown off by a client created randomly (when the timer was running).

Closes #7432

time:
2014-08-26T13:42:24Z
class:
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingOnCusterTests.java
comments:
Test: mute test until we know what is going on

time:
2014-08-26T13:36:46Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
src/test/java/org/elasticsearch/snapshots/SnapshotBackwardsCompatibilityTest.java
comments:
[SNAPSHOT] Add BWC layer to .si / segments_N hashing

Due to additional safety added in #7351 we compute now a strong hash for
.si and segments_N files which are compared during snapshot / restore.
Old snapshots don't have this hash which can cause unnecessary copying
of large amount of data. This commit adds the ability to fetch this
hash from the blob store if needed.

Closes #7434

time:
2014-08-26T13:26:34Z
class:
comments:
Docs: typo?

Closes #7458

time:
2014-08-26T12:07:04Z
class:
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
comments:
[ENGINE] Wait until engine is started up when acquireing searcher

Today we have a small window where a searcher can be acquired but the
engine is in the state of starting up. This causes a NPE triggering a
shard failure if we are fast enough. This commit fixes this situation
gracefully.

Closes #7455

time:
2014-08-26T10:14:31Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/AllFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/all/AllMapperOnCusterTests.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingOnCusterTests.java
src/test/java/org/elasticsearch/index/mapper/update/UpdateMappingTests.java
comments:
_all: report conflict on merge and throw exception on doc_values

- _all field was never merged when mapping was updated and no conflict reported
- _all accepted doc_values format although it is always tokenized

relates to #777
closes #7377

time:
2014-08-26T10:11:05Z
class:
src/main/java/jsr166e/ConcurrentHashMapV8.java
src/main/java/jsr166e/CountedCompleter.java
src/main/java/jsr166e/ForkJoinPool.java
src/main/java/jsr166e/ForkJoinTask.java
src/main/java/jsr166e/ForkJoinWorkerThread.java
src/main/java/jsr166e/ThreadLocalRandom.java
src/main/java/org/elasticsearch/common/util/concurrent/ConcurrentCollections.java
comments:
Core: use Java's built-in ConcurrentHashMap

It's risky to have our own snapshot of Java 8's ConcurrentHashMap:
unless we keep the sources in sync over time (and OpenJDK's version
had already diverged), then we won't get bug/performance fixes.  Users
can choose to upgrade to Java 8 to see the improvements of CHM.

Closes #7392

Closes #7296

time:
2014-08-26T10:00:06Z
class:
comments:
Docs: Added link to clarify meaning of filtering in fielddata context

time:
2014-08-26T05:09:57Z
class:
comments:
Docs: make the welcome page more obvious

Closes #36.

time:
2014-08-25T21:12:09Z
class:
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
[TESTS] Temporary disable field data cache randomization.

time:
2014-08-25T18:43:09Z
class:
src/main/java/org/elasticsearch/index/engine/SegmentsStats.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestShardsAction.java
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
Stats: add segments.index_writer_max_memory to see index writer's max RAM usage before buffered documents must be written to a new segment

Closes #7438

Closes #7440

time:
2014-08-25T15:32:07Z
class:
src/main/java/org/elasticsearch/discovery/DiscoveryService.java
comments:
[Internal] discovery.id.seed is ignored

Closes #7439, Closes #7437

time:
2014-08-25T15:24:53Z
class:
src/test/java/org/elasticsearch/action/IndicesRequestTests.java
comments:
[TEST] Explicitly clean up actions to be intercepted in IndicesRequestTests before asserting on collected requests

This helps making sure that no further requests are collected once we start asserting on them

time:
2014-08-25T14:25:02Z
class:
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
comments:
[TEST] fix issue clearing fielddata breaker introduced in 6950c38a0436ec937797f01fba8d7d95e6d6225f

time:
2014-08-25T14:13:16Z
class:
comments:
Test: Fixed the regex in cat.indices/10_basic.yaml

And renamed the file from .yml to .yaml

time:
2014-08-25T10:39:36Z
class:
src/test/java/org/elasticsearch/index/mapper/FileBasedMappingsTests.java
comments:
[TESTS] Temporarily disable FileBasedMappingsTests.

time:
2014-08-25T09:56:39Z
class:
src/main/java/org/elasticsearch/search/suggest/context/GeolocationContextMapping.java
src/test/java/org/elasticsearch/search/suggest/context/GeoLocationContextMappingTest.java
comments:
Context suggester: infinite loop in GeolocationContextMapping

Close #7433

time:
2014-08-25T09:56:38Z
class:
src/main/java/org/elasticsearch/common/Booleans.java
src/main/java/org/elasticsearch/common/Preconditions.java
src/main/java/org/elasticsearch/common/Strings.java
src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java
src/main/java/org/elasticsearch/common/geo/GeoPoint.java
src/main/java/org/elasticsearch/common/geo/GeoUtils.java
src/main/java/org/elasticsearch/common/geo/GeohashPathIterator.java
src/main/java/org/elasticsearch/common/geo/SpatialStrategy.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataCache.java
src/main/java/org/elasticsearch/index/fielddata/IndexFieldDataService.java
src/main/java/org/elasticsearch/index/gateway/local/LocalIndexShardGateway.java
src/main/java/org/elasticsearch/index/query/TermsFilterParser.java
src/main/java/org/elasticsearch/index/store/IndexStore.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/fs/FsIndexStore.java
src/main/java/org/elasticsearch/index/store/ram/RamIndexStore.java
src/main/java/org/elasticsearch/indices/fielddata/cache/IndicesFieldDataCache.java
src/main/java/org/elasticsearch/script/ScriptService.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalOrder.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregator.java
src/main/java/org/elasticsearch/search/aggregations/support/OrderPath.java
src/test/java/org/elasticsearch/common/BooleansTests.java
src/test/java/org/elasticsearch/common/geo/GeoJSONShapeParserTests.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
src/test/java/org/elasticsearch/index/TermsFilterIntegrationTests.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineTests.java
src/test/java/org/elasticsearch/index/fielddata/ScriptDocValuesTests.java
src/test/java/org/elasticsearch/index/mapper/FileBasedMappingsTests.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/ExternalRootMapper.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/ExternalValuesMapperIntegrationTests.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/RegisterExternalTypes.java
src/test/java/org/elasticsearch/index/mapper/externalvalues/SimpleExternalMappingTests.java
src/test/java/org/elasticsearch/index/merge/policy/MergePolicySettingsTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
src/test/java/org/elasticsearch/script/IndexedScriptTests.java
src/test/java/org/elasticsearch/search/geo/GeoPolygonTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java
src/test/java/org/elasticsearch/test/store/MockRamIndexStore.java
comments:
Tests: Improve test coverage.

Close #7428

time:
2014-08-25T08:36:04Z
class:
src/test/java/org/elasticsearch/plugins/PluggableTransportModuleTests.java
comments:
Test: Fixed pluggable transport module test to support transportclient

Also made sure, that only a change of requests is tested for and not
an initial value, which might not be set in case of a node client.

time:
2014-08-25T08:27:24Z
class:
comments:
[DOCS] Document NOT as a simple_query_string flag

Fixes #7426

time:
2014-08-24T22:09:21Z
class:
src/main/java/org/elasticsearch/index/mapper/MapperService.java
src/test/java/org/elasticsearch/indices/template/SimpleIndexTemplateTests.java
src/test/java/org/elasticsearch/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/NestedTests.java
src/test/java/org/elasticsearch/search/suggest/ContextSuggestSearchTests.java
src/test/java/org/elasticsearch/test/ElasticsearchIntegrationTest.java
comments:
Nested: If the `_type` field isn't indexed nested docs must be filtered out.

time:
2014-08-24T22:07:19Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
comments:
[TEST] Agg may not be a instance of StringTerms, but UnmappedTerms, so use common Terms class instead

time:
2014-08-24T19:23:46Z
class:
src/test/java/org/elasticsearch/action/IndicesRequestTests.java
comments:
[TEST] use more verbose assertion in IndicesRequestTests

time:
2014-08-24T17:34:02Z
class:
src/test/java/org/elasticsearch/client/transport/TransportClientTests.java
comments:
[Tests] testNodeVersionIsUpdated stopped but didn't close it's node

time:
2014-08-23T20:04:22Z
class:
src/test/java/org/elasticsearch/cluster/NoMasterNodeTests.java
comments:
[Tests] NoMasterNodeTests make timeout checks less sensitive

Also remove catching of MasterNotDiscoveredException in bulk operation it is only set on a per item basis

time:
2014-08-23T15:01:33Z
class:
src/main/java/org/elasticsearch/action/delete/ShardDeleteRequest.java
src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryRequest.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
Internal: made original indices optional for broadcast delete and delete by query shard requests

Shard requests like broadcast delete and delete by query, that needs to be executed on primary and all replicas, get read and written out to the transport on the same node. That means that if we add some field version checks are not enough to maintain bw comp since a newer node that holds the primary might receive the request from an older node, that didn't provide the field. Yet, when writing the request out again to a newer node that holds the replica, we do try and serialize the field although it's missing. The newer fields just needs to be set to optional in these cases, in addition to the version checks.

Re-enabled testDeleteByQuery and testDeleteRoutingRequired bw comp tests since this was the cause of their failures.

Closes #7406

time:
2014-08-23T14:41:46Z
class:
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineIntegrationTest.java
comments:
[TEST] use CFS consistently to not trigger single segment merge without force flag

time:
2014-08-23T12:45:08Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java
comments:
[Tests] verifyThreadNames should account for new threads of shared cluster

The verifyThreadNames starts a node and checks that all new threads on the JVM are properly named. The current test uses the name of the new node which sometimes fails because our shared cluster spawns a new thread which is properly named but for not for the new name.

The commits relaxes the requirement of the test and on verify the threads are properly named (but not necessarily of the new node)

time:
2014-08-23T11:47:11Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] use a default host name if localAddress is not available

Closes #7409

time:
2014-08-23T09:17:14Z
class:
src/main/java/org/elasticsearch/index/engine/Segment.java
comments:
Add toString() method to Segment.java for debugging purposes

time:
2014-08-22T13:39:04Z
class:
src/main/java/org/elasticsearch/action/admin/indices/optimize/ShardOptimizeRequest.java
src/test/java/org/elasticsearch/index/engine/internal/InternalEngineIntegrationTest.java
comments:
[ENGINE] Force optimize was not passed to shard request

The force flag to trigger optimiz calls of a single segment for upgrading
etc. was never passed on to the shard request.

Closes #7404

time:
2014-08-22T13:07:22Z
class:
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
comments:
More Like This Query: defaults to all possible fields for items

Items with no specified field now defaults to all the possible fields from the
document source. Previously, we had required 'fields' to be specified either
as a top level parameter or for each item. The default behavior is now similar
to the MLT API.

Closes #7382

time:
2014-08-22T12:44:28Z
class:
src/main/java/org/elasticsearch/index/mapper/RootMapper.java
comments:
[DOCS] Document the contracts of the RootMapper API.

Close #7400

time:
2014-08-22T08:18:36Z
class:
src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/template/delete/DeleteIndexTemplateAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/get/GetIndexTemplatesAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateAction.java
src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java
comments:
Internal: move index templates api back to indices category and make put template and create index implement IndicesRequest

Closes #7378

time:
2014-08-22T08:12:17Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/deleteByQuery/DeleteByQueryTests.java
src/test/java/org/elasticsearch/document/DocumentActionsTests.java
comments:
[TEST] copied delete bw comp tests to usual intergration tests

 Added AwaitsFix to testDeletebyQuery and testDeleteRoutingRequired while checking if they fail as usual integration tests.

time:
2014-08-22T07:45:56Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java
comments:
[TEST] Muted tests

time:
2014-08-22T07:44:13Z
class:
comments:
Dependencies: Upgrade to Apache HttpComponents client 4.3.5

Closes #7342

time:
2014-08-22T07:40:09Z
class:
comments:
[BUILD] Randomize JVM heapsize between 512 and 1024m

time:
2014-08-22T04:58:46Z
class:
comments:
Docs: fix typo

time:
2014-08-22T04:54:19Z
class:
comments:
Docs: make the welcome page more obvious

Closes #39.

time:
2014-08-21T20:13:06Z
class:
src/main/java/org/elasticsearch/index/store/StoreFileMetaData.java
comments:
Use empty BytesRef if we read from <= 1.4.0

time:
2014-08-21T19:04:09Z
class:
src/main/java/org/elasticsearch/action/index/IndexRequest.java
comments:
Add back string op type to IndexRequest
This was removed by accident I think, and it breaks backward comp. on the Java API in minor 1.3 version
closes #7387

time:
2014-08-21T17:56:11Z
class:
comments:
[DOCS] Update to the new {index}/_mapping/{type} format

time:
2014-08-21T16:48:38Z
class:
src/test/java/org/elasticsearch/snapshots/SharedClusterSnapshotRestoreTests.java
comments:
[TEST] Trigger random flushes while snapshot is created

time:
2014-08-21T16:00:41Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardSnapshot.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/index/store/StoreFileMetaData.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
src/test/java/org/elasticsearch/index/snapshots/blobstore/FileInfoTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
[STORE] Improve recovery / snapshot restoring file identity handling

This commit changes the way how files are selected for retransmission
on recovery / restore. Today this happens on a per-file basis where the
rather weak checksum and the file length in bytes is compared to check if
a file is identical. This is prone to fail in the case of a checksum collision
which can happen under certain circumstances.
The changes in this commit move the identity comparsion to a per-commit / per-segment
level where files are only treated as identical iff all the other files in the
commit / segment are the same. This "all or nothing" strategy is reducing the chance for
a collision dramatically since we also use a strong hash to identify commits / segments
based on the content of the ".si" / "segments.N" file.

Closes #7351

time:
2014-08-21T15:50:04Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
comments:
[STORE] Remove unnecessary deduplication

time:
2014-08-21T15:50:04Z
class:
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
[STORE] Ignore segments.gen on metadata snapshots

The segments.gen file is optional and might even change while we
read it. It's safer to just ignore that file in the snapshot instead.

time:
2014-08-21T15:40:43Z
class:
src/test/java/org/elasticsearch/threadpool/SimpleThreadPoolTests.java
comments:
[TEST] filter out keep alive timer thread name
Keep-Alive-Timer is an internal Java thread that might be started, make sure to filter it out

time:
2014-08-21T14:34:26Z
class:
src/test/java/org/elasticsearch/test/InternalTestCluster.java
comments:
[TEST] only reset clients on nightly tests
resetting the clients on each test (in after test) makes the tests running, especially in network mode, much slower, since transport client needs to be created each time when randmized to be used. Also, on OSX, the excessive connections causes bind exceptions eventually which makes running the network tests much harder on it.
closes #7329

time:
2014-08-21T14:16:08Z
class:
src/main/java/org/elasticsearch/index/mapper/internal/TTLFieldMapper.java
src/test/java/org/elasticsearch/index/mapper/ttl/TTLMappingTests.java
comments:
_ttl: Report conflict when trying to disable _ttl

_ttl could never be disabled once it was enabled.
But when trying to, no conflict was reported.

relates to #777 and #7293

closes #7316

time:
2014-08-21T14:16:02Z
class:
comments:
Docs: _ttl ignores all parameters except for enabled and default.

Also, add a line about that it can never be disabled after it was enabled.

time:
2014-08-21T14:09:12Z
class:
src/main/java/org/elasticsearch/common/lucene/Lucene.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/store/Store.java
src/main/java/org/elasticsearch/indices/recovery/RecoverySource.java
comments:
[STORE] Allow to get metadata from arbitrary commit points

Today we always use the latest commit point to return the metadata from
the store. This might cause problems for snapshot and restore since in
contrast to recovery it won't prevent concurrent flushes (lucene commits).
This can lead to all kinds of interesting effects if we are snapshotting
while flushing. This change uses the IndexCommit to open the metadata snapshot
from the store which is consistent with what we snapshot.

Closes #7376

time:
2014-08-21T13:59:32Z
class:
comments:
Test: write heap dump per default

The heap dump is always interesting in case a test causes an OOM.
Per default is is written to target/JX/pidXYZ.hprof

time:
2014-08-21T13:59:31Z
class:
comments:
Testing doc: describe -Dtests.heap.size and -Dtests.jvm.argline

time:
2014-08-21T13:19:53Z
class:
src/main/java/org/elasticsearch/common/rounding/Rounding.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramOffsetTests.java
src/test/java/org/elasticsearch/search/aggregations/bucket/DateHistogramTests.java
src/test/java/org/elasticsearch/test/ElasticsearchTestCase.java
src/test/java/org/elasticsearch/test/transport/AssertingLocalTransport.java
comments:
Aggregations: Fixes pre and post offset serialisation for histogram aggs

Changes the serialisation of pre and post offset to use Long instead of VLong so that negative values are supported.  This actually only showed up in the case where minDocCount=0 as the rounding is only serialised in this case.

Closes #7312

time:
2014-08-21T13:09:27Z
class:
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/search/TransportMultiSearchAction.java
comments:
Internal: make sure that multi_search request hands over its context and headers to its corresponding search requests

Closes #7374

time:
2014-08-21T11:45:11Z
class:
src/main/java/org/elasticsearch/action/percolate/TransportMultiPercolateAction.java
src/main/java/org/elasticsearch/action/percolate/TransportShardMultiPercolateAction.java
comments:
Internal: make sure that multi_percolate request hands over its context and headers to its corresponding shard requests

Closes #7371

time:
2014-08-21T11:30:09Z
class:
src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
comments:
[TEST] Sort by the _id field instead of _uid field and also assert the sort value.

time:
2014-08-21T11:11:05Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
[TEST] added debug lines to bw comp testDeleteByQuery and testDeleteRoutingRequired

time:
2014-08-21T10:18:21Z
class:
src/main/java/org/elasticsearch/action/termvector/MultiTermVectorsRequest.java
src/main/java/org/elasticsearch/action/termvector/TermVectorFields.java
src/main/java/org/elasticsearch/action/termvector/TermVectorRequest.java
src/main/java/org/elasticsearch/common/lucene/search/MoreLikeThisQuery.java
src/main/java/org/elasticsearch/common/lucene/search/XMoreLikeThis.java
src/main/java/org/elasticsearch/index/query/MoreLikeThisQueryParser.java
src/main/java/org/elasticsearch/index/search/morelikethis/MoreLikeThisFetchService.java
src/test/java/org/elasticsearch/index/query/SimpleIndexQueryParserTests.java
comments:
More Like This Query: Switch to using the multi-termvectors API

The term vector API can now generate term vectors on the fly, if the terms are
not already stored in the index. This commit exploits this new functionality
for the MLT query. Now the terms are directly retrieved using multi-
termvectors API, instead of generating them from the texts retrieved using the
multi-get API.

Closes #7014

time:
2014-08-21T09:46:50Z
class:
src/main/java/org/elasticsearch/common/xcontent/XContentBuilder.java
src/main/java/org/elasticsearch/common/xcontent/XContentParser.java
src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentParser.java
src/main/java/org/elasticsearch/common/xcontent/support/AbstractXContentParser.java
src/main/java/org/elasticsearch/index/mapper/core/CompletionFieldMapper.java
src/main/java/org/elasticsearch/index/query/IdsFilterParser.java
src/main/java/org/elasticsearch/index/query/IdsQueryParser.java
src/main/java/org/elasticsearch/index/query/TypeFilterParser.java
src/main/java/org/elasticsearch/search/suggest/SuggestParseElement.java
src/main/java/org/elasticsearch/search/suggest/phrase/PhraseSuggestParser.java
comments:
[PARSER] Clarify XContentParser/Builder interface for binary vs. utf8 values

Today we have very confusing naming since some methods names claim to
read binary but in fact read utf-16 and convert to utf-8 under the hood.
This commit clarifies the interfaces and adds additional documentation.

Closes #7367

time:
2014-08-21T09:21:04Z
class:
src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java
src/main/java/org/elasticsearch/action/count/TransportCountAction.java
src/main/java/org/elasticsearch/action/deletebyquery/TransportShardDeleteByQueryAction.java
src/main/java/org/elasticsearch/action/exists/TransportExistsAction.java
src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java
src/main/java/org/elasticsearch/cache/recycler/CacheRecycler.java
src/main/java/org/elasticsearch/cache/recycler/CacheRecyclerModule.java
src/main/java/org/elasticsearch/client/transport/TransportClient.java
src/main/java/org/elasticsearch/index/query/IndexQueryParserService.java
src/main/java/org/elasticsearch/index/query/QueryParseContext.java
src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java
src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
src/main/java/org/elasticsearch/node/internal/InternalNode.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/aggregations/bucket/nested/ReverseNestedAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsContext.java
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/test/java/org/elasticsearch/index/query/TemplateQueryParserTest.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPlugin2Tests.java
src/test/java/org/elasticsearch/index/query/plugin/IndexQueryParserPluginTests.java
src/test/java/org/elasticsearch/index/search/child/TopChildrenQueryTests.java
src/test/java/org/elasticsearch/test/ElasticsearchSingleNodeTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Internal: Remove CacheRecycler.

The main consumer of this API was the faceting module. Now that it's gone,
let's remove CacheRecycler as well.

Close #7366

time:
2014-08-21T09:14:48Z
class:
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
[TEST] bw comp testMultiGet should wait for yellow, not for green

time:
2014-08-21T08:43:58Z
class:
src/test/java/org/elasticsearch/action/IndicesRequestTests.java
comments:
[TEST] fixed concurrency issue in IndicesRequestTests

time:
2014-08-21T08:34:39Z
class:
src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java
src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardResponse.java
src/main/java/org/elasticsearch/action/percolate/PercolateSourceBuilder.java
src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java
src/main/java/org/elasticsearch/action/search/SearchResponse.java
src/main/java/org/elasticsearch/action/search/SearchType.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java
src/main/java/org/elasticsearch/index/query/HasChildFilterParser.java
src/main/java/org/elasticsearch/index/query/HasChildQueryParser.java
src/main/java/org/elasticsearch/index/query/HasParentFilterParser.java
src/main/java/org/elasticsearch/index/query/HasParentQueryParser.java
src/main/java/org/elasticsearch/index/query/NestedFilterParser.java
src/main/java/org/elasticsearch/index/query/NestedQueryParser.java
src/main/java/org/elasticsearch/index/query/TopChildrenQueryParser.java
src/main/java/org/elasticsearch/percolator/PercolateContext.java
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/percolator/QueryCollector.java
src/main/java/org/elasticsearch/script/AbstractSearchScript.java
src/main/java/org/elasticsearch/search/SearchModule.java
src/main/java/org/elasticsearch/search/TransportSearchModule.java
src/main/java/org/elasticsearch/search/aggregations/AggregationBinaryParseElement.java
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
src/main/java/org/elasticsearch/search/aggregations/AggregationPhase.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/StringTerms.java
src/main/java/org/elasticsearch/search/aggregations/metrics/tophits/TopHitsContext.java
src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/main/java/org/elasticsearch/search/facet/DoubleFacetAggregatorBase.java
src/main/java/org/elasticsearch/search/facet/Facet.java
src/main/java/org/elasticsearch/search/facet/FacetBinaryParseElement.java
src/main/java/org/elasticsearch/search/facet/FacetBuilder.java
src/main/java/org/elasticsearch/search/facet/FacetBuilders.java
src/main/java/org/elasticsearch/search/facet/FacetExecutor.java
src/main/java/org/elasticsearch/search/facet/FacetModule.java
src/main/java/org/elasticsearch/search/facet/FacetParseElement.java
src/main/java/org/elasticsearch/search/facet/FacetParser.java
src/main/java/org/elasticsearch/search/facet/FacetParsers.java
src/main/java/org/elasticsearch/search/facet/FacetPhase.java
src/main/java/org/elasticsearch/search/facet/FacetPhaseExecutionException.java
src/main/java/org/elasticsearch/search/facet/Facets.java
src/main/java/org/elasticsearch/search/facet/InternalFacet.java
src/main/java/org/elasticsearch/search/facet/InternalFacets.java
src/main/java/org/elasticsearch/search/facet/LongFacetAggregatorBase.java
src/main/java/org/elasticsearch/search/facet/SearchContextFacets.java
src/main/java/org/elasticsearch/search/facet/TransportFacetModule.java
src/main/java/org/elasticsearch/search/facet/datehistogram/CountDateHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/datehistogram/DateHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/datehistogram/DateHistogramFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/datehistogram/DateHistogramFacetParser.java
src/main/java/org/elasticsearch/search/facet/datehistogram/InternalCountDateHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/datehistogram/InternalDateHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/datehistogram/InternalFullDateHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/datehistogram/ValueDateHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/datehistogram/ValueScriptDateHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/filter/FilterFacet.java
src/main/java/org/elasticsearch/search/facet/filter/FilterFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/filter/FilterFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/filter/FilterFacetParser.java
src/main/java/org/elasticsearch/search/facet/filter/InternalFilterFacet.java
src/main/java/org/elasticsearch/search/facet/geodistance/GeoDistanceFacet.java
src/main/java/org/elasticsearch/search/facet/geodistance/GeoDistanceFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/geodistance/GeoDistanceFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/geodistance/GeoDistanceFacetParser.java
src/main/java/org/elasticsearch/search/facet/geodistance/InternalGeoDistanceFacet.java
src/main/java/org/elasticsearch/search/facet/geodistance/ScriptGeoDistanceFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/geodistance/ValueGeoDistanceFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/histogram/CountHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/histogram/FullHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/histogram/HistogramFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/HistogramFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/histogram/HistogramFacetParser.java
src/main/java/org/elasticsearch/search/facet/histogram/HistogramScriptFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/histogram/InternalCountHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/InternalFullHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/InternalHistogramFacet.java
src/main/java/org/elasticsearch/search/facet/histogram/ScriptHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/histogram/ValueHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/histogram/ValueScriptHistogramFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/nested/NestedFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/query/InternalQueryFacet.java
src/main/java/org/elasticsearch/search/facet/query/QueryFacet.java
src/main/java/org/elasticsearch/search/facet/query/QueryFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/query/QueryFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/query/QueryFacetParser.java
src/main/java/org/elasticsearch/search/facet/range/InternalRangeFacet.java
src/main/java/org/elasticsearch/search/facet/range/KeyValueRangeFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/range/RangeFacet.java
src/main/java/org/elasticsearch/search/facet/range/RangeFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/range/RangeFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/range/RangeFacetParser.java
src/main/java/org/elasticsearch/search/facet/range/RangeScriptFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/range/ScriptRangeFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/statistical/InternalStatisticalFacet.java
src/main/java/org/elasticsearch/search/facet/statistical/ScriptStatisticalFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFacet.java
src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFacetParser.java
src/main/java/org/elasticsearch/search/facet/statistical/StatisticalFieldsFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/statistical/StatisticalScriptFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/terms/InternalTermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/TermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/TermsFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/terms/TermsFacetParser.java
src/main/java/org/elasticsearch/search/facet/terms/doubles/InternalDoubleTermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/doubles/TermsDoubleFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/longs/InternalLongTermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/longs/TermsLongFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/FieldsTermsStringFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/HashedAggregator.java
src/main/java/org/elasticsearch/search/facet/terms/strings/HashedScriptAggregator.java
src/main/java/org/elasticsearch/search/facet/terms/strings/InternalStringTermsFacet.java
src/main/java/org/elasticsearch/search/facet/terms/strings/ScriptTermsStringFieldFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/TermsStringFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/strings/TermsStringOrdinalsFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/terms/support/EntryPriorityQueue.java
src/main/java/org/elasticsearch/search/facet/terms/unmapped/UnmappedFieldExecutor.java
src/main/java/org/elasticsearch/search/facet/termsstats/InternalTermsStatsFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/TermsStatsFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/TermsStatsFacetBuilder.java
src/main/java/org/elasticsearch/search/facet/termsstats/TermsStatsFacetParser.java
src/main/java/org/elasticsearch/search/facet/termsstats/doubles/InternalTermsStatsDoubleFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/doubles/TermsStatsDoubleFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/termsstats/longs/InternalTermsStatsLongFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/longs/TermsStatsLongFacetExecutor.java
src/main/java/org/elasticsearch/search/facet/termsstats/strings/InternalTermsStatsStringFacet.java
src/main/java/org/elasticsearch/search/facet/termsstats/strings/TermsStatsStringFacetExecutor.java
src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java
src/main/java/org/elasticsearch/search/internal/DefaultSearchContext.java
src/main/java/org/elasticsearch/search/internal/InternalSearchResponse.java
src/main/java/org/elasticsearch/search/internal/SearchContext.java
src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
src/main/java/org/elasticsearch/search/query/QueryPhase.java
src/main/java/org/elasticsearch/search/query/QuerySearchResult.java
src/test/java/org/elasticsearch/aliases/IndexAliasesTests.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/HistogramAggregationSearchBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/QueryFilterAggregationSearchBenchmark.java
src/test/java/org/elasticsearch/benchmark/search/aggregations/TermsAggregationSearchBenchmark.java
src/test/java/org/elasticsearch/index/fielddata/FieldDataFilterIntegrationTests.java
src/test/java/org/elasticsearch/index/mapper/core/TokenCountFieldMapperIntegrationTests.java
src/test/java/org/elasticsearch/nested/SimpleNestedTests.java
src/test/java/org/elasticsearch/percolator/PercolatorFacetsAndAggregationsTests.java
src/test/java/org/elasticsearch/search/basic/TransportTwoNodesSearchTests.java
src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
src/test/java/org/elasticsearch/search/facet/ConcurrentDuel.java
src/test/java/org/elasticsearch/search/facet/ExtendedFacetsTests.java
src/test/java/org/elasticsearch/search/facet/ExtendedFacetsTestsMultiShardMultiNodeTests.java
src/test/java/org/elasticsearch/search/facet/SimpleFacetsTests.java
src/test/java/org/elasticsearch/search/facet/terms/ShardSizeTermsFacetTests.java
src/test/java/org/elasticsearch/search/facet/terms/UnmappedFieldsTermsFacetsTests.java
src/test/java/org/elasticsearch/search/facet/termsstats/ShardSizeTermsStatsFacetTests.java
src/test/java/org/elasticsearch/search/geo/GeoDistanceFacetTests.java
src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
src/test/java/org/elasticsearch/test/TestSearchContext.java
comments:
Facets: Removal from master.

Close #7337

time:
2014-08-21T08:25:50Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/DateHistogramParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/HistogramParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/RangeParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/date/DateRangeParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/geodistance/GeoDistanceParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/ipv4/IpRangeParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/SignificantTermsParser.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/TermsParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/NumericValuesSourceMetricsAggregatorParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/AbstractPercentilesParser.java
src/main/java/org/elasticsearch/search/aggregations/metrics/valuecount/ValueCountParser.java
src/main/java/org/elasticsearch/search/aggregations/support/ValuesSourceParser.java
comments:
Aggregations: Remove the logic to optionally sort/dedup values on the fly.

These options are not used anymore. Instead numeric values can now contain dups
and it is the responsibility of the aggregation to deal with it (eg. terms).
And otherwise all values sources are now sorted, which is the contract of the
interfaces that they implement.

Close #7276

time:
2014-08-21T07:58:49Z
class:
src/main/java/org/elasticsearch/action/termvector/TermVectorResponse.java
src/test/java/org/elasticsearch/action/termvector/GetTermVectorTests.java
comments:
Term vector API: return 'found: false' for docs between index and refresh

Closes #7121

time:
2014-08-21T01:11:04Z
class:
src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java
comments:
[TEST] Improve robustness of restoreIndexWithMissingShards test

time:
2014-08-20T21:39:16Z
class:
src/main/java/org/elasticsearch/index/cache/query/QueryCacheStats.java
src/main/java/org/elasticsearch/index/cache/query/ShardQueryCache.java
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
src/main/java/org/elasticsearch/rest/action/cat/RestIndicesAction.java
src/main/java/org/elasticsearch/rest/action/cat/RestNodesAction.java
src/test/java/org/elasticsearch/indices/stats/IndexStatsTests.java
comments:
Query Cache: Add hit and miss count
closes #7355

time:
2014-08-20T19:48:52Z
class:
src/main/java/org/elasticsearch/action/admin/cluster/stats/TransportClusterStatsAction.java
src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java
src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java
src/main/java/org/elasticsearch/index/shard/service/IndexShard.java
src/main/java/org/elasticsearch/indices/InternalIndicesService.java
comments:
NPE in ShardStats when routing entry is not set yet on IndexShard
closes #7356

time:
2014-08-20T19:12:37Z
class:
src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java
src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java
comments:
Internal: adjusted internal requests visibility from public to package private (redo)

was just reverted by mistake in the failed attempt of isolating the change and taking it out of #7319

time:
2014-08-20T19:05:01Z
class:
src/main/java/org/elasticsearch/action/IndicesRequest.java
src/main/java/org/elasticsearch/action/OriginalIndices.java
src/main/java/org/elasticsearch/action/admin/indices/mapping/get/GetFieldMappingsIndexRequest.java
src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java
src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java
src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java
src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java
src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java
src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java
src/main/java/org/elasticsearch/action/count/TransportCountAction.java
src/main/java/org/elasticsearch/action/delete/IndexDeleteRequest.java
src/main/java/org/elasticsearch/action/delete/ShardDeleteRequest.java
src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryRequest.java
src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryRequest.java
src/main/java/org/elasticsearch/action/deletebyquery/TransportShardDeleteByQueryAction.java
src/main/java/org/elasticsearch/action/exists/TransportExistsAction.java
src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java
src/main/java/org/elasticsearch/action/get/GetRequest.java
src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java
src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java
src/main/java/org/elasticsearch/action/get/TransportShardMultiGetAction.java
src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java
src/main/java/org/elasticsearch/action/percolate/PercolateShardRequest.java
src/main/java/org/elasticsearch/action/percolate/TransportShardMultiPercolateAction.java
src/main/java/org/elasticsearch/action/search/SearchRequest.java
src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java
src/main/java/org/elasticsearch/action/support/broadcast/BroadcastShardOperationRequest.java
src/main/java/org/elasticsearch/action/support/replication/IndexReplicationOperationRequest.java
src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequest.java
src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java
src/main/java/org/elasticsearch/action/support/single/custom/SingleCustomOperationRequest.java
src/main/java/org/elasticsearch/action/support/single/custom/TransportSingleCustomOperationAction.java
src/main/java/org/elasticsearch/action/support/single/shard/SingleShardOperationRequest.java
src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java
src/main/java/org/elasticsearch/action/termvector/MultiTermVectorsShardRequest.java
src/main/java/org/elasticsearch/action/termvector/TransportMultiTermVectorsAction.java
src/main/java/org/elasticsearch/search/action/SearchServiceTransportAction.java
src/main/java/org/elasticsearch/search/fetch/FetchSearchRequest.java
src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
src/main/java/org/elasticsearch/search/query/QuerySearchRequest.java
src/test/java/org/elasticsearch/action/IndicesRequestTests.java
src/test/java/org/elasticsearch/action/OriginalIndicesTests.java
src/test/java/org/elasticsearch/action/get/MultiGetShardRequestTests.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
comments:
Internal: make sure that all shard level requests hold the original indices

A request that relates to indices (`IndicesRequest` or `CompositeIndicesRequest`) might be converted to some other internal request(s) (e.g. shard level request) that get distributed over the cluster. Those requests contain the concrete index they refer to, but it is not known which indices (or aliases or expressions) the original request related to.

This commit makes sure that the original indices are available as part of the shard level requests and makes them implement `IndicesRequest` as well.

Also every internal request should be created passing in the original request, so that the original headers, together with the eventual original indices and options, get copied to it. Corrected some places where this information was lost.

NOTE: As for the bulk api and other multi items api (e.g. multi_get), their shard level requests won't keep around the whole set of original indices, but only the ones that related to the bulk items sent to each shard, the important bit is that we keep the original names though, not only the concrete ones.

Closes #7319

time:
2014-08-20T18:25:57Z
class:
src/main/java/org/elasticsearch/search/aggregations/bucket/filters/InternalFilters.java
comments:
fix to compile issue caused by scripted metric aggregation change

time:
2014-08-20T17:17:27Z
class:
src/main/java/org/elasticsearch/percolator/PercolatorService.java
src/main/java/org/elasticsearch/search/aggregations/AggregationBuilders.java
src/main/java/org/elasticsearch/search/aggregations/AggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/InternalAggregation.java
src/main/java/org/elasticsearch/search/aggregations/InternalAggregations.java
src/main/java/org/elasticsearch/search/aggregations/TransportAggregationModule.java
src/main/java/org/elasticsearch/search/aggregations/bucket/InternalSingleBucketAggregation.java
src/main/java/org/elasticsearch/search/aggregations/bucket/geogrid/InternalGeoHashGrid.java
src/main/java/org/elasticsearch/search/aggregations/bucket/histogram/InternalHistogram.java
src/main/java/org/elasticsearch/search/aggregations/bucket/range/InternalRange.java
src/main/java/org/elasticsearch/search/aggregations/bucket/significant/InternalSignificantTerms.java
src/main/java/org/elasticsearch/search/aggregations/bucket/terms/InternalTerms.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/InternalScriptedMetric.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetric.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricAggregator.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricBuilder.java
src/main/java/org/elasticsearch/search/aggregations/metrics/scripted/ScriptedMetricParser.java
src/main/java/org/elasticsearch/search/controller/SearchPhaseController.java
src/test/java/org/elasticsearch/search/aggregations/metrics/ScriptedMetricTests.java
comments:
Aggregations: Scriptable Metrics Aggregation

A metrics aggregation which runs specified scripts at the init, collect, combine, and reduce phases

Closes #5923

time:
2014-08-20T16:31:29Z
class:
src/main/java/org/elasticsearch/action/admin/indices/warmer/get/GetWarmersResponse.java
src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java
src/main/java/org/elasticsearch/index/engine/internal/InternalEngine.java
src/main/java/org/elasticsearch/indices/cache/query/IndicesQueryCache.java
src/main/java/org/elasticsearch/indices/warmer/IndicesWarmer.java
src/main/java/org/elasticsearch/indices/warmer/InternalIndicesWarmer.java
src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/put/RestPutWarmerAction.java
src/main/java/org/elasticsearch/search/SearchService.java
src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java
src/main/java/org/elasticsearch/search/warmer/IndexWarmersMetaData.java
src/test/java/org/elasticsearch/indices/IndicesOptionsIntegrationTests.java
src/test/java/org/elasticsearch/indices/warmer/SimpleIndicesWarmerTests.java
comments:
Warmer (search) to support query cache
allow for search based warmer to support query cache flag on the search request, and use the index level query caching flag if set.
closes #7326

time:
2014-08-20T15:23:21Z
class:
src/main/java/org/elasticsearch/common/geo/builders/CircleBuilder.java
src/test/java/org/elasticsearch/common/geo/ShapeBuilderTests.java
comments:
Geo: fixes circle radius calculation

This change fixes the creation circle shapes o it calculates it correctly instead of essentially using the diameter as the radius.  The radius has to be converted into degrees but calculating the ratio of the desired radius to the circumference of the earth and then multiplying it by 360 (number of degrees around the earths circumference).  This issue here was that it was only multiplied by 180 making the result out by a factor of 2.  Also made the test for circles actually check to make sure it has the correct centre and radius.

Closes #7301

time:
2014-08-20T14:11:15Z
class:
src/main/java/org/elasticsearch/action/admin/indices/template/delete/DeleteIndexTemplateRequest.java
comments:
opened up getting the template name from DeleteIndexTemplateRequest

time:
2014-08-20T10:11:57Z
class:
src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java
src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java
comments:
Internal: adjusted internal requests visibility from public to package private

time:
2014-08-20T10:01:41Z
class:
src/test/java/org/elasticsearch/bwcompat/UnicastBackwardsCompatibilityTest.java
comments:
[TEST] UnicastBackwardsCompatibilityTest should not copy internal node settings to external nodes

Recent test failures triggered by #7289 were caused by this, simply because internal node settings (transport type key) that are not supported by the external older nodes were copied to them by mistake.

time:
2014-08-20T06:46:03Z
class:
src/test/java/org/elasticsearch/plugins/PluggableTransportModuleTests.java
comments:
Test: Prevent use of transport client when testing changed transports

This makes sure, that the transport client is not used, as it would use
a different than the configured local transport mechanism in this test.

time:
2014-08-20T00:58:43Z
class:
src/main/java/org/elasticsearch/index/snapshots/blobstore/BlobStoreIndexShardRepository.java
src/main/java/org/elasticsearch/index/snapshots/blobstore/RateLimitingInputStream.java
src/main/java/org/elasticsearch/index/store/Store.java
src/test/java/org/elasticsearch/bwcompat/BasicBackwardsCompatibilityTest.java
src/test/java/org/elasticsearch/index/store/CorruptedFileTest.java
src/test/java/org/elasticsearch/index/store/StoreTest.java
comments:
Snapshot checksum verification

Adds automatic verification of all files that are being snapshotted. Closes #5593

time:
2014-08-19T22:48:39Z
class:
src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
comments:
Fix NPE in SnapshotsService on node shutdown

Fixes #6506

time:
2014-08-19T18:10:54Z
class:
comments:
Upgrade to Jackson Smile 2.4.1.1
This fixes issue 18 in Smile (https://github.com/FasterXML/jackson-dataformat-smile/issues/18)

closes #7327

time:
2014-08-19T18:09:35Z
class:
comments:
Upgrade to Netty 3.9.3.Final
closes #7328

time:
2014-08-19T16:03:06Z
class:
src/main/java/org/elasticsearch/http/HttpServerModule.java
src/main/java/org/elasticsearch/http/netty/NettyHttpServerTransportModule.java
src/main/java/org/elasticsearch/transport/TransportModule.java
src/main/java/org/elasticsearch/transport/local/LocalTransportModule.java
src/main/java/org/elasticsearch/transport/netty/NettyTransportModule.java
src/test/java/org/elasticsearch/plugins/PluggableTransportModuleTests.java
src/test/java/org/elasticsearch/test/ElasticsearchBackwardsCompatIntegrationTest.java
src/test/java/org/elasticsearch/test/InternalTestCluster.java
src/test/java/org/elasticsearch/test/transport/AssertingLocalTransportModule.java
src/test/java/org/elasticsearch/test/transport/ConfigurableErrorNettyTransportModule.java
src/test/java/org/elasticsearch/test/transport/NettyTransportTests.java
comments:
Transport: Refactor guice startup

* Removed & refactored unused module code
* Allowed to set transports programmatically
* Allow to set the source of the changed transport

Note: The current implementation breaks BWC as you need to specify a concrete
transport now instead of a module if you want to use a different
Transport or HttpServerTransport

Closes #7289

